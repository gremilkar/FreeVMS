literal ACC$K_TERMLEN = 84;             
literal ACC$C_TERMLEN = 84;             
literal ACC$K_JOB_LEN = 108;            
literal ACC$C_JOB_LEN = 108;            
literal ACC$S_ACCDEF = 108;
macro ACC$W_MSGTYP = 0,0,16,0 %;        
macro ACC$W_MSGSIZ = 2,0,16,0 %;        
macro ACC$L_FINALSTS = 4,0,32,0 %;      
macro ACC$L_PID = 8,0,32,0 %;           
macro ACC$L_JOBID = 12,0,32,0 %;        
macro ACC$Q_TERMTIME = 16,0,0,0 %;
literal ACC$S_TERMTIME = 8;             
macro ACC$T_ACCOUNT = 24,0,0,0 %;
literal ACC$S_ACCOUNT = 8;              
macro ACC$T_USERNAME = 32,0,0,0 %;
literal ACC$S_USERNAME = 12;            
macro ACC$L_CPUTIM = 44,0,32,0 %;       
macro ACC$L_PAGEFLTS = 48,0,32,0 %;     
macro ACC$L_PGFLPEAK = 52,0,32,0 %;     
macro ACC$L_WSPEAK = 56,0,32,0 %;       
macro ACC$L_BIOCNT = 60,0,32,0 %;       
macro ACC$L_DIOCNT = 64,0,32,0 %;       
macro ACC$L_VOLUMES = 68,0,32,0 %;      
macro ACC$Q_LOGIN = 72,0,0,0 %;
literal ACC$S_LOGIN = 8;                
macro ACC$L_OWNER = 80,0,32,0 %;        
macro ACC$T_JOB_NAME = 84,0,0,0 %;
literal ACC$S_JOB_NAME = 8;             
macro ACC$T_JOB_QUE = 92,0,0,0 %;
literal ACC$S_JOB_QUE = 16;             
literal ACC$K_PRT_LEN = 88;             
literal ACC$C_PRT_LEN = 88;             
literal ACC$S_ACCDEF1 = 88;
macro ACC$L_PAGCNT = 48,0,32,0 %;       
macro ACC$L_QIOCNT = 52,0,32,0 %;       
macro ACC$L_GETCNT = 56,0,32,0 %;       
macro ACC$Q_QUETIME = 60,0,0,0 %;
literal ACC$S_QUETIME = 8;              
macro ACC$T_PRT_NAME = 68,0,0,0 %;
literal ACC$S_PRT_NAME = 8;             
macro ACC$T_PRT_QUE = 76,0,0,0 %;
literal ACC$S_PRT_QUE = 12;             
literal ACC$K_INS_LEN = 176;            
literal ACC$C_INS_LEN = 176;            
literal ACC$K_PRCTRM = 1;               
literal ACC$K_BATTRM = 2;               
literal ACC$K_INTTRM = 3;               
literal ACC$K_LOGTRM = 4;               
literal ACC$K_IMGTRM = 5;               
literal ACC$K_SUBTRM = 6;               
literal ACC$K_DETTRM = 7;               
literal ACC$K_NETTRM = 8;               
literal ACC$K_PRTJOB = 16;              
literal ACC$K_INSMSG = 17;              
literal ACC$K_INSMESG = 1;              
literal ACC$K_NEWFILE = 2;              
literal ACC$K_ENABACC = 3;              
literal ACC$K_DISAACC = 4;              
literal ACC$K_ENABSEL = 5;              
literal ACC$K_DISASEL = 6;              
literal ACC$S_ACCDEF2 = 176;
macro ACC$T_USER_DATA = 44,0,0,0 %;
literal ACC$S_USER_DATA = 132;          
literal ACCESS$S_ACCESS = 8;
macro ACCESS$R_ACCESS_UNION = 0,0,0,0 %;
literal ACCESS$S_ACCESS_UNION = 8;
macro ACCESS$Q_QUAD = 0,0,0,0 %;
literal ACCESS$S_QUAD = 8;              
macro ACCESS$B_MODE = 0,0,8,0 %;        
macro ACCESS$B_ARCH = 1,0,8,0 %;        
macro ACCESS$W_PROT = 2,0,16,0 %;       
macro ACCESS$L_RESERVED1 = 4,0,32,1 %;  
literal ACCESS$C_IA64 = 2;              
 

literal ACE$C_KEYID = 1;                
literal ACE$C_RMSJNL_BI = 2;            
literal ACE$C_RMSJNL_AI = 3;            
literal ACE$C_RMSJNL_AT = 4;            
literal ACE$C_AUDIT = 5;                
literal ACE$C_ALARM = 6;                
literal ACE$C_INFO = 7;                 
literal ACE$C_RMSJNL_RU_DEFAULT = 8;    
literal ACE$C_DIRDEF = 9;               
literal ACE$C_RMSJNL_RU = 10;           
literal ACE$C_SUBSYSTEM_IDS = 11;       
literal ACE$C_OIL = 12;                 
literal ACE$C_NEW_OWNER = 13;           
literal ACE$C_POSIX_OWNER = 14;         
literal ACE$C_MAX_CODE = 15;            
literal ACE$C_RESERVED = 255;           
literal ACE$C_APPLICATION = 7;          
literal ACE$C_CUST = 1;                 
literal ACE$C_CSS = 2;                  
literal ACE$C_VMS = 3;                  
literal ACE$M_SUCCESS = %X'1';
literal ACE$M_FAILURE = %X'2';
literal ACE$M_DEFAULT = %X'100';
literal ACE$M_PROTECTED = %X'200';
literal ACE$M_HIDDEN = %X'400';
literal ACE$M_NOPROPAGATE = %X'800';
literal ACE$M_READ = %X'1';
literal ACE$M_WRITE = %X'2';
literal ACE$M_EXECUTE = %X'4';
literal ACE$M_DELETE = %X'8';
literal ACE$M_CONTROL = %X'10';
literal ACE$K_LENGTH = 8;               
literal ACE$C_LENGTH = 8;               
literal ACE$C_RMS_ATTRIBUTES = 0;       
literal ACE$K_RMS_ATTRIBUTES = 0;       
literal ACE$K_RMSATR_MINOR_V50 = 2;     
literal ACE$K_RMSATR_MINOR_VDW = 2;     
literal ACE$C_RMSATR_MINOR_ID = 2;      
literal ACE$K_RMSATR_MINOR_ID = 2;
literal ACE$C_RMSATR_MAJOR_ID = 1;      
literal ACE$K_RMSATR_MAJOR_ID = 1;
literal ACE$M_STATISTICS = %X'1';
literal ACE$M_XLATE_DEC = %X'2';
literal ACE$S_RMSATR = 20;              
literal ACE$S_RMSATR_V50 = 20;          
literal ACE$S_RMSATR_VDW = 20;          
literal ACE$_RMSATR_ORGANIZATION = 1;   
literal ACE$_RMSATR_SEMANTICS = 2;      
literal ACE$K_RMSATR_ORG_MAX_LEN = 64;
literal ACE$K_RMSATR_SEM_MAX_LEN = 64;
literal ACE$S_RMSJNL_RU_DEFAULT = 17;   
literal ACE$M_JOURNAL_DISABLED = %X'1';
literal ACE$M_BACKUP_DONE = %X'2';
literal ACE$S_RMSJNL_RU = 38;           
literal ACE$S_RMSJNL = 50;              
literal ACE$S_OIL_S64I64 = 32;          
literal ACE$S_OIL_S128 = 32;            
literal ACE$S_OIL = 32;                 
literal ACE$M_USERNAME_VALID = %X'1';
literal ACE$M_UIC_VALID = %X'2';
literal ACE$M_UID_VALID = %X'4';
literal ACE$M_GID_VALID = %X'8';
literal ACE$M_GROUP_MODE_VALID = %X'10';
literal ACE$M_OTHER = %X'7';
literal ACE$M_GROUP = %X'38';
literal ACE$M_USER = %X'1C0';
literal ACE$M_S_IXOTH = %X'1';
literal ACE$M_S_IWOTH = %X'2';
literal ACE$M_S_IROTH = %X'4';
literal ACE$M_S_IXGRP = %X'8';
literal ACE$M_S_IWGRP = %X'10';
literal ACE$M_S_IRGRP = %X'20';
literal ACE$M_S_IXUSR = %X'40';
literal ACE$M_S_IWUSR = %X'80';
literal ACE$M_S_IRUSR = %X'100';
literal ACE$M_S_ISGID = %X'400';
literal ACE$M_S_ISUID = %X'800';
literal ACE$S_POSIX_OWNER_LENGTH = 60;  
literal ACE$S_ACEDEF = 60;
macro ACE$B_SIZE = 0,0,8,0 %;           
macro ACE$B_TYPE = 1,0,8,0 %;           
macro ACE$W_FLAGS = 2,0,16,0 %;         
macro ACE$V_INFO_TYPE = 2,0,4,0 %;
literal ACE$S_INFO_TYPE = 4;            
macro ACE$V_RESERVED = 2,0,4,0 %;
literal ACE$S_RESERVED = 4;             
macro ACE$V_SUCCESS = 2,0,1,0 %;        
macro ACE$V_FAILURE = 2,1,1,0 %;        
macro ACE$V_DEFAULT = 2,8,1,0 %;        
macro ACE$V_PROTECTED = 2,9,1,0 %;      
macro ACE$V_HIDDEN = 2,10,1,0 %;        
macro ACE$V_NOPROPAGATE = 2,11,1,0 %;   
macro ACE$L_ACCESS = 4,0,32,0 %;        
macro ACE$V_READ = 4,0,1,0 %;           
macro ACE$V_WRITE = 4,1,1,0 %;          
macro ACE$V_EXECUTE = 4,2,1,0 %;        
macro ACE$V_DELETE = 4,3,1,0 %;         
macro ACE$V_CONTROL = 4,4,1,0 %;        
macro ACE$L_KEY = 8,0,32,0 %;           
macro ACE$T_AUDITNAME = 8,0,0,0 %;
literal ACE$S_AUDITNAME = 16;           
macro ACE$L_INFO_FLAGS = 4,0,32,0 %;    
macro ACE$W_APPLICATION_FLAGS = 4,0,16,0 %; 
macro ACE$W_APPLICATION_FACILITY = 6,0,16,0 %; 
macro ACE$T_INFO_START = 8,0,8,0 %;     
macro ACE$W_RMSATR_VARIANT = 8,0,16,0 %; 
macro ACE$B_RMSATR_FIXLEN = 10,0,8,0 %; 

macro ACE$W_RMSATR_MINOR_ID = 12,0,16,0 %; 
macro ACE$W_RMSATR_MAJOR_ID = 14,0,16,0 %; 
macro ACE$L_RMS_ATTRIBUTE_FLAGS = 16,0,32,0 %; 
macro ACE$V_STATISTICS = 16,0,1,0 %;    
macro ACE$V_XLATE_DEC = 16,1,1,0 %;     

macro ACE$T_VOLNAM = 4,0,0,0 %;
literal ACE$S_VOLNAM = 12;              
macro ACE$B_VOLNAM_LEN = 16,0,8,0 %;    
macro ACE$B_RJRVER = 17,0,8,0 %;        
macro ACE$R_FID_OVERLAY = 18,0,0,0 %;   
macro ACE$W_FID = 18,0,0,0 %;
literal ACE$S_FID = 6;                  
macro ACE$R_FID_FIELDS = 18,0,0,0 %;
macro ACE$W_FID_NUM = 18,0,16,0 %;      
macro ACE$W_FID_SEQ = 20,0,16,0 %;      
macro ACE$R_FID_RVN_OVERLAY = 22,0,16,0 %;
macro ACE$W_FID_RVN = 22,0,16,0 %;      
macro ACE$R_FID_RVN_FIELDS = 22,0,16,0 %;
macro ACE$B_FID_RVN = 22,0,8,0 %;       
macro ACE$B_FID_NMX = 23,0,8,0 %;       
macro ACE$W_RMSJNL_FLAGS = 24,0,16,0 %;
macro ACE$V_JOURNAL_DISABLED = 24,0,1,0 %; 
macro ACE$V_BACKUP_DONE = 24,1,1,0 %;   

macro ACE$L_JNLIDX = 26,0,32,0 %;       
macro ACE$Q_CDATE = 30,0,0,0 %;
literal ACE$S_CDATE = 8;                
macro ACE$L_BACKUP_SEQNO = 38,0,32,0 %; 
macro ACE$Q_MODIFICATION_TIME = 42,0,0,0 %;
literal ACE$S_MODIFICATION_TIME = 8;    
macro ACE$L_SPARE1 = 4,0,32,0 %;        
macro ACE$L_SYS_PROT = 8,0,32,0 %;      
macro ACE$L_OWN_PROT = 12,0,32,0 %;     
macro ACE$L_GRP_PROT = 16,0,32,0 %;     
macro ACE$L_WOR_PROT = 20,0,32,0 %;     
macro ACE$L_SPARE2 = 4,0,32,0 %;        
macro ACE$Q_IMAGE_IDS = 8,0,0,0 %;
literal ACE$S_IMAGE_IDS = 8;            
macro ACE$L_OIL_FLAGS = 4,0,32,0 %;     
macro ACE$L_BRAND_NAME = 8,0,32,0 %;    
macro ACE$R_CLASS_PROT = 12,0,8,0 %;    

macro ACE$L_POSIX_FLAGS = 4,0,32,0 %;   
macro ACE$V_USERNAME_VALID = 4,0,1,0 %; 
macro ACE$V_UIC_VALID = 4,1,1,0 %;      
macro ACE$V_UID_VALID = 4,2,1,0 %;      
macro ACE$V_GID_VALID = 4,3,1,0 %;      
macro ACE$V_GROUP_MODE_VALID = 4,4,1,0 %; 
macro ACE$T_POSIX_USERNAME = 8,0,0,0 %;
literal ACE$S_POSIX_USERNAME = 32;      
macro ACE$L_POSIX_UIC = 40,0,32,0 %;    
macro ACE$W_POSIX_MEM = 40,0,16,0 %;    
macro ACE$W_POSIX_GRP = 42,0,16,0 %;    
macro ACE$L_POSIX_UID = 44,0,32,0 %;    
macro ACE$L_POSIX_GID = 48,0,32,0 %;    
macro ACE$L_POSIX_MODE = 52,0,32,0 %;   
macro ACE$V_OTHER = 52,0,3,0 %;
literal ACE$S_OTHER = 3;                
macro ACE$V_GROUP = 52,3,3,0 %;
literal ACE$S_GROUP = 3;                
macro ACE$V_USER = 52,6,3,0 %;
literal ACE$S_USER = 3;                 
macro ACE$V_S_IXOTH = 52,0,1,0 %;       
macro ACE$V_S_IWOTH = 52,1,1,0 %;       
macro ACE$V_S_IROTH = 52,2,1,0 %;       
macro ACE$V_S_IXGRP = 52,3,1,0 %;       
macro ACE$V_S_IWGRP = 52,4,1,0 %;       
macro ACE$V_S_IRGRP = 52,5,1,0 %;       
macro ACE$V_S_IXUSR = 52,6,1,0 %;       
macro ACE$V_S_IWUSR = 52,7,1,0 %;       
macro ACE$V_S_IRUSR = 52,8,1,0 %;       
macro ACE$V_S_SPARE = 52,9,1,0 %;       
macro ACE$V_S_ISGID = 52,10,1,0 %;      
macro ACE$V_S_ISUID = 52,11,1,0 %;      
macro ACE$L_VMS_GRP_PROT = 56,0,32,0 %; 
 
literal ACL$K_LENGTH = 12;              
literal ACL$C_LENGTH = 12;              
literal ACL$C_FILE = 1;                 
literal ACL$C_DEVICE = 2;               
literal ACL$C_JOBCTL_QUEUE = 3;         
literal ACL$C_COMMON_EF_CLUSTER = 4;    
literal ACL$C_LOGICAL_NAME_TABLE = 5;   
literal ACL$C_PROCESS = 6;              
literal ACL$C_GROUP_GLOBAL_SECTION = 7; 
literal ACL$C_SYSTEM_GLOBAL_SECTION = 8; 
literal ACL$C_CAPABILITY = 9;           
literal ACL$C_EVENT_FACILITY = 10;      
literal ACL$C_LOCK = 11;                
literal ACL$C_VOLUME = 12;              
literal ACL$C_MAX_OBJECT = 13;          
literal ACL$C_NUM_OBJECTS = 12;         
literal ACL$K_NUM_OBJECTS = 12;         
literal ACL$C_ADDACLENT = 1;            
literal ACL$C_DELACLENT = 2;            
literal ACL$C_MODACLENT = 3;            
literal ACL$C_FNDACLENT = 4;            
literal ACL$C_FNDACETYP = 5;            
literal ACL$C_DELETEACL = 6;            
literal ACL$C_READACL = 7;              
literal ACL$C_ACLLENGTH = 8;            
literal ACL$C_READACE = 9;              
literal ACL$C_RLOCK_ACL = 10;           
literal ACL$C_WLOCK_ACL = 11;           
literal ACL$C_UNLOCK_ACL = 12;          
literal ACL$C_GRANT_ACE = 13;           
literal ACL$C_NEXT_ACE = 14;            
literal ACL$C_DELETE_ALL = 15;          
literal ACL$C_RESERVED_ITEM_2 = 16;     
literal ACL$C_RESERVED_ITEM_3 = 17;     
literal ACL$S_ADDACLENT = 255;          
literal ACL$S_DELACLENT = 255;          
literal ACL$S_MODACLENT = 255;          
literal ACL$S_FNDACLENT = 255;          
literal ACL$S_FNDACETYP = 255;          
literal ACL$S_DELETEACL = 255;          
literal ACL$S_READACL = 512;            
literal ACL$S_ACLLENGTH = 4;            
literal ACL$S_READACE = 255;            
literal ACL$S_RLOCK_ACL = 4;            
literal ACL$S_WLOCK_ACL = 4;            
literal ACL$S_UNLOCK_ACL = 4;           
literal ACL$S_GRANT_ACE = 255;          
literal ACL$S_NEXT_ACE = 4;             
literal ACL$S_DELETE_ALL = 255;         
literal ACL$S_RESERVED_ITEM_2 = 255;    
literal ACL$S_RESERVED_ITEM_3 = 255;    
literal ACL$C_MAX_SEGMENT_SIZE = 512;   
literal ACL$K_MAX_SEGMENT_SIZE = 512;   
literal ACL$S_ACLDEF = 16;
macro ACL$L_FLINK = 0,0,32,0 %;         
macro ACL$L_BLINK = 4,0,32,0 %;         
macro ACL$W_SIZE = 8,0,16,0 %;          
macro ACL$B_TYPE = 10,0,8,0 %;          
macro ACL$L_LIST = 12,0,32,0 %;         
 

literal UTCBLK$S_UTCBLK = 16;
macro UTCBLK$O_TIME_BLOCK = 0,0,0,1 %;
literal UTCBLK$S_TIME_BLOCK = 16;       
 

literal acme$k_maxchar_ITEM = 16383;    
literal acme$k_maxchar_doi_name = 32;   
literal acme$k_maxchar_principal_name = 512; 
literal acme$k_max_num_agents = 32;     
literal acme$k_max_cred_type = 32;      

literal acmeid$m_acme_num = %X'7FFF';
literal acmeid$m_doi_designator = %X'8000';
literal acmeid$m_server_num = %X'FFFF0000';
literal acmeid$S_acmeid = 4;
macro acmeid$l_agent_id = 0,0,32,0 %;   
macro acmeid$v_acme_num = 0,0,15,0 %;
literal acmeid$s_acme_num = 15;         
macro acmeid$v_doi_designator = 0,15,1,0 %; 
macro acmeid$v_server_num = 0,16,16,0 %;
literal acmeid$s_server_num = 16;       
literal acmeid$k_length = 4;

literal acme$_authenticate_principal = 1; 
literal acme$_change_password = 2;      
literal acme$_release_credentials = 3;  
literal acme$_query = 4;                
literal acme$_event = 5;                
literal acme$_free_context = 63;        
literal acme$_fc_authenticate_principal = 1; 
literal acme$_fc_change_password = 2;   
literal acme$_fc_release_credentials = 3; 
literal acme$_fc_query = 4;             
literal acme$_fc_event = 5;             
literal acme$_fc_free_context = 63;     
literal acmefc$m_function = %X'3F';
literal acmefc$m_modifiers = %X'FFFFFFC0';
literal acme$m_noaudit = %X'40';
literal acme$m_timeout = %X'80';
literal acme$m_ucs2_4 = %X'8000';
literal acme$m_acquire_credentials = %X'10000';
literal acme$m_merge_persona = %X'20000';
literal acme$m_copy_persona = %X'40000';
literal acme$m_override_mapping = %X'80000';
literal acme$m_native_authentication = %X'100000';
literal acme$m_noauthorization = %X'200000';
literal acme$m_foreign_policy_hints = %X'400000';
literal acme$m_default_principal = %X'800000';
literal acmefc$S_acmefc = 4;

macro acmefc$l_fcode_struct = 0,0,32,0 %; 
macro acmefc$v_function = 0,0,6,0 %;
literal acmefc$s_function = 6;
macro acmefc$v_modifiers = 0,6,26,0 %;
literal acmefc$s_modifiers = 26;

macro acme$v_noaudit = 0,6,1,0 %;       
macro acme$v_timeout = 0,7,1,0 %;       
macro acme$v_ucs2_4 = 0,15,1,0 %;       

macro acme$v_acquire_credentials = 0,16,1,0 %; 
macro acme$v_merge_persona = 0,17,1,0 %; 
macro acme$v_copy_persona = 0,18,1,0 %; 
macro acme$v_override_mapping = 0,19,1,0 %; 
macro acme$v_native_authentication = 0,20,1,0 %; 
macro acme$v_noauthorization = 0,21,1,0 %; 
macro acme$v_foreign_policy_hints = 0,22,1,0 %; 
macro acme$v_default_principal = 0,23,1,0 %; 

literal acmefc$k_length = 4;

literal acmeic$M_ITEM = %X'1FFF';
literal acmeic$m_ucs = %X'2000';
literal acmeic$m_output = %X'4000';
literal acmeic$m_acme_specific = %X'8000';
literal acmeic$S_acmeic = 2;
macro acmeic$w_item_code = 0,0,16,0 %;  
macro acmeic$V_ITEM = 0,0,13,0 %;
literal acmeic$S_ITEM = 13;             
macro acmeic$v_ucs = 0,13,1,0 %;        
macro acmeic$v_output = 0,14,1,0 %;     
macro acmeic$v_acme_specific = 0,15,1,0 %; 
literal acmeic$k_length = 2;

literal acme$_min_spec_in = 1;
literal acme$_null = 1;                 
literal acme$_chain = 2;                
literal acme$_max_spec_in = 2;
literal acme$_min_gen_in = 256;
literal acme$_access_mode = 256;        
literal acme$_dialogue_support = 257;   
literal acme$_context_acme_id = 258;    
literal acme$_persona_handle_in = 259;  
literal acme$_target_doi_id = 260;      
literal acme$_timeout_interval = 261;   
literal acme$_max_gen_in = 261;
literal acme$_min_auth_pwd_in = 512;
literal acme$_auth_mechanism = 512;     
literal acme$_challenge_data = 513;     
literal acme$_logon_type = 514;         
literal acme$_new_password_flags = 515; 
literal acme$_remote_host_address = 516; 
literal acme$_remote_host_address_type = 517; 
literal acme$_response_data = 518;      
literal acme$_max_auth_pwd_in = 518;
literal acme$_min_rel_cred_in = 768;
literal acme$_credentials_type = 768;   
literal acme$_max_rel_cred_in = 768;
literal acme$_min_query_in = 1024;
literal acme$_query_key_type = 1024;    
literal acme$_query_key_value = 1025;   
literal acme$_query_type = 1026;        
literal acme$_max_query_in = 1026;
literal acme$_min_event_in = 1280;
literal acme$_event_data_in = 1280;     
literal acme$_event_type = 1281;        
literal acme$_max_event_in = 1281;

literal acme$_min_gen_in_ucs = 8448;
literal acme$_context_acme_name = 8448; 
literal acme$_locale = 8449;            
literal acme$_target_doi_name = 8450;   
literal acme$_server_name_in = 8451;    
literal acme$_service_name = 8452;      
literal acme$_max_gen_in_ucs = 8452;
literal acme$_min_auth_pwd_in_ucs = 8704;
literal acme$_access_port = 8704;       
literal acme$_new_password_1 = 8705;    
literal acme$_new_password_2 = 8706;    
literal acme$_new_password_system = 8707; 
literal acme$_password_1 = 8708;        
literal acme$_password_2 = 8709;        
literal acme$_password_system = 8710;   
literal acme$_principal_name_in = 8711; 
literal acme$_remote_host_fullname = 8712; 
literal acme$_remote_host_name = 8713;  
literal acme$_remote_username = 8714;   
literal acme$_max_auth_pwd_in_ucs = 8714;
literal acme$_min_rel_cred_in_ucs = 8960;
literal acme$_credentials_name = 8960;  
literal acme$_max_rel_cred_in_ucs = 8960;

literal acme$_min_spec_out = 16385;
literal acme$_phase_transition = 16385;
literal acme$_max_spec_out = 16385;
literal acme$_min_gen_out = 16640;
literal acme$_persona_handle_out = 16640; 
literal acme$_max_gen_out = 16640;
literal acme$_min_auth_pwd_out = 16896;
literal acme$_authenticating_doi_id = 16896; 
literal acme$_logon_information = 16897; 
literal acme$_mapping_acme_id = 16898;  
literal acme$_max_auth_pwd_out = 16898;
literal acme$_min_query_out = 17408;
literal acme$_query_data = 17408;       
literal acme$_max_query_out = 17408;
literal acme$_min_event_out = 17664;
literal acme$_event_data_out = 17664;   
literal acme$_max_event_out = 17664;

literal acme$_min_gen_out_ucs = 24832;
literal acme$_server_name_out = 24832;  
literal acme$_max_gen_out_ucs = 24832;
literal acme$_min_auth_pwd_out_ucs = 25088;
literal acme$_authenticating_doi_name = 25088; 
literal acme$_mapped_vms_username = 25089; 
literal acme$_mapping_acme_name = 25090; 
literal acme$_principal_name_out = 25091; 
literal acme$_max_auth_pwd_out_ucs = 25091;

literal acme$k_network = 1;
literal acme$k_batch = 2;
literal acme$k_local = 3;
literal acme$k_dialup = 4;
literal acme$k_remote = 5;

literal acmerevlvl$k_minor_id_bitpos = 0;
literal acmerevlvl$k_major_id_bitpos = 8;
literal acmerevlvl$S_acmerevlvl = 2;
macro acmerevlvl$w_revision_level = 0,0,16,0 %; 
macro acmerevlvl$b_minor_id = 0,0,8,0 %; 
macro acmerevlvl$b_major_id = 1,0,8,0 %; 
literal acmerevlvl$k_length = 2;

literal acmemech$k_password = 1;        
literal acmemech$k_challenge_response = 2; 
literal acmemech$m_mechanism_type = %X'7FFF';
literal acmemech$m_facility_specific = %X'8000';
literal acmemech$S_acmemech = 4;
macro acmemech$w_mechanism = 0,0,16,0 %; 
macro acmemech$v_mechanism_type = 0,0,15,0 %;
literal acmemech$s_mechanism_type = 15; 
macro acmemech$v_facility_specific = 0,15,1,0 %; 
macro acmemech$w_facility = 2,0,16,0 %; 
literal acmemech$k_length = 4;

literal acmehat$k_decnet_iv = 1;        
literal acmehat$k_decnet_osi = 2;       
literal acmehat$k_ip_v4 = 3;            
literal acmehat$k_ip_v6 = 4;            
literal acmehat$m_protocol_type = %X'7FFF';
literal acmehat$m_facility_specific = %X'8000';
literal acmehat$S_acmehat = 4;
macro acmehat$w_protocol = 0,0,16,0 %;  
macro acmehat$v_protocol_type = 0,0,15,0 %;
literal acmehat$s_protocol_type = 15;   
macro acmehat$v_facility_specific = 0,15,1,0 %; 
macro acmehat$w_facility = 2,0,16,0 %;  
literal acmehat$k_length = 4;

literal acmepwdflg$m_system = %X'1';
literal acmepwdflg$m_password_1 = %X'2';
literal acmepwdflg$m_password_2 = %X'4';
literal acmepwdflg$m_specified = %X'80000000';
literal acmepwdflg$m_valid_flags = %X'7';
literal acmepwdflg$m_password_flags = %X'7FFFFFFF';
literal acmepwdflg$S_acmepwdflg = 4;
macro acmepwdflg$l_flags_struct = 0,0,32,0 %; 
macro acmepwdflg$v_system = 0,0,1,0 %;  
macro acmepwdflg$v_password_1 = 0,1,1,0 %; 
macro acmepwdflg$v_password_2 = 0,2,1,0 %; 
macro acmepwdflg$v_specified = 0,31,1,0 %; 

macro acmepwdflg$v_valid_flags = 0,0,3,0 %;
literal acmepwdflg$s_valid_flags = 3;   
macro acmepwdflg$v_password_flags = 0,0,31,0 %;
literal acmepwdflg$s_password_flags = 31; 
literal acmepwdflg$k_length = 4;

literal acmemc$m_type = %X'3FFF';
literal acmemc$m_ucs = %X'4000';
literal acmemc$m_acme_specific = %X'8000';
literal acmemc$S_acmemc = 2;
macro acmemc$w_msg_code = 0,0,16,0 %;   
macro acmemc$v_type = 0,0,14,0 %;
literal acmemc$s_type = 14;             
macro acmemc$v_ucs = 0,14,1,0 %;        
macro acmemc$v_acme_specific = 0,15,1,0 %; 
literal acmemc$k_length = 2;

literal acmemc$k_min_gen_msg = 16384;
literal acmemc$k_general = 16384;       
literal acmemc$k_header = 16385;        
literal acmemc$k_trailer = 16386;       
literal acmemc$k_selection = 16387;     
literal acmemc$k_dialogue_alert = 16388; 
literal acmemc$k_max_gen_msg = 16388;

literal acmemc$k_min_logon_msg = 16640;
literal acmemc$k_system_identification = 16640; 
literal acmemc$k_system_notices = 16641; 
literal acmemc$k_welcome_notices = 16642; 
literal acmemc$k_logon_notices = 16643; 
literal acmemc$k_password_notices = 16644; 
literal acmemc$k_mail_notices = 16645;  
literal acmemc$k_max_logon_msg = 16645;

literal acmesb$S_acmesb = 16;
macro acmesb$l_status = 0,0,32,1 %;     
macro acmesb$l_secondary_status = 4,0,32,1 %; 
macro acmesb$l_acme_id = 8,0,32,0 %;
literal acmesb$s_acme_id = 4;           
macro acmesb$l_acme_status = 12,0,32,1 %; 
literal acmesb$k_length = 16;

literal acmedlogflg$m_input = %X'1';
literal acmedlogflg$m_noecho = %X'2';
literal acmedlogflg$m_specified = %X'80000000';
literal acmedlogflg$m_valid_flags = %X'3';
literal acmedlogflg$m_dialogue_flags = %X'7FFFFFFF';
literal acmedlogflg$S_acmedlogflg = 4;
macro acmedlogflg$l_flags_struct = 0,0,32,0 %; 
macro acmedlogflg$v_input = 0,0,1,0 %;  
macro acmedlogflg$v_noecho = 0,1,1,0 %; 
macro acmedlogflg$v_specified = 0,31,1,0 %; 

macro acmedlogflg$v_valid_flags = 0,0,2,0 %;
literal acmedlogflg$s_valid_flags = 2;  
macro acmedlogflg$v_dialogue_flags = 0,0,31,0 %;
literal acmedlogflg$s_dialogue_flags = 31; 
literal acmedlogflg$k_length = 4;
literal acmeis$S_acmeitmset = 24;
macro acmeis$l_flags = 0,0,32,0 %;
literal acmeis$s_flags = 4;             
macro acmeis$w_item_code = 4,0,16,0 %;
literal acmeis$s_item_code = 2;         
macro acmeis$w_max_length = 6,0,16,0 %; 
macro acmeis$w_msg_type = 6,0,16,0 %;
literal acmeis$s_msg_type = 2;          
macro acmeis$q_data_1 = 8,0,0,0 %;
literal acmeis$s_data_1 = 8;            
macro acmeis$q_data_2 = 16,0,0,0 %;
literal acmeis$s_data_2 = 8;            
literal acmeis$k_length = 24;
literal acmecb$k_minor_id_000 = 0;
literal acmecb$k_minor_id = 0;
literal acmecb$k_major_id_001 = 1;
literal acmecb$k_major_id = 1;
literal acmecb$k_revision = 256;
literal acmecb$S_acmecb = 24;
macro acmecb$q_context_id = 0,0,0,0 %;
literal acmecb$s_context_id = 8;        
macro acmecb$w_size = 8,0,16,0 %;       
macro acmecb$w_revision_level = 10,0,16,0 %;
literal acmecb$s_revision_level = 2;    
macro acmecb$l_acme_id = 12,0,32,0 %;
literal acmecb$s_acme_id = 4;           
macro acmecb$l_item_set_count = 16,0,32,0 %; 
macro acmecb$ps_item_set = 20,0,32,1 %;
literal acmecb$k_length = 24;

literal acmelgiflg$k_min_logon_flag = -1;
literal acmelgiflg$k_new_mail_at_login = 0;
literal acmelgiflg$m_new_mail_at_login = %X'1';
literal acmelgiflg$k_password_changed = 1;
literal acmelgiflg$m_password_changed = %X'2';
literal acmelgiflg$k_password_expired = 2;
literal acmelgiflg$m_password_expired = %X'4';
literal acmelgiflg$k_password_warning = 3;
literal acmelgiflg$m_password_warning = %X'8';
literal acmelgiflg$k_password2_changed = 4;
literal acmelgiflg$m_password2_changed = %X'10';
literal acmelgiflg$k_password2_expired = 5;
literal acmelgiflg$m_password2_expired = %X'20';
literal acmelgiflg$k_password2_warning = 6;
literal acmelgiflg$m_password2_warning = %X'40';
literal acmelgiflg$k_max_logon_flag = 6;
literal acmelgiflg$S_acmelgiflg = 4;
macro acmelgiflg$l_logon_flags = 0,0,32,0 %; 
macro acmelgiflg$v_new_mail_at_login = 0,0,1,0 %; 
macro acmelgiflg$v_password_changed = 0,1,1,0 %; 
macro acmelgiflg$v_password_expired = 0,2,1,0 %; 
macro acmelgiflg$v_password_warning = 0,3,1,0 %; 
macro acmelgiflg$v_password2_changed = 0,4,1,0 %; 
macro acmelgiflg$v_password2_expired = 0,5,1,0 %; 
macro acmelgiflg$v_password2_warning = 0,6,1,0 %; 
literal acmelgiflg$k_length = 4;
literal acmelivms$k_minor_id_000 = 0;
literal acmelivms$k_minor_id = 0;
literal acmelivms$k_major_id_001 = 1;
literal acmelivms$k_major_id = 1;
literal acmelivms$k_revision = 256;
literal acmelivms$S_acmelivms = 48;
macro acmelivms$l_acme_id = 0,0,32,0 %;
literal acmelivms$s_acme_id = 4;        
macro acmelivms$l_phase = 4,0,32,0 %;   
macro acmelivms$w_size = 8,0,16,0 %;    
macro acmelivms$w_revision_level = 10,0,16,0 %;
literal acmelivms$s_revision_level = 2; 
macro acmelivms$l_logfail_count = 12,0,32,0 %; 
macro acmelivms$o_logon_int = 16,0,0,0 %;
literal acmelivms$s_logon_int = 16;     
macro acmelivms$o_logon_nonint = 32,0,0,0 %;
literal acmelivms$s_logon_nonint = 16;  
literal acmelivms$k_length = 48;
literal acmelidoi$k_minor_id_000 = 0;
literal acmelidoi$k_minor_id = 0;
literal acmelidoi$k_major_id_001 = 1;
literal acmelidoi$k_major_id = 1;
literal acmelidoi$k_revision = 256;
literal acmelidoi$S_acmelidoi = 112;
macro acmelidoi$l_acme_id = 0,0,32,0 %;
literal acmelidoi$s_acme_id = 4;        
macro acmelidoi$l_phase = 4,0,32,0 %;   
macro acmelidoi$w_size = 8,0,16,0 %;    
macro acmelidoi$w_revision_level = 10,0,16,0 %;
literal acmelidoi$s_revision_level = 2; 
macro acmelidoi$l_logfail_count = 12,0,32,0 %; 
macro acmelidoi$o_logon = 16,0,0,0 %;
literal acmelidoi$s_logon = 16;         
macro acmelidoi$o_logon_int = 32,0,0,0 %;
literal acmelidoi$s_logon_int = 16;     
macro acmelidoi$o_logon_nonint = 48,0,0,0 %;
literal acmelidoi$s_logon_nonint = 16;  
macro acmelidoi$o_logfail = 64,0,0,0 %;
literal acmelidoi$s_logfail = 16;       
macro acmelidoi$o_logfail_int = 80,0,0,0 %;
literal acmelidoi$s_logfail_int = 16;   
macro acmelidoi$o_logfail_nonint = 96,0,0,0 %;
literal acmelidoi$s_logfail_nonint = 16; 
literal acmelidoi$k_length = 112;
literal acmeli$k_minor_id_000 = 0;
literal acmeli$k_minor_id = 0;
literal acmeli$k_major_id_001 = 1;
literal acmeli$k_major_id = 1;
literal acmeli$k_revision = 256;
literal acmeli$S_acmeli = 184;
macro acmeli$pq_logon_info_doi64 = 0,0,0,1 %;
literal acmeli$s_logon_info_doi64 = 8;
macro acmeli$ps_logon_info_doi32 = 0,0,32,1 %;
macro acmeli$l_logon_info_doi32se = 4,0,32,0 %;
macro acmeli$w_size = 8,0,16,0 %;       
macro acmeli$w_revision_level = 10,0,16,0 %;
literal acmeli$s_revision_level = 2;    
macro acmeli$l_logon_flags = 12,0,32,0 %;
literal acmeli$s_logon_flags = 4;       
macro acmeli$pq_logon_info_vms64 = 16,0,0,1 %;
literal acmeli$s_logon_info_vms64 = 8;
macro acmeli$ps_logon_info_vms32 = 16,0,32,1 %;
macro acmeli$l_logon_info_vms32se = 20,0,32,0 %;
literal acmeli$k_length = 184;
literal acme$k_query_revision_level = 1; 
literal acme$k_query_acme_count = 2;    
literal acme$k_query_acme_id = 3;       
literal acme$k_query_acme_name = 4;     
literal acme$k_service_revision_001_000 = 256;

literal ACME$_MAP_TO_USERNAME = 1;      
literal ACME$_VERIFY_PASSWORD_ONLY = 2; 
literal ACME$_MAX_FUNCTION_CODE = 3;    

literal ACME$_DOMAIN = 2;               
literal ACME$_USERID = 3;               
literal ACME$_PASSWORD = 4;             
literal ACME$_PASSWORD_LIST = 5;        
literal ACME$_NEW_PASSWORD = 6;         
literal ACME$_OUTPUT_VMS_USERNAME = 7;  
literal ACME$_NOAUTHENTICATION = 8;     
literal ACME$_OVERRIDE_POLICY = 9;      
literal ACME$_SYNCHRONIZE = 10;         
literal ACME$_REASON_CODE = 11;         
literal ACME$_VALIDATE_ONLY = 12;       
literal ACME$_UAF_RECORD_LOCKED = 13;   
literal ACME$_RESERVED_ITEM_1 = 14;     
literal ACME$_RESERVED_ITEM_2 = 15;     
literal ACME$_MAX_ITEM_CODE = 16;       

literal ACME$C_MAJOR_VERSION = 1;       
literal ACME$C_MINOR_VERSION = 0;       
literal ACME$S_MAX_DOMAIN = 256;        
literal ACME$S_MAX_USERID = 256;        
literal ACME$S_MAX_PASSWORD = 256;      

literal ACME$S_PWDITM = 12;
macro ACME$L_TERMINATOR = 0,0,32,0 %;   
macro ACME$W_PWDNUM = 0,0,16,0 %;       
macro ACME$W_RSRVD1 = 2,0,16,0 %;       
macro ACME$A_OLDPWD = 4,0,32,0 %;       
macro ACME$A_NEWPWD = 8,0,32,0 %;       

literal ACME$C_MAX_PASSWORD_NUM = 8;
 

literal acmevms$k_min_msg_type = 32768;
literal acmevms$k_old_decw_pwd_exp_1 = 32768; 
literal acmevms$k_old_decw_pwd_exp_2 = 32769; 
literal acmevms$k_old_decw_pwd_quality = 32770; 
literal acmevms$k_old_sysuaf_070 = 32771; 
literal acmevms$k_old_auth_flags = 32772; 
literal acmevms$k_old_terminal_connect = 32773; 
literal acmevms$k_max_msg_type = 32773;

literal acmevms$_min_old_in = 32768;
literal acmevms$_old_decwindows_flag = 32768; 
literal acmevms$_old_hashed_password_1 = 32769; 
literal acmevms$_old_hashed_password_2 = 32770; 
literal acmevms$_old_lgi_phase = 32771; 
literal acmevms$_old_lgi_status = 32772; 
literal acmevms$_max_old_in = 32772;

literal acmevms$_min_solicited_in = 33024;
literal acmevms$_loginout_cli_flags = 33024; 
literal acmevms$_old_connection_flag = 33025; 
literal acmevms$_old_process_name = 33026; 
literal acmevms$_max_solicited_in = 33026;

literal acmevms$_min_general_in = 33280;
literal acmevms$_autologin_allowed_flag = 33280; 
literal acmevms$_spare_1 = 33281;       
literal acmevms$_genpwd_count = 33282;  
literal acmevms$_genpwd_mandatory_flag = 33283; 
literal acmevms$_genpwd_maxlength = 33284; 
literal acmevms$_genpwd_minlength = 33285; 
literal acmevms$_loginout_creprc_flags = 33286; 
literal acmevms$_requestor_pid = 33287; 
literal acmevms$_preauthentication_flag = 33288; 
literal acmevms$_uses_system_password = 33289; 
literal acmevms$_requestor_uic = 33290; 
literal acmevms$_max_general_in = 33290;

literal acmevms$_min_general_in_ucs = 41472;
literal acmevms$_net_proxy = 41472;     
literal acmevms$_requestor_username = 41473; 
literal acmevms$_confirm_password_sys = 41474; 
literal acmevms$_confirm_password_1 = 41475; 
literal acmevms$_confirm_password_2 = 41476; 
literal acmevms$_max_general_in_ucs = 41476;

literal acmevms$_min_general_out = 49664;
literal acmevms$_class_days = 49664;    
literal acmevms$_class_flags = 49665;   
literal acmevms$_class_number = 49666;  
literal acmevms$_class_primeday_limit = 49667; 
literal acmevms$_class_seconday_limit = 49668; 
literal acmevms$_max_general_out = 49668;

literal acmevms$_min_creprc_out = 49920;
literal acmevms$_creprc_baspri = 49920; 
literal acmevms$_creprc_image = 49921;  
literal acmevms$_creprc_prcnam = 49922; 
literal acmevms$_creprc_prvadr = 49923; 
literal acmevms$_creprc_quota = 49924;  
literal acmevms$_creprc_uic = 49925;    
literal acmevms$_max_creprc_out = 49925;

literal acmevms$_min_uai_out = 50176;
literal acmevms$_uai_rtype = 50176;     
literal acmevms$_uai_version = 50177;   
literal acmevms$_uai_usrdatoff = 50178; 
literal acmevms$_uai_username = 50179;  
literal acmevms$_uai_username_tag = 50180; 
literal acmevms$_uai_uic = 50181;       
literal acmevms$_uai_mem = 50182;       
literal acmevms$_uai_grp = 50183;       
literal acmevms$_uai_sub_id = 50184;    
literal acmevms$_uai_parent_id = 50185; 
literal acmevms$_uai_account = 50186;   
literal acmevms$_uai_owner = 50187;     
literal acmevms$_uai_defdev = 50188;    
literal acmevms$_uai_defdir = 50189;    
literal acmevms$_uai_lgicmd = 50190;    
literal acmevms$_uai_defcli = 50191;    
literal acmevms$_uai_clitables = 50192; 
literal acmevms$_uai_pwd = 50193;       
literal acmevms$_uai_pwd2 = 50194;      
literal acmevms$_uai_logfails = 50195;  
literal acmevms$_uai_salt = 50196;      
literal acmevms$_uai_encrypt = 50197;   
literal acmevms$_uai_encrypt2 = 50198;  
literal acmevms$_uai_pwd_length = 50199; 
literal acmevms$_uai_expiration = 50200; 
literal acmevms$_uai_pwd_lifetime = 50201; 
literal acmevms$_uai_pwd_date = 50202;  
literal acmevms$_uai_pwd2_date = 50203; 
literal acmevms$_uai_lastlogin_i = 50204; 
literal acmevms$_uai_lastlogin_n = 50205; 
literal acmevms$_uai_priv = 50206;      
literal acmevms$_uai_def_priv = 50207;  
literal acmevms$_uai_min_class = 50208; 
literal acmevms$_uai_max_class = 50209; 
literal acmevms$_uai_flags = 50210;     
literal acmevms$_uai_network_access_p = 50211; 
literal acmevms$_uai_network_access_s = 50212; 
literal acmevms$_uai_batch_access_p = 50213; 
literal acmevms$_uai_batch_access_s = 50214; 
literal acmevms$_uai_local_access_p = 50215; 
literal acmevms$_uai_local_access_s = 50216; 
literal acmevms$_uai_dialup_access_p = 50217; 
literal acmevms$_uai_dialup_access_s = 50218; 
literal acmevms$_uai_remote_access_p = 50219; 
literal acmevms$_uai_remote_access_s = 50220; 
literal acmevms$_uai_primedays = 50221; 
literal acmevms$_uai_pri = 50222;       
literal acmevms$_uai_quepri = 50223;    
literal acmevms$_uai_maxjobs = 50224;   
literal acmevms$_uai_maxacctjobs = 50225; 
literal acmevms$_uai_maxdetach = 50226; 
literal acmevms$_uai_prccnt = 50227;    
literal acmevms$_uai_biolm = 50228;     
literal acmevms$_uai_diolm = 50229;     
literal acmevms$_uai_tqcnt = 50230;     
literal acmevms$_uai_astlm = 50231;     
literal acmevms$_uai_enqlm = 50232;     
literal acmevms$_uai_fillm = 50233;     
literal acmevms$_uai_shrfillm = 50234;  
literal acmevms$_uai_wsquota = 50235;   
literal acmevms$_uai_dfwscnt = 50236;   
literal acmevms$_uai_wsextent = 50237;  
literal acmevms$_uai_pgflquota = 50238; 
literal acmevms$_uai_cputim = 50239;    
literal acmevms$_uai_bytlm = 50240;     
literal acmevms$_uai_pbytlm = 50241;    
literal acmevms$_uai_jtquota = 50242;   
literal acmevms$_uai_proxy_lim = 50243; 
literal acmevms$_uai_proxies = 50244;   
literal acmevms$_uai_account_lim = 50245; 
literal acmevms$_uai_accounts = 50246;  
literal acmevms$_uai_user_data = 50247; 
literal acmevms$_uai_password = 50248;  
literal acmevms$_uai_password2 = 50249; 
literal acmevms$_uai_def_class = 50250; 
literal acmevms$_uai_audit_flags = 50251; 
literal acmevms$_max_uai_out = 50251;

literal acmevms$_min_general_out_ucs = 57856;
literal acmevms$_class_name = 57856;    
literal acmevms$_max_general_out_ucs = 57856;

literal acmevms$m_disk = %X'1';
literal acmevms$m_cli = %X'2';
literal acmevms$m_tables = %X'4';
literal acmevms$m_command = %X'8';
literal acmevms$m_connect = %X'10';
literal acmevms$m_new_password = %X'20';
literal acmevms$m_local_password = %X'40';
literal acmevms$S_cli_flags = 4;
macro acmevms$v_disk = 0,0,1,0 %;       
macro acmevms$v_cli = 0,1,1,0 %;        
macro acmevms$v_tables = 0,2,1,0 %;     
macro acmevms$v_command = 0,3,1,0 %;    
macro acmevms$v_connect = 0,4,1,0 %;    
macro acmevms$v_new_password = 0,5,1,0 %; 
macro acmevms$v_local_password = 0,6,1,0 %; 
literal acmevms$k_length = 4;

literal acmevms$k_auth_mech_argus = 13860864; 
literal acmevms$k_uai_base = 50175;     
literal acmevms$k_maxchar_vms_username = 32; 
 

literal ACR$K_VERSION2 = 0;             
literal ACR$K_VERSION3T = 1;            
literal ACR$K_VERSION3 = 2;             
literal ACR$K_CURVER = 2;               
literal ACR$M_PACKET = %X'1';
literal ACR$M_TYPE = %X'FE';
literal ACR$M_SUBTYPE = %X'F00';
literal ACR$M_VERSION = %X'7000';
literal ACR$M_CUSTOMER = %X'8000';
literal ACR$K_PRCDEL = 1;               
literal ACR$K_PRCPUR = 2;               
literal ACR$K_IMGDEL = 3;               
literal ACR$K_IMGPUR = 4;               
literal ACR$K_SYSINIT = 5;              
literal ACR$K_SETTIME = 6;              
literal ACR$K_LOGFAIL = 7;              
literal ACR$K_PRINT = 8;                
literal ACR$K_USER = 9;                 
literal ACR$K_ENABLE = 10;              
literal ACR$K_DISABLE = 11;             
literal ACR$K_ALTACM = 12;              
literal ACR$K_FILE_FL = 13;             
literal ACR$K_FILE_BL = 14;             
literal ACR$K_INTERACTIVE = 1;          
literal ACR$K_SUBPROCESS = 2;           
literal ACR$K_DETACHED = 3;             
literal ACR$K_BATCH = 4;                
literal ACR$K_NETWORK = 5;              
literal ACR$K_ID = 1;                   
literal ACR$K_RESOURCE = 2;             
literal ACR$K_IMAGENAME = 3;            
literal ACR$K_FILENAME = 4;             
literal ACR$K_USER_DATA = 5;            
literal ACR$S_ACRDEF = 4;
macro ACR$W_TYPE = 0,0,16,0 %;          
macro ACR$V_PACKET = 0,0,1,0 %;         
macro ACR$V_TYPE = 0,1,7,0 %;
literal ACR$S_TYPE = 7;                 
macro ACR$V_SUBTYPE = 0,8,4,0 %;
literal ACR$S_SUBTYPE = 4;              
macro ACR$V_VERSION = 0,12,3,0 %;
literal ACR$S_VERSION = 3;              
macro ACR$V_CUSTOMER = 0,15,1,0 %;      
macro ACR$W_LENGTH = 2,0,16,0 %;        

literal ACR$K_HDRLEN = 12;              
literal ACR$C_HDRLEN = 12;              
literal ACR$S_ACRDEF1 = 12;
macro ACR$Q_SYSTIME = 4,0,0,0 %;
literal ACR$S_SYSTIME = 8;              

literal ACR$M_FULLNAME = %X'1';
literal ACR$M_UIDGID = %X'2';
literal ACR$M_FILL_1 = %X'FC';
literal ACR$K_IDVAR = 58;               
literal ACR$C_IDVAR = 58;               
literal ACR$S_ACRDEF2 = 58;
macro ACR$L_PID = 4,0,32,0 %;           
macro ACR$L_OWNER = 8,0,32,0 %;         
macro ACR$L_UIC = 12,0,32,0 %;          
macro ACR$W_MEM = 12,0,16,0 %;          
macro ACR$W_GRP = 14,0,16,0 %;          
macro ACR$Q_PRIV = 16,0,0,0 %;
literal ACR$S_PRIV = 8;                 
macro ACR$B_PRI = 24,0,8,0 %;           
macro ACR$B_IDFLGS = 25,0,8,0 %;        
macro ACR$V_FULLNAME = 25,0,1,0 %;      
macro ACR$V_UIDGID = 25,1,1,0 %;        
macro ACR$V_FILL_1 = 25,2,6,0 %;
literal ACR$S_FILL_1 = 6;               
macro ACR$W_USERNAME = 26,0,16,0 %;     
macro ACR$W_ACCOUNT = 28,0,16,0 %;      
macro ACR$W_NODENAME = 30,0,16,0 %;     
macro ACR$W_TERMINAL = 32,0,16,0 %;     
macro ACR$W_JOBNAME = 34,0,16,0 %;      
macro ACR$L_JOBID = 36,0,32,0 %;        
macro ACR$W_QUEUE = 40,0,16,0 %;        
macro ACR$W_NODEADDR = 42,0,16,0 %;     
macro ACR$W_REMOTEID = 44,0,16,0 %;     
macro ACR$W_FULLADDR = 46,0,16,0 %;     
macro ACR$W_FULLNAME = 48,0,16,0 %;     
macro ACR$L_POSIX_UID = 50,0,32,0 %;    
macro ACR$L_POSIX_GID = 54,0,32,0 %;    

literal ACR$S_ACRDEF3 = 56;
macro ACR$Q_LOGIN = 4,0,0,0 %;
literal ACR$S_LOGIN = 8;                
macro ACR$L_STATUS = 12,0,32,0 %;       
macro ACR$L_IMGCNT = 16,0,32,0 %;       
macro ACR$L_CPUTIME = 20,0,32,0 %;      
macro ACR$L_FAULTS = 24,0,32,0 %;       
macro ACR$L_FAULTIO = 28,0,32,0 %;      
macro ACR$L_WSPEAK = 32,0,32,0 %;       
macro ACR$L_PAGEFL = 36,0,32,0 %;       
macro ACR$L_DIOCNT = 40,0,32,0 %;       
macro ACR$L_BIOCNT = 44,0,32,0 %;       
macro ACR$L_VOLUMES = 48,0,32,0 %;      
macro ACR$L_VP_CPUTIME = 52,0,32,0 %;   

literal ACR$S_ACRDEF4 = 260;
macro ACR$T_IMAGENAME = 4,0,0,0 %;
literal ACR$S_IMAGENAME = 256;          

literal ACR$S_ACRDEF5 = 40;
macro ACR$L_PRINTSTS = 4,0,32,0 %;      
macro ACR$Q_QUETIME = 8,0,0,0 %;
literal ACR$S_QUETIME = 8;              
macro ACR$Q_BEGTIME = 16,0,0,0 %;
literal ACR$S_BEGTIME = 8;              
macro ACR$L_SYMCPUTIM = 24,0,32,0 %;    
macro ACR$L_PAGECNT = 28,0,32,0 %;      
macro ACR$L_QIOCNT = 32,0,32,0 %;       
macro ACR$L_GETCNT = 36,0,32,0 %;       

literal ACR$S_ACRDEF6 = 260;
macro ACR$T_FILENAME = 4,0,0,0 %;
literal ACR$S_FILENAME = 256;           

literal ACR$S_ACRDEF7 = 260;
macro ACR$T_USER_DATA = 4,0,0,0 %;
literal ACR$S_USER_DATA = 256;          
 
literal AFR$K_USER_LENGTH = 16;         
literal AFR$C_USER_LENGTH = 16;         
literal AFR$K_VMS_LENGTH = 24;          
literal AFR$C_VMS_LENGTH = 24;          
literal AFR$K_EXTENDED_LENGTH = 296;    
literal AFR$C_EXTENDED_LENGTH = 296;    
literal AFR$C_UNINITIALIZED = 0;
literal AFR$C_BUFFERED = 1;
literal AFR$C_EXCEPTION = 2;            
literal AFR$S_AFRDEF = 296;
macro AFR$Q_FAULT_PC = 0,0,0,0 %;
literal AFR$S_FAULT_PC = 8;             
macro AFR$R_PC_DATA_LONGWORDS = 0,0,0,0 %;
literal AFR$S_PC_DATA_LONGWORDS = 8;
macro AFR$L_FAULT_PC_L = 0,0,32,0 %;
macro AFR$L_FAULT_PC_H = 4,0,32,0 %;
macro AFR$Q_FAULT_VA = 8,0,0,0 %;
literal AFR$S_FAULT_VA = 8;             
macro AFR$R_VA_DATA_LONGWORDS = 8,0,0,0 %;
literal AFR$S_VA_DATA_LONGWORDS = 8;
macro AFR$L_FAULT_VA_L = 8,0,32,0 %;
macro AFR$L_FAULT_VA_H = 12,0,32,0 %;
macro AFR$Q_RESERVED = 16,0,0,0 %;
literal AFR$S_RESERVED = 8;             
macro AFR$R_RESERVED_LONGWORDS = 16,0,0,0 %;
literal AFR$S_RESERVED_LONGWORDS = 8;
macro AFR$L_RESERVED_L = 16,0,32,0 %;
macro AFR$L_RESERVED_H = 20,0,32,0 %;
macro AFR$T_IMAGE_NAME = 24,0,0,0 %;
literal AFR$S_IMAGE_NAME = 256;         
macro AFR$T_USER_NAME = 280,0,0,0 %;
literal AFR$S_USER_NAME = 16;           
literal AFR$M_ENABLED = %X'1';
literal AFR$M_TEMP_ENABLED = %X'2';
literal AFR$M_PERM_ENABLED = %X'4';
literal AFR$M_DISABLED = 0;
literal AFR$M_USER_INFO = %X'8';
literal AFR$S_AFREDEF = 1;
macro AFR$V_ENABLED = 0,0,1,0 %;        
macro AFR$V_TEMP_ENABLED = 0,1,1,0 %;   
macro AFR$V_PERM_ENABLED = 0,2,1,0 %;   
macro AFR$V_USER_INFO = 0,3,1,0 %;      
literal AME$M_KERNEL_MODE = %X'1';
literal AME$M_EXEC_MODE = %X'2';
literal AME$M_SUPER_MODE = %X'4';
literal AME$M_USER_MODE = %X'8';
literal AME$M_USER_VA = %X'10';
literal AME$M_SYSTEM_VA = %X'20';
literal AME$M_USER_PC = %X'40';
literal AME$M_SYSTEM_PC = %X'80';
literal AME$M_USER_VA_P0 = %X'100';
literal AME$M_USER_VA_P1 = %X'200';
literal AME$M_USER_VA_P2 = %X'400';
literal AME$C_SIZE = 4;                 
literal AME$K_SIZE = 4;                 
literal AME$S_AMEDEF = 2;
macro AME$V_KERNEL_MODE = 0,0,1,0 %;
macro AME$V_EXEC_MODE = 0,1,1,0 %;
macro AME$V_SUPER_MODE = 0,2,1,0 %;
macro AME$V_USER_MODE = 0,3,1,0 %;
macro AME$V_USER_VA = 0,4,1,0 %;
macro AME$V_SYSTEM_VA = 0,5,1,0 %;
macro AME$V_USER_PC = 0,6,1,0 %;
macro AME$V_SYSTEM_PC = 0,7,1,0 %;
macro AME$V_USER_VA_P0 = 0,8,1,0 %;
macro AME$V_USER_VA_P1 = 0,9,1,0 %;
macro AME$V_USER_VA_P2 = 0,10,1,0 %;

literal AFL$M_P0_VA = %X'1';
literal AFL$M_P1_VA = %X'2';
literal AFL$M_P2_VA = %X'4';
literal AFL$M_S0S1_VA = %X'8';
literal AFL$M_S2_VA = %X'10';
literal AFL$M_PROCESS_VA = %X'20';
literal AFL$M_SYSTEM_VA = %X'40';
literal AFL$S_AFLDEF = 4;               
macro AFL$L_VA_LOC = 0,0,32,0 %;
macro AFL$R_VA_LOC_BITDEFS = 0,0,8,0 %;
literal AFL$S_VA_LOC_BITDEFS = 1;
macro AFL$V_P0_VA = 0,0,1,0 %;          
macro AFL$V_P1_VA = 0,1,1,0 %;          
macro AFL$V_P2_VA = 0,2,1,0 %;          
macro AFL$V_S0S1_VA = 0,3,1,0 %;        
macro AFL$V_S2_VA = 0,4,1,0 %;          
macro AFL$V_PROCESS_VA = 0,5,1,0 %;     
macro AFL$V_SYSTEM_VA = 0,6,1,0 %;      
 

literal AGN$M_READONLY = %X'1';
literal AGN$M_WRITEONLY = %X'2';
literal AGN$M_CLONE = %X'4';
literal AGN$S_AGNDEF = 4;
macro AGN$V_READONLY = 0,0,1,0 %;       
macro AGN$V_WRITEONLY = 0,1,1,0 %;      
macro AGN$V_CLONE = 0,2,1,0 %;          
 
literal ALPHA$K_ID_BASE = 1025;
literal ALPHA$K_A7000_610 = 1025;       
literal ALPHA$K_A7000_620 = 1026;       
literal ALPHA$K_A7000_630 = 1027;       
literal ALPHA$K_A7000_640 = 1028;       
literal ALPHA$K_A10000_610 = 1029;      
literal ALPHA$K_A10000_620 = 1030;      
literal ALPHA$K_A10000_630 = 1031;      
literal ALPHA$K_A10000_640 = 1032;      
literal ALPHA$K_A3000_500W = 1033;      
literal ALPHA$K_A3000_500S = 1034;      
literal ALPHA$K_A3000_400W = 1035;      
literal ALPHA$K_A3000_400S = 1036;      
literal ALPHA$K_A4000_610 = 1037;       
literal ALPHA$K_A4000_620 = 1038;       
literal ALPHA$K_A4000_810 = 1039;
literal ALPHA$K_A4000_820 = 1040;
literal ALPHA$K_AADU = 1041;
literal ALPHA$K_A3000_300 = 1042;       
literal ALPHA$K_A3000_300L = 1043;      
literal ALPHA$K_A2000_300 = 1044;       
literal ALPHA$K_A2000_300S = 1045;      
literal ALPHA$K_A7000_650 = 1046;       
literal ALPHA$K_A7000_660 = 1047;       
literal ALPHA$K_A10000_650 = 1048;      
literal ALPHA$K_A10000_660 = 1049;      
literal ALPHA$K_A4000_630 = 1050;
literal ALPHA$K_A4000_640 = 1051;
literal ALPHA$K_A4000_650 = 1052;
literal ALPHA$K_A4000_660 = 1053;
literal ALPHA$K_A2000_200 = 1054;
literal ALPHA$K_A2000_200S = 1055;
literal ALPHA$K_A3000_500X = 1056;      
literal ALPHA$K_AS0202020001 = 1057;    
literal ALPHA$K_AS0202020002 = 1058;    
literal ALPHA$K_AS0902020001 = 1059;    
literal ALPHA$K_AS0902020002 = 1060;    
literal ALPHA$K_AS0902020003 = 1061;    
literal ALPHA$K_AS0902020004 = 1062;    
literal ALPHA$K_AS0402040001 = 1063;    
literal ALPHA$K_AS0402060001 = 1064;    
literal ALPHA$K_AS0602010001 = 1065;    
literal ALPHA$K_AS0702020001 = 1068;    
literal ALPHA$K_AS0702030001 = 1069;    
literal ALPHA$K_AS0406070001 = 1070;    
literal ALPHA$K_AS0406080001 = 1071;    
literal ALPHA$K_AS0706040001 = 1072;    
literal ALPHA$K_AS0706050001 = 1073;    
literal ALPHA$K_AS0306030001 = 1074;    
literal ALPHA$K_AS0306030002 = 1075;    
literal ALPHA$K_AS0306030003 = 1076;    
literal ALPHA$K_AS0306030004 = 1077;    
literal ALPHA$K_AS0306030005 = 1078;    
literal ALPHA$K_AS0306030006 = 1079;    
literal ALPHA$K_AS0D02010001 = 1086;    
literal ALPHA$K_AS0D02020001 = 1087;    
literal ALPHA$K_AS0D02030001 = 1088;    
literal ALPHA$K_AS0F05010001 = 1089;    
literal ALPHA$K_AS1102010001 = 1090;    
literal ALPHA$K_AS1106020001 = 1091;    
literal ALPHA$K_AS0C05000001 = 1093;    
literal ALPHA$K_AS0C05000002 = 1094;    
literal ALPHA$K_AS0C05000003 = 1095;    
literal ALPHA$K_AS0C05000004 = 1096;    
literal ALPHA$K_AS0C05000005 = 1097;    
literal ALPHA$K_AS0C05000006 = 1098;    
literal ALPHA$K_AS0C05010001 = 1099;    
literal ALPHA$K_AS0C05010002 = 1100;    
literal ALPHA$K_AS0C05010003 = 1101;    
literal ALPHA$K_AS0C05010004 = 1102;    
literal ALPHA$K_AS0C05010005 = 1103;    
literal ALPHA$K_AS0C05010006 = 1104;    
literal ALPHA$K_AS0C05010007 = 1105;    
literal ALPHA$K_AS0C05010008 = 1106;    
literal ALPHA$K_AS0C05010009 = 1107;    
literal ALPHA$K_AS0C0501000A = 1108;    
literal ALPHA$K_AS0C0501000B = 1109;    
literal ALPHA$K_AS0C0501000C = 1110;    
literal ALPHA$K_AS0906020001 = 1115;    
literal ALPHA$K_AS0906020002 = 1116;    
literal ALPHA$K_AS0906020003 = 1117;    
literal ALPHA$K_AS0906020004 = 1118;    
literal ALPHA$K_AS0905020001 = 1119;    
literal ALPHA$K_AS0905020002 = 1120;    
literal ALPHA$K_AS0905020003 = 1121;    
literal ALPHA$K_AS0905020004 = 1122;    
literal ALPHA$K_AS0902010001 = 1123;    
literal ALPHA$K_AS0902010002 = 1124;    
literal ALPHA$K_AS0902010003 = 1125;    
literal ALPHA$K_AS0902010004 = 1126;    
literal ALPHA$K_AS0906010001 = 1127;    
literal ALPHA$K_AS0906010002 = 1128;    
literal ALPHA$K_AS0906010003 = 1129;    
literal ALPHA$K_AS0906010004 = 1130;    
literal ALPHA$K_AS0905010001 = 1131;    
literal ALPHA$K_AS0905010002 = 1132;    
literal ALPHA$K_AS0905010003 = 1133;    
literal ALPHA$K_AS0905010004 = 1134;    
literal ALPHA$K_AS0902030001 = 1135;    
literal ALPHA$K_AS0902030002 = 1136;    
literal ALPHA$K_AS0902030003 = 1137;    
literal ALPHA$K_AS0902030004 = 1138;    
literal ALPHA$K_AS0906030001 = 1139;    
literal ALPHA$K_AS0906030002 = 1140;    
literal ALPHA$K_AS0906030003 = 1141;    
literal ALPHA$K_AS0906030004 = 1142;    
literal ALPHA$K_AS0905030001 = 1143;    
literal ALPHA$K_AS0905030002 = 1144;    
literal ALPHA$K_AS0905030003 = 1145;    
literal ALPHA$K_AS0905030004 = 1146;    
literal ALPHA$K_AS0D06040001 = 1151;    
literal ALPHA$K_AS0D06050001 = 1152;    
literal ALPHA$K_AS0D06060001 = 1153;    
literal ALPHA$K_AS0D06070001 = 1154;    
literal ALPHA$K_AS0D06080001 = 1155;    
literal ALPHA$K_AS0D02090001 = 1156;    
literal ALPHA$K_AS0D060A0001 = 1157;    
literal ALPHA$K_AS0D060B0001 = 1158;    
literal ALPHA$K_AS0D060C0001 = 1159;    
literal ALPHA$K_AS0D060D0001 = 1160;    
literal ALPHA$K_AS0F05020001 = 1161;    
literal ALPHA$K_AS1706010001 = 1167;    
literal ALPHA$K_AS0906010101 = 1171;    
literal ALPHA$K_AS0906010102 = 1172;    
literal ALPHA$K_AS0906010103 = 1173;    
literal ALPHA$K_AS0906010104 = 1174;    
literal ALPHA$K_AS0905010101 = 1175;    
literal ALPHA$K_AS0905010102 = 1176;    
literal ALPHA$K_AS0905010103 = 1177;    
literal ALPHA$K_AS0905010104 = 1178;    
literal ALPHA$K_AS0906020101 = 1179;    
literal ALPHA$K_AS0906020102 = 1180;    
literal ALPHA$K_AS0906020103 = 1181;    
literal ALPHA$K_AS0906020104 = 1182;    
literal ALPHA$K_AS0905020101 = 1183;    
literal ALPHA$K_AS0905020102 = 1184;    
literal ALPHA$K_AS0905020103 = 1185;    
literal ALPHA$K_AS0905020104 = 1186;    
literal ALPHA$K_AS0906030101 = 1187;    
literal ALPHA$K_AS0906030102 = 1188;    
literal ALPHA$K_AS0906030103 = 1189;    
literal ALPHA$K_AS0906030104 = 1190;    
literal ALPHA$K_AS0905030101 = 1191;    
literal ALPHA$K_AS0905030102 = 1192;    
literal ALPHA$K_AS0905030103 = 1193;    
literal ALPHA$K_AS0905030104 = 1194;    
literal ALPHA$K_AS1806010001 = 1195;    
literal ALPHA$K_AS1806010002 = 1196;    
literal ALPHA$K_AS1806010003 = 1197;    
literal ALPHA$K_AS1806010004 = 1198;    
literal ALPHA$K_AS1806010101 = 1199;    
literal ALPHA$K_AS1806010102 = 1200;    
literal ALPHA$K_AS1806010103 = 1201;    
literal ALPHA$K_AS1806010104 = 1202;    
literal ALPHA$K_AS1805010001 = 1203;    
literal ALPHA$K_AS1805010002 = 1204;    
literal ALPHA$K_AS1805010003 = 1205;    
literal ALPHA$K_AS1805010004 = 1206;    
literal ALPHA$K_AS1805010101 = 1207;    
literal ALPHA$K_AS1805010102 = 1208;    
literal ALPHA$K_AS1805010103 = 1209;    
literal ALPHA$K_AS1805010104 = 1210;    
literal ALPHA$K_AS1806020001 = 1211;    
literal ALPHA$K_AS1806020002 = 1212;    
literal ALPHA$K_AS1806020003 = 1213;    
literal ALPHA$K_AS1806020004 = 1214;    
literal ALPHA$K_AS1806020101 = 1215;    
literal ALPHA$K_AS1806020102 = 1216;    
literal ALPHA$K_AS1806020103 = 1217;    
literal ALPHA$K_AS1806020104 = 1218;    
literal ALPHA$K_AS1805020001 = 1219;    
literal ALPHA$K_AS1805020002 = 1220;    
literal ALPHA$K_AS1805020003 = 1221;    
literal ALPHA$K_AS1805020004 = 1222;    
literal ALPHA$K_AS1805020101 = 1223;    
literal ALPHA$K_AS1805020102 = 1224;    
literal ALPHA$K_AS1805020103 = 1225;    
literal ALPHA$K_AS1805020104 = 1226;    
literal ALPHA$K_AS1806030001 = 1227;    
literal ALPHA$K_AS1806030002 = 1228;    
literal ALPHA$K_AS1806030003 = 1229;    
literal ALPHA$K_AS1806030004 = 1230;    
literal ALPHA$K_AS1806030101 = 1231;    
literal ALPHA$K_AS1806030102 = 1232;    
literal ALPHA$K_AS1806030103 = 1233;    
literal ALPHA$K_AS1806030104 = 1234;    
literal ALPHA$K_AS1805030001 = 1235;    
literal ALPHA$K_AS1805030002 = 1236;    
literal ALPHA$K_AS1805030003 = 1237;    
literal ALPHA$K_AS1805030004 = 1238;    
literal ALPHA$K_AS1805030101 = 1239;    
literal ALPHA$K_AS1805030102 = 1240;    
literal ALPHA$K_AS1805030103 = 1241;    
literal ALPHA$K_AS1805030104 = 1242;    
literal ALPHA$K_AS1A05010001 = 1245;    
literal ALPHA$K_AS1A05020001 = 1246;    
literal ALPHA$K_AS0D06200001 = 1250;    
literal ALPHA$K_AS0D06210001 = 1251;    
literal ALPHA$K_AS0D06220001 = 1252;    
literal ALPHA$K_AS0D06230001 = 1253;    
literal ALPHA$K_AS0D06240001 = 1254;    
literal ALPHA$K_AS0D06250001 = 1255;    
literal ALPHA$K_AS0D06260001 = 1256;    
literal ALPHA$K_AS0D06270001 = 1257;    
literal ALPHA$K_AS0D06280001 = 1258;    
literal ALPHA$K_AS0D06290001 = 1259;    
literal ALPHA$K_AS0D062A0001 = 1260;    
literal ALPHA$K_AS0D062B0001 = 1261;    
literal ALPHA$K_AS0D062C0001 = 1262;    
literal ALPHA$K_AS0D062D0001 = 1263;    
literal ALPHA$K_AS1106030001 = 1264;    
literal ALPHA$K_AS1B06010001 = 1265;    
literal ALPHA$K_AS0F05030001 = 1266;    
literal ALPHA$K_AS0F05040001 = 1267;    
literal ALPHA$K_AS0F05050001 = 1268;    
literal ALPHA$K_AS1105040001 = 1269;    
literal ALPHA$K_AS1B05020001 = 1270;    
literal ALPHA$K_AS0F05060001 = 1275;    
literal ALPHA$K_AS0F05070001 = 1276;    
literal ALPHA$K_AS0F05080001 = 1277;    
literal ALPHA$K_AS0F05090001 = 1278;    
literal ALPHA$K_AS0F050A0001 = 1279;    
literal ALPHA$K_AS0F050B0001 = 1280;    
literal ALPHA$K_AS0F070C0001 = 1281;    
literal ALPHA$K_AS0F070D0001 = 1282;    
literal ALPHA$K_AS0F070E0001 = 1283;    
literal ALPHA$K_AS0F070F0001 = 1284;    
literal ALPHA$K_AS0F07100001 = 1285;    
literal ALPHA$K_AS0F07110001 = 1286;    
literal ALPHA$K_AS0C05020001 = 1292;    
literal ALPHA$K_AS0C05020002 = 1293;    
literal ALPHA$K_AS0C05020003 = 1294;    
literal ALPHA$K_AS0C05020004 = 1295;    
literal ALPHA$K_AS0C05020005 = 1296;    
literal ALPHA$K_AS0C05020006 = 1297;    
literal ALPHA$K_AS0C05030001 = 1298;    
literal ALPHA$K_AS0C05030002 = 1299;    
literal ALPHA$K_AS0C05030003 = 1300;    
literal ALPHA$K_AS0C05030004 = 1301;    
literal ALPHA$K_AS0C05030005 = 1302;    
literal ALPHA$K_AS0C05030006 = 1303;    
literal ALPHA$K_AS0C05030007 = 1304;    
literal ALPHA$K_AS0C05030008 = 1305;    
literal ALPHA$K_AS0C05030009 = 1306;    
literal ALPHA$K_AS0C0503000A = 1307;    
literal ALPHA$K_AS0C0503000B = 1308;    
literal ALPHA$K_AS0C0503000C = 1309;    
literal ALPHA$K_AS1B07040001 = 1310;    
literal ALPHA$K_AS1B07030001 = 1311;    
literal ALPHA$K_AS1107050001 = 1312;    
literal ALPHA$K_AS1605020001 = 1313;    
literal ALPHA$K_AS1605020002 = 1314;    
literal ALPHA$K_AS1605020003 = 1315;    
literal ALPHA$K_AS1605020004 = 1316;    
literal ALPHA$K_AS1605010001 = 1317;    
literal ALPHA$K_AS1605010002 = 1318;    
literal ALPHA$K_AS1605010003 = 1319;    
literal ALPHA$K_AS1605010004 = 1320;    
literal ALPHA$K_AS1605020101 = 1321;    
literal ALPHA$K_AS1605020102 = 1322;    
literal ALPHA$K_AS1605020103 = 1323;    
literal ALPHA$K_AS1605020104 = 1324;    
literal ALPHA$K_AS1605010101 = 1325;    
literal ALPHA$K_AS1605010102 = 1326;    
literal ALPHA$K_AS1605010103 = 1327;    
literal ALPHA$K_AS1605010104 = 1328;    
literal ALPHA$K_AS1607020001 = 1329;    
literal ALPHA$K_AS1607020002 = 1330;    
literal ALPHA$K_AS1607020003 = 1331;    
literal ALPHA$K_AS1607020004 = 1332;    
literal ALPHA$K_AS1607010001 = 1333;    
literal ALPHA$K_AS1607010002 = 1334;    
literal ALPHA$K_AS1607010003 = 1335;    
literal ALPHA$K_AS1607010004 = 1336;    
literal ALPHA$K_AS1605020201 = 1337;    
literal ALPHA$K_AS1605020202 = 1338;    
literal ALPHA$K_AS1605020203 = 1339;    
literal ALPHA$K_AS1605020204 = 1340;    
literal ALPHA$K_AS1605010201 = 1341;    
literal ALPHA$K_AS1605010202 = 1342;    
literal ALPHA$K_AS1605010203 = 1343;    
literal ALPHA$K_AS1605010204 = 1344;    
literal ALPHA$K_AS1605020301 = 1345;    
literal ALPHA$K_AS1605020302 = 1346;    
literal ALPHA$K_AS1605020303 = 1347;    
literal ALPHA$K_AS1605020304 = 1348;    
literal ALPHA$K_AS1605010301 = 1349;    
literal ALPHA$K_AS1605010302 = 1350;    
literal ALPHA$K_AS1605010303 = 1351;    
literal ALPHA$K_AS1605010304 = 1352;    
literal ALPHA$K_AS1607020101 = 1353;    
literal ALPHA$K_AS1607020102 = 1354;    
literal ALPHA$K_AS1607020103 = 1355;    
literal ALPHA$K_AS1607020104 = 1356;    
literal ALPHA$K_AS1607010101 = 1357;    
literal ALPHA$K_AS1607010102 = 1358;    
literal ALPHA$K_AS1607010103 = 1359;    
literal ALPHA$K_AS1607010104 = 1360;    
literal ALPHA$K_AS1605020401 = 1361;    
literal ALPHA$K_AS1605020402 = 1362;    
literal ALPHA$K_AS1605020403 = 1363;    
literal ALPHA$K_AS1605020404 = 1364;    
literal ALPHA$K_AS1605010401 = 1365;    
literal ALPHA$K_AS1605010402 = 1366;    
literal ALPHA$K_AS1605010403 = 1367;    
literal ALPHA$K_AS1605010404 = 1368;    
literal ALPHA$K_AS1605020501 = 1369;    
literal ALPHA$K_AS1605020502 = 1370;    
literal ALPHA$K_AS1605020503 = 1371;    
literal ALPHA$K_AS1605020504 = 1372;    
literal ALPHA$K_AS1605010501 = 1373;    
literal ALPHA$K_AS1605010502 = 1374;    
literal ALPHA$K_AS1605010503 = 1375;    
literal ALPHA$K_AS1605010504 = 1376;    
literal ALPHA$K_AS1607020201 = 1377;    
literal ALPHA$K_AS1607020202 = 1378;    
literal ALPHA$K_AS1607020203 = 1379;    
literal ALPHA$K_AS1607020204 = 1380;    
literal ALPHA$K_AS1607010201 = 1381;    
literal ALPHA$K_AS1607010202 = 1382;    
literal ALPHA$K_AS1607010203 = 1383;    
literal ALPHA$K_AS1607010204 = 1384;    
literal ALPHA$K_AS1605020601 = 1385;    
literal ALPHA$K_AS1605020602 = 1386;    
literal ALPHA$K_AS1605020603 = 1387;    
literal ALPHA$K_AS1605020604 = 1388;    
literal ALPHA$K_AS1605010601 = 1389;    
literal ALPHA$K_AS1605010602 = 1390;    
literal ALPHA$K_AS1605010603 = 1391;    
literal ALPHA$K_AS1605010604 = 1392;    
literal ALPHA$K_AS1605020701 = 1393;    
literal ALPHA$K_AS1605020702 = 1394;    
literal ALPHA$K_AS1605020703 = 1395;    
literal ALPHA$K_AS1605020704 = 1396;    
literal ALPHA$K_AS1605010701 = 1397;    
literal ALPHA$K_AS1605010702 = 1398;    
literal ALPHA$K_AS1605010703 = 1399;    
literal ALPHA$K_AS1605010704 = 1400;    
literal ALPHA$K_AS1607020301 = 1401;    
literal ALPHA$K_AS1607020302 = 1402;    
literal ALPHA$K_AS1607020303 = 1403;    
literal ALPHA$K_AS1607020304 = 1404;    
literal ALPHA$K_AS1607010301 = 1405;    
literal ALPHA$K_AS1607010302 = 1406;    
literal ALPHA$K_AS1607010303 = 1407;    
literal ALPHA$K_AS1607010304 = 1408;    
literal ALPHA$K_AS1605040001 = 1409;    
literal ALPHA$K_AS1605040002 = 1410;    
literal ALPHA$K_AS1605030001 = 1411;    
literal ALPHA$K_AS1605030002 = 1412;    
literal ALPHA$K_AS1605040101 = 1413;    
literal ALPHA$K_AS1605040102 = 1414;    
literal ALPHA$K_AS1605030101 = 1415;    
literal ALPHA$K_AS1605030102 = 1416;    
literal ALPHA$K_AS1607040001 = 1417;    
literal ALPHA$K_AS1607040002 = 1418;    
literal ALPHA$K_AS1607030001 = 1419;    
literal ALPHA$K_AS1607030002 = 1420;    
literal ALPHA$K_AS1605040201 = 1421;    
literal ALPHA$K_AS1605040202 = 1422;    
literal ALPHA$K_AS1605030201 = 1423;    
literal ALPHA$K_AS1605030202 = 1424;    
literal ALPHA$K_AS1605040301 = 1425;    
literal ALPHA$K_AS1605040302 = 1426;    
literal ALPHA$K_AS1605030301 = 1427;    
literal ALPHA$K_AS1605030302 = 1428;    
literal ALPHA$K_AS1607040101 = 1429;    
literal ALPHA$K_AS1607040102 = 1430;    
literal ALPHA$K_AS1607030101 = 1431;    
literal ALPHA$K_AS1607030102 = 1432;    
literal ALPHA$K_AS1605040401 = 1433;    
literal ALPHA$K_AS1605040402 = 1434;    
literal ALPHA$K_AS1605030401 = 1435;    
literal ALPHA$K_AS1605030402 = 1436;    
literal ALPHA$K_AS1605040501 = 1437;    
literal ALPHA$K_AS1605040502 = 1438;    
literal ALPHA$K_AS1605030501 = 1439;    
literal ALPHA$K_AS1605030502 = 1440;    
literal ALPHA$K_AS1607040201 = 1441;    
literal ALPHA$K_AS1607040202 = 1442;    
literal ALPHA$K_AS1607030201 = 1443;    
literal ALPHA$K_AS1607030202 = 1444;    
literal ALPHA$K_AS1605040601 = 1445;    
literal ALPHA$K_AS1605040602 = 1446;    
literal ALPHA$K_AS1605030601 = 1447;    
literal ALPHA$K_AS1605030602 = 1448;    
literal ALPHA$K_AS1605040701 = 1449;    
literal ALPHA$K_AS1605040702 = 1450;    
literal ALPHA$K_AS1605030701 = 1451;    
literal ALPHA$K_AS1605030702 = 1452;    
literal ALPHA$K_AS1607040301 = 1453;    
literal ALPHA$K_AS1607040302 = 1454;    
literal ALPHA$K_AS1607030301 = 1455;    
literal ALPHA$K_AS1607030302 = 1456;    
literal ALPHA$K_AS1605060001 = 1457;    
literal ALPHA$K_AS1605060002 = 1458;    
literal ALPHA$K_AS1605050001 = 1459;    
literal ALPHA$K_AS1605050002 = 1460;    
literal ALPHA$K_AS1605060101 = 1461;    
literal ALPHA$K_AS1605060102 = 1462;    
literal ALPHA$K_AS1605050101 = 1463;    
literal ALPHA$K_AS1605050102 = 1464;    
literal ALPHA$K_AS1607060001 = 1465;    
literal ALPHA$K_AS1607060002 = 1466;    
literal ALPHA$K_AS1607050001 = 1467;    
literal ALPHA$K_AS1607050002 = 1468;    
literal ALPHA$K_AS1605060201 = 1469;    
literal ALPHA$K_AS1605060202 = 1470;    
literal ALPHA$K_AS1605050201 = 1471;    
literal ALPHA$K_AS1605050202 = 1472;    
literal ALPHA$K_AS1605060301 = 1473;    
literal ALPHA$K_AS1605060302 = 1474;    
literal ALPHA$K_AS1605050301 = 1475;    
literal ALPHA$K_AS1605050302 = 1476;    
literal ALPHA$K_AS1607060101 = 1477;    
literal ALPHA$K_AS1607060102 = 1478;    
literal ALPHA$K_AS1607050101 = 1479;    
literal ALPHA$K_AS1607050102 = 1480;    
literal ALPHA$K_AS1605060401 = 1481;    
literal ALPHA$K_AS1605060402 = 1482;    
literal ALPHA$K_AS1605050401 = 1483;    
literal ALPHA$K_AS1605050402 = 1484;    
literal ALPHA$K_AS1605060501 = 1485;    
literal ALPHA$K_AS1605060502 = 1486;    
literal ALPHA$K_AS1605050501 = 1487;    
literal ALPHA$K_AS1605050502 = 1488;    
literal ALPHA$K_AS1607060201 = 1489;    
literal ALPHA$K_AS1607060202 = 1490;    
literal ALPHA$K_AS1607050201 = 1491;    
literal ALPHA$K_AS1607050202 = 1492;    
literal ALPHA$K_AS1605060601 = 1493;    
literal ALPHA$K_AS1605060602 = 1494;    
literal ALPHA$K_AS1605050601 = 1495;    
literal ALPHA$K_AS1605050602 = 1496;    
literal ALPHA$K_AS1605060701 = 1497;    
literal ALPHA$K_AS1605060702 = 1498;    
literal ALPHA$K_AS1605050701 = 1499;    
literal ALPHA$K_AS1605050702 = 1500;    
literal ALPHA$K_AS1607060301 = 1501;    
literal ALPHA$K_AS1607060302 = 1502;    
literal ALPHA$K_AS1607050301 = 1503;    
literal ALPHA$K_AS1607050302 = 1504;    
literal ALPHA$K_AS0907010001 = 1505;    
literal ALPHA$K_AS0907010002 = 1506;    
literal ALPHA$K_AS0907010003 = 1507;    
literal ALPHA$K_AS0907010004 = 1508;    
literal ALPHA$K_AS0907020001 = 1509;    
literal ALPHA$K_AS0907020002 = 1510;    
literal ALPHA$K_AS0907020003 = 1511;    
literal ALPHA$K_AS0907020004 = 1512;    
literal ALPHA$K_AS0907030001 = 1513;    
literal ALPHA$K_AS0907030002 = 1514;    
literal ALPHA$K_AS0907030003 = 1515;    
literal ALPHA$K_AS0907030004 = 1516;    
literal ALPHA$K_AS0907010101 = 1517;    
literal ALPHA$K_AS0907010102 = 1518;    
literal ALPHA$K_AS0907010103 = 1519;    
literal ALPHA$K_AS0907010104 = 1520;    
literal ALPHA$K_AS0907020101 = 1521;    
literal ALPHA$K_AS0907020102 = 1522;    
literal ALPHA$K_AS0907020103 = 1523;    
literal ALPHA$K_AS0907020104 = 1524;    
literal ALPHA$K_AS0907030101 = 1525;    
literal ALPHA$K_AS0907030102 = 1526;    
literal ALPHA$K_AS0907030103 = 1527;    
literal ALPHA$K_AS0907030104 = 1528;    
literal ALPHA$K_AS1807010001 = 1529;    
literal ALPHA$K_AS1807010002 = 1530;    
literal ALPHA$K_AS1807010003 = 1531;    
literal ALPHA$K_AS1807010004 = 1532;    
literal ALPHA$K_AS1807020001 = 1533;    
literal ALPHA$K_AS1807020002 = 1534;    
literal ALPHA$K_AS1807020003 = 1535;    
literal ALPHA$K_AS1807020004 = 1536;    
literal ALPHA$K_AS1807030001 = 1537;    
literal ALPHA$K_AS1807030002 = 1538;    
literal ALPHA$K_AS1807030003 = 1539;    
literal ALPHA$K_AS1807030004 = 1540;    
literal ALPHA$K_AS1807010101 = 1541;    
literal ALPHA$K_AS1807010102 = 1542;    
literal ALPHA$K_AS1807010103 = 1543;    
literal ALPHA$K_AS1807010104 = 1544;    
literal ALPHA$K_AS1807020101 = 1545;    
literal ALPHA$K_AS1807020102 = 1546;    
literal ALPHA$K_AS1807020103 = 1547;    
literal ALPHA$K_AS1807020104 = 1548;    
literal ALPHA$K_AS1807030101 = 1549;    
literal ALPHA$K_AS1807030102 = 1550;    
literal ALPHA$K_AS1807030103 = 1551;    
literal ALPHA$K_AS1807030104 = 1552;    
literal ALPHA$K_AS1B07030101 = 1558;    
literal ALPHA$K_AS1107050101 = 1559;    
literal ALPHA$K_AS0C07040001 = 1560;    
literal ALPHA$K_AS0C07040002 = 1561;    
literal ALPHA$K_AS0C07040003 = 1562;    
literal ALPHA$K_AS0C07040004 = 1563;    
literal ALPHA$K_AS0C07040005 = 1564;    
literal ALPHA$K_AS0C07040006 = 1565;    
literal ALPHA$K_AS0C07050001 = 1566;    
literal ALPHA$K_AS0C07050002 = 1567;    
literal ALPHA$K_AS0C07050003 = 1568;    
literal ALPHA$K_AS0C07050004 = 1569;    
literal ALPHA$K_AS0C07050005 = 1570;    
literal ALPHA$K_AS0C07050006 = 1571;    
literal ALPHA$K_AS0C07050007 = 1572;    
literal ALPHA$K_AS0C07050008 = 1573;    
literal ALPHA$K_AS0C07050009 = 1574;    
literal ALPHA$K_AS0C0705000A = 1575;    
literal ALPHA$K_AS0C0705000B = 1576;    
literal ALPHA$K_AS0C0705000C = 1577;    
literal ALPHA$K_MAX_MODEL = 1056;
 

literal ARM$M_READ = %X'1';
literal ARM$M_WRITE = %X'2';
literal ARM$M_EXECUTE = %X'4';
literal ARM$M_DELETE = %X'8';
literal ARM$M_CONTROL = %X'10';
literal ARM$M_CREATE = %X'4';
literal ARM$M_LOCK = %X'4';
literal ARM$M_PHYSICAL = %X'4';
literal ARM$M_LOGICAL = %X'8';
literal ARM$M_ASSOCIATE = %X'1';
literal ARM$M_SUBMIT = %X'2';
literal ARM$M_MANAGE = %X'4';
literal ARM$S_ARMDEF = 4;
macro ARM$V_READ = 0,0,1,0 %;           
macro ARM$V_WRITE = 0,1,1,0 %;          
macro ARM$V_EXECUTE = 0,2,1,0 %;        
macro ARM$V_DELETE = 0,3,1,0 %;         
macro ARM$V_CONTROL = 0,4,1,0 %;        
macro ARM$V_FILL = 0,5,27,0 %;
literal ARM$S_FILL = 27;                
macro ARM$V_CREATE = 0,2,1,0 %;         
macro ARM$V_LOCK = 0,2,1,0 %;           
macro ARM$V_PHYSICAL = 0,2,1,0 %;       
macro ARM$V_LOGICAL = 0,3,1,0 %;        
macro ARM$V_ASSOCIATE = 0,0,1,0 %;      
macro ARM$V_SUBMIT = 0,1,1,0 %;         
macro ARM$V_MANAGE = 0,2,1,0 %;         
 

literal ATR$C_UCHAR = 3;                
literal ATR$C_RECATTR = 4;              
literal ATR$C_FILNAM = 5;               
literal ATR$C_FILTYP = 6;               
literal ATR$C_FILVER = 7;               
literal ATR$C_EXPDAT = 8;               
literal ATR$C_STATBLK = 9;              
literal ATR$C_HEADER = 10;              
literal ATR$C_BLOCKSIZE = 11;           
literal ATR$C_USERLABEL = 12;           
literal ATR$C_ASCDATES = 13;            
literal ATR$C_ALCONTROL = 14;           
literal ATR$C_ENDLBLAST = 15;           
literal ATR$C_ASCNAME = 16;             
literal ATR$C_CREDATE = 17;             
literal ATR$C_REVDATE = 18;             
literal ATR$C_EXPDATE = 19;             
literal ATR$C_BAKDATE = 20;             
literal ATR$C_UIC = 21;                 
literal ATR$C_FPRO = 22;                
literal ATR$C_RPRO = 23;                
literal ATR$C_ACLEVEL = 24;             
literal ATR$C_SEMASK = 25;              
literal ATR$C_UIC_RO = 26;              
literal ATR$C_DIRSEQ = 27;              
literal ATR$C_BACKLINK = 28;            
literal ATR$C_JOURNAL = 29;             
literal ATR$C_HDR1_ACC = 30;            
literal ATR$C_ADDACLENT = 31;           
literal ATR$C_DELACLENT = 32;           
literal ATR$C_MODACLENT = 33;           
literal ATR$C_FNDACLENT = 34;           
literal ATR$C_FNDACLTYP = 35;           
literal ATR$C_DELETEACL = 36;           
literal ATR$C_READACL = 37;             
literal ATR$C_ACLLENGTH = 38;           
literal ATR$C_READACE = 39;             
literal ATR$C_RESERVED = 40;            
literal ATR$C_HIGHWATER = 41;           
literal ATR$C_DUMMY_0 = 42;             
literal ATR$C_PRIVS_USED = 43;          
literal ATR$C_MATCHING_ACE = 44;        
literal ATR$C_ACCESS_MODE = 45;         
literal ATR$C_FILE_SPEC = 46;           
literal ATR$C_CLASS_MASK = 47;          
literal ATR$C_BUFFER_OFFSET = 48;       
literal ATR$C_RU_ACTIVE = 49;           
literal ATR$C_GRANT_ACE = 50;           
literal ATR$C_NEXT_ACE = 51;            
literal ATR$C_DELETE_ALL = 52;          
literal ATR$C_BACKUP_DONE = 53;         
literal ATR$C_EFFDATE = 54;             
literal ATR$C_RCDDATE = 55;             
literal ATR$C_VD = 56;                  
literal ATR$C_PVD = 57;                 
literal ATR$C_SVD = 58;                 
literal ATR$C_VPD = 59;                 
literal ATR$C_VDST = 60;                
literal ATR$C_BOOT = 61;                
literal ATR$C_PTR = 62;                 
literal ATR$C_DIR = 63;                 
literal ATR$C_XAR = 64;                 
literal ATR$C_VOLUME_ID = 65;           
literal ATR$C_VOLUME_FLAGS = 66;        
literal ATR$C_ESCAPE_SEQUENCES = 67;    
literal ATR$C_VOLUME_SET_ID = 68;       
literal ATR$C_COPYRIGHT_FID = 69;       
literal ATR$C_ABSTRACT_FID = 70;        
literal ATR$C_BIBLIOGRAPHIC_FID = 71;   
literal ATR$C_CACHE_SEQ = 72;           
literal ATR$C_FILE_SYSTEM_INFO = 73;    
literal ATR$C_FILE_ATTR_CACHING_POLICY = 74; 
literal ATR$C_FILE_DATA_CACHING_POLICY = 75; 
literal ATR$C_CACHING_OPTIONS = 76;     
literal ATR$C_POSIX_DATA = 77;          
literal ATR$C_ACCDATE = 78;             
literal ATR$C_ATTDATE = 79;             
literal ATR$C_LENGTH_HINT = 80;         
literal ATR$C_EX_RECATTR = 81;          
literal ATR$C_EXTFLAGS = 82;            
literal ATR$C_MODDATE = 83;             
literal ATR$C_LINKCOUNT = 84;           

literal ATR$C_MAX_PLUS1 = 85;           
literal ATR$C_MAX_CODE = 84;
literal ATR$C_FNDACETYP = 35;
literal ATR$C_CACHE_POLICY_WRITETHRU = 1;
literal ATR$C_CACHE_POLICY_WRITEBACK = 2;
literal ATR$C_CACHE_POLICY_DEFAULT = 3;
literal ATR$S_UCHAR = 4;                
literal ATR$S_RECATTR = 32;             
literal ATR$S_FILNAM = 6;               
literal ATR$S_FILTYP = 2;               
literal ATR$S_FILVER = 2;               
literal ATR$S_EXPDAT = 7;               
literal ATR$S_STATBLK = 32;             
literal ATR$S_HEADER = 512;             
literal ATR$S_BLOCKSIZE = 2;            
literal ATR$S_USERLABEL = 80;           
literal ATR$S_ASCDATES = 35;            
literal ATR$S_ALCONTROL = 14;           
literal ATR$S_ENDLBLAST = 4;            
literal ATR$S_ASCNAME = 252;            
literal ATR$S_CREDATE = 8;              
literal ATR$S_REVDATE = 8;              
literal ATR$S_EXPDATE = 8;              
literal ATR$S_BAKDATE = 8;              
literal ATR$S_UIC = 4;                  
literal ATR$S_FPRO = 2;                 
literal ATR$S_RPRO = 2;                 
literal ATR$S_ACLEVEL = 1;              
literal ATR$S_SEMASK = 8;               
literal ATR$S_UIC_RO = 4;               
literal ATR$S_DIRSEQ = 2;               
literal ATR$S_BACKLINK = 6;             
literal ATR$S_JOURNAL = 1;              
literal ATR$S_HDR1_ACC = 1;             
literal ATR$S_ADDACLENT = 255;          
literal ATR$S_DELACLENT = 255;          
literal ATR$S_MODACLENT = 255;          
literal ATR$S_FNDACLENT = 255;          
literal ATR$S_FNDACLTYP = 255;          
literal ATR$S_FNDACETYP = 255;          
literal ATR$S_DELETEACL = 255;          
literal ATR$S_READACL = 512;            
literal ATR$S_ACLLENGTH = 4;            
literal ATR$S_READACE = 255;            
literal ATR$S_RESERVED = 380;           
literal ATR$S_HIGHWATER = 4;            
literal ATR$S_DUMMY_0 = 4;              
literal ATR$S_PRIVS_USED = 4;           
literal ATR$S_MATCHING_ACE = 255;       
literal ATR$S_ACCESS_MODE = 1;          
literal ATR$S_FILE_SPEC = 4098;         
literal ATR$S_CLASS_MASK = 20;          
literal ATR$S_BUFFER_OFFSET = 2;        
literal ATR$S_RU_ACTIVE = 1;            
literal ATR$S_GRANT_ACE = 255;          
literal ATR$S_NEXT_ACE = 4;             
literal ATR$S_DELETE_ALL = 255;         
literal ATR$S_BACKUP_DONE = 1;          
literal ATR$S_EFFDATE = 8;              
literal ATR$S_RCDDATE = 8;              
literal ATR$S_VD = 7;                   
literal ATR$S_PVD = 1395;               
literal ATR$S_SVD = 1395;               
literal ATR$S_VPD = 88;                 
literal ATR$S_VDST = 7;                 
literal ATR$S_BOOT = 71;                
literal ATR$S_PTR = 45;                 
literal ATR$S_DIR = 512;                
literal ATR$S_XAR = 512;                
literal ATR$S_VOLUME_ID = 32;           
literal ATR$S_VOLUME_FLAGS = 1;         
literal ATR$S_ESCAPE_SEQUENCES = 32;    
literal ATR$S_VOLUME_SET_ID = 128;      
literal ATR$S_COPYRIGHT_FID = 37;       
literal ATR$S_ABSTRACT_FID = 37;        
literal ATR$S_BIBLIOGRAPHIC_FID = 37;   
literal ATR$S_CACHE_SEQ = 8;            
literal ATR$S_FILE_SYSTEM_INFO = 2;     
literal ATR$S_FILE_ATTR_CACHING_POLICY = 1; 
literal ATR$S_FILE_DATA_CACHING_POLICY = 1; 
literal ATR$S_POSIX_DATA = 64;          
literal ATR$S_CACHING_OPTIONS = 4;      
literal ATR$S_ACCDATE = 8;              
literal ATR$S_ATTDATE = 8;              
literal ATR$S_LENGTH_HINT = 16;         
literal ATR$S_EX_RECATTR = 8;           
literal ATR$S_EXTFLAGS = 2;             
literal ATR$S_LINKCOUNT = 2;            
literal ATR$S_MODDATE = 8;              
literal ATR$S_ATRDEF = 8;
macro ATR$W_SIZE = 0,0,16,0 %;          
macro ATR$W_TYPE = 2,0,16,0 %;          
macro ATR$L_ADDR = 4,0,32,0 %;          

literal ATR$M_FILE_ATTRIBUTES = %X'F';
literal ATR$M_FILE_CONTENTS = %X'F0';
literal ATR$C_DEFAULT = 0;
literal ATR$C_WRITETHROUGH = 1;
literal ATR$C_WRITEBEHIND = 2;
literal ATR$C_NOCACHING = 3;
literal ATR$M_FLUSH_ON_CLOSE = %X'F00';
literal ATR$C_FLUSH = 1;
literal ATR$C_NOFLUSH = 2;
literal ATR$M_CACHING_OPTIONS_MBZ = %X'FFFFF000';
literal ATR$S_ATR_CACHING_OPTIONS_FLAGS = 4;
macro ATR$V_FILE_ATTRIBUTES = 0,0,4,0 %;
literal ATR$S_FILE_ATTRIBUTES = 4;
macro ATR$V_FILE_CONTENTS = 0,4,4,0 %;
literal ATR$S_FILE_CONTENTS = 4;
macro ATR$V_FLUSH_ON_CLOSE = 0,8,4,0 %;
literal ATR$S_FLUSH_ON_CLOSE = 4;
macro ATR$V_CACHING_OPTIONS_MBZ = 0,12,20,0 %;
literal ATR$S_CACHING_OPTIONS_MBZ = 20;

literal ATR$C_ODS1 = 1;
literal ATR$C_ODS2 = 2;
literal ATR$C_ODS64 = 64;
literal ATR$S_ATR_FILESYSTEM_INFO_FIELDS = 2;
macro ATR$B_STRUCVER = 0,0,8,0 %;
macro ATR$B_STRUCLEV = 1,0,8,0 %;
 

literal BRK$C_DEVICE = 1;               
literal BRK$C_USERNAME = 2;             
literal BRK$C_ALLUSERS = 3;             
literal BRK$C_ALLTERMS = 4;             
literal BRK$C_MAXSENDTYPE = 4;

literal BRK$C_GENERAL = 0;              
literal BRK$C_PHONE = 1;                
literal BRK$C_MAIL = 2;                 
literal BRK$C_QUEUE = 3;                
literal BRK$C_SHUTDOWN = 4;             
literal BRK$C_URGENT = 5;               
literal BRK$C_DCL = 6;                  
literal BRK$C_OPCOM = 7;                
literal BRK$C_USER1 = 32;               
literal BRK$C_USER2 = 33;               
literal BRK$C_USER3 = 34;               
literal BRK$C_USER4 = 35;               
literal BRK$C_USER5 = 36;               
literal BRK$C_USER6 = 37;               
literal BRK$C_USER7 = 38;               
literal BRK$C_USER8 = 39;               
literal BRK$C_USER9 = 40;               
literal BRK$C_USER10 = 41;              
literal BRK$C_USER11 = 42;              
literal BRK$C_USER12 = 43;              
literal BRK$C_USER13 = 44;              
literal BRK$C_USER14 = 45;              
literal BRK$C_USER15 = 46;              
literal BRK$C_USER16 = 47;              
literal BRK$M_SCREEN = %X'100';
literal BRK$M_BOTTOM = %X'200';
literal BRK$M_NOREFRESH = %X'400';
literal BRK$M_CLUSTER = %X'800';
literal BRK$S_FLAGS_INPUT = 2;          
macro BRK$V_ERASE_LINES = 0,0,8,0 %;
literal BRK$S_ERASE_LINES = 8;          
macro BRK$V_SCREEN = 0,8,1,0 %;         
macro BRK$V_BOTTOM = 0,9,1,0 %;         
macro BRK$V_NOREFRESH = 0,10,1,0 %;     
macro BRK$V_CLUSTER = 0,11,1,0 %;       
 

literal CAP$K_ALL_USER = -1;
literal CAP$K_ALL_USER_ADD = -1;
literal CAP$K_ALL_CPU_ADD = -1;
literal CAP$K_ALL_ACTIVE_CPUS = -1;
literal CAP$K_ALL_USER_REMOVE = 0;
literal CAP$K_ALL_CPU_REMOVE = 0;
literal CAP$K_GET_FREE_CAP = 0;

literal CAP$M_USER1 = %X'1';
literal CAP$M_USER2 = %X'2';
literal CAP$M_USER3 = %X'4';
literal CAP$M_USER4 = %X'8';
literal CAP$M_USER5 = %X'10';
literal CAP$M_USER6 = %X'20';
literal CAP$M_USER7 = %X'40';
literal CAP$M_USER8 = %X'80';
literal CAP$M_USER9 = %X'100';
literal CAP$M_USER10 = %X'200';
literal CAP$M_USER11 = %X'400';
literal CAP$M_USER12 = %X'800';
literal CAP$M_USER13 = %X'1000';
literal CAP$M_USER14 = %X'2000';
literal CAP$M_USER15 = %X'4000';
literal CAP$M_USER16 = %X'8000';
literal CAP$S_CAP = 4;
macro CAP$L_CAP = 0,0,32,0 %;
macro CAP$V_USER1 = 0,0,1,0 %;
macro CAP$V_USER2 = 0,1,1,0 %;
macro CAP$V_USER3 = 0,2,1,0 %;
macro CAP$V_USER4 = 0,3,1,0 %;
macro CAP$V_USER5 = 0,4,1,0 %;
macro CAP$V_USER6 = 0,5,1,0 %;
macro CAP$V_USER7 = 0,6,1,0 %;
macro CAP$V_USER8 = 0,7,1,0 %;
macro CAP$V_USER9 = 0,8,1,0 %;
macro CAP$V_USER10 = 0,9,1,0 %;
macro CAP$V_USER11 = 0,10,1,0 %;
macro CAP$V_USER12 = 0,11,1,0 %;
macro CAP$V_USER13 = 0,12,1,0 %;
macro CAP$V_USER14 = 0,13,1,0 %;
macro CAP$V_USER15 = 0,14,1,0 %;
macro CAP$V_USER16 = 0,15,1,0 %;

literal CAP$M_CPU0 = %X'1';
literal CAP$M_CPU1 = %X'2';
literal CAP$M_CPU2 = %X'4';
literal CAP$M_CPU3 = %X'8';
literal CAP$M_CPU4 = %X'10';
literal CAP$M_CPU5 = %X'20';
literal CAP$M_CPU6 = %X'40';
literal CAP$M_CPU7 = %X'80';
literal CAP$M_CPU8 = %X'100';
literal CAP$M_CPU9 = %X'200';
literal CAP$M_CPU10 = %X'400';
literal CAP$M_CPU11 = %X'800';
literal CAP$M_CPU12 = %X'1000';
literal CAP$M_CPU13 = %X'2000';
literal CAP$M_CPU14 = %X'4000';
literal CAP$M_CPU15 = %X'8000';
literal CAP$M_CPU16 = %X'10000';
literal CAP$M_CPU17 = %X'20000';
literal CAP$M_CPU18 = %X'40000';
literal CAP$M_CPU19 = %X'80000';
literal CAP$M_CPU20 = %X'100000';
literal CAP$M_CPU21 = %X'200000';
literal CAP$M_CPU22 = %X'400000';
literal CAP$M_CPU23 = %X'800000';
literal CAP$M_CPU24 = %X'1000000';
literal CAP$M_CPU25 = %X'2000000';
literal CAP$M_CPU26 = %X'4000000';
literal CAP$M_CPU27 = %X'8000000';
literal CAP$M_CPU28 = %X'10000000';
literal CAP$M_CPU29 = %X'20000000';
literal CAP$M_CPU30 = %X'40000000';
literal CAP$M_CPU31 = %X'80000000';
literal CAP$S_CAP_CPUS = 4;
macro CAP$L_CAP_CPUS = 0,0,32,0 %;
macro CAP$V_CPU0 = 0,0,1,0 %;
macro CAP$V_CPU1 = 0,1,1,0 %;
macro CAP$V_CPU2 = 0,2,1,0 %;
macro CAP$V_CPU3 = 0,3,1,0 %;
macro CAP$V_CPU4 = 0,4,1,0 %;
macro CAP$V_CPU5 = 0,5,1,0 %;
macro CAP$V_CPU6 = 0,6,1,0 %;
macro CAP$V_CPU7 = 0,7,1,0 %;
macro CAP$V_CPU8 = 0,8,1,0 %;
macro CAP$V_CPU9 = 0,9,1,0 %;
macro CAP$V_CPU10 = 0,10,1,0 %;
macro CAP$V_CPU11 = 0,11,1,0 %;
macro CAP$V_CPU12 = 0,12,1,0 %;
macro CAP$V_CPU13 = 0,13,1,0 %;
macro CAP$V_CPU14 = 0,14,1,0 %;
macro CAP$V_CPU15 = 0,15,1,0 %;
macro CAP$V_CPU16 = 0,16,1,0 %;
macro CAP$V_CPU17 = 0,17,1,0 %;
macro CAP$V_CPU18 = 0,18,1,0 %;
macro CAP$V_CPU19 = 0,19,1,0 %;
macro CAP$V_CPU20 = 0,20,1,0 %;
macro CAP$V_CPU21 = 0,21,1,0 %;
macro CAP$V_CPU22 = 0,22,1,0 %;
macro CAP$V_CPU23 = 0,23,1,0 %;
macro CAP$V_CPU24 = 0,24,1,0 %;
macro CAP$V_CPU25 = 0,25,1,0 %;
macro CAP$V_CPU26 = 0,26,1,0 %;
macro CAP$V_CPU27 = 0,27,1,0 %;
macro CAP$V_CPU28 = 0,28,1,0 %;
macro CAP$V_CPU29 = 0,29,1,0 %;
macro CAP$V_CPU30 = 0,30,1,0 %;
macro CAP$V_CPU31 = 0,31,1,0 %;
literal CAP$M_IMPLICIT_AFFINITY_CLEAR = %X'1';
literal CAP$M_IMPLICIT_AFFINITY_SET = %X'2';
literal CAP$M_IMPLICIT_DEFAULT_ONLY = %X'4';
literal CAP$M_IMPLICIT_ALL_THREADS = %X'8';
literal CAP$S_IMP_FLAGS = 1;
macro CAP$V_IMPLICIT_AFFINITY_CLEAR = 0,0,1,0 %; 
macro CAP$V_IMPLICIT_AFFINITY_SET = 0,1,1,0 %; 
macro CAP$V_IMPLICIT_DEFAULT_ONLY = 0,2,1,0 %; 
macro CAP$V_IMPLICIT_ALL_THREADS = 0,3,1,0 %; 

literal CAP$M_FLAG_CHECK_CPU = %X'1';
literal CAP$M_FLAG_PERMANENT = %X'2';
literal CAP$M_FLAG_CHECK_CPU_ACTIVE = %X'8';
literal CAP$M_FLAG_DEFAULT_ONLY = %X'10';
literal CAP$M_ALL_THREADS = %X'20';
literal CAP$M_PURGE_WS_IF_NEW_RAD = %X'40';
literal CAP$S_CAP_FLAGS = 1;
macro CAP$V_FLAG_CHECK_CPU = 0,0,1,0 %; 
macro CAP$V_FLAG_PERMANENT = 0,1,1,0 %; 
macro CAP$V_FLAG_CHECK_CPU_ACTIVE = 0,3,1,0 %; 
macro CAP$V_FLAG_DEFAULT_ONLY = 0,4,1,0 %; 
macro CAP$V_ALL_THREADS = 0,5,1,0 %;    
macro CAP$V_PURGE_WS_IF_NEW_RAD = 0,6,1,0 %; 
 

literal CBO$M_RETSVA = %X'1';
literal CBO$M_EXMAXLIM = %X'2';
literal CBO$M_SVA_32 = %X'4';
literal CBO$M_NOSVA = %X'8';
literal CBO$M_SYSBUFOBJ = %X'10';
literal CBO$S_CREATE_BUFFER_OBJECT_FLAGS = 4;
macro CBO$V_RETSVA = 0,0,1,0 %;         
macro CBO$V_EXMAXLIM = 0,1,1,0 %;       
macro CBO$V_SVA_32 = 0,2,1,0 %;         
macro CBO$V_NOSVA = 0,3,1,0 %;          
macro CBO$V_SYSBUFOBJ = 0,4,1,0 %;      
 

literal CHF$S_CHFDEF = 12;
macro CHF$L_SIGARGLST = 4,0,32,1 %;     
macro CHF$L_MCHARGLST = 8,0,32,1 %;     
literal CHF$S_CHFDEF1 = 12;
macro CHF$IS_SIG_ARGS = 0,0,32,1 %;     
macro CHF$L_SIG_ARGS = 0,0,32,1 %;      
macro CHF$IS_SIG_NAME = 4,0,32,1 %;     
macro CHF$L_SIG_NAME = 4,0,32,1 %;      
macro CHF$IS_SIG_ARG1 = 8,0,32,1 %;     
macro CHF$L_SIG_ARG1 = 8,0,32,1 %;      
literal CHF$M_FPREGS_VALID = %X'1';
literal CHF$S_CHFDEF2 = 360;
macro CHF$IS_MCH_ARGS = 0,0,32,1 %;     
macro CHF$IS_MCH_FLAGS = 4,0,32,1 %;    
macro CHF$R_MCH_FLAGS_BITS = 4,0,8,0 %; 
macro CHF$V_FPREGS_VALID = 4,0,1,0 %;   
macro CHF$PH_MCH_FRAME = 8,0,0,1 %;
literal CHF$S_MCH_FRAME = 8;            
macro CHF$IS_MCH_DEPTH = 16,0,32,1 %;   
macro CHF$IH_MCH_DEPTH = 16,0,32,1 %;   
macro CHF$IS_MCH_RESVD1 = 20,0,32,1 %;  
macro CHF$PH_MCH_DADDR = 24,0,0,1 %;
literal CHF$S_MCH_DADDR = 8;            
macro CHF$PH_MCH_ESF_ADDR = 32,0,0,1 %;
literal CHF$S_MCH_ESF_ADDR = 8;         
macro CHF$PH_MCH_SIG_ADDR = 40,0,0,1 %;
literal CHF$S_MCH_SIG_ADDR = 8;         
macro CHF$IH_MCH_RETVAL = 48,0,0,1 %;
literal CHF$S_MCH_RETVAL = 8;
macro CHF$IH_MCH_SAVR0 = 48,0,0,1 %;
literal CHF$S_MCH_SAVR0 = 8;            
macro CHF$L_MCH_SAVR0 = 12,0,32,0 %;
                                       
macro CHF$IL_MCH_SAVR0_LOW = 48,0,32,1 %; 
macro CHF$IL_MCH_SAVR0_HIGH = 52,0,32,0 %; 
macro CHF$IH_MCH_RETVAL2 = 56,0,0,1 %;
literal CHF$S_MCH_RETVAL2 = 8;
macro CHF$IH_MCH_SAVR1 = 56,0,0,1 %;
literal CHF$S_MCH_SAVR1 = 8;            
macro CHF$IL_MCH_SAVR1_LOW = 56,0,32,1 %; 
macro CHF$IL_MCH_SAVR1_HIGH = 60,0,32,0 %; 
macro CHF$IH_MCH_SAVR16 = 64,0,0,1 %;
literal CHF$S_MCH_SAVR16 = 8;           
macro CHF$IH_MCH_SAVR17 = 72,0,0,1 %;
literal CHF$S_MCH_SAVR17 = 8;           
macro CHF$IH_MCH_SAVR18 = 80,0,0,1 %;
literal CHF$S_MCH_SAVR18 = 8;           
macro CHF$IH_MCH_SAVR19 = 88,0,0,1 %;
literal CHF$S_MCH_SAVR19 = 8;           
macro CHF$IH_MCH_SAVR20 = 96,0,0,1 %;
literal CHF$S_MCH_SAVR20 = 8;           
macro CHF$IH_MCH_SAVR21 = 104,0,0,1 %;
literal CHF$S_MCH_SAVR21 = 8;           
macro CHF$IH_MCH_SAVR22 = 112,0,0,1 %;
literal CHF$S_MCH_SAVR22 = 8;           
macro CHF$IH_MCH_SAVR23 = 120,0,0,1 %;
literal CHF$S_MCH_SAVR23 = 8;           
macro CHF$IH_MCH_SAVR24 = 128,0,0,1 %;
literal CHF$S_MCH_SAVR24 = 8;           
macro CHF$IH_MCH_SAVR25 = 136,0,0,1 %;
literal CHF$S_MCH_SAVR25 = 8;           
macro CHF$IH_MCH_SAVR26 = 144,0,0,1 %;
literal CHF$S_MCH_SAVR26 = 8;           
macro CHF$IH_MCH_SAVR27 = 152,0,0,1 %;
literal CHF$S_MCH_SAVR27 = 8;           
macro CHF$IH_MCH_SAVR28 = 160,0,0,1 %;
literal CHF$S_MCH_SAVR28 = 8;           
macro CHF$FH_MCH_SAVF0 = 168,0,0,1 %;
literal CHF$S_MCH_SAVF0 = 8;            
macro CHF$FH_MCH_RETVAL_FLOAT = 168,0,0,1 %;
literal CHF$S_MCH_RETVAL_FLOAT = 8;
macro CHF$FH_MCH_SAVF1 = 176,0,0,1 %;
literal CHF$S_MCH_SAVF1 = 8;            
macro CHF$FH_MCH_RETVAL2_FLOAT = 176,0,0,1 %;
literal CHF$S_MCH_RETVAL2_FLOAT = 8;
macro CHF$FH_MCH_SAVF10 = 184,0,0,1 %;
literal CHF$S_MCH_SAVF10 = 8;           
macro CHF$FH_MCH_SAVF11 = 192,0,0,1 %;
literal CHF$S_MCH_SAVF11 = 8;           
macro CHF$FH_MCH_SAVF12 = 200,0,0,1 %;
literal CHF$S_MCH_SAVF12 = 8;           
macro CHF$FH_MCH_SAVF13 = 208,0,0,1 %;
literal CHF$S_MCH_SAVF13 = 8;           
macro CHF$FH_MCH_SAVF14 = 216,0,0,1 %;
literal CHF$S_MCH_SAVF14 = 8;           
macro CHF$FH_MCH_SAVF15 = 224,0,0,1 %;
literal CHF$S_MCH_SAVF15 = 8;           
macro CHF$FH_MCH_SAVF16 = 232,0,0,1 %;
literal CHF$S_MCH_SAVF16 = 8;           
macro CHF$FH_MCH_SAVF17 = 240,0,0,1 %;
literal CHF$S_MCH_SAVF17 = 8;           
macro CHF$FH_MCH_SAVF18 = 248,0,0,1 %;
literal CHF$S_MCH_SAVF18 = 8;           
macro CHF$FH_MCH_SAVF19 = 256,0,0,1 %;
literal CHF$S_MCH_SAVF19 = 8;           
macro CHF$FH_MCH_SAVF20 = 264,0,0,1 %;
literal CHF$S_MCH_SAVF20 = 8;           
macro CHF$FH_MCH_SAVF21 = 272,0,0,1 %;
literal CHF$S_MCH_SAVF21 = 8;           
macro CHF$FH_MCH_SAVF22 = 280,0,0,1 %;
literal CHF$S_MCH_SAVF22 = 8;           
macro CHF$FH_MCH_SAVF23 = 288,0,0,1 %;
literal CHF$S_MCH_SAVF23 = 8;           
macro CHF$FH_MCH_SAVF24 = 296,0,0,1 %;
literal CHF$S_MCH_SAVF24 = 8;           
macro CHF$FH_MCH_SAVF25 = 304,0,0,1 %;
literal CHF$S_MCH_SAVF25 = 8;           
macro CHF$FH_MCH_SAVF26 = 312,0,0,1 %;
literal CHF$S_MCH_SAVF26 = 8;           
macro CHF$FH_MCH_SAVF27 = 320,0,0,1 %;
literal CHF$S_MCH_SAVF27 = 8;           
macro CHF$FH_MCH_SAVF28 = 328,0,0,1 %;
literal CHF$S_MCH_SAVF28 = 8;           
macro CHF$FH_MCH_SAVF29 = 336,0,0,1 %;
literal CHF$S_MCH_SAVF29 = 8;           
macro CHF$FH_MCH_SAVF30 = 344,0,0,1 %;
literal CHF$S_MCH_SAVF30 = 8;           
macro CHF$PH_MCH_SIG64_ADDR = 352,0,0,1 %;
literal CHF$S_MCH_SIG64_ADDR = 8;       
literal CHF$M_CALEXT_CANCEL = %X'1';
literal CHF$M_CALEXT_LAST = %X'2';
literal CHF$K_CALEXT_LENGTH = 16;       
literal CHF$C_CALEXT_LENGTH = 16;       
literal CHF$S_CHFDEF3 = 16;
macro CHF$L_CALEXT_LINK = 0,0,32,1 %;   
macro CHF$L_CALEXT_ADDRESS = 4,0,32,1 %; 
macro CHF$L_CALEXT_FLAGS = 8,0,32,0 %;  
macro CHF$V_CALEXT_CANCEL = 8,0,1,0 %;  
macro CHF$V_CALEXT_LAST = 8,1,1,0 %;    
macro CHF$L_CALEXT_RESERVED = 12,0,32,0 %; 
literal CHF64$S_CHFDEF6 = 24;
macro CHF64$L_SIG_ARGS = 0,0,32,1 %;    
macro CHF64$W_SIG_ARG_COUNT = 0,0,16,1 %; 
macro CHF64$W_SIG_MSG_OPTIONS = 2,0,16,1 %; 
macro CHF64$L_SIGNAL64 = 4,0,32,1 %;    
macro CHF64$Q_SIG_NAME = 8,0,0,1 %;
literal CHF64$S_SIG_NAME = 8;           
macro CHF64$Q_SIG_ARG1 = 16,0,0,1 %;
literal CHF64$S_SIG_ARG1 = 8;           
 

literal CHKPNT$M_AUTO_RESTART = %X'1';
literal CHKPNT$M_DEBUG = %X'2';
literal CHKPNT$M_ASYNC = %X'4';
literal CHKPNT$S_CHKPNTDEF = 1;
macro CHKPNT$V_AUTO_RESTART = 0,0,1,0 %; 
macro CHKPNT$V_DEBUG = 0,1,1,0 %;       
macro CHKPNT$V_ASYNC = 0,2,1,0 %;       
 

literal CHP$_END = 0;                   
literal CHP$_ACCESS = 1;                
literal CHP$_FLAGS = 2;                 
literal CHP$_PRIV = 3;                  
literal CHP$_ACMODE = 4;                
literal CHP$_ACCLASS = 5;               
literal CHP$_RIGHTS = 6;                
literal CHP$_ADD_RIGHTS = 7;            
literal CHP$_MODE = 8;                  
literal CHP$_MODES = 9;                 
literal CHP$_MIN_CLASS = 10;            
literal CHP$_MAX_CLASS = 11;            
literal CHP$_OWNER = 12;                
literal CHP$_PROT = 13;                 
literal CHP$_ACL = 14;                  
literal CHP$_AUDIT_NAME = 15;           
literal CHP$_ALARM_NAME = 16;           
literal CHP$_MATCHED_ACE = 17;          
literal CHP$_PRIVUSED = 18;             
literal CHP$_AUDIT_LIST = 19;           
literal CHP$_OBJECT_NAME = 20;          
literal CHP$_OBJECT_CLASS = 21;         
literal CHP$_UIC = 22;                  
literal CHP$_OBJECT_SPECIFIC = 23;      
literal CHP$_MAX_CODE = 24;             
literal CHP$_ADDRIGHTS = 7;
literal CHP$_MINCLASS = 10;
literal CHP$_MAXCLASS = 11;
literal CHP$_AUDITNAME = 15;
literal CHP$_ALARMNAME = 16;
literal CHP$_MATCHEDACE = 17;
literal CHP$_CLASS = 5;
literal CHP$K_MATCHED_ACE_LENGTH = 255;
literal CHP$K_ALARM_LENGTH = 768;
literal CHP$K_AUDIT_LENGTH = 1560;
literal CHP$M_SYSPRV = %X'1';
literal CHP$M_BYPASS = %X'2';
literal CHP$M_UPGRADE = %X'4';
literal CHP$M_DOWNGRADE = %X'8';
literal CHP$M_GRPPRV = %X'10';
literal CHP$M_READALL = %X'20';
literal CHP$M_OPER = %X'40';
literal CHP$M_GRPNAM = %X'80';
literal CHP$M_SYSNAM = %X'100';
literal CHP$M_GROUP = %X'200';
literal CHP$M_WORLD = %X'400';
literal CHP$M_PRMCEB = %X'800';
literal CHP$K_NUMBER_OF_PRIVS = 12;
literal CHP$S_PRIVS_USED_BITS = 2;
macro CHP$V_SYSPRV = 0,0,1,0 %;         
macro CHP$V_BYPASS = 0,1,1,0 %;         
macro CHP$V_UPGRADE = 0,2,1,0 %;        
macro CHP$V_DOWNGRADE = 0,3,1,0 %;      
macro CHP$V_GRPPRV = 0,4,1,0 %;         
macro CHP$V_READALL = 0,5,1,0 %;        
macro CHP$V_OPER = 0,6,1,0 %;           
macro CHP$V_GRPNAM = 0,7,1,0 %;         
macro CHP$V_SYSNAM = 0,8,1,0 %;         
macro CHP$V_GROUP = 0,9,1,0 %;          
macro CHP$V_WORLD = 0,10,1,0 %;         
macro CHP$V_PRMCEB = 0,11,1,0 %;        
literal CHP$M_OBSERVE = %X'1';
literal CHP$M_ALTER = %X'2';
literal CHP$M_READ = %X'1';
literal CHP$M_WRITE = %X'2';
literal CHP$M_USEREADALL = %X'4';
literal CHP$M_AUDIT = %X'8';
literal CHP$M_NOFAILAUD = %X'10';
literal CHP$M_NOSUCCAUD = %X'20';
literal CHP$M_DELETE = %X'40';
literal CHP$M_MANDATORY = %X'80';
literal CHP$M_FLUSH = %X'100';
literal CHP$M_CREATE = %X'200';
literal CHP$M_INTERNAL = %X'400';
literal CHP$M_SERVER = %X'800';
literal CHP$S_FLAG_BITS = 2;
macro CHP$V_OBSERVE = 0,0,1,0 %;        
macro CHP$V_ALTER = 0,1,1,0 %;          
macro CHP$V_READ = 0,0,1,0 %;           
macro CHP$V_WRITE = 0,1,1,0 %;          
macro CHP$V_USEREADALL = 0,2,1,0 %;     
macro CHP$V_AUDIT = 0,3,1,0 %;          
macro CHP$V_NOFAILAUD = 0,4,1,0 %;      
macro CHP$V_NOSUCCAUD = 0,5,1,0 %;      
macro CHP$V_DELETE = 0,6,1,0 %;         
macro CHP$V_MANDATORY = 0,7,1,0 %;      
macro CHP$V_FLUSH = 0,8,1,0 %;          
macro CHP$V_CREATE = 0,9,1,0 %;         
macro CHP$V_INTERNAL = 0,10,1,0 %;      
macro CHP$V_SERVER = 0,11,1,0 %;        
literal CHP$M_NOACCESS = %X'1';
literal CHP$M_REMDUPID = %X'2';
literal CHP$M_INCSYSID = %X'4';
literal CHP$M_INCIMGID = %X'8';
literal CHP$M_DEFPRIV = %X'10';
literal CHP$M_DEFCLASS = %X'20';
literal CHP$S_PROFILE_FLAGS = 1;
macro CHP$V_NOACCESS = 0,0,1,0 %;       
macro CHP$V_REMDUPID = 0,1,1,0 %;       
macro CHP$V_INCSYSID = 0,2,1,0 %;       
macro CHP$V_INCIMGID = 0,3,1,0 %;       
macro CHP$V_DEFPRIV = 0,4,1,0 %;        
macro CHP$V_DEFCLASS = 0,5,1,0 %;       
 
literal CIA$K_SCAN = 1;
literal CIA$K_DELETE = 2;
literal CIA$K_SHOW = 3;
literal CIA$K_PERFORMANCE = 4;
literal CIA$K_ZERO_PERFORMANCE = 5;
literal CIA$K_SCAN_EXTENDED = 6;
literal CIA$K_DELETE_EXTENDED = 7;
literal CIA$K_SHOW_EXTENDED = 8;
literal CIA$K_MAX_CIA_CODE = 9;
literal CIA$K_PERFORMANCE_LENGTH = 40;
literal CIA$S_PERFORMANCE = 40;
macro CIA$L_TOTAL_MESSAGES = 0,0,32,0 %;
macro CIA$L_TOTAL_EXCEPTIONS = 4,0,32,0 %;
macro CIA$L_SHOWS = 8,0,32,0 %;
macro CIA$L_SCANS = 12,0,32,0 %;
macro CIA$L_DELETES = 16,0,32,0 %;
macro CIA$L_PERFORMANCE = 20,0,32,0 %;
macro CIA$L_AUDITS = 24,0,32,0 %;
macro CIA$L_INVALID_MESSAGES = 28,0,32,0 %;
macro CIA$L_INTRUDERS = 32,0,32,0 %;
macro CIA$L_SUSPECTS = 36,0,32,0 %;
literal CIA$K_SOURCE_TERMINAL_LENGTH = 64;
literal CIA$K_SOURCE_NODE_MAX_LENGTH = 1024;
literal CIA$K_USER_SPEC_MAX_LENGTH = 1058;
literal CIA$K_USER_STRING_MAX_LENGTH = 32;
literal CIA$K_PASSWORD_MAX_LENGTH = 32;
literal CIA$K_SOURCE_ADDRESS_MAX_LENGTH = 128;
literal CIA$K_SCSNODE_LENGTH = 8;
literal CIA$K_SCSNODE_REPLY_LENGTH = 12;
literal CIA$K_USERDATA_LENGTH = 256;
literal CIA$S_CIA$GENERIC_DESC = 5;
macro CIA$W_DESC_LENGTH = 0,0,16,0 %;
macro CIA$T_DESC_DATA = 4,0,8,0 %;
literal CIAEXT$S_PACKET = 4;
literal CIAEXT$S_EXTENSION_PACKET = 4;
macro CIAEXT$W_TYPE = 0,0,16,0 %;       
macro CIAEXT$W_LENGTH = 2,0,16,0 %;     
macro CIAEXT$R_VALUE = 4,0,0,0 %;       
literal CIAEXT$_USER_DATA = 100;
literal CIAEXT$_SCSNODE = 101;
literal CIAEXT$_SCSNODE_REPLY = 102;
literal CIAEXT$_IMAGE_NAME = 103;
literal CIAEXT$_MAX_CIAEXT_CODE = 104;
literal CIA$_SCSNODE_LIST = 200;        
literal CIA$_SCSNODE = 201;             
literal CIA$_OUTPUT_LIST = 202;         
literal CIA$_USER_DATA = 203;           
literal CIA$_USER_CRITERIAL = 204;      
literal CIA$_FAILED_USERNAME = 205;     
literal CIA$_IMAGE_NAME = 206;          
literal CIA$_MAX_CIA_ITEM = 207;
literal CIA$K_IMAGE_NAME_MAX_SIZE = 4096;
literal CIA$S_IMAGE_NAME = 4100;
macro CIA$W_IMAGE_LENGTH = 0,0,16,0 %;
macro CIA$T_IMAGE_STRING = 4,0,0,0 %;
literal CIA$S_IMAGE_STRING = 4096;
literal CIA$M_IGNORE_RETURN = %X'1';
literal CIA$M_RESERVED_1 = %X'FE';
literal CIA$M_SUSPECTS = %X'100';
literal CIA$M_INTRUDERS = %X'200';
literal CIA$M_SECONDARY_PASSWORD = %X'400';
literal CIA$M_NOAUDIT = %X'800';
literal CIA$M_REAL_USERNAME = %X'1000';
literal CIA$M_SHOW_NODE = %X'2000';
literal CIA$M_ITEMLIST = %X'4000';
literal CIA$M_FILL_1 = %X'FFFF8000';
literal CIA$K_HEADER_LENGTH = 8;
literal CIA$S_HEADER = 8;
macro CIA$L_CONTEXT = 0,0,32,0 %;
macro CIA$L_HEADER_FLAGS = 4,0,32,0 %;
macro CIA$V_IGNORE_RETURN = 4,0,1,0 %;
macro CIA$V_RESERVED_1 = 4,1,7,0 %;
literal CIA$S_RESERVED_1 = 7;
macro CIA$V_SUSPECTS = 4,8,1,0 %;
macro CIA$V_INTRUDERS = 4,9,1,0 %;
macro CIA$V_SECONDARY_PASSWORD = 4,10,1,0 %;
macro CIA$V_NOAUDIT = 4,11,1,0 %;
macro CIA$V_REAL_USERNAME = 4,12,1,0 %;
macro CIA$V_SHOW_NODE = 4,13,1,0 %;
macro CIA$V_ITEMLIST = 4,14,1,0 %;
macro CIA$V_FILL_1 = 4,15,17,0 %;
literal CIA$S_FILL_1 = 17;
literal CIA$K_SHOW_INPUT_LENGTH = 1062;
literal CIA$K_DELETE_INPUT_LENGTH = 1062;
literal CIA$S_CONTENTS = 1062;
macro CIA$W_LENGTH = 0,0,16,0 %;
macro CIA$T_NAME = 4,0,0,0 %;
literal CIA$S_NAME = 1058;
literal CIA$K_SCAN_CONTENTS_LENGTH = 1386;
literal CIA$S_SCAN_CONTENTS = 1386;
macro CIA$L_PARENT_ID = 0,0,32,0 %;
macro CIA$L_JOB_TYPE = 4,0,32,0 %;
macro CIA$L_LOGIN_STATUS = 8,0,32,0 %;
macro CIA$T_SOURCE_TERMINAL = 12,0,0,0 %;
literal CIA$S_SOURCE_TERMINAL = 68;
macro CIA$W_SOURCE_TERM_LENGTH = 12,0,16,0 %;
macro CIA$T_SOURCE_TERM_NAME = 16,0,0,0 %;
literal CIA$S_SOURCE_TERM_NAME = 64;
macro CIA$T_SOURCE_USER = 80,0,0,0 %;
literal CIA$S_SOURCE_USER = 36;
macro CIA$W_SOURCE_USER_LENGTH = 80,0,16,0 %;
macro CIA$T_SOURCE_USER_NAME = 84,0,0,0 %;
literal CIA$S_SOURCE_USER_NAME = 32;
macro CIA$T_SOURCE_ADDRESS = 116,0,0,0 %;
literal CIA$S_SOURCE_ADDRESS = 132;
macro CIA$W_SOURCE_ADDR_LENGTH = 116,0,16,0 %;
macro CIA$T_SOURCE_ADDRESS_NAME = 120,0,0,0 %;
literal CIA$S_SOURCE_ADDRESS_NAME = 128;
macro CIA$R_FAILED_USER = 250,0,0,0 %;
literal CIA$S_FAILED_USER = 36;
macro CIA$W_FAILED_USER_LENGTH = 250,0,16,0 %;
macro CIA$T_FAILED_USER_NAME = 254,0,0,0 %;
literal CIA$S_FAILED_USER_NAME = 32;
macro CIA$T_FAILED_PASSWORD = 286,0,0,0 %;
literal CIA$S_FAILED_PASSWORD = 36;
macro CIA$W_FAILED_PASS_LENGTH = 286,0,16,0 %;
macro CIA$T_FAILED_PASS_NAME = 290,0,0,0 %;
literal CIA$S_FAILED_PASS_NAME = 32;
macro CIA$T_PARENT_USER = 322,0,0,0 %;
literal CIA$S_PARENT_USER = 36;
macro CIA$W_PARENT_USER_LENGTH = 322,0,16,0 %;
macro CIA$T_PARENT_USER_NAME = 326,0,0,0 %;
literal CIA$S_PARENT_USER_NAME = 32;
macro CIA$T_SOURCE_NODE = 358,0,0,0 %;
literal CIA$S_SOURCE_NODE = 1028;
macro CIA$W_SOURCE_NODE_LENGTH = 358,0,16,0 %;
macro CIA$T_SOURCE_NODE_NAME = 362,0,0,0 %;
literal CIA$S_SOURCE_NODE_NAME = 1024;
literal CIA$M_INTRUDER = %X'1';
literal CIA$M_SUSPECT = %X'2';
literal CIA$M_NETWORK = %X'4';
literal CIA$M_TERM_USER = %X'8';
literal CIA$M_TERMINAL = %X'10';
literal CIA$M_USERNAME = %X'20';
literal CIA$M_FILL_2 = %X'FFFFFFC0';
literal CIA$K_SHOW_OUTPUT_LENGTH = 1086;
literal CIA$S_SHOW_OUTPUT = 1086;
macro CIA$L_STATUS = 0,0,32,0 %;
macro CIA$L_RETURNED_CONTEXT = 4,0,32,0 %;
macro CIA$Q_EXPIRATION_TIME = 8,0,0,0 %;
literal CIA$S_EXPIRATION_TIME = 8;
macro CIA$L_FLAGS = 16,0,32,0 %;
macro CIA$V_INTRUDER = 16,0,1,0 %;
macro CIA$V_SUSPECT = 16,1,1,0 %;
macro CIA$V_NETWORK = 16,2,1,0 %;
macro CIA$V_TERM_USER = 16,3,1,0 %;
macro CIA$V_TERMINAL = 16,4,1,0 %;
macro CIA$V_USERNAME = 16,5,1,0 %;
macro CIA$L_ATTEMPT_COUNT = 20,0,32,0 %;
macro CIA$T_USER_SPEC = 24,0,0,0 %;
literal CIA$S_USER_SPEC = 1062;
macro CIA$W_USER_SPEC_LENGTH = 24,0,16,0 %;
macro CIA$T_USER_SPEC_NAME = 28,0,0,0 %;
literal CIA$S_USER_SPEC_NAME = 1058;
literal CIA$S_BREAKIN_BLOCK = 16;
macro CIA$L_BREAK_FLAGS = 0,0,32,0 %;
macro CIA$L_BREAK_COUNT = 4,0,32,0 %;
macro CIA$Q_BREAK_TIME = 8,0,0,0 %;
literal CIA$S_BREAK_TIME = 8;
literal CIA$S_CIA$GENERIC_REPLY = 4;
macro CIA$L_REPLY_STATUS = 0,0,32,0 %;  
 

literal CLI$M_DEBUG = %X'1';
literal CLI$M_DBGTRU = %X'2';
literal CLI$M_VERIFY = %X'4';
literal CLI$M_BATCH = %X'8';
literal CLI$M_INDIRECT = %X'10';
literal CLI$M_VFYINP = %X'20';
literal CLI$M_TRMVRBLV = %X'300';
literal CLI$M_DBGEXCP = %X'10000';
literal CLI$S_CLIDEF = 32;
macro CLI$L_INIARGCNT = 0,0,32,0 %;     
macro CLI$A_PROGXFER = 4,0,32,0 %;      
macro CLI$A_UTILSERV = 8,0,32,0 %;      
macro CLI$A_IMGHDADR = 12,0,32,0 %;     
macro CLI$A_IMGFILED = 16,0,32,0 %;     
macro CLI$L_LINKFLAG = 20,0,32,0 %;     
macro CLI$L_CLIFLAG = 24,0,32,0 %;      
macro CLI$V_DEBUG = 24,0,1,0 %;         
macro CLI$V_DBGTRU = 24,1,1,0 %;        
macro CLI$V_VERIFY = 24,2,1,0 %;        
macro CLI$V_BATCH = 24,3,1,0 %;         
macro CLI$V_INDIRECT = 24,4,1,0 %;      
macro CLI$V_VFYINP = 24,5,1,0 %;        
macro CLI$V_TRMVRBLV = 24,8,2,0 %;
literal CLI$S_TRMVRBLV = 2;             
macro CLI$V_DBGEXCP = 24,16,1,0 %;      
macro CLI$L_ARGLIST = 28,0,32,1 %;      

literal CLI$M_PARMREQ = %X'1';
literal CLI$M_ABSADR = %X'2';
literal CLI$M_EXPNAM = %X'4';
literal CLI$M_LASTVAL = %X'1';
literal CLI$M_DUMMY = %X'2';
literal CLI$M_PARMPRS = %X'1';
literal CLI$M_CONCATINP = %X'2';
literal CLI$M_MOREINP = %X'4';
literal CLI$M_PARMDEF = %X'8';
literal CLI$M_MOREVALS = %X'1';
literal CLI$M_KEYVALU = %X'2';
literal CLI$K_REQDESC = 28;             
literal CLI$C_REQDESC = 28;             
literal CLI$S_CLIDEF1 = 28;
macro CLI$B_RQTYPE = 0,0,8,0 %;         
macro CLI$V_SUBTYP = 0,0,4,0 %;
literal CLI$S_SUBTYP = 4;               
macro CLI$V_PRITYP = 0,4,4,0 %;
literal CLI$S_PRITYP = 4;               
macro CLI$W_SERVCOD = 1,0,16,0 %;       
macro CLI$B_RQINDX = 1,0,8,0 %;         
macro CLI$B_BITNUM = 1,0,8,0 %;         
macro CLI$B_RQFLGS = 2,0,8,0 %;         
macro CLI$V_PARMREQ = 2,0,1,0 %;        
macro CLI$V_ABSADR = 2,1,1,0 %;         
macro CLI$V_EXPNAM = 2,2,1,0 %;         
macro CLI$V_LASTVAL = 2,0,1,0 %;        
macro CLI$V_DUMMY = 2,1,1,0 %;          
macro CLI$B_RQSTAT = 3,0,8,0 %;         
macro CLI$V_PARMPRS = 3,0,1,0 %;        
macro CLI$V_CONCATINP = 3,1,1,0 %;      
macro CLI$V_MOREINP = 3,2,1,0 %;        
macro CLI$V_PARMDEF = 3,3,1,0 %;        
macro CLI$V_MOREVALS = 3,0,1,0 %;       
macro CLI$V_KEYVALU = 3,1,1,0 %;        
macro CLI$A_ERRACT = 4,0,32,0 %;        
macro CLI$Q_RQDESC = 8,0,0,0 %;
literal CLI$S_RQDESC = 8;               
macro CLI$W_RQSIZE = 8,0,16,0 %;        
macro CLI$L_RQVALU = 12,0,32,0 %;       
macro CLI$A_RQADDR = 12,0,32,0 %;       
macro CLI$A_PRSACT = 16,0,32,0 %;       
macro CLI$A_ABSACT = 20,0,32,0 %;       
macro CLI$A_QUALST = 24,0,32,0 %;       

literal CLI$S_CLIDEF2 = 36;
macro CLI$Q_NAMDESC = 4,0,0,0 %;
literal CLI$S_NAMDESC = 8;              
macro CLI$Q_VALDESC = 12,0,0,0 %;
literal CLI$S_VALDESC = 8;              
macro CLI$Q_TABDESC = 20,0,0,0 %;
literal CLI$S_TABDESC = 8;              
macro CLI$L_ITMLST = 28,0,32,1 %;       
macro CLI$L_ATTR = 32,0,32,1 %;         

literal CLI$S_CLIDEF3 = 12;
macro CLI$L_NEW_MASK = 4,0,32,0 %;      
macro CLI$L_OLD_MASK = 8,0,32,0 %;      

literal CLI$S_CLIDEF4 = 8;
macro CLI$L_PID = 4,0,32,0 %;           

literal CLI$M_NOWAIT = %X'1';
literal CLI$M_NOCLISYM = %X'2';
literal CLI$M_NOLOGNAM = %X'4';
literal CLI$M_NOKEYPAD = %X'8';
literal CLI$M_NOTIFY = %X'10';
literal CLI$M_NOCONTROL = %X'20';
literal CLI$M_TRUSTED = %X'40';
literal CLI$M_AUTHPRIV = %X'80';
literal CLI$M_SUBSYSTEM = %X'100';
literal CLI$M_DETACHED = %X'200';
literal CLI$K_SPAWN_VERSION = 1;        
literal CLI$C_SPAWN_VERSION = 1;        
literal CLI$K_SRVDESC = 84;             
literal CLI$C_SRVDESC = 84;             
literal CLI$S_CLIDEF5 = 84;
macro CLI$B_FLAGS = 4,0,8,0 %;          
macro CLI$W_FLAGS = 4,0,16,0 %;         
macro CLI$V_NOWAIT = 4,0,1,0 %;         
macro CLI$V_NOCLISYM = 4,1,1,0 %;       
macro CLI$V_NOLOGNAM = 4,2,1,0 %;       
macro CLI$V_NOKEYPAD = 4,3,1,0 %;       
macro CLI$V_NOTIFY = 4,4,1,0 %;         
macro CLI$V_NOCONTROL = 4,5,1,0 %;      
macro CLI$V_TRUSTED = 4,6,1,0 %;        
macro CLI$V_AUTHPRIV = 4,7,1,0 %;       
macro CLI$V_SUBSYSTEM = 4,8,1,0 %;      
macro CLI$V_DETACHED = 4,9,1,0 %;       
macro CLI$L_OUTPID = 8,0,32,0 %;        
macro CLI$L_LSTSTATUS = 12,0,32,1 %;    
macro CLI$Q_CMDSTR = 16,0,0,0 %;
literal CLI$S_CMDSTR = 8;               
macro CLI$Q_INPUT = 24,0,0,0 %;
literal CLI$S_INPUT = 8;                
macro CLI$Q_OUTPUT = 32,0,0,0 %;
literal CLI$S_OUTPUT = 8;               
macro CLI$Q_PRCNAM = 40,0,0,0 %;
literal CLI$S_PRCNAM = 8;               
macro CLI$L_ASTADR = 48,0,32,1 %;       
macro CLI$L_ASTPRM = 52,0,32,1 %;       
macro CLI$B_EFN = 56,0,8,0 %;           
macro CLI$B_VERSION = 57,0,8,0 %;       
macro CLI$Q_PROMPT = 60,0,0,0 %;
literal CLI$S_PROMPT = 8;               
macro CLI$Q_CLI = 68,0,0,0 %;
literal CLI$S_CLI = 8;                  
macro CLI$Q_TABLE = 76,0,0,0 %;
literal CLI$S_TABLE = 8;                

literal CLI$M_ALLOCCUR = %X'1';
literal CLI$M_QDUSRV = %X'2';
literal CLI$M_QDEXPA = %X'4';
literal CLI$M_QUALTRU = %X'1';
literal CLI$M_QUALEXP = %X'2';
literal CLI$K_QUALDEF = 20;             
literal CLI$C_QUALDEF = 20;             
literal CLI$K_QDBITS = 20;              
literal CLI$C_QDBITS = 20;              
literal CLI$S_CLIDEF6 = 24;
macro CLI$B_QDBLKSIZ = 0,0,8,0 %;       
macro CLI$B_QDCODE = 1,0,8,0 %;         
macro CLI$B_QDFLGS = 2,0,8,0 %;         
macro CLI$V_ALLOCCUR = 2,0,1,0 %;       
macro CLI$V_QDUSRV = 2,1,1,0 %;         
macro CLI$V_QDEXPA = 2,2,1,0 %;         
macro CLI$B_QDSTAT = 3,0,8,0 %;         
macro CLI$V_QUALTRU = 3,0,1,0 %;        
macro CLI$V_QUALEXP = 3,1,1,0 %;        
macro CLI$Q_QDVALDESC = 4,0,0,0 %;
literal CLI$S_QDVALDESC = 8;            
macro CLI$W_QDVALSIZ = 4,0,16,0 %;      
macro CLI$A_QDVALADR = 8,0,32,0 %;      
macro CLI$A_TRUACT = 12,0,32,0 %;       
macro CLI$A_FLSACT = 16,0,32,0 %;       
macro CLI$L_USRVAL = 20,0,32,0 %;       

literal CLI$K_WORKAREA = 128;           
literal CLI$C_WORKAREA = 128;           
literal CLI$K_UTILOPR = 0;              
literal CLI$K_INPSPEC = 1;              
literal CLI$K_OUTSPEC = 2;              
literal CLI$K_PARDONE = 3;              
literal CLI$K_VALCONV = 4;              
literal CLI$K_CLINT = 5;                
literal CLI$K_INITPRS = 0;              
literal CLI$K_GETCMD = 1;               
literal CLI$K_GETQUAL = 2;              
literal CLI$K_GETOPT = 3;               
literal CLI$K_GETLINE = 4;              

literal CLI$K_CLISERV = 5;              
literal CLI$K_INPUT1 = 16;              
literal CLI$K_INPUT2 = 17;              
literal CLI$K_INPUT3 = 18;              
literal CLI$K_INPUT4 = 19;              
literal CLI$K_OUTPUT1 = 32;             
literal CLI$K_OUTPUT2 = 33;             
literal CLI$K_OUTPUT3 = 34;             
literal CLI$K_OUTPUT4 = 35;             
literal CLI$K_ENDPRM1 = 48;             
literal CLI$K_ENDPRM2 = 49;             
literal CLI$K_ENDPRM3 = 50;             
literal CLI$K_ENDPRM4 = 51;             
literal CLI$K_NUMERVAL = 64;            
literal CLI$K_ASCIIVAL = 65;            
literal CLI$K_KEYWORD = 66;             
literal CLI$K_KEYVAL = 67;              
literal CLI$K_FILSPEC = 68;             
literal CLI$K_PRESENT = 80;             
literal CLI$K_GETVALUE = 81;            
literal CLI$K_ENDPARSE = 82;            
literal CLI$K_DCLPARSE = 83;            
literal CLI$K_DISPATCH = 84;            
literal CLI$K_NEXTQUAL = 85;            
literal CLI$S_CLIDEF7 = 128;
macro CLI$L_WORKAREA = 0,0,0,0 %;
literal CLI$S_WORKAREA = 128;           

literal CLI$S_CLIDEF8 = 8;
macro CLI$L_CODESET = 4,0,32,0 %;       
 

literal CLI$K_PAUSE = 1;                
literal CLI$K_DEFLOCAL = 2;             
literal CLI$K_DEFGLOBAL = 3;            
literal CLI$K_CHAIN = 4;                
literal CLI$K_COMMAND = 5;              
literal CLI$K_CREALOG = 6;              
literal CLI$K_DELELOG = 7;              
literal CLI$K_DISACTRLY = 8;            
literal CLI$K_ENABCTRLY = 9;            
literal CLI$K_GETSYM = 10;              
literal CLI$K_DELELCL = 11;             
literal CLI$K_DELEGBL = 12;             
literal CLI$K_DISAOOB = 13;             
literal CLI$K_ENABOOB = 14;             
literal CLI$K_SPAWN = 15;               
literal CLI$K_ATTACH = 16;              
literal CLI$K_LIBDEFLOCAL = 17;         
literal CLI$K_LIBDEFGLOBAL = 18;        
literal CLI$K_LIBGETSYM = 19;           
literal CLI$K_LIBDELELCL = 20;          
literal CLI$K_LIBDELEGBL = 21;          
literal CLI$K_SETCODESET = 22;          

literal CLI$K_LOCAL_SYM = 1;            
literal CLI$K_GLOBAL_SYM = 2;           
 

literal CLI$K_VERB_ALLO = 1;            
literal CLI$K_VERB_ANAL = 2;            
literal CLI$K_VERB_ASSI = 3;            
literal CLI$K_VERB_BASI = 4;            
literal CLI$K_VERB_BLIS = 5;            
literal CLI$K_VERB_COBO = 6;            
literal CLI$K_VERB_CONT = 7;            
literal CLI$K_VERB_COPY = 8;            
literal CLI$K_VERB_CREA = 9;            
literal CLI$K_VERB_DATA = 10;           
literal CLI$K_VERB_DEAL = 11;           
literal CLI$K_VERB_DEAS = 12;           
literal CLI$K_VERB_DEBU = 13;           
literal CLI$K_VERB_DEFI = 14;           
literal CLI$K_VERB_DELE = 15;           
literal CLI$K_VERB_DEPO = 16;           
literal CLI$K_VERB_DIFF = 17;           
literal CLI$K_VERB_DIRE = 18;           
literal CLI$K_VERB_DISM = 19;           
literal CLI$K_VERB_EDIT = 20;           
literal CLI$K_VERB_EOD = 21;            
literal CLI$K_VERB_EXAM = 22;           
literal CLI$K_VERB_EXIT = 23;           
literal CLI$K_VERB_FORT = 24;           
literal CLI$K_VERB_GOTO = 25;           
literal CLI$K_VERB_HELP = 26;           
literal CLI$K_VERB_IF = 27;             
literal CLI$K_VERB_INIT = 28;           
literal CLI$K_VERB_INQU = 29;           
literal CLI$K_VERB_LINK = 30;           
literal CLI$K_VERB_LOGO = 31;           
literal CLI$K_VERB_MACR = 32;           
literal CLI$K_VERB_MCR = 33;            
literal CLI$K_VERB_ON = 34;             
literal CLI$K_VERB_PRIN = 35;           
literal CLI$K_VERB_RUN = 36;            
literal CLI$K_VERB_SET = 37;            
literal CLI$K_VERB_SHOW = 38;           
literal CLI$K_VERB_STAR = 39;           
literal CLI$K_VERB_STOP = 40;           
literal CLI$K_VERB_SUBM = 41;           
literal CLI$K_VERB_TYPE = 42;           
literal CLI$K_VERB_MOUN = 43;           
literal CLI$K_VERB_PATC = 44;           
literal CLI$K_VERB_REPL = 45;           
literal CLI$K_VERB_UNLO = 46;           
literal CLI$K_VERB_APPE = 47;           
literal CLI$K_VERB_DUMP = 48;           
literal CLI$K_VERB_PURG = 49;           
literal CLI$K_VERB_RENA = 50;           
literal CLI$K_VERB_CANC = 51;           
literal CLI$K_VERB_LIBR = 52;           
literal CLI$K_VERB_SORT = 53;           
literal CLI$K_VERB_REQU = 54;           
literal CLI$K_VERB_SYNC = 55;           
literal CLI$K_VERB_CORA = 56;           
literal CLI$K_VERB_PASC = 57;           
literal CLI$K_VERB_PLI = 58;            
literal CLI$K_VERB_MESS = 59;           
literal CLI$K_VERB_FORE = 255;          
 

literal CLS$S_CLSDEF_TLVRNG = 4;        
literal CLS$S_CLS_TLVRNG = 4;           
macro CLS$W_RANGE_LOW = 0,0,16,0 %;     
macro CLS$W_RANGE_HIGH = 2,0,16,0 %;    
literal CLS$K_END = 0;                  
literal CLS$K_SC_ENUMERATE = 1;         
literal CLS$K_SC_RANGE = 2;             
literal CLS$K_SC_MASK = 3;              
literal CLS$K_IC_ENUMERATE = 17;        
literal CLS$K_IC_RANGE = 18;            
literal CLS$K_IC_MASK = 19;             
literal CLS$K_VOID = 255;               
literal CLS$S_CLSDEF_TLV = 8;           
literal CLS$S_CLS_TLV = 8;              
macro CLS$B_TAG = 0,0,8,0 %;            
macro CLS$B_LENGTH = 1,0,8,0 %;
literal CLS$S_LENGTH = 1;               
macro CLS$B_COUNT = 1,0,8,0 %;          

macro CLS$B_MASK_SIZE = 1,0,8,0 %;      
macro CLS$R_VALUE_SET = 2,0,0,0 %;
literal CLS$S_VALUE_SET = 6;            
macro CLS$W_CATLST = 2,0,16,0 %;
literal CLS$S_CATLST = 2;               
macro CLS$L_RNGLST = 4,0,32,0 %;
literal CLS$S_RNGLST = 4;               
macro CLS$W_BASE = 2,0,16,0 %;          
macro CLS$L_MASK = 4,0,32,0 %;
literal CLS$S_MASK = 4;                 
macro CLS$W_VOID = 2,0,16,0 %;
literal CLS$S_VOID = 2;                 
literal CLS$K_MIN_SEC_LEV = 0;          
literal CLS$K_MIN_INT_LEV = 0;          
literal CLS$K_MAX_SEC_LEV = 255;        
literal CLS$K_MAX_INT_LEV = 255;        
literal CLS$K_MIN_SEC_CAT = 1;          
literal CLS$K_MIN_INT_CAT = 1;          
literal CLS$K_MAX_SEC_CAT = 65536;      
literal CLS$K_MAX_INT_CAT = 65536;      
literal CLS$K_MAX_SEC_CAT_S64I64 = 64;  
literal CLS$K_MAX_INT_CAT_S64I64 = 64;  
literal CLS$K_MAX_SEC_CAT_S128 = 128;   
literal CLS$K_MAX_SEC_CAT_DYN_CAT = 65536; 
literal CLS$K_MAX_INT_CAT_DYN_CAT = 65536; 
literal CLS$K_TYP_S64I64 = 0;           
literal CLS$K_TYP_S128 = 1;             
literal CLS$K_TYP_DYN_CAT = 2;          
literal CLS$K_LENGTH_HDR = 4;           
literal CLS$K_LENGTH_S64I64 = 20;       
literal CLS$K_LENGTH_S128 = 20;         
literal CLS$K_LENGTH_DYN_CAT = 4;       
literal CLS$S_CLSDEF = 20;              
literal CLS$K_LENGTH = 20;              
literal CLS$S_CLS = 20;
macro CLS$B_SEC_LEV = 0,0,8,0 %;        
macro CLS$B_INT_LEV = 1,0,8,0 %;        
macro CLS$B_TYPE = 2,0,8,0 %;           
macro CLS$B_TLVLST_SIZE = 3,0,8,0 %;    

macro CLS$Q_SEC_CAT_S64I64 = 4,0,0,0 %;
literal CLS$S_SEC_CAT_S64I64 = 8;       
macro CLS$Q_INT_CAT_S64I64 = 12,0,0,0 %;
literal CLS$S_INT_CAT_S64I64 = 8;       
macro CLS$O_SEC_CAT_S128 = 4,0,0,0 %;
literal CLS$S_SEC_CAT_S128 = 16;        
macro CLS$L_TLVLST = 4,0,32,0 %;
literal CLS$S_TLVLST = 4;               

macro CLS$Q_SEC_CAT_0 = 4,0,0,0 %;
literal CLS$S_SEC_CAT_0 = 8;            
macro CLS$Q_INT_CAT_0 = 12,0,0,0 %;
literal CLS$S_INT_CAT_0 = 8;            
macro CLS$O_SEC_CAT_1 = 4,0,0,0 %;
literal CLS$S_SEC_CAT_1 = 16;           

macro CLS$B_SECUR_LEV = 0,0,8,0 %;      
macro CLS$B_INTEG_LEV = 1,0,8,0 %;      
macro CLS$Q_SECUR_CAT = 4,0,0,0 %;
literal CLS$S_SECUR_CAT = 8;            
macro CLS$Q_INTEG_CAT = 12,0,0,0 %;
literal CLS$S_INTEG_CAT = 8;            

literal CLS$_SECSTR = 1;                
literal CLS$_INTSTR = 2;                
literal CLS$_CLSBLK = 3;                
literal CLS$_MINCLSBLK = 4;             
literal CLS$_MAXCLSBLK = 5;             
literal CLS$_WIDTH = 6;                 
literal CLS$_TRMDSC = 7;                
literal CLS$_INDENT = 8;                
literal CLS$_OLDCLSBLK = 9;             
literal CLS$_OLDMINCLS = 10;            
literal CLS$_OLDMAXCLS = 11;            
literal CLS$_TRANQUIL = 12;             
literal CLS$_FLAGS = 13;                
literal CLS$_MIN_ITEM_CODE = 1;
literal CLS$_MAX_ITEM_CODE = 13;
literal CLS$M_COMPRESS = %X'1';
literal CLS$M_EXPAND = %X'2';
literal CLS$S_FILL_112_ = 4;
macro CLS$L_FLAGS = 0,0,32,0 %;         
macro CLS$V_COMPRESS = 0,0,1,0 %;       
macro CLS$V_EXPAND = 0,1,1,0 %;         
 
literal CLUEVTHNDL$K_LENGTH = 8;        
literal CLUEVTHNDL$C_LENGTH = 8;        
literal cluevthndl$S_CLUEVTHNDL = 8;
macro cluevthndl$l_cluacb_addr = 0,0,32,0 %;
macro cluevthndl$l_seq_num = 4,0,32,0 %;
literal CLUEVT$C_ADD = 1;
literal CLUEVT$C_REMOVE = 2;
 

literal CMB$M_READONLY = %X'1';
literal CMB$M_WRITEONLY = %X'2';
literal CMB$S_CMBDEF = 4;
macro CMB$V_READONLY = 0,0,1,0 %;       
macro CMB$V_WRITEONLY = 0,1,1,0 %;      
 

literal CR$M_TMODE = %X'F';
literal CR$K_T026 = 0;                  
literal CR$K_T029 = 1;                  
literal CR$S_CRDEF = 1;
macro CR$V_TMODE = 0,0,4,0 %;
literal CR$S_TMODE = 4;                 

 

literal CSH$_READ_ALL = 23;             
literal CSH$_READ_NEW = 24;             
literal CSH$_SET_CLASS = 25;            
literal CSH$_RES1 = 26;
literal CSH$_RES2 = 27;
literal CSH$_RES3 = 28;
literal CSH$_RES4 = 29;
literal CSH$_SET_NEW = 30;              
literal CSH$_SET_TIMEOUT = 31;          
literal CSH$_RES5 = 32;
literal CSH$_RES6 = 33;
literal CSH$_RES7 = 34;
literal CSH$_RES8 = 35;
literal CSH$_READ_QUANT = 36;           
literal CSH$_SET_QUANT = 37;            
literal CSH$_RES9 = 38;
literal CSH$_RESA = 39;
literal CSH$_RESB = 40;
literal CSH$_RESC = 41;
literal CSH$_SET_ATTN_AST = 42;         
literal CSH$_RSED = 43;
literal CSH$_RESE = 44;
literal CSH$_RESF = 45;
literal CSH$_RES0 = 46;
literal CSH$_CLEAR_ATTN_AST = 47;       
literal CSH$_MAX_SCHED_FUNC = 48;
literal CSH$V_NEW_PROC = 1;             

literal CSHC$K_LENGTH = 8;
literal CSHC$C_LENGTH = 8;
literal CSHC$S_CSHC = 8;
macro CSHC$L_EPID = 0,0,32,0 %;         
macro CSHC$W_CLASS = 4,0,16,1 %;        
macro CSHC$W_WINDFALL = 6,0,16,0 %;     

literal CSHP$K_LENGTH = 24;
literal CSHP$C_LENGTH = 24;
literal CSHP$S_CSHP = 24;
macro CSHP$L_STATUS = 0,0,32,0 %;       
macro CSHP$W_PIX = 4,0,16,0 %;          
macro CSHP$B_PRI = 6,0,8,1 %;           
macro CSHP$B_PRIB = 7,0,8,1 %;          
macro CSHP$L_EPID = 8,0,32,0 %;         
macro CSHP$T_ACCOUNT = 12,0,0,0 %;
literal CSHP$S_ACCOUNT = 8;             
macro CSHP$L_CPUTIM = 20,0,32,0 %;      
 

literal CST$K_CPU_STOP = 1;
literal CST$K_CPU_MIGRATE = 2;
literal CST$K_CPU_START = 3;
literal CST$K_CPU_ASSIGN = 4;
literal CST$K_CPU_DEASSIGN = 5;
literal CST$K_CPU_FAILOVER = 6;
literal CST$K_CPU_POWER_OFF = 7;
literal CST$K_CPU_POWER_ON = 8;

literal CST$m_reserved1 = %X'FF';
literal CST$M_CPU_STOP = %X'100';
literal CST$M_CPU_MIGRATE = %X'200';
literal CST$M_CPU_START = %X'400';
literal CST$M_CPU_ASSIGN = %X'800';
literal CST$M_CPU_DEASSIGN = %X'1000';
literal CST$M_CPU_FAILOVER = %X'2000';
literal CST$M_CPU_POWER_OFF = %X'4000';
literal CST$M_CPU_POWER_ON = %X'8000';
literal CST$S_CST_MASK = 2;
macro CST$v_reserved1 = 0,0,8,0 %;
literal CST$s_reserved1 = 8;
macro CST$V_CPU_STOP = 0,8,1,0 %;
macro CST$V_CPU_MIGRATE = 0,9,1,0 %;
macro CST$V_CPU_START = 0,10,1,0 %;
macro CST$V_CPU_ASSIGN = 0,11,1,0 %;
macro CST$V_CPU_DEASSIGN = 0,12,1,0 %;
macro CST$V_CPU_FAILOVER = 0,13,1,0 %;
macro CST$V_CPU_POWER_OFF = 0,14,1,0 %;
macro CST$V_CPU_POWER_ON = 0,15,1,0 %;

literal CST$K_PARTITION = -1;
literal CST$K_COMMUNITY = -2;
literal CST$K_HARD_PARTITION = -3;
literal CST$K_SW_ROOT = -4;

literal CST$K_ANY_OWNED_CPU = -1;
literal CST$K_ANY_ACTIVE_CPU = -2;
literal CST$K_ANY_STOPPED_CPU = -3;
literal CST$K_ANY_UNOWNED_CPU = -4;

literal CST$M_CPU_DEFAULT_CAPABILITIES = %X'1';
literal CST$M_CPU_ALLOW_ORPHANS = %X'2';
literal CST$S_CST_FLAGS = 1;
macro CST$V_CPU_DEFAULT_CAPABILITIES = 0,0,1,0 %;
macro CST$V_CPU_ALLOW_ORPHANS = 0,1,1,0 %;
 

literal AT$_MBA = 0;                    
literal AT$_UBA = 1;                    
literal AT$_DR = 2;                     
literal AT$_MPM = 3;                    
literal AT$_CI = 4;                     
literal AT$_NULL = 5;                   
literal AT$_BDA = 6;                    
literal AT$_DMB32 = 7;                  
literal AT$_DRB32 = 8;                  
literal AT$_BVP = 9;                    
literal AT$_BVP_SSP = 10;               
literal AT$_BVP_NIP = 11;               
literal AT$_KA410 = 12;                 
literal AT$_KA420 = 12;                 
literal AT$_GENBI = 13;                 
literal AT$_NBI = 14;                   
literal AT$_DISK9 = 15;
literal AT$_XBI = 16;
literal AT$_TERM9 = 17;
literal AT$_TAPE9 = 18;
literal AT$_PRTR9 = 19;
literal AT$_SFUN9 = 20;
literal AT$_USER9 = 21;
literal AT$_MBUSIO = 22;
literal AT$_MBUSGFX = 23;
literal AT$_KA640 = 24;
literal AT$_XWATCH = 25;
literal AT$_XBI_PLUS_XMI = 26;
literal AT$_XBI_PLUS_BI = 27;
literal AT$_XJA = 28;
literal AT$_HSX50 = 29;
literal AT$_KDM70 = 29;
literal AT$_NI = 30;
literal AT$_KA43 = 31;
literal AT$_SJA = 32;
literal AT$_GENXMI = 33;
literal AT$_KA440 = 34;
literal AT$_KA46 = 34;
literal AT$_KA520 = 35;
literal AT$_XSA = 36;
literal AT$_XZA = 37;
literal AT$_XZA_SCSI = 37;
literal AT$_VME = 38;
literal AT$_IOP = 39;
literal AT$_LAMB = 40;
literal AT$_KA49 = 41;
literal AT$_TC = 42;
literal AT$_X1303 = 43;
literal AT$_XMI = 44;
literal AT$_FBUS = 45;
literal AT$_COREIO = 46;
literal AT$_KA0202 = 47;
literal AT$_KA0202_LBUS = 48;
literal AT$_KA0302 = 49;
literal AT$_KA0402 = 50;
literal AT$_TURBO_SCSI = 51;
literal AT$_CIMNA = 52;
literal AT$_XZA_DSSI = 53;
literal AT$_DEMNA = 54;
literal AT$_FFA = 55;
literal AT$_KA0602 = 56;
literal AT$_EISA = 57;
literal AT$_VTI_COMBO = 58;
literal AT$_KA0702 = 64;
literal AT$_TC_MULTI_NI = 65;
literal AT$_AHA_1742A = 66;
literal AT$_KA0902 = 67;
literal AT$_PCI = 68;
literal AT$_KA0802 = 69;
literal AT$_MULTIFUNCTION_PCI = 70;
literal AT$_ISA = 71;
literal AT$_XBUS = 72;
literal AT$_KA0C05 = 73;
literal AT$_KA0E04 = 74;
literal AT$_KA0D02 = 75;
literal AT$_THIRDPARTY0 = 76;
literal AT$_THIRDPARTY1 = 77;
literal AT$_THIRDPARTY2 = 78;
literal AT$_THIRDPARTY3 = 79;
literal AT$_THIRDPARTY4 = 80;
literal AT$_THIRDPARTY5 = 81;
literal AT$_THIRDPARTY6 = 82;
literal AT$_THIRDPARTY7 = 83;
literal AT$_MULTIFUNCTION_ISA = 84;
literal AT$_KA0F05 = 85;
literal AT$_LMCP = 86;
literal AT$_TIOP = 87;
literal AT$_ITIOP = 88;
literal AT$_KA1102 = 89;
literal AT$_KA1504 = 90;
literal AT$_HPC = 91;
literal AT$_PCMCIA = 92;
literal AT$_KA1402 = 93;
literal AT$_KA0905 = 94;
literal AT$_KA1802 = 95;
literal AT$_KA1805 = 96;
literal AT$_MEMCHAN = 97;
literal AT$_KA1B02 = 98;
literal AT$_KA1B05 = 99;
literal AT$_KA1A05 = 100;
literal AT$_KA1605 = 101;
literal AT$_MC_BUS = 102;
literal AT$_KA1105 = 103;
literal AT$_KA1702 = 104;
literal AT$_KA1E07 = 105;
literal AT$_KA2005 = 106;
literal AT$_KA2405 = 107;
literal AT$_KA2208 = 108;
literal AT$_KA2508 = 109;
literal AT$_KA2308 = 110;
literal AT$_WFQBB = 111;
literal AT$_WFIOP = 112;
literal AT$_WFPCA = 113;
literal AT$_KA2608 = 114;
literal AT$_KA270F = 115;
literal AT$_IO7 = 116;
literal AT$_I2000 = 117;
literal AT$_ACPI_IA64_PLTFRM = 118;

literal DC$_DISK = 1;                   
literal DC$_TAPE = 2;                   
literal DC$_SCOM = 32;                  
literal DC$_CARD = 65;                  
literal DC$_TERM = 66;                  
literal DC$_LP = 67;                    
literal DC$_WORKSTATION = 70;           
literal DC$_REALTIME = 96;              
literal DC$_DECVOICE = 97;              
literal DC$_AUDIO = 98;                 
literal DC$_VIDEO = 99;                 
literal DC$_BUS = 128;                  
literal DC$_MAILBOX = 160;              
literal DC$_REMCSL_STORAGE = 170;       
literal DC$_MISC = 200;                 

literal DT$_RK06 = 1;                   
literal DT$_RK07 = 2;                   
literal DT$_RP04 = 3;                   
literal DT$_RP05 = 4;                   
literal DT$_RP06 = 5;                   
literal DT$_RM03 = 6;                   
literal DT$_RP07 = 7;                   
literal DT$_RP07HT = 8;                 
literal DT$_RL01 = 9;                   
literal DT$_RL02 = 10;                  
literal DT$_RX02 = 11;                  
literal DT$_RX04 = 12;                  
literal DT$_RM80 = 13;                  
literal DT$_TU58 = 14;                  
literal DT$_RM05 = 15;                  
literal DT$_RX01 = 16;                  
literal DT$_ML11 = 17;                  
literal DT$_RB02 = 18;                  
literal DT$_RB80 = 19;                  
literal DT$_RA80 = 20;                  
literal DT$_RA81 = 21;                  
literal DT$_RA60 = 22;                  
literal DT$_RZ01 = 23;                  
literal DT$_RC25 = 23;                  
literal DT$_RZF01 = 24;                 
literal DT$_RCF25 = 24;                 
literal DT$_RD51 = 25;                  
literal DT$_RX50 = 26;                  
literal DT$_RD52 = 27;                  
literal DT$_RD53 = 28;                  
literal DT$_RD26 = 29;                  
literal DT$_RA82 = 30;                  
literal DT$_RD31 = 31;                  
literal DT$_RD54 = 32;                  
literal DT$_CRX50 = 33;                 
literal DT$_RRD50 = 34;                 
literal DT$_GENERIC_DU = 35;            
literal DT$_RX33 = 36;                  
literal DT$_RX18 = 37;                  
literal DT$_RA70 = 38;
literal DT$_RA90 = 39;
literal DT$_RD32 = 40;
literal DT$_DISK9 = 41;
literal DT$_RX35 = 42;
literal DT$_RF30 = 43;
literal DT$_RF70 = 44;
literal DT$_RF71 = 44;
literal DT$_RD33 = 45;
literal DT$_ESE20 = 46;
literal DT$_TU56 = 47;
literal DT$_RZ22 = 48;
literal DT$_RZ23 = 49;
literal DT$_RZ24 = 50;
literal DT$_RZ55 = 51;
literal DT$_RRD40S = 52;
literal DT$_RRD40 = 53;
literal DT$_GENERIC_DK = 54;
literal DT$_RX23 = 55;
literal DT$_RF31 = 56;
literal DT$_RF72 = 57;
literal DT$_RAM_DISK = 58;
literal DT$_RZ25 = 59;
literal DT$_RZ56 = 60;
literal DT$_RZ57 = 61;
literal DT$_RX23S = 62;
literal DT$_RX33S = 63;
literal DT$_RA92 = 64;
literal DT$_SSTRIPE = 65;
literal DT$_RZ23L = 66;
literal DT$_RX26 = 67;
literal DT$_RZ57I = 68;
literal DT$_RZ31 = 69;
literal DT$_RZ58 = 70;
literal DT$_SCSI_MO = 71;
literal DT$_RWZ01 = 71;
literal DT$_RRD42 = 72;
literal DT$_CD_LOADER_1 = 73;
literal DT$_ESE25 = 74;
literal DT$_RFH31 = 75;
literal DT$_RFH72 = 76;
literal DT$_RF73 = 77;
literal DT$_RFH73 = 78;
literal DT$_RA72 = 79;
literal DT$_RA71 = 80;
literal DT$_RAH72 = 80;
literal DT$_RF32 = 81;
literal DT$_RF35 = 81;
literal DT$_RFH32 = 82;
literal DT$_RFH35 = 82;
literal DT$_RFF31 = 83;
literal DT$_RF31F = 83;
literal DT$_RZ72 = 84;
literal DT$_RZ73 = 85;
literal DT$_RZ35 = 86;
literal DT$_RZ24L = 87;
literal DT$_RZ25L = 88;
literal DT$_RZ55L = 89;
literal DT$_RZ56L = 90;
literal DT$_RZ57L = 91;
literal DT$_RA73 = 92;
literal DT$_RZ26 = 93;
literal DT$_RZ36 = 94;
literal DT$_RZ74 = 95;
literal DT$_ESE52 = 96;
literal DT$_ESE56 = 97;
literal DT$_ESE58 = 98;
literal DT$_RZ27 = 99;
literal DT$_RZ37 = 100;
literal DT$_RZ34L = 101;
literal DT$_RZ35L = 102;
literal DT$_RZ36L = 103;
literal DT$_RZ38 = 104;
literal DT$_RZ75 = 105;
literal DT$_RZ59 = 106;
literal DT$_RZ13 = 107;
literal DT$_RZ14 = 108;
literal DT$_RZ15 = 109;
literal DT$_RZ16 = 110;
literal DT$_RZ17 = 111;
literal DT$_RZ18 = 112;
literal DT$_EZ51 = 113;
literal DT$_EZ52 = 114;
literal DT$_EZ53 = 115;
literal DT$_EZ54 = 116;
literal DT$_EZ58 = 117;
literal DT$_EF51 = 118;
literal DT$_EF52 = 119;
literal DT$_EF53 = 120;
literal DT$_EF54 = 121;
literal DT$_EF58 = 122;
literal DT$_RF36 = 123;
literal DT$_RF37 = 124;
literal DT$_RF74 = 125;
literal DT$_RF75 = 126;
literal DT$_HSZ10 = 127;
literal DT$_RZ28 = 128;
literal DT$_GENERIC_RX = 180;
literal DT$_FD1 = 129;                  
literal DT$_FD2 = 130;                  
literal DT$_FD3 = 131;                  
literal DT$_FD4 = 132;                  
literal DT$_FD5 = 133;                  
literal DT$_FD6 = 134;                  
literal DT$_FD7 = 135;                  
literal DT$_FD8 = 136;                  
literal DT$_RZ29 = 137;
literal DT$_RZ26L = 138;
literal DT$_RRD43 = 139;
literal DT$_RRD44 = 140;
literal DT$_HSX00 = 141;
literal DT$_HSX01 = 142;
literal DT$_RZ26B = 143;
literal DT$_RZ27B = 144;
literal DT$_RZ28B = 145;
literal DT$_RZ29B = 146;
literal DT$_RZ73B = 147;
literal DT$_RZ74B = 148;
literal DT$_RZ75B = 149;
literal DT$_RWZ21 = 150;
literal DT$_RZ27L = 151;
literal DT$_HSZ20 = 152;
literal DT$_HSZ40 = 153;
literal DT$_HSZ15 = 154;
literal DT$_RZ26M = 155;
literal DT$_RW504 = 156;
literal DT$_RW510 = 157;
literal DT$_RW514 = 158;
literal DT$_RW516 = 159;
literal DT$_RWZ52 = 160;
literal DT$_RWZ53 = 161;
literal DT$_RWZ54 = 162;
literal DT$_RWZ31 = 163;
literal DT$_EZ31 = 164;
literal DT$_EZ32 = 165;
literal DT$_EZ33 = 166;
literal DT$_EZ34 = 167;
literal DT$_EZ35 = 168;
literal DT$_EZ31L = 169;
literal DT$_EZ32L = 170;
literal DT$_EZ33L = 171;
literal DT$_RZ28L = 172;
literal DT$_RWZ51 = 173;
literal DT$_EZ56R = 174;
literal DT$_RAID0 = 175;
literal DT$_RAID5 = 176;
literal DT$_CONSOLE_CALLBACK = 177;
literal DT$_FILES_64 = 178;
literal DT$_SWXCR = 179;
literal DT$_SNAPPY_DISK = 180;
literal DT$_SNAPPY_POOL = 181;

literal DT$_TE16 = 1;                   
literal DT$_TU45 = 2;                   
literal DT$_TU77 = 3;                   
literal DT$_TS11 = 4;                   
literal DT$_TU78 = 5;                   
literal DT$_TA78 = 6;                   
literal DT$_TU80 = 7;                   
literal DT$_TU81 = 8;                   
literal DT$_TA81 = 9;
literal DT$_TK50 = 10;                  
literal DT$_MR_TU70 = 11;               
literal DT$_MR_TU72 = 12;               
literal DT$_MW_TSU05 = 13;              
literal DT$_MW_TSV05 = 14;              
literal DT$_TK70 = 15;                  
literal DT$_RV20 = 16;
literal DT$_RV80 = 16;
literal DT$_TK60 = 17;                  
literal DT$_GENERIC_TU = 18;            
literal DT$_TA79 = 19;                  
literal DT$_TAPE9 = 20;
literal DT$_TA90 = 21;
literal DT$_TF30 = 22;
literal DT$_TF85 = 22;
literal DT$_TF70 = 23;
literal DT$_RV60 = 24;
literal DT$_TZ30 = 25;
literal DT$_TM32 = 26;
literal DT$_TZX0 = 27;
literal DT$_TSZ05 = 27;
literal DT$_GENERIC_MK = 28;
literal DT$_TK50S = 29;
literal DT$_TZ30S = 30;
literal DT$_TK70L = 31;
literal DT$_TLZ04 = 32;
literal DT$_TZK10 = 33;
literal DT$_TSZ07 = 34;
literal DT$_TSZ08 = 35;
literal DT$_TA90E = 36;
literal DT$_TZK11 = 37;
literal DT$_TZ85 = 38;
literal DT$_TZ86 = 39;
literal DT$_TZ87 = 40;
literal DT$_TZ857 = 41;
literal DT$_EXABYTE = 42;
literal DT$_TAPE_LOADER_1 = 43;
literal DT$_TA91 = 44;
literal DT$_TLZ06 = 45;
literal DT$_TA85 = 46;
literal DT$_TKZ60 = 47;
literal DT$_TLZ6 = 48;
literal DT$_TZ867 = 49;
literal DT$_TZ877 = 50;
literal DT$_TAD85 = 51;
literal DT$_TF86 = 52;
literal DT$_TKZ09 = 53;
literal DT$_TA86 = 54;
literal DT$_TA87 = 55;
literal DT$_TD34 = 56;
literal DT$_TD44 = 57;
literal DT$_HST00 = 58;
literal DT$_HST01 = 59;
literal DT$_TLZ07 = 60;
literal DT$_TLZ7 = 61;
literal DT$_TZ88 = 62;
literal DT$_TZ885 = 63;
literal DT$_TZ887 = 64;
literal DT$_TZ89 = 65;
literal DT$_TZ895 = 66;
literal DT$_TZ897 = 67;
literal DT$_TZ875 = 68;
literal DT$_TL810 = 69;
literal DT$_TL820 = 70;
literal DT$_TZ865 = 71;

literal DT$_TTYUNKN = 0;                
literal DT$_VT05 = 1;                   
literal DT$_FT1 = 16;                   
literal DT$_FT2 = 17;
literal DT$_FT3 = 18;
literal DT$_FT4 = 19;
literal DT$_FT5 = 20;
literal DT$_FT6 = 21;
literal DT$_FT7 = 22;
literal DT$_FT8 = 23;                   
literal DT$_LAX = 32;                   
literal DT$_LA36 = 32;                  
literal DT$_LA120 = 33;
literal DT$_VT5X = 64;                  
literal DT$_VT52 = 64;                  
literal DT$_VT55 = 65;                  
literal DT$_TQ_BTS = 4;                 
literal DT$_TEK401X = 10;               
literal DT$_VT100 = 96;                 
literal DT$_VK100 = 2;
literal DT$_VT173 = 3;
literal DT$_LA34 = 34;
literal DT$_LA38 = 35;
literal DT$_LA12 = 36;
literal DT$_LA24 = 37;
literal DT$_LA100 = 37;
literal DT$_LQP02 = 38;
literal DT$_VT101 = 97;
literal DT$_VT102 = 98;
literal DT$_VT105 = 99;
literal DT$_VT125 = 100;
literal DT$_VT131 = 101;
literal DT$_VT132 = 102;
literal DT$_DZ11 = 66;                  
literal DT$_DZ32 = 67;                  
literal DT$_DZ730 = 68;                 
literal DT$_DMZ32 = 69;                 
literal DT$_DHV = 70;                   
literal DT$_DHU = 71;                   
literal DT$_SLU = 72;                   
literal DT$_TERM9 = 73;                 
literal DT$_LAT = 74;                   

literal DT$_VS100 = 1;                  
literal DT$_VS125 = 2;                  
literal DT$_VL_VS8200 = 3;              
literal DT$_VD = 4;                     
literal DT$_DECW_OUTPUT = 5;
literal DT$_DECW_INPUT = 6;
literal DT$_DECW_PSEUDO = 7;

literal DT$_DMC11 = 1;                  
literal DT$_DMR11 = 2;                  
literal DT$_XK_3271 = 3;                
literal DT$_XJ_2780 = 4;                
literal DT$_NW_X25 = 5;                 
literal DT$_NV_X29 = 6;                 
literal DT$_SB_ISB11 = 7;               
literal DT$_MX_MUX200 = 8;              
literal DT$_DMP11 = 9;                  
literal DT$_DMF32 = 10;                 
literal DT$_XV_3271 = 11;               
literal DT$_CI = 12;                    
literal DT$_NI = 13;                    
literal DT$_UNA11 = 14;                 
literal DT$_DEUNA = 14;                 
literal DT$_YN_X25 = 15;                
literal DT$_YO_X25 = 16;                
literal DT$_YP_ADCCP = 17;              
literal DT$_YQ_3271 = 18;               
literal DT$_YR_DDCMP = 19;              
literal DT$_YS_SDLC = 20;               
literal DT$_UK_KTC32 = 21;              
literal DT$_DEQNA = 22;                 
literal DT$_DMV11 = 23;                 
literal DT$_ES_LANCE = 24;              
literal DT$_DELUA = 25;                 
literal DT$_NQ_3271 = 26;               
literal DT$_DMB32 = 27;                 
literal DT$_YI_KMS11K = 28;             
literal DT$_ET_DEBNT = 29;              
literal DT$_ET_DEBNA = 29;              
literal DT$_SJ_DSV11 = 30;              
literal DT$_SL_DSB32 = 31;              
literal DT$_ZS_DST32 = 32;              
literal DT$_XQ_DELQA = 33;              
literal DT$_ET_DEBNI = 34;              
literal DT$_EZ_SGEC = 35;               
literal DT$_EX_DEMNA = 36;
literal DT$_DIV32 = 37;
literal DT$_XQ_DEQTA = 38;
literal DT$_FT_NI = 39;
literal DT$_EP_LANCE = 40;
literal DT$_KWV32 = 41;
literal DT$_SM_DSF32 = 42;
literal DT$_FX_DEMFA = 43;
literal DT$_SF_DSF32 = 44;              
literal DT$_SE_DUP11 = 45;              
literal DT$_SE_DPV11 = 46;              
literal DT$_ZT_DSW = 47;                
literal DT$_FC_DEFZA = 48;              
literal DT$_EC_PMAD = 49;               
literal DT$_EZ_TGEC = 50;               
literal DT$_EA_DEANA = 51;              
literal DT$_EY_NITC2 = 52;              
literal DT$_ER_DE422 = 53;              
literal DT$_ER_DE200 = 54;              
literal DT$_EW_TULIP = 55;              
literal DT$_FA_DEFAA = 56;              
literal DT$_FC_DEFTA = 57;              
literal DT$_FQ_DEFQA = 58;              
literal DT$_FR_DEFEA = 59;              
literal DT$_FW_DEFPA = 60;              
literal DT$_IC_DETRA = 61;              
literal DT$_IQ_DEQRA = 62;              
literal DT$_IR_DW300 = 63;              
literal DT$_ZR_SCC = 64;                
literal DT$_ZY_DSYT1 = 65;              
literal DT$_ZE_DNSES = 66;              
literal DT$_ER_DE425 = 67;              
literal DT$_EW_DE435 = 68;              
literal DT$_ER_DE205 = 69;              
literal DT$_HC_OTTO = 70;               
literal DT$_ZS_PBXDI = 71;              
literal DT$_EL_ELAN = 72;               
literal DT$_HW_OTTO = 73;               
literal DT$_EO_3C598 = 74;              
literal DT$_IW_TC4048 = 75;             
literal DT$_EW_DE450 = 76;              
literal DT$_EW_DE500 = 77;              
literal DT$_CL_CLIP = 78;               
literal DT$_ZW_PBXDP = 79;              
literal DT$_HW_METEOR = 80;             
literal DT$_ER_DE305 = 81;              
literal DT$_EW_DEGPA = 82;              
literal DT$_IW_RACORE = 83;             
literal DT$_EB_SMLAN = 84;              
literal DT$_EI_82558 = 85;              
literal DT$_EI_82559 = 86;              
literal DT$_HW_HE622 = 87;              
literal DT$_HW_HE155 = 88;              
literal DT$_EW_BCM5703 = 89;            
literal DT$_EW_BCM5704 = 90;            
literal DT$_EW_WL200 = 91;              
literal DT$_EW_BCM5701 = 92;            
literal DT$_LL_LLAN = 93;               

literal DT$_LP11 = 1;                   
literal DT$_LA11 = 2;                   
literal DT$_LA180 = 3;                  
literal DT$_LC_DMF32 = 4;               
literal DT$_LI_DMB32 = 5;               
literal DT$_PRTR9 = 6;                  
literal DT$_SCSI_SCANNER_1 = 7;         
literal DT$_PC_PRINTER = 8;             
literal DT$_CR11 = 1;                   

literal DT$_MBX = 1;                    
literal DT$_SHRMBX = 2;                 
literal DT$_NULL = 3;                   
literal DT$_PIPE = 4;                   

literal DT$_DAP_DEVICE = 1;             

literal DT$_LPA11 = 1;                  
literal DT$_DR780 = 2;                  
literal DT$_DR750 = 3;                  
literal DT$_DR11W = 4;                  
literal DT$_PCL11R = 5;                 
literal DT$_PCL11T = 6;                 
literal DT$_DR11C = 7;                  
literal DT$_BS_DT07 = 8;                
literal DT$_XP_PCL11B = 9;              
literal DT$_IX_IEX11 = 10;              
literal DT$_FP_FEPCM = 11;              
literal DT$_TK_FCM = 12;                
literal DT$_XI_DR11C = 13;              
literal DT$_XA_DRV11WA = 14;            
literal DT$_DRB32 = 15;                 
literal DT$_HX_DRQ3B = 16;              

literal DT$_DECVOICE = 1;               
literal DT$_DTC04 = 2;                  
literal DT$_DTC05 = 3;                  
literal DT$_DTCN5 = 4;                  

literal DT$_AMD79C30A = 1;              

literal DT$_CI780 = 1;                  
literal DT$_CI750 = 2;                  
literal DT$_UQPORT = 3;                 
literal DT$_UDA50 = 3;                  
literal DT$_UDA50A = 4;                 
literal DT$_LESI = 5;                   
literal DT$_TU81P = 6;                  
literal DT$_RDRX = 7;                   
literal DT$_TK50P = 8;                  
literal DT$_RUX50P = 9;                 
literal DT$_RC26P = 10;                 
literal DT$_QDA50 = 11;                 
literal DT$_KDA50 = 11;                 
literal DT$_BDA50 = 12;                 
literal DT$_KDB50 = 12;                 
literal DT$_RRD50P = 13;                
literal DT$_QDA25 = 14;                 
literal DT$_KDA25 = 14;                 
literal DT$_BCI750 = 15;                
literal DT$_BCA = 16;                   
literal DT$_RQDX3 = 17;                 
literal DT$_NISCA = 18;                 
literal DT$_AIO = 19;                   
literal DT$_KFBTA = 19;                 
literal DT$_AIE = 20;                   
literal DT$_DEBNT = 20;                 
literal DT$_BSA = 21;
literal DT$_KSB50 = 21;
literal DT$_TK70P = 22;                 
literal DT$_RV20P = 23;
literal DT$_RV80P = 23;
literal DT$_TK60P = 24;                 
literal DT$_SII = 25;
literal DT$_KFSQSA = 26;
literal DT$_KFQSA = 26;
literal DT$_SHAC = 27;
literal DT$_CIXCD = 28;
literal DT$_N5380 = 29;
literal DT$_SCSII = 30;
literal DT$_HSX50 = 31;
literal DT$_KDM70 = 31;
literal DT$_TM32P = 32;
literal DT$_TK7LP = 33;
literal DT$_SWIFT = 34;
literal DT$_N53C94 = 35;
literal DT$_KFMSA = 36;
literal DT$_SCSI_XTENDR = 37;
literal DT$_FT_TRACE_RAM = 38;
literal DT$_XVIB = 39;
literal DT$_XZA_SCSI = 40;
literal DT$_XZA_DSSI = 41;
literal DT$_N710_SCSI = 42;
literal DT$_N710_DSSI = 43;
literal DT$_AHA1742A = 44;
literal DT$_TZA_SCSI = 45;
literal DT$_N810_SCSI = 46;
literal DT$_CIPCA = 47;
literal DT$_ISP1020 = 48;
literal DT$_MC_SPUR = 49;
literal DT$_PZA_SCSI = 50;
literal DT$_MCSCA = 51;                 
literal DT$_SMCI = 52;                  
literal DT$_KZPCM_SCSI = 53;
literal DT$_SYM896_SCSI = 54;
literal DT$_FCP_SCSI = 55;
literal DT$_LP7000_FC = 56;
literal DT$_SYM895_SCSI = 57;
literal DT$_KZPCA_SCSI = 58;
literal DT$_ADAPTEC7892_SCSI = 59;
literal DT$_ADAPTEC7895_SCSI = 60;
literal DT$_ADAPTEC7897_SCSI = 61;
literal DT$_ADAPTEC7899_SCSI = 62;
literal DT$_CISS = 63;
literal DT$_VERSASTOR = 64;

literal DT$_DN11 = 1;                   
literal DT$_PV = 2;                     
literal DT$_SFUN9 = 3;
literal DT$_USER9 = 4;
literal DT$_GENERIC_SCSI = 5;
literal DT$_DMA_520 = 6;
literal DT$_T3270 = 7;
 

macro DDTM$X_TRANSACTION_ID = 0,0,0,0 %;
literal DDTM$S_TRANSACTION_ID = 16;
macro DDTM$X_UTC_DATE_TIME = 0,0,0,0 %;
literal DDTM$S_UTC_DATE_TIME = 16;
literal DDTM$S_TID = 16;                

literal DDTM$M_SYNC = %X'1';
literal DDTM$M_NONDEFAULT = %X'2';
literal DDTM$M_PROCESS = %X'4';
literal DDTM$M_VOLATILE = %X'8';
literal DDTM$M_RUNDOWN = %X'10';
literal DDTM$M_CANCEL = %X'20';
literal DDTM$M_FULL_STATE = %X'40';
literal DDTM$M_BRANCH_UNSYNCHED = %X'80';
literal DDTM$M_COORDINATOR = %X'100';
literal DDTM$M_NOWAIT = %X'200';
literal DDTM$M_FINAL_STATE = %X'400';
literal DDTM$M_LATE = %X'80000000';
literal DDTM$S_FLAGS = 4;
macro DDTM$V_SYNC = 0,0,1,0 %;          
macro DDTM$V_NONDEFAULT = 0,1,1,0 %;    
macro DDTM$V_PROCESS = 0,2,1,0 %;       
macro DDTM$V_VOLATILE = 0,3,1,0 %;      
macro DDTM$V_RUNDOWN = 0,4,1,0 %;       
macro DDTM$V_CANCEL = 0,5,1,0 %;        
macro DDTM$V_FULL_STATE = 0,6,1,0 %;    
macro DDTM$V_BRANCH_UNSYNCHED = 0,7,1,0 %; 
macro DDTM$V_COORDINATOR = 0,8,1,0 %;   
macro DDTM$V_NOWAIT = 0,9,1,0 %;        
macro DDTM$V_FINAL_STATE = 0,10,1,0 %;  
macro DDTM$V_LATE = 0,31,1,0 %;         

literal DDTM$M_EV_PREPARE = %X'1';
literal DDTM$M_EV_ABORT = %X'2';
literal DDTM$M_EV_COMMIT = %X'4';
literal DDTM$M_EV_DEFAULT_TRANS = %X'8';
literal DDTM$M_EV_TRANS_START = %X'10';
literal DDTM$S_EVENT_MASK = 4;
macro DDTM$V_EV_PREPARE = 0,0,1,0 %;    
macro DDTM$V_EV_ABORT = 0,1,1,0 %;      
macro DDTM$V_EV_COMMIT = 0,2,1,0 %;     
macro DDTM$V_EV_DEFAULT_TRANS = 0,3,1,0 %; 
macro DDTM$V_EV_TRANS_START = 0,4,1,0 %; 

literal DDTM$K_TX_PREPARE = 1;          
literal DDTM$K_TX_COMMIT = 2;           
literal DDTM$K_TX_ABORT = 3;            
literal DDTM$K_TX_RECOVER_COMMIT = 4;   
literal DDTM$K_TX_RECOVER_ABORT = 5;    

literal DDTM$K_PREPARE = 1;             
literal DDTM$K_COMMIT = 2;              
literal DDTM$K_ABORT = 3;               
literal DDTM$K_ONE_PHASE_COMMIT = 4;    
literal DDTM$K_DEFAULT_CLEARED = 5;     
literal DDTM$K_DEFAULT_SET = 6;         
literal DDTM$K_STARTED_DEFAULT = 7;     
literal DDTM$K_STARTED_NONDEFAULT = 8;  
literal DDTM$K_RECOVER_COMMITTED = 9;   
literal DDTM$K_RECOVER_ERROR = 10;      
literal DDTM$K_RECOVER_INDOUBT = 11;    
literal DDTM$K_RECOVER_RESOLVE = 12;    

literal DDTM$S_ASTDEF = 56;             
macro DDTM$L_ARGLEN = 0,0,32,0 %;       
macro DDTM$A_TID = 4,0,32,0 %;          
macro DDTM$L_PART_ID = 8,0,32,0 %;      
macro DDTM$L_RM_CTX = 12,0,32,0 %;      
macro DDTM$L_OPTYPE = 16,0,32,0 %;      
macro DDTM$L_REASON = 20,0,32,0 %;      
macro DDTM$O_UTC_CMT_TIME = 24,0,0,0 %;
literal DDTM$S_UTC_CMT_TIME = 16;       
macro DDTM$O_UTC_LATEST = 40,0,0,0 %;
literal DDTM$S_UTC_LATEST = 16;         

literal DDTM$S_REPORTDEF = 72;
macro DDTM$L_REPORT_LEN = 0,0,32,0 %;   
macro DDTM$A_TID_PTR = 4,0,32,0 %;      
macro DDTM$L_REPORT_ID = 8,0,32,0 %;    
macro DDTM$L_RM_CONTEXT = 12,0,32,0 %;  
macro DDTM$L_EVENT_TYPE = 16,0,32,0 %;  
macro DDTM$L_ABORT_REASON = 20,0,32,0 %; 
macro DDTM$O_COMMIT_TIME = 24,0,0,0 %;
literal DDTM$S_COMMIT_TIME = 16;        
macro DDTM$O_LATEST_TIME = 40,0,0,0 %;
literal DDTM$S_LATEST_TIME = 16;        
macro DDTM$Q_TX_CLASS = 56,0,0,0 %;
literal DDTM$S_TX_CLASS = 8;            
macro DDTM$Q_PART_NAME = 64,0,0,0 %;
literal DDTM$S_PART_NAME = 8;           
 

literal DELPRC$M_EXIT = %X'4';
literal DELPRC$M_NOEXIT = %X'8';
literal DELPRC$S_DELPRCFLAGS = 4;
macro DELPRC$V_MODE = 0,0,2,0 %;
literal DELPRC$S_MODE = 2;              
macro DELPRC$V_EXIT = 0,2,1,0 %;        
macro DELPRC$V_NOEXIT = 0,3,1,0 %;      
 

literal DEV$M_REC = %X'1';
literal DEV$M_CCL = %X'2';
literal DEV$M_TRM = %X'4';
literal DEV$M_DIR = %X'8';
literal DEV$M_SDI = %X'10';
literal DEV$M_SQD = %X'20';
literal DEV$M_SPL = %X'40';
literal DEV$M_OPR = %X'80';
literal DEV$M_RCT = %X'100';
literal DEV$M_QSVD = %X'200';
literal DEV$M_QSVBL = %X'400';
literal DEV$M_MPDEV_SECONDARY = %X'800';
literal DEV$M_MPDEV_MEMBER = %X'1000';
literal DEV$M_NET = %X'2000';
literal DEV$M_FOD = %X'4000';
literal DEV$M_DUA = %X'8000';
literal DEV$M_SHR = %X'10000';
literal DEV$M_GEN = %X'20000';
literal DEV$M_AVL = %X'40000';
literal DEV$M_MNT = %X'80000';
literal DEV$M_MBX = %X'100000';
literal DEV$M_DMT = %X'200000';
literal DEV$M_ELG = %X'400000';
literal DEV$M_ALL = %X'800000';
literal DEV$M_FOR = %X'1000000';
literal DEV$M_SWL = %X'2000000';
literal DEV$M_IDV = %X'4000000';
literal DEV$M_ODV = %X'8000000';
literal DEV$M_RND = %X'10000000';
literal DEV$M_RTM = %X'20000000';
literal DEV$M_RCK = %X'40000000';
literal DEV$M_WCK = %X'80000000';
literal DEV$M_CLU = %X'1';
literal DEV$M_DET = %X'2';
literal DEV$M_RTT = %X'4';
literal DEV$M_CDP = %X'8';
literal DEV$M_2P = %X'10';
literal DEV$M_MSCP = %X'20';
literal DEV$M_SSM = %X'40';
literal DEV$M_SRV = %X'80';
literal DEV$M_RED = %X'100';
literal DEV$M_NNM = %X'200';
literal DEV$M_WBC = %X'400';
literal DEV$M_WTC = %X'800';
literal DEV$M_HOC = %X'1000';
literal DEV$M_LOC = %X'2000';
literal DEV$M_DFS = %X'4000';
literal DEV$M_DAP = %X'8000';
literal DEV$M_NLT = %X'10000';
literal DEV$M_SEX = %X'20000';
literal DEV$M_SHD = %X'40000';
literal DEV$M_VRT = %X'80000';
literal DEV$M_LDR = %X'100000';
literal DEV$M_NOLB = %X'200000';
literal DEV$M_NOCLU = %X'400000';
literal DEV$M_VMEM = %X'800000';
literal DEV$M_SCSI = %X'1000000';
literal DEV$M_WLG = %X'2000000';
literal DEV$M_NOFE = %X'4000000';
literal DEV$M_FILL_2 = %X'8000000';
literal DEV$M_CRAMIO = %X'10000000';
literal DEV$M_DTN = %X'20000000';
literal DEV$M_FILL_3 = %X'40000000';
literal DEV$M_POOL_MBR = %X'80000000';
literal DEV$S_DEVDEF = 4;
macro DEV$V_REC = 0,0,1,0 %;            
macro DEV$V_CCL = 0,1,1,0 %;            
macro DEV$V_TRM = 0,2,1,0 %;            
macro DEV$V_DIR = 0,3,1,0 %;            
macro DEV$V_SDI = 0,4,1,0 %;            
macro DEV$V_SQD = 0,5,1,0 %;            
macro DEV$V_SPL = 0,6,1,0 %;            
macro DEV$V_OPR = 0,7,1,0 %;            
macro DEV$V_RCT = 0,8,1,0 %;            
macro DEV$V_QSVD = 0,9,1,0 %;           
macro DEV$V_QSVBL = 0,10,1,0 %;         
macro DEV$V_MPDEV_SECONDARY = 0,11,1,0 %; 
macro DEV$V_MPDEV_MEMBER = 0,12,1,0 %;  
macro DEV$V_NET = 0,13,1,0 %;           
macro DEV$V_FOD = 0,14,1,0 %;           
macro DEV$V_DUA = 0,15,1,0 %;           
macro DEV$V_SHR = 0,16,1,0 %;           
macro DEV$V_GEN = 0,17,1,0 %;           
macro DEV$V_AVL = 0,18,1,0 %;           
macro DEV$V_MNT = 0,19,1,0 %;           
macro DEV$V_MBX = 0,20,1,0 %;           
macro DEV$V_DMT = 0,21,1,0 %;           
macro DEV$V_ELG = 0,22,1,0 %;           
macro DEV$V_ALL = 0,23,1,0 %;           
macro DEV$V_FOR = 0,24,1,0 %;           
macro DEV$V_SWL = 0,25,1,0 %;           
macro DEV$V_IDV = 0,26,1,0 %;           
macro DEV$V_ODV = 0,27,1,0 %;           
macro DEV$V_RND = 0,28,1,0 %;           
macro DEV$V_RTM = 0,29,1,0 %;           
macro DEV$V_RCK = 0,30,1,0 %;           
macro DEV$V_WCK = 0,31,1,0 %;           
macro DEV$V_CLU = 0,0,1,0 %;            
macro DEV$V_DET = 0,1,1,0 %;            
macro DEV$V_RTT = 0,2,1,0 %;            
macro DEV$V_CDP = 0,3,1,0 %;            
macro DEV$V_2P = 0,4,1,0 %;             
macro DEV$V_MSCP = 0,5,1,0 %;           
macro DEV$V_SSM = 0,6,1,0 %;            

macro DEV$V_SRV = 0,7,1,0 %;            
macro DEV$V_RED = 0,8,1,0 %;            
macro DEV$V_NNM = 0,9,1,0 %;            
macro DEV$V_WBC = 0,10,1,0 %;           
macro DEV$V_WTC = 0,11,1,0 %;           
macro DEV$V_HOC = 0,12,1,0 %;           
macro DEV$V_LOC = 0,13,1,0 %;           
macro DEV$V_DFS = 0,14,1,0 %;           
macro DEV$V_DAP = 0,15,1,0 %;           
macro DEV$V_NLT = 0,16,1,0 %;           
macro DEV$V_SEX = 0,17,1,0 %;           
macro DEV$V_SHD = 0,18,1,0 %;           
macro DEV$V_VRT = 0,19,1,0 %;           
macro DEV$V_LDR = 0,20,1,0 %;           
macro DEV$V_NOLB = 0,21,1,0 %;          
macro DEV$V_NOCLU = 0,22,1,0 %;         
macro DEV$V_VMEM = 0,23,1,0 %;          
macro DEV$V_SCSI = 0,24,1,0 %;          
macro DEV$V_WLG = 0,25,1,0 %;           
macro DEV$V_NOFE = 0,26,1,0 %;          
macro DEV$V_FILL_2 = 0,27,1,0 %;        
macro DEV$V_CRAMIO = 0,28,1,0 %;        
macro DEV$V_DTN = 0,29,1,0 %;           
macro DEV$V_POOL_MBR = 0,31,1,0 %;      
 

literal DIB$K_LENGTH = 116;             
literal DIB$C_LENGTH = 116;             
literal DIB$S_DIBDEF = 116;
macro DIB$L_DEVCHAR = 0,0,32,0 %;       
macro DIB$B_DEVCLASS = 4,0,8,0 %;       
macro DIB$B_DEVTYPE = 5,0,8,0 %;        
macro DIB$W_DEVBUFSIZ = 6,0,16,0 %;     
macro DIB$L_DEVDEPEND = 8,0,32,0 %;     
macro DIB$B_SECTORS = 8,0,8,0 %;        
macro DIB$B_TRACKS = 9,0,8,0 %;         
macro DIB$W_CYLINDERS = 10,0,16,0 %;    
macro DIB$W_UNIT = 12,0,16,0 %;         
macro DIB$W_DEVNAMOFF = 14,0,16,0 %;    
macro DIB$L_PID = 16,0,32,0 %;          
macro DIB$L_OWNUIC = 20,0,32,0 %;       
macro DIB$W_VPROT = 24,0,16,0 %;        
macro DIB$W_ERRCNT = 26,0,16,0 %;       
macro DIB$L_OPCNT = 28,0,32,0 %;        
macro DIB$W_VOLNAMOFF = 32,0,16,0 %;    
macro DIB$W_RECSIZ = 34,0,16,0 %;       
macro DIB$T_DEVNAME = 36,0,0,0 %;
literal DIB$S_DEVNAME = 76;             
macro DIB$L_MAXBLOCK = 112,0,32,0 %;    
 
literal dirent$k_name = 1;
literal dirent$k_version = 2;
literal dirent$S_dirent = 4;
macro dirent$iw_size = 0,0,16,1 %;
macro dirent$iw_type = 2,0,16,1 %;
literal dirent_nam$S_dirent_nam = 13;
macro dirent_nam$iw_size = 0,0,16,1 %;
macro dirent_nam$iw_type = 2,0,16,1 %;
macro dirent_nam$iw_version_limit = 4,0,16,1 %;
macro dirent_nam$il_name_length = 8,0,32,1 %;
macro dirent_nam$t_name = 12,0,8,0 %;
literal dirent_nam$s_name = 1;
literal dirent$k_file = 1;
literal dirent$k_directory = 2;
literal dirent_ver$S_dirent_ver = 16;
macro dirent_ver$iw_size = 0,0,16,1 %;
macro dirent_ver$iw_type = 2,0,16,1 %;
macro dirent_ver$iw_version = 4,0,16,1 %;
macro dirent_ver$iw_obj_type = 6,0,16,1 %;
macro dirent_ver$iw_fid = 10,0,0,0 %;
literal dirent_ver$s_fid = 6;
macro dirent_ver$iw_fid_num = 10,0,16,0 %;
macro dirent_ver$iw_fid_seq = 12,0,16,0 %;
macro dirent_ver$iw_fid_rvn = 14,0,16,0 %;
macro dirent_ver$ib_fid_rvn = 14,0,8,0 %;
macro dirent_ver$ib_fid_nmx = 15,0,8,0 %;
 

literal DMT$M_NOUNLOAD = %X'1';
literal DMT$M_UNIT = %X'2';
literal DMT$M_ABORT = %X'4';
literal DMT$M_CLUSTER = %X'8';
literal DMT$M_UNLOAD = %X'10';
literal DMT$M_OVR_CHECKS = %X'20';
literal DMT$M_CHECK_ONLY = %X'40';
literal DMT$M_REMOTE = %X'80';
literal DMT$M_MINICOPY_REQUIRED = %X'100';
literal DMT$M_MINICOPY_OPTIONAL = %X'200';
literal DMT$M_FORCE = %X'400';
literal DMT$S_DMTDEF = 2;
macro DMT$V_NOUNLOAD = 0,0,1,0 %;       
macro DMT$V_UNIT = 0,1,1,0 %;           
macro DMT$V_ABORT = 0,2,1,0 %;          
macro DMT$V_CLUSTER = 0,3,1,0 %;        
macro DMT$V_UNLOAD = 0,4,1,0 %;         
macro DMT$V_OVR_CHECKS = 0,5,1,0 %;     
macro DMT$V_CHECK_ONLY = 0,6,1,0 %;     
macro DMT$V_REMOTE = 0,7,1,0 %;         
macro DMT$V_MINICOPY_REQUIRED = 0,8,1,0 %; 
macro DMT$V_MINICOPY_OPTIONAL = 0,9,1,0 %; 
macro DMT$V_FORCE = 0,10,1,0 %;         
 

literal DPS$_MP_PATHNAME = 1;           

 

literal DTI$_ENDITEM = 0;               
literal DTI$_TRANSACTION_INFORMATION = 1; 
literal DTI$_CURRENT_TID = 2;           
literal DTI$_MEMBERSHIP_COUNT = 3;      
literal DTI$_BRANCH_COUNT = 4;          
literal DTI$_ROOT_NODE_NAME = 5;        
literal DTI$_STARTING_TIME = 6;         
literal dti$K_MAX_ITEM_CODE = 6;
literal DTI$K_NULL = 0;
literal DTI$K_STARTING = 1;             
literal DTI$K_ACTIVE = 2;               
literal DTI$K_ONE_P_COMMITTING = 3;     
literal DTI$K_PREPARING = 4;            
literal DTI$K_PREPARED = 5;             
literal DTI$K_COMMITTING = 6;           
literal DTI$K_COMMITTED = 7;            
literal DTI$K_ONE_P_COMMITTED = 8;      
literal DTI$K_ABORTING = 9;             
literal DTI$K_ABORTED = 10;             
literal DTI$K_IN_DOUBT = 11;            

literal DTI$K_ILLEGAL = 0;              
literal DTI$K_DELETE_TRANSACTION = 1;   
literal DTI$K_DELETE_RM_NAME = 2;       
literal DTI$K_MODIFY_STATE = 3;         
literal DTI$K_DELETE_BRANCH_NODE = 4;   
literal DTI$K_SET_CURRENT_TID = 5;      
literal DTI$K_MAX_SET_CODE = 5;
literal DTI$M_SEARCH_STARTING = %X'1';
literal DTI$M_SEARCH_ACTIVE = %X'2';
literal DTI$M_SEARCH_1P_COMITTING = %X'4';
literal DTI$M_SEARCH_PREPARING = %X'8';
literal DTI$M_SEARCH_PREPARED = %X'10';
literal DTI$M_SEARCH_COMMITTING = %X'20';
literal DTI$M_SEARCH_COMMITTED = %X'40';
literal DTI$M_SEARCH_1P_COMMITTED = %X'80';
literal DTI$M_SEARCH_ABORTING = %X'100';
literal DTI$M_SEARCH_ABORTED = %X'200';
literal DTI$_ENDSEARCH = 0;             
literal DTI$_SEARCH_AS_NODE = 1;        
literal DTI$_SEARCH_CURRENT_TID = 2;    
literal DTI$_SEARCH_TID = 3;            
literal DTI$_SEARCH_RM_NAME = 4;        
literal DTI$_SEARCH_BRANCH_NAME = 5;    
literal DTI$_SEARCH_STATE = 6;          
literal DTI$_SEARCH_RESOLVED_STATE = 7; 
literal DTI$K_MAX_SEARCH_CODE = 7;
literal DTI$S_DTISEARCHDEF = 2;         
macro DTI$V_SEARCH_STARTING = 0,0,1,0 %; 
macro DTI$V_SEARCH_ACTIVE = 0,1,1,0 %;  
macro DTI$V_SEARCH_1P_COMITTING = 0,2,1,0 %; 
macro DTI$V_SEARCH_PREPARING = 0,3,1,0 %; 
macro DTI$V_SEARCH_PREPARED = 0,4,1,0 %; 
macro DTI$V_SEARCH_COMMITTING = 0,5,1,0 %; 
macro DTI$V_SEARCH_COMMITTED = 0,6,1,0 %; 
macro DTI$V_SEARCH_1P_COMMITTED = 0,7,1,0 %; 
macro DTI$V_SEARCH_ABORTING = 0,8,1,0 %; 
macro DTI$V_SEARCH_ABORTED = 0,9,1,0 %; 
literal DTI$M_UPDATE = %X'1';
literal DTI$M_LOCAL_RM = %X'2';
literal DTI$S_TRANSACTION_INFORMATION = 84; 
literal DTI$S_DTIRECDEF = 84;           
macro DTI$W_FLAGS = 0,0,16,0 %;         
macro DTI$V_UPDATE = 0,0,1,0 %;         
macro DTI$V_LOCAL_RM = 0,1,1,0 %;       
macro DTI$B_STATE = 2,0,8,0 %;          
macro DTI$B_PART_NAME_LEN = 3,0,8,0 %;  
macro DTI$T_PART_NAME = 4,0,0,0 %;
literal DTI$S_PART_NAME = 32;           
macro DTI$T_PART_LOG_ID = 36,0,0,0 %;
literal DTI$S_PART_LOG_ID = 16;         
macro DTI$T_TID = 52,0,0,0 %;
literal DTI$S_TID = 16;                 
macro DTI$O_UTC_COMMIT_TIME = 68,0,0,0 %;
literal DTI$S_UTC_COMMIT_TIME = 16;     
 

literal DVI$_DEVCHAR = 2;               
literal DVI$_DEVCLASS = 4;              
literal DVI$_DEVTYPE = 6;               
literal DVI$_DEVBUFSIZ = 8;             
literal DVI$_DEVDEPEND = 10;            
literal DVI$_UNIT = 12;                 
literal DVI$_PID = 14;                  
literal DVI$_OWNUIC = 16;               
literal DVI$_VPROT = 18;                
literal DVI$_ERRCNT = 20;               
literal DVI$_OPCNT = 22;                
literal DVI$_RECSIZ = 24;               
literal DVI$_MAXBLOCK = 26;             
literal DVI$_DEVDEPEND2 = 28;           
literal DVI$_REFCNT = 30;               
literal DVI$_DEVNAM = 32;               
literal DVI$_VOLNAM = 34;               
literal DVI$_SECTORS = 36;              
literal DVI$_TRACKS = 38;               
literal DVI$_CYLINDERS = 40;            
literal DVI$_FREEBLOCKS = 42;           
literal DVI$_LOGVOLNAM = 44;            
literal DVI$_VOLNUMBER = 46;            
literal DVI$_VOLCOUNT = 48;             
literal DVI$_ROOTDEVNAM = 50;           
literal DVI$_NEXTDEVNAM = 52;           
literal DVI$_TRANSCNT = 54;             
literal DVI$_MOUNTCNT = 56;             
literal DVI$_CLUSTER = 58;              
literal DVI$_MAXFILES = 60;             
literal DVI$_SERIALNUM = 62;            
literal DVI$_ACPPID = 64;               
literal DVI$_ACPTYPE = 66;              
literal DVI$_CONCEALED = 68;            

literal DVI$_REC = 70;                  
literal DVI$_CCL = 72;                  
literal DVI$_TRM = 74;                  
literal DVI$_DIR = 76;                  
literal DVI$_SDI = 78;                  
literal DVI$_SQD = 80;                  
literal DVI$_SPL = 82;                  
literal DVI$_OPR = 84;                  
literal DVI$_RCT = 86;                  
literal DVI$_NET = 88;                  
literal DVI$_FOD = 90;                  
literal DVI$_DUA = 92;                  
literal DVI$_SHR = 94;                  
literal DVI$_GEN = 96;                  
literal DVI$_AVL = 98;                  
literal DVI$_MNT = 100;                 
literal DVI$_MBX = 102;                 
literal DVI$_DMT = 104;                 
literal DVI$_ELG = 106;                 
literal DVI$_ALL = 108;                 
literal DVI$_FOR = 110;                 
literal DVI$_SWL = 112;                 
literal DVI$_IDV = 114;                 
literal DVI$_ODV = 116;                 
literal DVI$_RND = 118;                 
literal DVI$_RTM = 120;                 
literal DVI$_RCK = 122;                 
literal DVI$_WCK = 124;                 

literal DVI$_TT_PASSALL = 126;
literal DVI$_TT_NOECHO = 128;
literal DVI$_TT_NOTYPEAHD = 130;
literal DVI$_TT_ESCAPE = 132;
literal DVI$_TT_HOSTSYNC = 134;
literal DVI$_TT_TTSYNC = 136;
literal DVI$_TT_SCRIPT = 138;
literal DVI$_TT_LOWER = 140;
literal DVI$_TT_MECHTAB = 142;
literal DVI$_TT_WRAP = 144;
literal DVI$_TT_CRFILL = 146;
literal DVI$_TT_LFFILL = 148;
literal DVI$_TT_SCOPE = 150;
literal DVI$_TT_REMOTE = 152;
literal DVI$_TT_EIGHTBIT = 154;
literal DVI$_TT_MBXDSABL = 156;
literal DVI$_TT_NOBRDCST = 158;
literal DVI$_TT_READSYNC = 160;
literal DVI$_TT_MECHFORM = 162;
literal DVI$_TT_HALFDUP = 164;
literal DVI$_TT_MODEM = 166;
literal DVI$_TT_OPER = 168;
literal DVI$_TT_PAGE = 170;

literal DVI$_TT_LOCALECHO = 172;
literal DVI$_TT_AUTOBAUD = 174;
literal DVI$_TT_HANGUP = 176;
literal DVI$_TT_MODHANGUP = 178;
literal DVI$_TT_BRDCSTMBX = 180;
literal DVI$_TT_DMA = 182;
literal DVI$_TT_ALTYPEAHD = 184;
literal DVI$_TT_SETSPEED = 186;
literal DVI$_TT_DCL_MAILBX = 188;       
literal DVI$_TT_EDITING = 190;
literal DVI$_TT_INSERT = 192;
literal DVI$_TT_FALLBACK = 194;
literal DVI$_TT_DIALUP = 196;
literal DVI$_TT_SECURE = 198;
literal DVI$_TT_DISCONNECT = 200;
literal DVI$_TT_PASTHRU = 202;
literal DVI$_TT_SIXEL = 204;
literal DVI$_TT_DRCS = 206;
literal DVI$_TT_PRINTER = 208;
literal DVI$_TT_APP_KEYPAD = 210;
literal DVI$_TT_SYSPWD = 212;
literal DVI$_TT_ANSICRT = 214;
literal DVI$_TT_REGIS = 216;
literal DVI$_TT_BLOCK = 218;
literal DVI$_TT_AVO = 220;
literal DVI$_TT_EDIT = 222;
literal DVI$_TT_DECCRT = 224;

literal DVI$_STS = 226;                 
literal DVI$_DEVSTS = 228;              
literal DVI$_DEVCHAR2 = 230;            
literal DVI$_FULLDEVNAM = 232;          
literal DVI$_LOCKID = 234;              
literal DVI$_ALLDEVNAM = 236;           
literal DVI$_VOLSETMEM = 238;           
literal DVI$_DEVLOCKNAM = 240;          

literal DVI$_ALLOCLASS = 242;           
literal DVI$_ALT_HOST_AVAIL = 244;      
literal DVI$_ALT_HOST_NAME = 246;       
literal DVI$_ALT_HOST_TYPE = 248;       
literal DVI$_HOST_AVAIL = 250;          
literal DVI$_HOST_COUNT = 252;          
literal DVI$_HOST_NAME = 254;           
literal DVI$_HOST_TYPE = 256;           
literal DVI$_REMOTE_DEVICE = 258;       
literal DVI$_SERVED_DEVICE = 260;       
literal DVI$_SHDW_CATCHUP_COPYING = 262; 
literal DVI$_SHDW_MASTER = 264;         
literal DVI$_SHDW_MASTER_NAME = 266;    
literal DVI$_SHDW_MEMBER = 268;         
literal DVI$_SHDW_MERGE_COPYING = 270;  
literal DVI$_SHDW_NEXT_MBR_NAME = 272;  

literal DVI$_TT_PHYDEVNAM = 274;        
literal DVI$_TT_DECCRT2 = 276;          
literal DVI$_MEDIA_NAME = 278;          
literal DVI$_MEDIA_TYPE = 280;          
literal DVI$_MEDIA_ID = 282;            
literal DVI$_SHDW_FAILED_MEMBER = 284;  
literal DVI$_MSCP_UNIT_NUMBER = 286;    
literal DVI$_DISPLAY_DEVNAM = 288;      
literal DVI$_TT_ACCPORNAM = 290;        
literal DVI$_DEVDEPEND3 = 292;          
literal DVI$_TT_MULTISESSION = 294;     
literal DVI$_TT_DECCRT3 = 296;          
literal DVI$_SET_HOST_TERMINAL = 298;   
literal DVI$_DFS_ACCESS = 300;          
literal DVI$_DAPDEVNAM = 302;           

literal DVI$_TT_DECCRT4 = 304;          
literal DVI$_TT_CHARSET = 306;          

literal DVI$_TT_CS_KANA = 308;          
literal DVI$_TT_CS_KANJI = 310;         
literal DVI$_TT_CS_HANZI = 312;         
literal DVI$_TT_CS_HANGUL = 314;        
literal DVI$_TT_CS_HANYU = 316;         
literal DVI$_TT_CS_THAI = 318;          

literal DVI$_DEVDEPEND4 = 320;          
literal DVI$_DEVICE_TYPE_NAME = 322;    
literal DVI$_TT_ASIAN_MODE = 324;       
literal DVI$_PREFERRED_CPU = 326;       
literal DVI$_TT_DECCRT5 = 328;          
literal DVI$_TT_ANSI_COLOR = 330;       
literal DVI$_MT3_SUPPORTED = 332;       
literal DVI$_MT3_DENSITY = 334;         
literal DVI$_DRIVER_IMAGE_NAME = 336;   
literal DVI$_CLIENT_DEVICE = 338;       
literal DVI$_FC_PORT_NAME = 340;        
literal DVI$_FC_NODE_NAME = 342;        
literal DVI$_WWID = 344;                
literal DVI$_VOLCHAR = 346;             
literal DVI$_HBVS_MASTER_MEMBER = 348;  
literal DVI$_MULTIPATH = 350;           
literal DVI$_MPDEV_CURRENT_PATH = 352;  
literal DVI$_VOLSIZE = 354;             
literal DVI$_EXPSIZE = 356;             
literal DVI$_QLEN = 358;                
literal DVI$_SHDW_SITE = 360;           
literal DVI$_SHDW_MBR_COUNT = 362;      
literal DVI$_SHDW_DEVICE_COUNT = 364;   
literal DVI$_SHDW_MBR_READ_COST = 366;  
literal DVI$_SHDW_READ_SOURCE = 368;    
literal DVI$_SHDW_TIMEOUT = 370;        
literal DVI$_DVI_UNUSED_1 = 372;        
literal DVI$_SHDW_GENERATION = 374;     
literal DVI$_SHDW_STATUS = 376;         
literal DVI$_SHDW_MBR_COPY_DONE = 378;  
literal DVI$_SHDW_MBR_MERGE_DONE = 380; 
literal DVI$_SHDW_MINIMERGE_ENABLE = 382; 
literal DVI$_DVI_UNUSED_2 = 384;        
literal DVI$_SHDW_COPIER_NODE = 386;    
literal DVI$_SHDW_MASTER_MBR = 388;     

literal DVI$M_SECONDARY = %X'1';
literal DVI$M_NOREDIRECT = %X'8000';
literal DVI$S_DVIDEF = 2;
macro DVI$V_SECONDARY = 0,0,1,0 %;      
macro DVI$V_ITEM_CODE = 0,1,14,0 %;
literal DVI$S_ITEM_CODE = 14;           

macro DVI$V_NOREDIRECT = 0,15,1,0 %;    

literal DVI$M_VOL_READDIR = %X'F';
literal DVI$C_READDIR_NONE = 0;         
literal DVI$C_READDIR_VIO = 1;          
literal DVI$C_READDIR_IO = 2;           
literal DVI$C_READDIR_ACP = 3;          
literal DVI$M_VOL_LENGTH_HINT = %X'10';
literal DVI$M_VOL_CACHING_ATTR = %X'20';
literal DVI$M_VOL_ACCESS_DATE = %X'40';
literal DVI$M_VOL_HARDLINK = %X'80';
literal DVI$M_VOL_SET_SECURITY = %X'100';
literal DVI$M_VOL_FID_TO_NAME = %X'200';
literal DVI$M_VOL_ODS1_STYLE_PURGE = %X'400';
literal DVI$M_VOL_SHARED_TRUNCATE = %X'800';
literal DVI$M_VOL_WRITE_BARRIER = %X'1000';
literal DVI$M_VOL_DIRSEQ_QIO = %X'2000';
literal DVI$M_VOL_EFS = %X'4000';
literal DVI$M_VOL_UCS2 = %X'8000';
literal DVI$M_VOL_CASE_VARIANT = %X'10000';
literal DVI$M_VOL_MODDATE = %X'20000';
literal DVI$S_DVIVOLDEF = 16;
macro DVI$V_VOL_READDIR = 0,0,4,0 %;
literal DVI$S_VOL_READDIR = 4;          
macro DVI$V_VOL_LENGTH_HINT = 0,4,1,0 %; 
macro DVI$V_VOL_CACHING_ATTR = 0,5,1,0 %; 
macro DVI$V_VOL_ACCESS_DATE = 0,6,1,0 %; 
macro DVI$V_VOL_HARDLINK = 0,7,1,0 %;   
macro DVI$V_VOL_SET_SECURITY = 0,8,1,0 %; 
macro DVI$V_VOL_FID_TO_NAME = 0,9,1,0 %; 
macro DVI$V_VOL_ODS1_STYLE_PURGE = 0,10,1,0 %; 
macro DVI$V_VOL_SHARED_TRUNCATE = 0,11,1,0 %; 
macro DVI$V_VOL_WRITE_BARRIER = 0,12,1,0 %; 
macro DVI$V_VOL_DIRSEQ_QIO = 0,13,1,0 %; 
macro DVI$V_VOL_EFS = 0,14,1,0 %;       
macro DVI$V_VOL_UCS2 = 0,15,1,0 %;      
macro DVI$V_VOL_CASE_VARIANT = 0,16,1,0 %; 
macro DVI$V_VOL_MODDATE = 0,17,1,0 %;   

literal DVI$C_SECONDARY = 1;

literal DVI$C_ACP_F11V1 = 1;            
literal DVI$C_ACP_F11V2 = 2;            
literal DVI$C_ACP_MTA = 3;              
literal DVI$C_ACP_NET = 4;              
literal DVI$C_ACP_REM = 5;              
literal DVI$C_ACP_HBS = 6;              
literal DVI$C_ACP_F11V3 = 7;            
literal DVI$C_ACP_F11V4 = 8;            
literal DVI$C_ACP_F64 = 9;              
literal DVI$C_ACP_UCX = 10;             
literal DVI$C_ACP_F11V5 = 11;           
literal DVI$C_ACP_F11V6 = 12;           
literal DVI$C_ACP_HBVS = 13;            
 

literal DVS$_DEVCLASS = 1;              
literal DVS$_DEVTYPE = 2;               
 
literal EFN$C_ENF = 128;                
literal EFN$C_CTX = 129;                
 
macro Elf64_Addr = 0,0,0,1 %;
literal S_Elf64_Addr = 8;
macro Elf64_Off = 0,0,0,0 %;
literal S_Elf64_Off = 8;
macro Elf64_Half = 0,0,16,0 %;
macro Elf64_Word = 0,0,32,0 %;
macro Elf64_Sword = 0,0,32,1 %;
macro Elf64_Xword = 0,0,0,0 %;
literal S_Elf64_Xword = 8;
macro Elf64_Sxword = 0,0,0,1 %;
literal S_Elf64_Sxword = 8;
macro Elf64_Section = 0,0,32,0 %;
macro Elf64_Symndx = 0,0,32,0 %;
literal S_subsys_majmin = 4;
macro ver$w_minor_id = 0,0,16,0 %;
macro ver$w_major_id = 2,0,16,0 %;
literal S_sysver_majmin = 4;
macro ver$v_minor_id = 0,0,24,0 %;
literal ver$s_minor_id = 24;
macro ver$v_major_id = 0,24,8,0 %;
literal ver$s_major_id = 8;
literal lnkg_desc1$m_type = %X'1';
literal lnkg_desc1$m_notused0 = %X'2';
literal lnkg_desc1$M_GP = %X'4';
literal lnkg_desc1$m_notused1 = %X'8';
literal lnkg_desc1$M_R2 = %X'30';
literal lnkg_desc1$M_R3 = %X'C0';
literal lnkg_desc1$M_R4 = %X'300';
literal lnkg_desc1$M_R5 = %X'C00';
literal lnkg_desc1$M_R6 = %X'3000';
literal lnkg_desc1$M_R7 = %X'C000';
literal lnkg_desc1$M_R8 = %X'30000';
literal lnkg_desc1$M_R9 = %X'C0000';
literal lnkg_desc1$M_R10 = %X'300000';
literal lnkg_desc1$M_R11 = %X'C00000';
literal lnkg_desc1$M_R12 = %X'3000000';
literal lnkg_desc1$M_R13 = %X'C000000';
literal lnkg_desc1$M_R14 = %X'30000000';
literal lnkg_desc1$M_R15 = %X'C0000000';
literal lnkg_desc1$M_R16 = %X'300000000';
literal lnkg_desc1$M_R17 = %X'C00000000';
literal lnkg_desc1$M_R18 = %X'3000000000';
literal lnkg_desc1$M_R19 = %X'C000000000';
literal lnkg_desc1$M_R20 = %X'30000000000';
literal lnkg_desc1$M_R21 = %X'C0000000000';
literal lnkg_desc1$M_R22 = %X'300000000000';
literal lnkg_desc1$M_R23 = %X'C00000000000';
literal lnkg_desc1$M_R24 = %X'3000000000000';
literal lnkg_desc1$M_AI = %X'4000000000000';
literal lnkg_desc1$m_notused25 = %X'8000000000000';
literal lnkg_desc1$M_R26 = %X'30000000000000';
literal lnkg_desc1$M_R27 = %X'C0000000000000';
literal lnkg_desc1$M_R28 = %X'300000000000000';
literal lnkg_desc1$M_R29 = %X'C00000000000000';
literal lnkg_desc1$M_R30 = %X'3000000000000000';
literal lnkg_desc1$M_R31 = %X'C000000000000000';
literal LNKG_DESC1$K_SIZE = 8;
literal LNKG_DESC1$C_SIZE = 8;
literal lnkg_desc1$S_vms_lnkg_desc1 = 8;
macro lnkg_desc1$v_type = 0,0,1,0 %;
macro lnkg_desc1$v_notused0 = 0,1,1,0 %;
macro lnkg_desc1$V_GP = 0,2,1,0 %;
macro lnkg_desc1$v_notused1 = 0,3,1,0 %;
macro lnkg_desc1$V_R2 = 0,4,2,0 %;
literal lnkg_desc1$S_R2 = 2;
macro lnkg_desc1$V_R3 = 0,6,2,0 %;
literal lnkg_desc1$S_R3 = 2;
macro lnkg_desc1$V_R4 = 0,8,2,0 %;
literal lnkg_desc1$S_R4 = 2;
macro lnkg_desc1$V_R5 = 0,10,2,0 %;
literal lnkg_desc1$S_R5 = 2;
macro lnkg_desc1$V_R6 = 0,12,2,0 %;
literal lnkg_desc1$S_R6 = 2;
macro lnkg_desc1$V_R7 = 0,14,2,0 %;
literal lnkg_desc1$S_R7 = 2;
macro lnkg_desc1$V_R8 = 0,16,2,0 %;
literal lnkg_desc1$S_R8 = 2;
macro lnkg_desc1$V_R9 = 0,18,2,0 %;
literal lnkg_desc1$S_R9 = 2;
macro lnkg_desc1$V_R10 = 0,20,2,0 %;
literal lnkg_desc1$S_R10 = 2;
macro lnkg_desc1$V_R11 = 0,22,2,0 %;
literal lnkg_desc1$S_R11 = 2;
macro lnkg_desc1$V_R12 = 0,24,2,0 %;
literal lnkg_desc1$S_R12 = 2;
macro lnkg_desc1$V_R13 = 0,26,2,0 %;
literal lnkg_desc1$S_R13 = 2;
macro lnkg_desc1$V_R14 = 0,28,2,0 %;
literal lnkg_desc1$S_R14 = 2;
macro lnkg_desc1$V_R15 = 0,30,2,0 %;
literal lnkg_desc1$S_R15 = 2;
macro lnkg_desc1$V_R16 = 4,0,2,0 %;
literal lnkg_desc1$S_R16 = 2;
macro lnkg_desc1$V_R17 = 4,2,2,0 %;
literal lnkg_desc1$S_R17 = 2;
macro lnkg_desc1$V_R18 = 4,4,2,0 %;
literal lnkg_desc1$S_R18 = 2;
macro lnkg_desc1$V_R19 = 4,6,2,0 %;
literal lnkg_desc1$S_R19 = 2;
macro lnkg_desc1$V_R20 = 4,8,2,0 %;
literal lnkg_desc1$S_R20 = 2;
macro lnkg_desc1$V_R21 = 4,10,2,0 %;
literal lnkg_desc1$S_R21 = 2;
macro lnkg_desc1$V_R22 = 4,12,2,0 %;
literal lnkg_desc1$S_R22 = 2;
macro lnkg_desc1$V_R23 = 4,14,2,0 %;
literal lnkg_desc1$S_R23 = 2;
macro lnkg_desc1$V_R24 = 4,16,2,0 %;
literal lnkg_desc1$S_R24 = 2;
macro lnkg_desc1$V_AI = 4,18,1,0 %;
macro lnkg_desc1$v_notused25 = 4,19,1,0 %;
macro lnkg_desc1$V_R26 = 4,20,2,0 %;
literal lnkg_desc1$S_R26 = 2;
macro lnkg_desc1$V_R27 = 4,22,2,0 %;
literal lnkg_desc1$S_R27 = 2;
macro lnkg_desc1$V_R28 = 4,24,2,0 %;
literal lnkg_desc1$S_R28 = 2;
macro lnkg_desc1$V_R29 = 4,26,2,0 %;
literal lnkg_desc1$S_R29 = 2;
macro lnkg_desc1$V_R30 = 4,28,2,0 %;
literal lnkg_desc1$S_R30 = 2;
macro lnkg_desc1$V_R31 = 4,30,2,0 %;
literal lnkg_desc1$S_R31 = 2;
 
literal EHDR$K_EI_NIDENT = 16;
literal EHDR$SC_EF_VMS_COMCOD = 0;
literal ehdr$m_ef_vms_comcod = %X'3';
literal ehdr$m_ef_fill_1 = %X'C';
literal EHDR$SC_EF_IA_64_ABI64 = 4;
literal ehdr$m_ef_ia_64_abi64 = %X'10';
literal EHDR$SC_EF_IA_64_REDUCEDFP = 5;
literal ehdr$m_ef_ia_64_reducedfp = %X'20';
literal EHDR$SC_EF_IA_64_CONS_GP = 6;
literal ehdr$m_ef_ia_64_cons_gp = %X'40';
literal EHDR$SC_EF_IA_64_NOFD_CONS_GP = 7;
literal ehdr$m_ef_ia_64_nofd_cons_gp = %X'80';
literal EHDR$SC_EF_IA_64_ABSOLUTE = 8;
literal ehdr$m_ef_ia_64_absolute = %X'100';
literal ehdr$m_ef_fill_2 = %X'FFFE00';
literal EHDR$SC_EF_IA_64_ARCH = 24;
literal ehdr$m_ef_ia_64_arch = %X'FF000000';
literal EHDR$SC_EF_IA_64_LOOS = 0;
literal ehdr$m_ef_ia_64_loos = %X'F';
literal ehdr$m_ef_fill_1a = %X'FFF0';
literal EHDR$SC_EF_IA_64_HIOS = 16;
literal ehdr$m_ef_ia_64_hios = %X'FF0000';
literal ELF64_EHDR$K_E_SIZE = 64;
literal ELF64_EHDR$C_E_SIZE = 64;
literal ELF64_EHDR$S_VMS_OBJECT_V1 = 64;
literal ELF64_EHDR$S_VMS_IMAGE_V1 = 72;
literal ehdr$S_Elf64_Ehdr = 72;
macro ehdr$r_ident = 0,0,0,0 %;
literal ehdr$s_ident = 16;
macro ehdr$t_e_ident = 0,0,0,0 %;
literal ehdr$s_e_ident = 16;
macro ehdr$b_ei_mag0 = 0,0,8,0 %;
macro ehdr$b_ei_mag1 = 1,0,8,0 %;
macro ehdr$b_ei_mag2 = 2,0,8,0 %;
macro ehdr$b_ei_mag3 = 3,0,8,0 %;
macro ehdr$b_ei_class = 4,0,8,0 %;
macro ehdr$b_ei_data = 5,0,8,0 %;
macro ehdr$b_ei_version = 6,0,8,0 %;
macro ehdr$b_ei_osabi = 7,0,8,0 %;
macro ehdr$b_ei_abiversion = 8,0,8,0 %;
macro ehdr$b_ei_pad = 9,0,0,0 %;
literal ehdr$s_ei_pad = 7;
macro ehdr$w_e_type = 16,0,16,0 %;
macro ehdr$w_e_machine = 18,0,16,0 %;
macro ehdr$l_e_version = 20,0,32,1 %;
macro ehdr$pq_e_entry = 24,0,0,0 %;
literal ehdr$s_e_entry = 8;
macro ehdr$q_e_phoff = 32,0,0,0 %;
literal ehdr$s_e_phoff = 8;
macro ehdr$q_e_shoff = 40,0,0,0 %;
literal ehdr$s_e_shoff = 8;
macro ehdr$l_e_flags = 48,0,32,1 %;
macro ehdr$v_ef_vms_comcod = 48,0,2,0 %;
literal ehdr$s_ef_vms_comcod = 2;
macro ehdr$v_ef_fill_1 = 48,2,2,0 %;
literal ehdr$s_ef_fill_1 = 2;
macro ehdr$v_ef_ia_64_abi64 = 48,4,1,0 %;
macro ehdr$v_ef_ia_64_reducedfp = 48,5,1,0 %;
macro ehdr$v_ef_ia_64_cons_gp = 48,6,1,0 %;
macro ehdr$v_ef_ia_64_nofd_cons_gp = 48,7,1,0 %;
macro ehdr$v_ef_ia_64_absolute = 48,8,1,0 %;
macro ehdr$v_ef_fill_2 = 48,9,15,0 %;
literal ehdr$s_ef_fill_2 = 15;
macro ehdr$v_ef_ia_64_arch = 48,24,8,0 %;
literal ehdr$s_ef_ia_64_arch = 8;
macro ehdr$v_ef_ia_64_loos = 48,0,4,0 %;
literal ehdr$s_ef_ia_64_loos = 4;
macro ehdr$v_ef_fill_1a = 48,4,12,0 %;
literal ehdr$s_ef_fill_1a = 12;
macro ehdr$v_ef_ia_64_hios = 48,16,8,0 %;
literal ehdr$s_ef_ia_64_hios = 8;
macro ehdr$w_e_ehsize = 52,0,16,0 %;
macro ehdr$w_e_phentsize = 54,0,16,0 %;
macro ehdr$w_e_phnum = 56,0,16,0 %;
macro ehdr$w_e_shentsize = 58,0,16,0 %;
macro ehdr$w_e_shnum = 60,0,16,0 %;
macro ehdr$w_e_shstrndx = 62,0,16,0 %;
macro ehdr$q_e_vms_needed_cnt = 64,0,0,1 %;
literal ehdr$s_e_vms_needed_cnt = 8;
literal EHDR$K_EI_MAG0 = 0;
literal EHDR$K_EI_MAG1 = 1;
literal EHDR$K_EI_MAG2 = 2;
literal EHDR$K_EI_MAG3 = 3;
literal EHDR$K_EI_CLASS = 4;
literal EHDR$K_EI_DATA = 5;
literal EHDR$K_EI_VERSION = 6;
literal EHDR$K_EI_OSABI = 7;
literal EHDR$K_EI_ABIVERSION = 8;
literal EHDR$K_EI_PAD = 9;
literal EHDR$K_ELFMAG0 = 127;
literal EHDR$K_ELFMAG1 = 69;
literal EHDR$K_ELFMAG2 = 76;
literal EHDR$K_ELFMAG3 = 70;
literal EHDR$K_ELFCLASSNONE = 0;
literal EHDR$K_ELFCLASS32 = 1;
literal EHDR$K_ELFCLASS64 = 2;
literal EHDR$K_ELFDATANONE = 0;
literal EHDR$K_ELFDATA2LSB = 1;
literal EHDR$K_ELFDATA2MSB = 2;
literal EHDR$K_ELFOSABI_NONE = 0;
literal EHDR$K_ELFOSABI_OPENVMS = 13;
literal EHDR$K_ELFABIVERSION_VMS_CURR = 1;
literal EHDR$K_ET_NONE = 0;
literal EHDR$K_ET_REL = 1;
literal EHDR$K_ET_EXEC = 2;
literal EHDR$K_ET_DYN = 3;
literal EHDR$K_ET_CORE = 4;
literal EHDR$K_ET_LOOS = 65024;
literal EHDR$K_ET_HIOS = 65279;
literal EHDR$K_ET_LOPROC = 65280;
literal EHDR$K_ET_HIPROC = 65535;
literal EHDR$K_ET_VMS_LINK_STB = 65024;
literal EHDR$K_ET_VMS_DSF = 65025;
literal EHDR$K_EM_NONE = 0;
literal EHDR$K_EM_IA_64 = 50;
literal IIHA$K_VMSXFER_SIZE = 48;
literal IIHA$C_VMSXFER_SIZE = 48;
literal iiha$S_transfer_address = 48;
macro iiha$l_size = 0,0,32,1 %;
macro iiha$l_spare = 4,0,32,1 %;
macro iiha$ar_tfradr = 8,0,0,0 %;
literal iiha$s_tfradr = 40;
macro iiha$pq_tfradr1 = 8,0,0,0 %;
literal iiha$s_tfradr1 = 8;
macro iiha$pq_tfradr2 = 16,0,0,0 %;
literal iiha$s_tfradr2 = 8;
macro iiha$pq_tfradr3 = 24,0,0,0 %;
literal iiha$s_tfradr3 = 8;
macro iiha$pq_tfradr4 = 32,0,0,0 %;
literal iiha$s_tfradr4 = 8;
macro iiha$pq_tfradr5 = 40,0,0,0 %;
literal iiha$s_tfradr5 = 8;
literal IIHA$C_DEBUG = 0;
literal IIHA$C_INIT = 1;
literal IIHA$C_MAIN = 2;
literal EHDR$K_EV_NONE = 0;
literal EHDR$K_EV_CURRENT = 1;
literal EHDR$K_VMS_COMCOD_SUCCESS = 0;
literal EHDR$K_VMS_COMCOD_WARNING = 1;
literal EHDR$K_VMS_COMCOD_ERROR = 2;
literal EHDR$K_VMS_COMCOD_ABORT = 3;
literal EHDR$K_EF_IA_64_MASKOS = 16711695;
literal EHDR$K_EF_IA_64_ARCHVERSION = 1;
literal SHDR$SC_SHF_WRITE = 0;
literal shdr$m_shf_write = %X'1';
literal SHDR$SC_SHF_ALLOC = 1;
literal shdr$m_shf_alloc = %X'2';
literal SHDR$SC_SHF_EXECINSTR = 2;
literal shdr$m_shf_execinstr = %X'4';
literal shdr$m_shf_f64_bitfill_1 = %X'8';
literal SHDR$SC_SHF_MERGE = 4;
literal shdr$m_shf_merge = %X'10';
literal SHDR$SC_SHF_STRINGS = 5;
literal shdr$m_shf_strings = %X'20';
literal SHDR$SC_SHF_INFO_LINK = 6;
literal shdr$m_shf_info_link = %X'40';
literal SHDR$SC_SHF_LINK_ORDER = 7;
literal shdr$m_shf_link_order = %X'80';
literal SHDR$SC_SHF_OS_NONCONFORMING = 8;
literal shdr$m_shf_os_nonconforming = %X'100';
literal SHDR$SC_SHF_GROUP = 9;
literal shdr$m_shf_group = %X'200';
literal SHDR$SC_SHF_TLS = 10;
literal shdr$m_shf_tls = %X'400';
literal shdr$m_shf_f64_bitfill_2 = %X'FFFF800';
literal SHDR$SC_SHF_IA_64_SHORT = 28;
literal shdr$m_shf_ia_64_short = %X'10000000';
literal SHDR$SC_SHF_IA_64_NORECOV = 29;
literal shdr$m_shf_ia_64_norecov = %X'20000000';
literal shdr$m_shf_f64_bitfill_3 = %X'C0000000';
literal SHDR$SC_SHF_VMS_GLOBAL = 32;
literal shdr$m_shf_vms_global = %X'100000000';
literal SHDR$SC_SHF_VMS_OVERLAID = 33;
literal shdr$m_shf_vms_overlaid = %X'200000000';
literal SHDR$SC_SHF_VMS_SHARED = 34;
literal shdr$m_shf_vms_shared = %X'400000000';
literal SHDR$SC_SHF_VMS_VECTOR = 35;
literal shdr$m_shf_vms_vector = %X'800000000';
literal SHDR$SC_SHF_VMS_ALLOC_64BIT = 36;
literal shdr$m_shf_vms_alloc_64bit = %X'1000000000';
literal SHDR$SC_SHF_VMS_PROTECTED = 37;
literal shdr$m_shf_vms_protected = %X'2000000000';
literal shdr$m_shf_f64_bitfill_4 = %X'FFFFFFC000000000';
literal shdr$m_shf_f64_osfill_1 = %X'FFFFF';
literal SHDR$SC_SHF_MASK_LOOS = 20;
literal shdr$m_shf_mask_loos = %X'FF00000';
literal shdr$m_shf_f64_osfill_2 = %X'F0000000';
literal SHDR$SC_SHF_MASK_HIOS = 32;
literal shdr$m_shf_mask_hios = %X'FFFFFFFF00000000';
literal shdr$m_shf_f64_procfill_1 = %X'FFFFFFF';
literal SHDR$SC_SHF_MASKLOPROC = 28;
literal shdr$m_shf_maskloproc = %X'F0000000';
literal SHDR$SC_SHF_MASKHIPROC = 32;
literal shdr$m_shf_maskhiproc = %X'FFFFFFFF00000000';
literal ELF64_SHDR$K_SH_SIZE = 64;
literal ELF64_SHDR$C_SH_SIZE = 64;
literal shdr$S_Elf64_Shdr = 64;
macro shdr$l_sh_name = 0,0,32,1 %;
macro shdr$l_sh_type = 4,0,32,1 %;
macro shdr$q_sh_flags = 8,0,0,1 %;
literal shdr$s_sh_flags = 8;
macro shdr$v_shf_write = 8,0,1,0 %;
macro shdr$v_shf_alloc = 8,1,1,0 %;
macro shdr$v_shf_execinstr = 8,2,1,0 %;
macro shdr$v_shf_f64_bitfill_1 = 8,3,1,0 %;
macro shdr$v_shf_merge = 8,4,1,0 %;
macro shdr$v_shf_strings = 8,5,1,0 %;
macro shdr$v_shf_info_link = 8,6,1,0 %;
macro shdr$v_shf_link_order = 8,7,1,0 %;
macro shdr$v_shf_os_nonconforming = 8,8,1,0 %;
macro shdr$v_shf_group = 8,9,1,0 %;
macro shdr$v_shf_tls = 8,10,1,0 %;
macro shdr$v_shf_f64_bitfill_2 = 8,11,17,0 %;
literal shdr$s_shf_f64_bitfill_2 = 17;
macro shdr$v_shf_ia_64_short = 8,28,1,0 %;
macro shdr$v_shf_ia_64_norecov = 8,29,1,0 %;
macro shdr$v_shf_f64_bitfill_3 = 8,30,2,0 %;
literal shdr$s_shf_f64_bitfill_3 = 2;
macro shdr$v_shf_vms_global = 12,0,1,0 %;
macro shdr$v_shf_vms_overlaid = 12,1,1,0 %;
macro shdr$v_shf_vms_shared = 12,2,1,0 %;
macro shdr$v_shf_vms_vector = 12,3,1,0 %;
macro shdr$v_shf_vms_alloc_64bit = 12,4,1,0 %;
macro shdr$v_shf_vms_protected = 12,5,1,0 %;
macro shdr$v_shf_f64_bitfill_4 = 12,6,26,0 %;
literal shdr$s_shf_f64_bitfill_4 = 26;
macro shdr$v_shf_f64_osfill_1 = 8,0,20,0 %;
literal shdr$s_shf_f64_osfill_1 = 20;
macro shdr$v_shf_mask_loos = 8,20,8,0 %;
literal shdr$s_shf_mask_loos = 8;
macro shdr$v_shf_f64_osfill_2 = 8,28,4,0 %;
literal shdr$s_shf_f64_osfill_2 = 4;
macro shdr$v_shf_mask_hios = 12,0,32,0 %;
literal shdr$s_shf_mask_hios = 32;
macro shdr$v_shf_f64_procfill_1 = 8,0,28,0 %;
literal shdr$s_shf_f64_procfill_1 = 28;
macro shdr$v_shf_maskloproc = 8,28,4,0 %;
literal shdr$s_shf_maskloproc = 4;
macro shdr$v_shf_maskhiproc = 12,0,32,0 %;
literal shdr$s_shf_maskhiproc = 32;
macro shdr$pq_sh_addr = 16,0,0,0 %;
literal shdr$s_sh_addr = 8;
macro shdr$q_sh_offset = 24,0,0,0 %;
literal shdr$s_sh_offset = 8;
macro shdr$q_sh_size = 32,0,0,1 %;
literal shdr$s_sh_size = 8;
macro shdr$l_sh_link = 40,0,32,1 %;
macro shdr$l_sh_info = 44,0,32,1 %;
macro shdr$q_sh_addralign = 48,0,0,1 %;
literal shdr$s_sh_addralign = 8;
macro shdr$q_sh_entsize = 56,0,0,1 %;
literal shdr$s_sh_entsize = 8;
literal SHDR$K_SHN_UNDEF = 0;
literal SHDR$K_SHN_LORESERVE = 65280;
literal SHDR$K_SHN_LOPROC = 65280;
literal SHDR$K_SHN_HIPROC = 65311;
literal SHDR$K_SHN_LOOS = 65312;
literal SHDR$K_SHN_VMS_SYMVEC = 65312;
literal SHDR$K_SHN_HIOS = 65343;
literal SHDR$K_SHN_ABS = 65521;
literal SHDR$K_SHN_COMMON = 65522;
literal SHDR$K_SHN_XINDEX = 65535;
literal SHDR$K_SHN_HIRESERVE = 65535;
literal SHDR$K_SHT_NULL = 0;
literal SHDR$K_SHT_PROGBITS = 1;
literal SHDR$K_SHT_SYMTAB = 2;
literal SHDR$K_SHT_STRTAB = 3;
literal SHDR$K_SHT_RELA = 4;
literal SHDR$K_SHT_HASH = 5;
literal SHDR$K_SHT_DYNAMIC = 6;
literal SHDR$K_SHT_NOTE = 7;
literal SHDR$K_SHT_NOBITS = 8;
literal SHDR$K_SHT_REL = 9;
literal SHDR$K_SHT_SHLIB = 10;
literal SHDR$K_SHT_DYNSYM = 11;
literal SHDR$K_SHT_UNUSED_12 = 12;
literal SHDR$K_SHT_UNUSED_13 = 13;
literal SHDR$K_SHT_INIT_ARRAY = 14;
literal SHDR$K_SHT_FINI_ARRAY = 15;
literal SHDR$K_SHT_PREINIT_ARRAY = 16;
literal SHDR$K_SHT_GROUP = 17;
literal SHDR$K_SHT_SYMTAB_SHNDX = 18;
literal SHDR$K_SHT_LOOS = 1610612736;
literal SHDR$K_SHT_HIOS = 1879048191;
literal SHDR$K_SHT_LOPROC = 1879048192;
literal SHDR$K_SHT_HIPROC = 2147483647;
literal SHDR$K_SHT_LOUSER = -2147483648;
literal SHDR$K_SHT_HIUSER = -1;
literal SHDR$K_SHT_VMS_TRACE = 1610612736;
literal SHDR$K_SHT_VMS_TIE_SIGNATURES = 1610612737;
literal SHDR$K_SHT_VMS_DEBUG = 1610612738;
literal SHDR$K_SHT_VMS_DEBUG_STR = 1610612739;
literal SHDR$K_SHT_VMS_LINKAGES = 1610612740;
literal SHDR$K_SHT_VMS_SYMBOL_VECTOR = 1610612741;
literal SHDR$K_SHT_IA_64_LOPSREG = 2013265920;
literal SHDR$K_SHT_IA_64_HIPSREG = 2147483647;
literal SHDR$K_SHT_IA_64_EXT = 1879048192;
literal SHDR$K_SHT_IA_64_UNWIND = 1879048193;
literal SHDR$K_SHT_IA_64_PRIORITY_INIT = 2030043136;
literal VMSSIG$$K_SIZE = 8;
literal VMSSIG$$C_SIZE = 8;
literal vmssig$S_VMSSigEntry = 8;
macro vmssig$l_se_symbol = 0,0,32,1 %;
macro vmssig$l_se_offset = 4,0,32,1 %;
literal UNWIND$K_SIZE = 24;
literal UNWIND$C_SIZE = 24;
literal unwind$S_IA_64_Unwind_Entry = 24;
macro unwind$pq_ue_start = 0,0,0,0 %;
literal unwind$s_ue_start = 8;
macro unwind$pq_ue_end = 8,0,0,0 %;
literal unwind$s_ue_end = 8;
macro unwind$pq_ue_info = 16,0,0,0 %;
literal unwind$s_ue_info = 8;
literal ELF64_NHDR$K_NH_SIZE = 24;
literal ELF64_NHDR$C_NH_SIZE = 24;
literal nhdr$S_Elf64_Nhdr = 24;
macro nhdr$q_nh_namesz = 0,0,0,1 %;
literal nhdr$s_nh_namesz = 8;
macro nhdr$q_nh_descsz = 8,0,0,1 %;
literal nhdr$s_nh_descsz = 8;
macro nhdr$q_nh_type = 16,0,0,1 %;
literal nhdr$s_nh_type = 8;
literal ELF64_MHDR$K_MH_SIZE = 34;
literal ELF64_MHDR$C_MH_SIZE = 34;
literal mhdr$S_Elf64_Mhdr = 40;
macro mhdr$b_mh_create_date = 0,0,0,0 %;
literal mhdr$s_mh_create_date = 17;
macro mhdr$b_mh_patch_date = 17,0,0,0 %;
literal mhdr$s_mh_patch_date = 17;
macro mhdr$b_mh_name_version = 34,0,8,0 %;
literal NHDR$K_NT_VMS_MHD = 1;
literal NHDR$K_NT_VMS_LNM = 2;
literal NHDR$K_NT_VMS_SRC = 3;
literal NHDR$K_NT_VMS_TITLE = 4;
literal NHDR$K_NT_VMS_EIDC = 5;
literal NHDR$K_NT_VMS_LINKTIME = 101;
literal NHDR$K_NT_VMS_IMGNAM = 102;
literal NHDR$K_NT_VMS_IMGID = 103;
literal NHDR$K_NT_VMS_LINKID = 104;
literal NHDR$K_NT_VMS_IMGBID = 105;
literal NHDR$K_VMS_EIDC_MATCH_LEQ = 0;
literal NHDR$K_VMS_EIDC_MATCH_EQL = 1;
literal NHDR$K_VMS_EIDC_ERRSEV_WARNING = 0;
literal NHDR$K_VMS_EIDC_ERRSEV_SUCCESS = 1;
literal NHDR$K_VMS_EIDC_ERRSEV_ERROR = 2;
literal NHDR$K_VMS_EIDC_ERRSEV_SEVERE = 4;
literal ELF64_SYM$K_ST_SIZE = 24;
literal ELF64_SYM$C_ST_SIZE = 24;
literal symtab$S_Elf64_Sym = 24;
macro symtab$l_st_name = 0,0,32,1 %;
macro symtab$b_st_info = 4,0,8,0 %;
macro symtab$b_st_other = 5,0,8,0 %;
macro symtab$w_st_shndx = 6,0,16,0 %;
macro symtab$pq_st_value = 8,0,0,0 %;
literal symtab$s_st_value = 8;
macro symtab$q_st_size = 16,0,0,1 %;
literal symtab$s_st_size = 8;
literal SYMTAB$K_STB_LOCAL = 0;
literal SYMTAB$K_STB_GLOBAL = 1;
literal SYMTAB$K_STB_WEAK = 2;
literal SYMTAB$K_STB_LOOS = 10;
literal SYMTAB$K_STB_VMS_SYSTEM = 12;
literal SYMTAB$K_STB_HIOS = 12;
literal SYMTAB$K_STB_LOPROC = 13;
literal SYMTAB$K_STB_HIPROC = 15;
literal SYMTAB$K_STT_NOTYPE = 0;
literal SYMTAB$K_STT_OBJECT = 1;
literal SYMTAB$K_STT_FUNC = 2;
literal SYMTAB$K_STT_SECTION = 3;
literal SYMTAB$K_STT_FILE = 4;
literal SYMTAB$K_STT_COMMON = 5;
literal SYMTAB$K_STT_TLS = 6;
literal SYMTAB$K_STT_LOOS = 10;
literal SYMTAB$K_STT_HIOS = 12;
literal SYMTAB$K_STT_LOPROC = 13;
literal SYMTAB$K_STT_HIPROC = 15;
literal SYMTAB$K_STV_DEFAULT = 0;
literal SYMTAB$K_STV_INTERNAL = 1;
literal SYMTAB$K_STV_HIDDEN = 2;
literal SYMTAB$K_STV_PROTECTED = 3;
literal SYMTAB$K_STV_UNIVERSAL = 3;
literal ELF64_RELA64$K_R_SIZE = 24;
literal ELF64_RELA64$C_R_SIZE = 24;
literal rela$S_Elf64_Rela64 = 24;
macro rela$pq_r_offset = 0,0,0,0 %;
literal rela$s_r_offset = 8;
macro rela$q_r_info = 8,0,0,1 %;
literal rela$s_r_info = 8;
macro rela$l_r_type = 8,0,32,1 %;
macro rela$l_r_sym = 12,0,32,1 %;
macro rela$q_r_addend = 16,0,0,0 %;
literal rela$s_r_addend = 8;
literal RELA$K_R_IA_64_NONE = 0;
literal RELA$K_R_IA_64_IMM14 = 33;
literal RELA$K_R_IA_64_IMM22 = 34;
literal RELA$K_R_IA_64_IMM64 = 35;
literal RELA$K_R_IA_64_DIR32MSB = 36;
literal RELA$K_R_IA_64_DIR32LSB = 37;
literal RELA$K_R_IA_64_DIR64MSB = 38;
literal RELA$K_R_IA_64_DIR64LSB = 39;
literal RELA$K_R_IA_64_GPREL22 = 42;
literal RELA$K_R_IA_64_GPREL64I = 43;
literal RELA$K_R_IA_64_GPREL32MSB = 44;
literal RELA$K_R_IA_64_GPREL32LSB = 45;
literal RELA$K_R_IA_64_GPREL64MSB = 46;
literal RELA$K_R_IA_64_GPREL64LSB = 47;
literal RELA$K_R_IA_64_LTOFF22 = 50;
literal RELA$K_R_IA_64_LTOFF64I = 51;
literal RELA$K_R_IA_64_PLTOFF22 = 58;
literal RELA$K_R_IA_64_PLTOFF64I = 59;
literal RELA$K_R_IA_64_PLTOFF64MSB = 62;
literal RELA$K_R_IA_64_PLTOFF64LSB = 63;
literal RELA$K_R_IA_64_FPTR64I = 67;
literal RELA$K_R_IA_64_FPTR32MSB = 68;
literal RELA$K_R_IA_64_FPTR32LSB = 69;
literal RELA$K_R_IA_64_FPTR64MSB = 70;
literal RELA$K_R_IA_64_FPTR64LSB = 71;
literal RELA$K_R_IA_64_PCREL60B = 72;
literal RELA$K_R_IA_64_PCREL21B = 73;
literal RELA$K_R_IA_64_PCREL21M = 74;
literal RELA$K_R_IA_64_PCREL21F = 75;
literal RELA$K_R_IA_64_PCREL32MSB = 76;
literal RELA$K_R_IA_64_PCREL32LSB = 77;
literal RELA$K_R_IA_64_PCREL64MSB = 78;
literal RELA$K_R_IA_64_PCREL64LSB = 79;
literal RELA$K_R_IA_64_LTOFF_FPTR22 = 82;
literal RELA$K_R_IA_64_LTOFF_FPTR64I = 83;
literal RELA$K_R_IA_64_LTOFF_FPTR32MSB = 84;
literal RELA$K_R_IA_64_LTOFF_FPTR32LSB = 85;
literal RELA$K_R_IA_64_LTOFF_FPTR64MSB = 86;
literal RELA$K_R_IA_64_LTOFF_FPTR64LSB = 87;
literal RELA$K_R_IA_64_SEGREL32MSB = 92;
literal RELA$K_R_IA_64_SEGREL32LSB = 93;
literal RELA$K_R_IA_64_SEGREL64MSB = 94;
literal RELA$K_R_IA_64_SEGREL64LSB = 95;
literal RELA$K_R_IA_64_SECREL32MSB = 100;
literal RELA$K_R_IA_64_SECREL32LSB = 101;
literal RELA$K_R_IA_64_SECREL64MSB = 102;
literal RELA$K_R_IA_64_SECREL64LSB = 103;
literal RELA$K_R_IA_64_REL32MSB = 108;
literal RELA$K_R_IA_64_REL32LSB = 109;
literal RELA$K_R_IA_64_REL64MSB = 110;
literal RELA$K_R_IA_64_REL64LSB = 111;
literal RELA$K_R_IA_64_LTV32MSB = 116;
literal RELA$K_R_IA_64_LTV32LSB = 117;
literal RELA$K_R_IA_64_LTV64MSB = 118;
literal RELA$K_R_IA_64_LTV64LSB = 119;
literal RELA$K_R_IA_64_PCREL21BI = 121;
literal RELA$K_R_IA_64_PCREL22 = 122;
literal RELA$K_R_IA_64_PCREL64I = 123;
literal RELA$K_R_IA_64_IPLTMSB = 128;
literal RELA$K_R_IA_64_IPLTLSB = 129;
literal RELA$K_R_IA_64_COPY = 132;
literal RELA$K_R_IA_64_SUB = 133;
literal RELA$K_R_IA_64_LTOFF22X = 134;
literal RELA$K_R_IA_64_LDXMOV = 135;
literal RELA$K_R_IA_64_TPREL14 = 145;
literal RELA$K_R_IA_64_TPREL22 = 146;
literal RELA$K_R_IA_64_TPREL64I = 147;
literal RELA$K_R_IA_64_TPREL64MSB = 150;
literal RELA$K_R_IA_64_TPREL64LSB = 151;
literal RELA$K_R_IA_64_LTOFF_TP22 = 154;
literal RELA$K_R_IA_64_DTPMOD64MSB = 166;
literal RELA$K_R_IA_64_DTPMOD64LSB = 167;
literal RELA$K_R_IA_64_LTOFF_DTPMOD22 = 170;
literal RELA$K_R_IA_64_DTPREL14 = 177;
literal RELA$K_R_IA_64_DTPREL22 = 178;
literal RELA$K_R_IA_64_DTPREL64I = 179;
literal RELA$K_R_IA_64_DTPREL32MSB = 180;
literal RELA$K_R_IA_64_DTPREL32LSB = 181;
literal RELA$K_R_IA_64_DTPREL64MSB = 182;
literal RELA$K_R_IA_64_DTPREL64LSB = 183;
literal RELA$K_R_IA_64_LTOFF_DTPREL22 = 186;
literal RELA$K_R_IA_64_LOOS = 1879048192;
literal RELA$K_R_IA_64_HIOS = -1;
literal RELA$K_R_IA_64_DIR8 = 1879048192;
literal RELA$K_R_IA_64_DIR16LSB = 1879048193;
literal RELA$K_R_IA_64_VMS_CALL_SIG = 1879048194;
literal RELA$K_R_IA_64_VMS_EXECLET_FUNC = 1879048195;
literal RELA$K_R_IA_64_VMS_EXECLET_DATA = 1879048196;
literal RELA$K_R_IA_64_VMS_FIX8 = 1879048197;
literal RELA$K_R_IA_64_VMS_FIX16 = 1879048198;
literal RELA$K_R_IA_64_VMS_FIX32 = 1879048199;
literal RELA$K_R_IA_64_VMS_FIX64 = 1879048200;
literal RELA$K_R_IA_64_VMS_FIXFD = 1879048201;
literal PHDR$SC_PF_X = 0;
literal phdr$m_pf_x = %X'1';
literal PHDR$SC_PF_W = 1;
literal phdr$m_pf_w = %X'2';
literal PHDR$SC_PF_R = 2;
literal phdr$m_pf_r = %X'4';
literal phdr$m_pf_fill_3to19 = %X'FFFF8';
literal PHDR$SC_PF_VMS_CRF = 20;
literal phdr$m_pf_vms_crf = %X'100000';
literal PHDR$SC_PF_VMS_INITIALCODE = 21;
literal phdr$m_pf_vms_initialcode = %X'200000';
literal PHDR$SC_PF_VMS_RESIDENT = 22;
literal phdr$m_pf_vms_resident = %X'400000';
literal PHDR$SC_PF_VMS_VECTOR = 23;
literal phdr$m_pf_vms_vector = %X'800000';
literal PHDR$SC_PF_VMS_PROTECT = 24;
literal phdr$m_pf_vms_protect = %X'1000000';
literal PHDR$SC_PF_VMS_NOWRITADDR = 25;
literal phdr$m_pf_vms_nowritaddr = %X'2000000';
literal PHDR$SC_PF_VMS_SHORT = 26;
literal phdr$m_pf_vms_short = %X'4000000';
literal PHDR$SC_PF_VMS_SHARED = 27;
literal phdr$m_pf_vms_shared = %X'8000000';
literal PHDR$SC_PF_IA_64_NORECOV = 31;
literal phdr$m_pf_ia_64_norecov = %X'80000000';
literal phdr$m_fill_1 = %X'FFFFF';
literal PHDR$SC_PF_MASKOS = 20;
literal phdr$m_pf_maskos = %X'FF00000';
literal PHDR$SC_PF_MASKPROC = 28;
literal phdr$m_pf_maskproc = %X'F0000000';
literal ELF64_PHDR$K_SIZE = 56;
literal ELF64_PHDR$C_SIZE = 56;
literal phdr$S_Elf64_Phdr = 56;
macro phdr$l_p_type = 0,0,32,1 %;
macro phdr$l_p_flags = 4,0,32,1 %;
macro phdr$v_pf_x = 4,0,1,0 %;
macro phdr$v_pf_w = 4,1,1,0 %;
macro phdr$v_pf_r = 4,2,1,0 %;
macro phdr$v_pf_fill_3to19 = 4,3,17,0 %;
literal phdr$s_pf_fill_3to19 = 17;
macro phdr$v_pf_vms_crf = 4,20,1,0 %;
macro phdr$v_pf_vms_initialcode = 4,21,1,0 %;
macro phdr$v_pf_vms_resident = 4,22,1,0 %;
macro phdr$v_pf_vms_vector = 4,23,1,0 %;
macro phdr$v_pf_vms_protect = 4,24,1,0 %;
macro phdr$v_pf_vms_nowritaddr = 4,25,1,0 %;
macro phdr$v_pf_vms_short = 4,26,1,0 %;
macro phdr$v_pf_vms_shared = 4,27,1,0 %;
macro phdr$v_pf_fill_24to30 = 4,28,3,0 %;
literal phdr$s_pf_fill_24to30 = 3;
macro phdr$v_pf_ia_64_norecov = 4,31,1,0 %;
macro phdr$v_fill_1 = 4,0,20,0 %;
literal phdr$s_fill_1 = 20;
macro phdr$v_pf_maskos = 4,20,8,0 %;
literal phdr$s_pf_maskos = 8;
macro phdr$v_pf_maskproc = 4,28,4,0 %;
literal phdr$s_pf_maskproc = 4;
macro phdr$q_p_offset = 8,0,0,0 %;
literal phdr$s_p_offset = 8;
macro phdr$pq_p_vaddr = 16,0,0,0 %;
literal phdr$s_p_vaddr = 8;
macro phdr$pq_p_paddr = 24,0,0,0 %;
literal phdr$s_p_paddr = 8;
macro phdr$q_p_filesz = 32,0,0,1 %;
literal phdr$s_p_filesz = 8;
macro phdr$q_p_memsz = 40,0,0,1 %;
literal phdr$s_p_memsz = 8;
macro phdr$q_p_align = 48,0,0,1 %;
literal phdr$s_p_align = 8;
literal PHDR$K_PT_NULL = 0;
literal PHDR$K_PT_LOAD = 1;
literal PHDR$K_PT_DYNAMIC = 2;
literal PHDR$K_PT_INTERP = 3;
literal PHDR$K_PT_NOTE = 4;
literal PHDR$K_PT_SHLIB = 5;
literal PHDR$K_PT_PHDR = 6;
literal PHDR$K_PT_TLS = 7;
literal PHDR$K_PT_LOOS = 1610612736;
literal PHDR$K_PT_HIOS = 1879048191;
literal PHDR$K_PT_LOPROC = 1879048192;
literal PHDR$K_PT_HIPROC = 2147483647;
literal DYNSEG$SC_DT_VMS_LF_LNKDEBUG = 0;
literal dynseg$m_dt_vms_lf_lnkdebug = %X'1';
literal DYNSEG$SC_DT_VMS_LF_NOP0BUFS = 1;
literal dynseg$m_dt_vms_lf_nop0bufs = %X'2';
literal DYNSEG$SC_DT_VMS_LF_P0IMAGE = 2;
literal dynseg$m_dt_vms_lf_p0image = %X'4';
literal DYNSEG$SC_DT_VMS_LF_MKTHREADS = 3;
literal dynseg$m_dt_vms_lf_mkthreads = %X'8';
literal DYNSEG$SC_DT_VMS_LF_UPCALLS = 4;
literal dynseg$m_dt_vms_lf_upcalls = %X'10';
literal DYNSEG$SC_DT_VMS_LF_IMGSTA = 5;
literal dynseg$m_dt_vms_lf_imgsta = %X'20';
literal DYNSEG$SC_DT_VMS_LF_INITIALIZE = 6;
literal dynseg$m_dt_vms_lf_initialize = %X'40';
literal DYNSEG$SC_DT_VMS_LF_MAIN = 7;
literal dynseg$m_dt_vms_lf_main = %X'80';
literal DYNSEG$SC_DT_VMS_LF_TFRDEBUG = 8;
literal dynseg$m_dt_vms_lf_tfrdebug = %X'100';
literal DYNSEG$K_SIZE = 16;
literal DYNSEG$C_SIZE = 16;
literal dynseg$S_Elf64_Dyn = 16;
macro dynseg$q_d_tag = 0,0,0,0 %;
literal dynseg$s_d_tag = 8;
macro dynseg$q_d_val = 8,0,0,1 %;
literal dynseg$s_d_val = 8;
macro dynseg$pq_d_ptr = 8,0,0,0 %;
literal dynseg$s_d_ptr = 8;
macro dynseg$v_dt_vms_lf_lnkdebug = 8,0,1,0 %;
macro dynseg$v_dt_vms_lf_nop0bufs = 8,1,1,0 %;
macro dynseg$v_dt_vms_lf_p0image = 8,2,1,0 %;
macro dynseg$v_dt_vms_lf_mkthreads = 8,3,1,0 %;
macro dynseg$v_dt_vms_lf_upcalls = 8,4,1,0 %;
macro dynseg$v_dt_vms_lf_imgsta = 8,5,1,0 %;
macro dynseg$v_dt_vms_lf_initialize = 8,6,1,0 %;
macro dynseg$v_dt_vms_lf_main = 8,7,1,0 %;
macro dynseg$v_dt_vms_lf_tfrdebug = 8,8,1,0 %;
literal DYNSEG$K_DT_NULL = 0;
literal DYNSEG$K_DT_NEEDED = 1;
literal DYNSEG$K_DT_PLTGOT = 3;
literal DYNSEG$K_DT_STRTAB = 5;
literal DYNSEG$K_DT_STRSZ = 10;
literal DYNSEG$K_DT_INIT = 12;
literal DYNSEG$K_DT_IA_64_PLT_RESERVE = 1879048192;
literal DYNSEG$K_DT_LOOS = 1610612749;
literal DYNSEG$K_DT_VMS_SUBTYPE = 1610612749;
literal DYNSEG$K_DT_VMS_VERSION_ARRAY = 1610612750;
literal DYNSEG$K_DT_VMS_IMGIOCNT = 1610612751;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_3 = 1610612752;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_4 = 1610612753;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_5 = 1610612754;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_6 = 1610612755;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_7 = 1610612756;
literal DYNSEG$K_DT_VMS_LNKFLAGS = 1610612757;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_9 = 1610612758;
literal DYNSEG$K_DT_VMS_VIR_MEM_BLK_SIZ = 1610612759;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_11 = 1610612760;
literal DYNSEG$K_DT_VMS_IDENT = 1610612761;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_13 = 1610612762;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_14 = 1610612763;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_15 = 1610612764;
literal DYNSEG$K_DT_VMS_NEEDED_IDENT = 1610612765;
literal DYNSEG$K_DT_VMS_IMAGE_RELA = 1610612766;
literal DYNSEG$K_DT_VMS_IMG_RELA_CNT = 1610612767;
literal DYNSEG$K_DT_VMS_SEGMENT_RELA = 1610612768;
literal DYNSEG$K_DT_VMS_SEG_RELA_CNT = 1610612769;
literal DYNSEG$K_DT_VMS_FIXUP_RELA = 1610612770;
literal DYNSEG$K_DT_VMS_FIXUP_RELA_CNT = 1610612771;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_23 = 1610612772;
literal DYNSEG$K_DT_VMS_FIXUP_NEEDED = 1610612773;
literal DYNSEG$K_DT_VMS_SYMVEC = 1610612774;
literal DYNSEG$K_DT_VMS_SYMVEC_CNT = 1610612775;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_27 = 1610612776;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_28 = 1610612777;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_29 = 1610612778;
literal DYNSEG$K_DT_VMS_XLATED = 1610612779;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_31 = 1610612780;
literal DYNSEG$K_DT_VMS_STACKSIZE = 1610612781;
literal DYNSEG$K_DT_VMS_UNWIND = 1610612782;
literal DYNSEG$K_DT_VMS_UNWINDSZ = 1610612783;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_35 = 1610612784;
literal DYNSEG$K_DT_VMS_UNWIND_CODSEG = 1610612785;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_37 = 1610612786;
literal DYNSEG$K_DT_VMS_UNWIND_INFOSEG = 1610612787;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_39 = 1610612788;
literal DYNSEG$K_DT_VMS_LINKTIME = 1610612789;
literal DYNSEG$K_DT_VMS_SEG_GP = 1610612790;
literal DYNSEG$K_DT_VMS_SEG_NO = 1610612791;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_43 = 1610612792;
literal DYNSEG$K_DT_VMS_SYMVEC_OFFSET = 1610612793;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_45 = 1610612794;
literal DYNSEG$K_DT_VMS_SYMVEC_SEG = 1610612795;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_47 = 1610612796;
literal DYNSEG$K_DT_VMS_UNWIND_OFFSET = 1610612797;
literal DYNSEG$K_DT_VMS_DTLOOSPLUS_49 = 1610612798;
literal DYNSEG$K_DT_VMS_UNWIND_SEG = 1610612799;
literal DYNSEG$K_DT_VMS_SUBTYPE_CLI = 1;
literal TBK$K_RECTYPE_HDR32 = 1;
literal TBK$K_RECTYPE_RTN32 = 2;
literal TBK$K_RECTYPE_FIL = 3;
literal TBK$K_RECTYPE_LN1 = 4;
literal TBK$K_RECTYPE_LN2 = 5;
literal TBK$K_RECTYPE_LN4 = 6;
literal TBK$K_RECTYPE_PC1 = 7;
literal TBK$K_RECTYPE_PC2 = 8;
literal TBK$K_RECTYPE_PC4 = 9;
literal TBK$K_RECTYPE_VERSION = 10;
literal TBK$K_RECTYPE_HDR64 = 11;
literal TBK$K_RECTYPE_RTN64 = 12;
literal TBK$K_RECTYPE_PC8 = 13;
literal sysver$S_system_version_array = 132;
macro sysver$v_subsystem_mask = 0,0,32,0 %;
literal sysver$s_subsystem_mask = 32;   
macro sysver$r_system_ver = 4,0,32,0 %;
literal sysver$s_system_ver = 4;        
macro sysver$r_subsys_ver = 8,0,0,0 %;
literal sysver$s_subsys_ver = 124;      
literal SYSVER$K_LENGTH = 33;
literal SYSVER$C_LENGTH = 33;
literal IMF$K_SIZE = 32;
literal IMF$C_SIZE = 32;
literal imf$S_image_fixup = 32;
macro imf$q_fixup_offset = 0,0,0,1 %;
literal imf$s_fixup_offset = 8;
macro imf$l_type = 8,0,32,1 %;
macro imf$l_fixup_seg = 12,0,32,1 %;
macro imf$q_addend = 16,0,0,0 %;
literal imf$s_addend = 8;
macro imf$l_symvec_index = 24,0,32,1 %;
macro imf$l_data_type = 28,0,32,1 %;
literal IMR$K_SIZE = 40;
literal IMR$C_SIZE = 40;
literal imr$S_image_rela = 40;
macro imr$q_rela_offset = 0,0,0,1 %;
literal imr$s_rela_offset = 8;
macro imr$l_type = 8,0,32,1 %;
macro imr$l_rela_seg = 12,0,32,1 %;
macro imr$q_addend = 16,0,0,0 %;
literal imr$s_addend = 8;
macro imr$q_sym_offset = 24,0,0,1 %;
literal imr$s_sym_offset = 8;
macro imr$l_sym_seg = 32,0,32,1 %;
macro imr$l_fill_1 = 36,0,32,1 %;
literal SGR$K_SIZE = 32;
literal SGR$C_SIZE = 32;
literal sgr$S_segment_rela = 32;
macro sgr$q_rela_offset = 0,0,0,1 %;
literal sgr$s_rela_offset = 8;
macro sgr$l_type = 8,0,32,1 %;
macro sgr$l_rela_seg = 12,0,32,1 %;
macro sgr$q_addend = 16,0,0,0 %;
literal sgr$s_addend = 8;
macro sgr$q_gp_offset = 24,0,0,0 %;
literal sgr$s_gp_offset = 8;
macro sgr$l_symvec_index = 24,0,32,1 %;
macro sgr$l_needed_index = 28,0,32,1 %;
literal LNKG$K_SIZE = 8;
literal LNKG$C_SIZE = 8;
literal lnkg$S_vms_linkages_header = 8;
macro lnkg$l_type = 0,0,32,1 %;
macro lnkg$l_decl_count = 4,0,32,1 %;
literal LNKG_ENTRY1$K_SIZE = 12;
literal LNKG_ENTRY1$C_SIZE = 12;
literal lnkg_entry1$S_vms_lnkg_entry1 = 16;
macro lnkg_entry1$l_symidx = 0,0,32,1 %;
macro lnkg_entry1$ps_desc = 4,0,0,0 %;
literal lnkg_entry1$s_desc = 8;
macro lnkg_entry1$q_vms_linkage_qw = 4,0,0,1 %;
literal lnkg_entry1$s_vms_linkage_qw = 8;
 

literal ERA$K_LODUMMY = 0;              
literal ERA$K_MEMORY = 1;               
literal ERA$K_DISK = 2;                 
literal ERA$K_TAPE = 3;                 
literal ERA$K_HIDUMMY = 4;              
literal ERA$K_MINTYPE = 1;              
literal ERA$K_MAXTYPE = 3;              
 

literal ESF$K_TEMP = 4096;
literal ESF$K_POWER = 4097;
literal ESF$K_FAN = 4098;

literal esf$m_valid_status = %X'1';
literal esf$m_valid_value = %X'2';
literal esf$m_feat_reserved = %X'FC';
literal esf$S_esfitem = 32;
macro esf$b_type = 0,0,8,0 %;           
macro esf$b_subtype = 1,0,8,0 %;        
macro esf$B_VALUE = 2,0,8,0 %;          
macro esf$b_status = 3,0,8,0 %;         
macro esf$r_features_overlay = 4,0,8,0 %;
literal esf$s_features_overlay = 1;
macro esf$b_features = 4,0,8,0 %;       
macro esf$v_valid_status = 4,0,1,0 %;
macro esf$v_valid_value = 4,1,1,0 %;
macro esf$v_feat_reserved = 4,2,6,0 %;
literal esf$s_feat_reserved = 6;

macro esf$b_reserved_1 = 5,0,24,0 %;
literal esf$s_reserved_1 = 3;

macro esf$q_fru_node_id = 8,0,0,0 %;
literal esf$s_fru_node_id = 8;

macro esf$q_fru_flags = 16,0,0,0 %;
literal esf$s_fru_flags = 8;

macro esf$r_cid_overlay = 24,0,0,0 %;
literal esf$s_cid_overlay = 8;
macro esf$q_console_id = 24,0,0,0 %;
literal esf$s_console_id = 8;           
macro esf$l_offset = 24,0,32,0 %;       
macro esf$L_BITFIELD = 28,0,32,0 %;     

 

literal EVX$OPC_LDD = 33;
literal EVX$OPC_STD = 37;
literal EVX$OPC_OPC0A = 10;
literal EVX$OPC_OPC0C = 12;
literal EVX$OPC_OPC0D = 13;
literal EVX$OPC_OPC0E = 14;
literal EVX$OPC_OPC14 = 20;
literal EVX$OPC_OPC1C = 28;
literal EVX$OPC_LDBU = 10;
literal EVX$OPC_LDWU = 12;
literal EVX$OPC_LDL = 40;
literal EVX$OPC_LDQ = 41;
literal EVX$OPC_LDLL = 42;
literal EVX$OPC_LDQL = 43;
literal EVX$OPC_LDQU = 11;
literal EVX$OPC_LDA = 8;
literal EVX$OPC_STB = 14;
literal EVX$OPC_STW = 13;
literal EVX$OPC_STL = 44;
literal EVX$OPC_STQ = 45;
literal EVX$OPC_STLC = 46;
literal EVX$OPC_STQC = 47;
literal EVX$OPC_STQU = 15;
literal EVX$OPC_LDAH = 9;
literal EVX$OPC_LDF = 32;
literal EVX$OPC_LDG = 33;
literal EVX$OPC_LDS = 34;
literal EVX$OPC_LDT = 35;
literal EVX$OPC_STF = 36;
literal EVX$OPC_STG = 37;
literal EVX$OPC_STS = 38;
literal EVX$OPC_STT = 39;
literal EVX$OPC_SYNC = 24;
literal EVX$SYNC_MB = 16384;
literal EVX$SYNC_WMB = 17408;
literal EVX$SYNC_FETCH = 32768;
literal EVX$SYNC_RS = 61440;
literal EVX$SYNC_TRAPB = 0;
literal EVX$SYNC_EXCB = 1024;
literal EVX$SYNC_FETCH_M = 40960;
literal EVX$SYNC_RCC = 49152;
literal EVX$SYNC_RC = 57344;
literal EVX$SYNC_ECB = 59392;
literal EVX$SYNC_WH64 = 63488;
literal EVX$OPC_JSR = 26;
literal EVX$OPC_BR = 48;
literal EVX$OPC_BSR = 52;
literal EVX$OPC_BLBC = 56;
literal EVX$OPC_BLBS = 60;
literal EVX$OPC_FBEQ = 49;
literal EVX$OPC_FBNE = 53;
literal EVX$OPC_BEQ = 57;
literal EVX$OPC_BNE = 61;
literal EVX$OPC_FBLT = 50;
literal EVX$OPC_FBGE = 54;
literal EVX$OPC_BLT = 58;
literal EVX$OPC_BGE = 62;
literal EVX$OPC_FBLE = 51;
literal EVX$OPC_FBGT = 55;
literal EVX$OPC_BLE = 59;
literal EVX$OPC_BGT = 63;
literal EVX$OPC_ADDI = 16;
literal EVX$OPC_EXTI = 28;
literal EVX$OPC_LOGI = 17;
literal EVX$OPC_SHFI = 18;
literal EVX$OPC_MULI = 19;
literal EVX$ADDI_ADDL = 0;
literal EVX$ADDI_ADDLV = 64;
literal EVX$ADDI_ADDQ = 32;
literal EVX$ADDI_ADDQV = 96;
literal EVX$ADDI_S4ADDL = 2;
literal EVX$ADDI_S4ADDQ = 34;
literal EVX$ADDI_S8ADDL = 18;
literal EVX$ADDI_S8ADDQ = 50;
literal EVX$ADDI_S4SUBL = 11;
literal EVX$ADDI_S4SUBQ = 43;
literal EVX$ADDI_S8SUBL = 27;
literal EVX$ADDI_S8SUBQ = 59;
literal EVX$ADDI_SUBL = 9;
literal EVX$ADDI_SUBLV = 73;
literal EVX$ADDI_SUBQ = 41;
literal EVX$ADDI_SUBQV = 105;
literal EVX$ADDI_CMPEQ = 45;
literal EVX$ADDI_CMPLT = 77;
literal EVX$ADDI_CMPLE = 109;
literal EVX$ADDI_CMPULT = 29;
literal EVX$ADDI_CMPULE = 61;
literal EVX$ADDI_CMPBGE = 15;
literal EVX$EXTI_SEXTB = 0;
literal EVX$EXTI_SEXTW = 1;
literal EVX$EXTI_CTLZ = 50;
literal EVX$EXTI_CTPOP = 48;
literal EVX$EXTI_CTTZ = 51;
literal EVX$EXTI_MAXSB8 = 62;
literal EVX$EXTI_MAXSW4 = 63;
literal EVX$EXTI_MAXUB8 = 60;
literal EVX$EXTI_MAXUW4 = 61;
literal EVX$EXTI_MINSB8 = 56;
literal EVX$EXTI_MINSW4 = 57;
literal EVX$EXTI_MINUB8 = 58;
literal EVX$EXTI_MINUW4 = 59;
literal EVX$EXTI_PERR = 49;
literal EVX$EXTI_PKLB = 55;
literal EVX$EXTI_PKWB = 54;
literal EVX$EXTI_UNPKBL = 53;
literal EVX$EXTI_UNPKBW = 52;

literal EVX$EXTI_FTOIS = 120;
literal EVX$EXTI_FTOIT = 112;
literal EVX$LOGI_AND = 0;
literal EVX$LOGI_BIC = 8;
literal EVX$LOGI_CMOVEQ = 36;
literal EVX$LOGI_CMOVNE = 38;
literal EVX$LOGI_CMOVLBS = 20;
literal EVX$LOGI_BIS = 32;
literal EVX$LOGI_ORNOT = 40;
literal EVX$LOGI_CMOVLT = 68;
literal EVX$LOGI_CMOVGE = 70;
literal EVX$LOGI_CMOVLBC = 22;
literal EVX$LOGI_XOR = 64;
literal EVX$LOGI_EQV = 72;
literal EVX$LOGI_CMOVLE = 100;
literal EVX$LOGI_CMOVGT = 102;
literal EVX$LOGI_AMASK = 97;
literal EVX$LOGI_IMPLVER = 108;
literal EVX$SHFI_SLL = 57;
literal EVX$SHFI_SRA = 60;
literal EVX$SHFI_SRL = 52;
literal EVX$SHFI_EXTBL = 6;
literal EVX$SHFI_EXTWL = 22;
literal EVX$SHFI_EXTLL = 38;
literal EVX$SHFI_EXTQL = 54;
literal EVX$SHFI_EXTWH = 90;
literal EVX$SHFI_EXTLH = 106;
literal EVX$SHFI_EXTQH = 122;
literal EVX$SHFI_INSBL = 11;
literal EVX$SHFI_INSWL = 27;
literal EVX$SHFI_INSLL = 43;
literal EVX$SHFI_INSQL = 59;
literal EVX$SHFI_INSWH = 87;
literal EVX$SHFI_INSLH = 103;
literal EVX$SHFI_INSQH = 119;
literal EVX$SHFI_MSKBL = 2;
literal EVX$SHFI_MSKWL = 18;
literal EVX$SHFI_MSKLL = 34;
literal EVX$SHFI_MSKQL = 50;
literal EVX$SHFI_MSKWH = 82;
literal EVX$SHFI_MSKLH = 98;
literal EVX$SHFI_MSKQH = 114;
literal EVX$SHFI_ZAP = 48;
literal EVX$SHFI_ZAPNOT = 49;
literal EVX$MULI_MULL = 0;
literal EVX$MULI_MULQV = 96;
literal EVX$MULI_MULLV = 64;
literal EVX$MULI_UMULH = 48;
literal EVX$MULI_MULQ = 32;
literal EVX$OPC_FPCOMBO = 20;
literal EVX$OPC_FPDEC = 21;
literal EVX$OPC_FPIEEE = 22;
literal EVX$OPC_FPAUX = 23;

literal EVX$FPCOMBO_SQRTS = 139;
literal EVX$FPCOMBO_SQRTSC = 11;
literal EVX$FPCOMBO_SQRTSM = 75;
literal EVX$FPCOMBO_SQRTSD = 203;
literal EVX$FPCOMBO_SQRTSUC = 267;
literal EVX$FPCOMBO_SQRTSUM = 331;
literal EVX$FPCOMBO_SQRTSU = 395;
literal EVX$FPCOMBO_SQRTSUD = 459;
literal EVX$FPCOMBO_SQRTSSUC = 1291;
literal EVX$FPCOMBO_SQRTSSUM = 1355;
literal EVX$FPCOMBO_SQRTSSU = 1419;
literal EVX$FPCOMBO_SQRTSSUD = 1483;
literal EVX$FPCOMBO_SQRTSSUIC = 1803;
literal EVX$FPCOMBO_SQRTSSUIM = 1867;
literal EVX$FPCOMBO_SQRTSSUI = 1931;
literal EVX$FPCOMBO_SQRTSSUID = 1995;
literal EVX$FPCOMBO_SQRTT = 171;
literal EVX$FPCOMBO_SQRTTC = 43;
literal EVX$FPCOMBO_SQRTTM = 107;
literal EVX$FPCOMBO_SQRTTD = 235;
literal EVX$FPCOMBO_SQRTTUC = 299;
literal EVX$FPCOMBO_SQRTTUM = 363;
literal EVX$FPCOMBO_SQRTTU = 427;
literal EVX$FPCOMBO_SQRTTUD = 491;
literal EVX$FPCOMBO_SQRTTSUC = 1323;
literal EVX$FPCOMBO_SQRTTSUM = 1387;
literal EVX$FPCOMBO_SQRTTSU = 1451;
literal EVX$FPCOMBO_SQRTTSUD = 1515;
literal EVX$FPCOMBO_SQRTTSUIC = 1835;
literal EVX$FPCOMBO_SQRTTSUIM = 1899;
literal EVX$FPCOMBO_SQRTTSUI = 1963;
literal EVX$FPCOMBO_SQRTTSUID = 2027;
literal EVX$FPCOMBO_ITOFF = 20;
literal EVX$FPCOMBO_ITOFT = 36;
literal EVX$FPCOMBO_ITOFS = 4;
literal EVX$FPAUX_CPYS = 32;
literal EVX$FPAUX_CVTLQ = 16;
literal EVX$FPAUX_FCMOVEQ = 42;
literal EVX$FPAUX_FCMOVNE = 43;
literal EVX$FPAUX_MT_FPCR = 36;
literal EVX$FPAUX_MF_FPCR = 37;
literal EVX$FPAUX_CPYSN = 33;
literal EVX$FPAUX_CVTQL = 48;
literal EVX$FPAUX_FCMOVLT = 44;
literal EVX$FPAUX_FCMOVGE = 45;
literal EVX$FPAUX_CPYSE = 34;
literal EVX$FPAUX_CVTQLV = 304;
literal EVX$FPAUX_CVTQLSV = 1328;
literal EVX$FPAUX_FCMOVLE = 46;
literal EVX$FPAUX_FCMOVGT = 47;
literal EVX$FPIEEE_CMPTEQ = 165;
literal EVX$FPIEEE_CMPTLT = 166;
literal EVX$FPIEEE_CMPTLE = 167;
literal EVX$FPIEEE_CMPTUN = 164;
literal EVX$FPIEEE_CMPTEQSU = 1445;
literal EVX$FPIEEE_CMPTLTSU = 1446;
literal EVX$FPIEEE_CMPTLESU = 1447;
literal EVX$FPIEEE_CMPTUNSU = 1444;
literal EVX$FPIEEE_CVTQS = 188;
literal EVX$FPIEEE_CVTQSC = 60;
literal EVX$FPIEEE_CVTQSM = 124;
literal EVX$FPIEEE_CVTQSP = 252;
literal EVX$FPIEEE_CVTQSSUI = 1980;
literal EVX$FPIEEE_CVTQSSUIC = 1852;
literal EVX$FPIEEE_CVTQSSUIM = 1916;
literal EVX$FPIEEE_CVTQSSUIP = 2044;
literal EVX$FPIEEE_CVTQT = 190;
literal EVX$FPIEEE_CVTQTC = 62;
literal EVX$FPIEEE_CVTQTM = 126;
literal EVX$FPIEEE_CVTQTP = 254;
literal EVX$FPIEEE_CVTQTSUI = 1982;
literal EVX$FPIEEE_CVTQTSUIC = 1854;
literal EVX$FPIEEE_CVTQTSUIM = 1918;
literal EVX$FPIEEE_CVTQTSUIP = 2046;
literal EVX$FPIEEE_CVTST = 684;
literal EVX$FPIEEE_CVTSTS = 1708;
literal EVX$FPIEEE_CVTTS = 172;
literal EVX$FPIEEE_CVTTSC = 44;
literal EVX$FPIEEE_CVTTSM = 108;
literal EVX$FPIEEE_CVTTSP = 236;
literal EVX$FPIEEE_CVTTSU = 428;
literal EVX$FPIEEE_CVTTSUC = 300;
literal EVX$FPIEEE_CVTTSUM = 364;
literal EVX$FPIEEE_CVTTSUP = 492;
literal EVX$FPIEEE_CVTTSSU = 1452;
literal EVX$FPIEEE_CVTTSSUC = 1324;
literal EVX$FPIEEE_CVTTSSUM = 1388;
literal EVX$FPIEEE_CVTTSSUP = 1516;
literal EVX$FPIEEE_CVTTSSUI = 1964;
literal EVX$FPIEEE_CVTTSSUIC = 1836;
literal EVX$FPIEEE_CVTTSSUIM = 1900;
literal EVX$FPIEEE_CVTTSSUIP = 2028;
literal EVX$FPIEEE_DIVS = 131;
literal EVX$FPIEEE_DIVSC = 3;
literal EVX$FPIEEE_DIVSM = 67;
literal EVX$FPIEEE_DIVSP = 195;
literal EVX$FPIEEE_DIVSU = 387;
literal EVX$FPIEEE_DIVSUC = 259;
literal EVX$FPIEEE_DIVSUM = 323;
literal EVX$FPIEEE_DIVSUP = 451;
literal EVX$FPIEEE_DIVSSU = 1411;
literal EVX$FPIEEE_DIVSSUC = 1283;
literal EVX$FPIEEE_DIVSSUM = 1347;
literal EVX$FPIEEE_DIVSSUP = 1475;
literal EVX$FPIEEE_DIVSSUI = 1923;
literal EVX$FPIEEE_DIVSSUIC = 1795;
literal EVX$FPIEEE_DIVSSUIM = 1859;
literal EVX$FPIEEE_DIVSSUIP = 1987;
literal EVX$FPIEEE_DIVT = 163;
literal EVX$FPIEEE_DIVTC = 35;
literal EVX$FPIEEE_DIVTM = 99;
literal EVX$FPIEEE_DIVTP = 227;
literal EVX$FPIEEE_DIVTU = 419;
literal EVX$FPIEEE_DIVTUC = 291;
literal EVX$FPIEEE_DIVTUM = 355;
literal EVX$FPIEEE_DIVTUP = 483;
literal EVX$FPIEEE_DIVTSU = 1443;
literal EVX$FPIEEE_DIVTSUC = 1315;
literal EVX$FPIEEE_DIVTSUM = 1379;
literal EVX$FPIEEE_DIVTSUP = 1507;
literal EVX$FPIEEE_DIVTSUI = 1955;
literal EVX$FPIEEE_DIVTSUIC = 1827;
literal EVX$FPIEEE_DIVTSUIM = 1891;
literal EVX$FPIEEE_DIVTSUIP = 2019;
literal EVX$FPIEEE_MULS = 130;
literal EVX$FPIEEE_MULSC = 2;
literal EVX$FPIEEE_MULSM = 66;
literal EVX$FPIEEE_MULSP = 194;
literal EVX$FPIEEE_MULSU = 386;
literal EVX$FPIEEE_MULSUC = 258;
literal EVX$FPIEEE_MULSUM = 322;
literal EVX$FPIEEE_MULSUP = 450;
literal EVX$FPIEEE_MULSSU = 1410;
literal EVX$FPIEEE_MULSSUC = 1282;
literal EVX$FPIEEE_MULSSUM = 1346;
literal EVX$FPIEEE_MULSSUP = 1474;
literal EVX$FPIEEE_MULSSUI = 1922;
literal EVX$FPIEEE_MULSSUIC = 1794;
literal EVX$FPIEEE_MULSSUIM = 1858;
literal EVX$FPIEEE_MULSSUIP = 1986;
literal EVX$FPIEEE_MULT = 162;
literal EVX$FPIEEE_MULTC = 34;
literal EVX$FPIEEE_MULTM = 98;
literal EVX$FPIEEE_MULTP = 226;
literal EVX$FPIEEE_MULTU = 418;
literal EVX$FPIEEE_MULTUC = 290;
literal EVX$FPIEEE_MULTUM = 354;
literal EVX$FPIEEE_MULTUP = 482;
literal EVX$FPIEEE_MULTSU = 1442;
literal EVX$FPIEEE_MULTSUC = 1314;
literal EVX$FPIEEE_MULTSUM = 1378;
literal EVX$FPIEEE_MULTSUP = 1506;
literal EVX$FPIEEE_MULTSUI = 1954;
literal EVX$FPIEEE_MULTSUIC = 1826;
literal EVX$FPIEEE_MULTSUIM = 1890;
literal EVX$FPIEEE_MULTSUIP = 2018;
literal EVX$FPIEEE_SUBS = 129;
literal EVX$FPIEEE_SUBSC = 1;
literal EVX$FPIEEE_SUBSM = 65;
literal EVX$FPIEEE_SUBSP = 193;
literal EVX$FPIEEE_SUBSU = 385;
literal EVX$FPIEEE_SUBSUC = 257;
literal EVX$FPIEEE_SUBSUM = 321;
literal EVX$FPIEEE_SUBSUP = 449;
literal EVX$FPIEEE_SUBSSU = 1409;
literal EVX$FPIEEE_SUBSSUC = 1281;
literal EVX$FPIEEE_SUBSSUM = 1345;
literal EVX$FPIEEE_SUBSSUP = 1473;
literal EVX$FPIEEE_SUBSSUI = 1921;
literal EVX$FPIEEE_SUBSSUIC = 1793;
literal EVX$FPIEEE_SUBSSUIM = 1857;
literal EVX$FPIEEE_SUBSSUIP = 1985;
literal EVX$FPIEEE_SUBT = 161;
literal EVX$FPIEEE_SUBTC = 33;
literal EVX$FPIEEE_SUBTM = 97;
literal EVX$FPIEEE_SUBTP = 225;
literal EVX$FPIEEE_SUBTU = 417;
literal EVX$FPIEEE_SUBTUC = 289;
literal EVX$FPIEEE_SUBTUM = 353;
literal EVX$FPIEEE_SUBTUP = 481;
literal EVX$FPIEEE_SUBTSU = 1441;
literal EVX$FPIEEE_SUBTSUC = 1313;
literal EVX$FPIEEE_SUBTSUM = 1377;
literal EVX$FPIEEE_SUBTSUP = 1505;
literal EVX$FPIEEE_SUBTSUI = 1953;
literal EVX$FPIEEE_SUBTSUIC = 1825;
literal EVX$FPIEEE_SUBTSUIM = 1889;
literal EVX$FPIEEE_SUBTSUIP = 2017;
literal EVX$FPIEEE_ADDS = 128;
literal EVX$FPIEEE_ADDSC = 0;
literal EVX$FPIEEE_ADDSM = 64;
literal EVX$FPIEEE_ADDSP = 192;
literal EVX$FPIEEE_ADDSU = 384;
literal EVX$FPIEEE_ADDSUC = 256;
literal EVX$FPIEEE_ADDSUM = 320;
literal EVX$FPIEEE_ADDSUP = 448;
literal EVX$FPIEEE_ADDSSU = 1408;
literal EVX$FPIEEE_ADDSSUC = 1280;
literal EVX$FPIEEE_ADDSSUM = 1344;
literal EVX$FPIEEE_ADDSSUP = 1472;
literal EVX$FPIEEE_ADDSSUI = 1920;
literal EVX$FPIEEE_ADDSSUIC = 1792;
literal EVX$FPIEEE_ADDSSUIM = 1856;
literal EVX$FPIEEE_ADDSSUIP = 1984;
literal EVX$FPIEEE_ADDT = 160;
literal EVX$FPIEEE_ADDTC = 32;
literal EVX$FPIEEE_ADDTM = 96;
literal EVX$FPIEEE_ADDTP = 224;
literal EVX$FPIEEE_ADDTU = 416;
literal EVX$FPIEEE_ADDTUC = 288;
literal EVX$FPIEEE_ADDTUM = 352;
literal EVX$FPIEEE_ADDTUP = 480;
literal EVX$FPIEEE_ADDTSU = 1440;
literal EVX$FPIEEE_ADDTSUC = 1312;
literal EVX$FPIEEE_ADDTSUM = 1376;
literal EVX$FPIEEE_ADDTSUP = 1504;
literal EVX$FPIEEE_ADDTSUI = 1952;
literal EVX$FPIEEE_ADDTSUIC = 1824;
literal EVX$FPIEEE_ADDTSUIM = 1888;
literal EVX$FPIEEE_ADDTSUIP = 2016;
literal EVX$FPIEEE_CVTTQ = 175;
literal EVX$FPIEEE_CVTTQC = 47;
literal EVX$FPIEEE_CVTTQV = 431;
literal EVX$FPIEEE_CVTTQVC = 303;
literal EVX$FPIEEE_CVTTQSV = 1455;
literal EVX$FPIEEE_CVTTQSVC = 1327;
literal EVX$FPIEEE_CVTTQSVI = 1967;
literal EVX$FPIEEE_CVTTQSVIC = 1839;
literal EVX$FPIEEE_CVTTQD = 239;
literal EVX$FPIEEE_CVTTQVD = 495;
literal EVX$FPIEEE_CVTTQSVD = 1519;
literal EVX$FPIEEE_CVTTQSVID = 2031;
literal EVX$FPIEEE_CVTTQM = 111;
literal EVX$FPIEEE_CVTTQVM = 367;
literal EVX$FPIEEE_CVTTQSVM = 1391;
literal EVX$FPIEEE_CVTTQSVIM = 1903;
literal EVX$FPIEEE_CVTTQP = 239;
literal EVX$FPIEEE_CVTTQVP = 495;
literal EVX$FPIEEE_CVTTQSVP = 1519;
literal EVX$FPIEEE_CVTTQSVIP = 2031;
literal EVX$FPDEC_ADDF = 128;
literal EVX$FPDEC_ADDFC = 0;
literal EVX$FPDEC_ADDFU = 384;
literal EVX$FPDEC_ADDFUC = 256;
literal EVX$FPDEC_ADDFS = 1152;
literal EVX$FPDEC_ADDFSC = 1024;
literal EVX$FPDEC_ADDFSU = 1408;
literal EVX$FPDEC_ADDFSUC = 1280;
literal EVX$FPDEC_ADDG = 160;
literal EVX$FPDEC_ADDGC = 32;
literal EVX$FPDEC_ADDGU = 416;
literal EVX$FPDEC_ADDGUC = 288;
literal EVX$FPDEC_ADDGS = 1184;
literal EVX$FPDEC_ADDGSC = 1056;
literal EVX$FPDEC_ADDGSU = 1440;
literal EVX$FPDEC_ADDGSUC = 1312;
literal EVX$FPCOMBO_SQRTF = 138;
literal EVX$FPCOMBO_SQRTFUC = 266;
literal EVX$FPCOMBO_SQRTFU = 394;
literal EVX$FPCOMBO_SQRTFC = 10;
literal EVX$FPCOMBO_SQRTFSC = 1034;
literal EVX$FPCOMBO_SQRTFS = 1162;
literal EVX$FPCOMBO_SQRTFSUC = 1290;
literal EVX$FPCOMBO_SQRTFSU = 1418;
literal EVX$FPCOMBO_SQRTG = 170;
literal EVX$FPCOMBO_SQRTGC = 42;
literal EVX$FPCOMBO_SQRTGUC = 298;
literal EVX$FPCOMBO_SQRTGU = 426;
literal EVX$FPCOMBO_SQRTGSC = 1066;
literal EVX$FPCOMBO_SQRTGS = 1194;
literal EVX$FPCOMBO_SQRTGSUC = 1322;
literal EVX$FPCOMBO_SQRTGSU = 1450;
literal EVX$FPDEC_SUBF = 129;
literal EVX$FPDEC_SUBFC = 1;
literal EVX$FPDEC_SUBFU = 385;
literal EVX$FPDEC_SUBFUC = 257;
literal EVX$FPDEC_SUBFS = 1153;
literal EVX$FPDEC_SUBFSC = 1025;
literal EVX$FPDEC_SUBFSU = 1409;
literal EVX$FPDEC_SUBFSUC = 1281;
literal EVX$FPDEC_SUBG = 161;
literal EVX$FPDEC_SUBGC = 33;
literal EVX$FPDEC_SUBGU = 417;
literal EVX$FPDEC_SUBGUC = 289;
literal EVX$FPDEC_SUBGS = 1185;
literal EVX$FPDEC_SUBGSC = 1057;
literal EVX$FPDEC_SUBGSU = 1441;
literal EVX$FPDEC_SUBGSUC = 1313;
literal EVX$FPDEC_MULF = 130;
literal EVX$FPDEC_MULFC = 2;
literal EVX$FPDEC_MULFU = 386;
literal EVX$FPDEC_MULFUC = 258;
literal EVX$FPDEC_MULFS = 1154;
literal EVX$FPDEC_MULFSC = 1026;
literal EVX$FPDEC_MULFSU = 1410;
literal EVX$FPDEC_MULFSUC = 1282;
literal EVX$FPDEC_MULG = 162;
literal EVX$FPDEC_MULGC = 34;
literal EVX$FPDEC_MULGU = 418;
literal EVX$FPDEC_MULGUC = 290;
literal EVX$FPDEC_MULGS = 1186;
literal EVX$FPDEC_MULGSC = 1058;
literal EVX$FPDEC_MULGSU = 1442;
literal EVX$FPDEC_MULGSUC = 1314;
literal EVX$FPDEC_DIVF = 131;
literal EVX$FPDEC_DIVFC = 3;
literal EVX$FPDEC_DIVFU = 387;
literal EVX$FPDEC_DIVFUC = 259;
literal EVX$FPDEC_DIVFS = 1155;
literal EVX$FPDEC_DIVFSC = 1027;
literal EVX$FPDEC_DIVFSU = 1411;
literal EVX$FPDEC_DIVFSUC = 1283;
literal EVX$FPDEC_DIVG = 163;
literal EVX$FPDEC_DIVGC = 35;
literal EVX$FPDEC_DIVGU = 419;
literal EVX$FPDEC_DIVGUC = 291;
literal EVX$FPDEC_DIVGS = 1187;
literal EVX$FPDEC_DIVGSC = 1059;
literal EVX$FPDEC_DIVGSU = 1443;
literal EVX$FPDEC_DIVGSUC = 1315;
literal EVX$FPDEC_CMPGEQ = 165;
literal EVX$FPDEC_CMPGLT = 166;
literal EVX$FPDEC_CMPGLE = 167;
literal EVX$FPDEC_CMPGEQS = 1189;
literal EVX$FPDEC_CMPGLTS = 1190;
literal EVX$FPDEC_CMPGLES = 1191;
literal EVX$FPDEC_CVTDG = 158;
literal EVX$FPDEC_CVTDGC = 30;
literal EVX$FPDEC_CVTDGU = 414;
literal EVX$FPDEC_CVTDGUC = 286;
literal EVX$FPDEC_CVTDGS = 1182;
literal EVX$FPDEC_CVTDGSC = 1054;
literal EVX$FPDEC_CVTDGSU = 1438;
literal EVX$FPDEC_CVTDGSUC = 1310;
literal EVX$FPDEC_CVTGD = 173;
literal EVX$FPDEC_CVTGDC = 45;
literal EVX$FPDEC_CVTGDU = 429;
literal EVX$FPDEC_CVTGDUC = 301;
literal EVX$FPDEC_CVTGDS = 1197;
literal EVX$FPDEC_CVTGDSC = 1069;
literal EVX$FPDEC_CVTGDSU = 1453;
literal EVX$FPDEC_CVTGDSUC = 1325;
literal EVX$FPDEC_CVTFG = 142;
literal EVX$FPDEC_CVTFGC = 14;
literal EVX$FPDEC_CVTFGS = 1166;
literal EVX$FPDEC_CVTFGSC = 1038;
literal EVX$FPDEC_CVTGF = 172;
literal EVX$FPDEC_CVTGFC = 44;
literal EVX$FPDEC_CVTGFU = 428;
literal EVX$FPDEC_CVTGFUC = 300;
literal EVX$FPDEC_CVTGFS = 1196;
literal EVX$FPDEC_CVTGFSC = 1068;
literal EVX$FPDEC_CVTGFSU = 1452;
literal EVX$FPDEC_CVTGFSUC = 1324;
literal EVX$FPDEC_CVTQD = 189;
literal EVX$FPDEC_CVTQDC = 61;
literal EVX$FPDEC_CVTQDS = 1213;
literal EVX$FPDEC_CVTQDSC = 1085;
literal EVX$FPDEC_CVTQF = 188;
literal EVX$FPDEC_CVTQFC = 60;
literal EVX$FPDEC_CVTQFS = 1212;
literal EVX$FPDEC_CVTQFSC = 1084;
literal EVX$FPDEC_CVTQG = 190;
literal EVX$FPDEC_CVTQGC = 62;
literal EVX$FPDEC_CVTQGS = 1214;
literal EVX$FPDEC_CVTQGSC = 1086;
literal EVX$FPDEC_CVTDQ = 159;
literal EVX$FPDEC_CVTDQC = 31;
literal EVX$FPDEC_CVTDQV = 415;
literal EVX$FPDEC_CVTDQVC = 287;
literal EVX$FPDEC_CVTDQS = 1183;
literal EVX$FPDEC_CVTDQSC = 1055;
literal EVX$FPDEC_CVTDQSV = 1439;
literal EVX$FPDEC_CVTDQSVC = 1311;
literal EVX$FPDEC_CVTGQ = 175;
literal EVX$FPDEC_CVTGQC = 47;
literal EVX$FPDEC_CVTGQV = 431;
literal EVX$FPDEC_CVTGQVC = 303;
literal EVX$FPDEC_CVTGQS = 1199;
literal EVX$FPDEC_CVTGQSC = 1071;
literal EVX$FPDEC_CVTGQSV = 1455;
literal EVX$FPDEC_CVTGQSVC = 1327;
literal EVX$OPC_PAL = 0;
literal EVX$PAL_BPT = 128;
literal EVX$PAL_BUGCHK = 129;
literal EVX$PAL_CHME = 130;
literal EVX$PAL_CHMK = 131;
literal EVX$PAL_CHMS = 132;
literal EVX$PAL_CHMU = 133;
literal EVX$PAL_IMB = 134;
literal EVX$PAL_INSQHIL = 135;
literal EVX$PAL_INSQTIL = 136;
literal EVX$PAL_INSQHIQ = 137;
literal EVX$PAL_INSQTIQ = 138;
literal EVX$PAL_INSQUEL = 139;
literal EVX$PAL_INSQUEQ = 140;
literal EVX$PAL_INSQUELD = 141;
literal EVX$PAL_INSQUEQD = 142;
literal EVX$PAL_PROBER = 143;
literal EVX$PAL_PROBEW = 144;
literal EVX$PAL_RD_PS = 145;
literal EVX$PAL_REI = 146;
literal EVX$PAL_REMQHIL = 147;
literal EVX$PAL_REMQTIL = 148;
literal EVX$PAL_REMQHIQ = 149;
literal EVX$PAL_REMQTIQ = 150;
literal EVX$PAL_REMQUEL = 151;
literal EVX$PAL_REMQUEQ = 152;
literal EVX$PAL_REMQUELD = 153;
literal EVX$PAL_REMQUEQD = 154;
literal EVX$PAL_SWASTEN = 155;
literal EVX$PAL_WR_PS_SW = 156;
literal EVX$PAL_RSCC = 157;
literal EVX$PAL_READ_UNQ = 158;
literal EVX$PAL_WRITE_UNQ = 159;
literal EVX$PAL_AMOVRR = 160;
literal EVX$PAL_AMOVRM = 161;
literal EVX$PAL_INSQHILR = 162;
literal EVX$PAL_INSQTILR = 163;
literal EVX$PAL_INSQHIQR = 164;
literal EVX$PAL_INSQTIQR = 165;
literal EVX$PAL_REMQHILR = 166;
literal EVX$PAL_REMQTILR = 167;
literal EVX$PAL_REMQHIQR = 168;
literal EVX$PAL_REMQTIQR = 169;
literal EVX$PAL_GENTRAP = 170;
literal EVX$PAL_CFLUSH = 1;
literal EVX$PAL_DRAINA = 2;
literal EVX$PAL_HALT = 0;
literal EVX$PAL_LDQP = 3;
literal EVX$PAL_STQP = 4;
literal EVX$PAL_SWPCTX = 5;
literal EVX$PAL_MFPR_ASN = 6;
literal EVX$PAL_MTPR_ASTEN = 7;
literal EVX$PAL_MTPR_ASTSR = 8;
literal EVX$PAL_CSERVE = 9;
literal EVX$PAL_SWPPAL = 10;
literal EVX$PAL_MFPR_FEN = 11;
literal EVX$PAL_MTPR_FEN = 12;
literal EVX$PAL_MTPR_IPIR = 13;
literal EVX$PAL_MFPR_IPL = 14;
literal EVX$PAL_MTPR_IPL = 15;
literal EVX$PAL_MFPR_MCES = 16;
literal EVX$PAL_MTPR_MCES = 17;
literal EVX$PAL_MFPR_PCBB = 18;
literal EVX$PAL_MFPR_PRBR = 19;
literal EVX$PAL_MTPR_PRBR = 20;
literal EVX$PAL_MFPR_PTBR = 21;
literal EVX$PAL_MFPR_SCBB = 22;
literal EVX$PAL_MTPR_SCBB = 23;
literal EVX$PAL_MTPR_SIRR = 24;
literal EVX$PAL_MFPR_SISR = 25;
literal EVX$PAL_MFPR_TBCHK = 26;
literal EVX$PAL_MTPR_TBIA = 27;
literal EVX$PAL_MTPR_TBIAP = 28;
literal EVX$PAL_MTPR_TBIS = 29;
literal EVX$PAL_MFPR_ESP = 30;
literal EVX$PAL_MTPR_ESP = 31;
literal EVX$PAL_MFPR_SSP = 32;
literal EVX$PAL_MTPR_SSP = 33;
literal EVX$PAL_MFPR_USP = 34;
literal EVX$PAL_MTPR_USP = 35;
literal EVX$PAL_MTPR_TBISD = 36;
literal EVX$PAL_MTPR_TBISI = 37;
literal EVX$PAL_MFPR_ASTEN = 38;
literal EVX$PAL_MFPR_ASTSR = 39;
literal EVX$PAL_MFPR_VPTBASE = 41;
literal EVX$PAL_MTPR_VPTBASE = 42;
literal EVX$PAL_MTPR_PERFMON = 43;
literal EVX$PAL_MTPR_DATAFX = 46;
literal EVX$PAL_MFPR_VIRBND = 48;
literal EVX$PAL_MTPR_VIRBND = 49;
literal EVX$PAL_MFPR_SYSPTBR = 50;
literal EVX$PAL_MTPR_SYSPTBR = 51;
literal EVX$PAL_MFPR_WHAMI = 63;
literal EVX$PAL_WTINT = 62;
literal EVX$PAL_CLRFEN = 174;
literal EVX$OPC_PAL19 = 25;
literal EVX$OPC_PAL1B = 27;
literal EVX$OPC_PAL1D = 29;
literal EVX$OPC_PAL1E = 30;
literal EVX$OPC_PAL1F = 31;
literal EVX$OPC_OPC01 = 1;
literal EVX$OPC_OPC02 = 2;
literal EVX$OPC_OPC03 = 3;
literal EVX$OPC_OPC04 = 4;
literal EVX$OPC_OPC05 = 5;
literal EVX$OPC_OPC06 = 6;
literal EVX$OPC_OPC07 = 7;

literal EVX$opc32_LDBU = 671088640;
literal EVX$opc32_LDWU = 805306368;
literal EVX$opc32_LDL = -1610612736;
literal EVX$opc32_LDQ = -1543503872;
literal EVX$opc32_LDLL = -1476395008;
literal EVX$opc32_LDQL = -1409286144;
literal EVX$opc32_LDQU = 738197504;
literal EVX$opc32_LDA = 536870912;
literal EVX$opc32_STB = 939524096;
literal EVX$opc32_STW = 872415232;
literal EVX$opc32_STL = -1342177280;
literal EVX$opc32_STQ = -1275068416;
literal EVX$opc32_STLC = -1207959552;
literal EVX$opc32_STQC = -1140850688;
literal EVX$opc32_STQU = 1006632960;
literal EVX$opc32_LDAH = 603979776;
literal EVX$opc32_LDF = -2147483648;
literal EVX$opc32_LDG = -2080374784;
literal EVX$opc32_LDS = -2013265920;
literal EVX$opc32_LDT = -1946157056;
literal EVX$opc32_STF = -1879048192;
literal EVX$opc32_STG = -1811939328;
literal EVX$opc32_STS = -1744830464;
literal EVX$opc32_STT = -1677721600;
literal EVX$opc32_MB = 1612660736;
literal EVX$opc32_WMB = 1612661760;
literal EVX$opc32_TRAPB = 1612644352;
literal EVX$opc32_EXCB = 1612645376;
literal EVX$opc32_RCC = 1612693504;
literal EVX$opc32_ECB = 1612703744;
literal EVX$opc32_WH64 = 1612707840;
literal EVX$opc32_FETCH = 1610645504;
literal EVX$opc32_FETCH_M = 1610653696;
literal EVX$opc32_RC = 1612701696;
literal EVX$opc32_RS = 1612705792;
literal EVX$opc32_JMP = 1744830464;
literal EVX$opc32_JSR = 1744846848;
literal EVX$opc32_RET = 1744863232;
literal EVX$opc32_JSR_COROUTINE = 1744879616;
literal EVX$opc32_BR = -1073741824;
literal EVX$opc32_BSR = -805306368;
literal EVX$opc32_BLBC = -536870912;
literal EVX$opc32_BLBS = -268435456;
literal EVX$opc32_FBEQ = -1006632960;
literal EVX$opc32_FBNE = -738197504;
literal EVX$opc32_BEQ = -469762048;
literal EVX$opc32_BNE = -201326592;
literal EVX$opc32_FBLT = -939524096;
literal EVX$opc32_FBGE = -671088640;
literal EVX$opc32_BLT = -402653184;
literal EVX$opc32_BGE = -134217728;
literal EVX$opc32_FBLE = -872415232;
literal EVX$opc32_FBGT = -603979776;
literal EVX$opc32_BLE = -335544320;
literal EVX$opc32_BGT = -67108864;
literal EVX$opc32_ADDL = 1073741824;
literal EVX$opc32_ADDLV = 1073743872;
literal EVX$opc32_ADDQ = 1073742848;
literal EVX$opc32_ADDQV = 1073744896;
literal EVX$opc32_S4ADDL = 1073741888;
literal EVX$opc32_S4ADDQ = 1073742912;
literal EVX$opc32_S8ADDL = 1073742400;
literal EVX$opc32_S8ADDQ = 1073743424;
literal EVX$opc32_S4SUBL = 1073742176;
literal EVX$opc32_S4SUBQ = 1073743200;
literal EVX$opc32_S8SUBL = 1073742688;
literal EVX$opc32_S8SUBQ = 1073743712;
literal EVX$opc32_SUBL = 1073742112;
literal EVX$opc32_SUBLV = 1073744160;
literal EVX$opc32_SUBQ = 1073743136;
literal EVX$opc32_SUBQV = 1073745184;
literal EVX$opc32_CMPEQ = 1073743264;
literal EVX$opc32_CMPLT = 1073744288;
literal EVX$opc32_CMPLE = 1073745312;
literal EVX$opc32_CMPULT = 1073742752;
literal EVX$opc32_CMPULE = 1073743776;
literal EVX$opc32_CMPBGE = 1073742304;
literal EVX$opc32_SEXTB = 1879048192;
literal EVX$opc32_SEXTW = 1879048224;
literal EVX$opc32_CTLZ = 1879049792;
literal EVX$opc32_CTPOP = 1879049728;
literal EVX$opc32_CTTZ = 1879049824;
literal EVX$opc32_MAXSB8 = 1879050176;
literal EVX$opc32_MAXSW4 = 1879050208;
literal EVX$opc32_MAXUB8 = 1879050112;
literal EVX$opc32_MAXUW4 = 1879050144;
literal EVX$opc32_MINSB8 = 1879049984;
literal EVX$opc32_MINSW4 = 1879050016;
literal EVX$opc32_MINUB8 = 1879050048;
literal EVX$opc32_MINUW4 = 1879050080;
literal EVX$opc32_PERR = 1879049760;
literal EVX$opc32_PKLB = 1879049952;
literal EVX$opc32_PKWB = 1879049920;
literal EVX$opc32_UNPKBL = 1879049888;
literal EVX$opc32_UNPKBW = 1879049856;
literal EVX$opc32_FTOIS = 1879052032;
literal EVX$opc32_FTOIT = 1879051776;

literal EVX$opc32_AND = 1140850688;
literal EVX$opc32_BIC = 1140850944;
literal EVX$opc32_CMOVEQ = 1140851840;
literal EVX$opc32_CMOVNE = 1140851904;
literal EVX$opc32_BIS = 1140851712;
literal EVX$opc32_ORNOT = 1140851968;
literal EVX$opc32_CMOVLT = 1140852864;
literal EVX$opc32_CMOVGE = 1140852928;
literal EVX$opc32_XOR = 1140852736;
literal EVX$opc32_EQV = 1140852992;
literal EVX$opc32_CMOVLE = 1140853888;
literal EVX$opc32_CMOVGT = 1140853952;
literal EVX$opc32_CMOVLBS = 1140851328;
literal EVX$opc32_CMOVLBC = 1140851392;
literal EVX$opc32_AMASK = 1140853792;
literal EVX$opc32_IMPLVER = 1140854144;
literal EVX$opc32_EXTBL = 1207959744;
literal EVX$opc32_EXTWL = 1207960256;
literal EVX$opc32_EXTLL = 1207960768;
literal EVX$opc32_EXTQL = 1207961280;
literal EVX$opc32_EXTWH = 1207962432;
literal EVX$opc32_EXTLH = 1207962944;
literal EVX$opc32_EXTQH = 1207963456;
literal EVX$opc32_INSBL = 1207959904;
literal EVX$opc32_INSWL = 1207960416;
literal EVX$opc32_INSLL = 1207960928;
literal EVX$opc32_INSQL = 1207961440;
literal EVX$opc32_INSWH = 1207962336;
literal EVX$opc32_INSLH = 1207962848;
literal EVX$opc32_INSQH = 1207963360;
literal EVX$opc32_MSKBL = 1207959616;
literal EVX$opc32_MSKWL = 1207960128;
literal EVX$opc32_MSKLL = 1207960640;
literal EVX$opc32_MSKQL = 1207961152;
literal EVX$opc32_MSKWH = 1207962176;
literal EVX$opc32_MSKLH = 1207962688;
literal EVX$opc32_MSKQH = 1207963200;
literal EVX$opc32_ZAP = 1207961088;
literal EVX$opc32_ZAPNOT = 1207961120;
literal EVX$opc32_SRA = 1207961472;
literal EVX$opc32_SRL = 1207961216;
literal EVX$opc32_SLL = 1207961376;
literal EVX$opc32_MULL = 1275068416;
literal EVX$opc32_MULQV = 1275071488;
literal EVX$opc32_MULLV = 1275070464;
literal EVX$opc32_UMULH = 1275069952;
literal EVX$opc32_MULQ = 1275069440;
literal EVX$opc32_MF_FPCR = 1543505056;
literal EVX$opc32_CPYS = 1543504896;
literal EVX$opc32_CPYSN = 1543504928;
literal EVX$opc32_CPYSE = 1543504960;
literal EVX$opc32_CVTLQ = 1608516096;
literal EVX$opc32_CVTQL = 1608517120;
literal EVX$opc32_CVTQLV = 1608525312;
literal EVX$opc32_CVTQLSV = 1608558080;
literal EVX$opc32_FCMOVEQ = 1543505216;
literal EVX$opc32_FCMOVNE = 1543505248;
literal EVX$opc32_FCMOVLT = 1543505280;
literal EVX$opc32_FCMOVGE = 1543505312;
literal EVX$opc32_FCMOVLE = 1543505344;
literal EVX$opc32_FCMOVGT = 1543505376;
literal EVX$opc32_ADDS = 1476399104;
literal EVX$opc32_ADDSC = 1476395008;
literal EVX$opc32_ADDSM = 1476397056;
literal EVX$opc32_ADDSP = 1476401152;
literal EVX$opc32_ADDSU = 1476407296;
literal EVX$opc32_ADDSUC = 1476403200;
literal EVX$opc32_ADDSUM = 1476405248;
literal EVX$opc32_ADDSUP = 1476409344;
literal EVX$opc32_ADDSSU = 1476440064;
literal EVX$opc32_ADDSSUC = 1476435968;
literal EVX$opc32_ADDSSUM = 1476438016;
literal EVX$opc32_ADDSSUP = 1476442112;
literal EVX$opc32_ADDSSUI = 1476456448;
literal EVX$opc32_ADDSSUIC = 1476452352;
literal EVX$opc32_ADDSSUIM = 1476454400;
literal EVX$opc32_ADDSSUIP = 1476458496;
literal EVX$opc32_ADDT = 1476400128;
literal EVX$opc32_ADDTC = 1476396032;
literal EVX$opc32_ADDTM = 1476398080;
literal EVX$opc32_ADDTP = 1476402176;
literal EVX$opc32_ADDTU = 1476408320;
literal EVX$opc32_ADDTUC = 1476404224;
literal EVX$opc32_ADDTUM = 1476406272;
literal EVX$opc32_ADDTUP = 1476410368;
literal EVX$opc32_ADDTSU = 1476441088;
literal EVX$opc32_ADDTSUC = 1476436992;
literal EVX$opc32_ADDTSUM = 1476439040;
literal EVX$opc32_ADDTSUP = 1476443136;
literal EVX$opc32_ADDTSUI = 1476457472;
literal EVX$opc32_ADDTSUIC = 1476453376;
literal EVX$opc32_ADDTSUIM = 1476455424;
literal EVX$opc32_ADDTSUIP = 1476459520;
literal EVX$opc32_CMPTEQ = 1476400288;
literal EVX$opc32_CMPTEQSU = 1476441248;
literal EVX$opc32_CMPTLT = 1476400320;
literal EVX$opc32_CMPTLTSU = 1476441280;
literal EVX$opc32_CMPTLE = 1476400352;
literal EVX$opc32_CMPTLESU = 1476441312;
literal EVX$opc32_CMPTUN = 1476400256;
literal EVX$opc32_CMPTUNSU = 1476441216;
literal EVX$opc32_CVTQS = 1541412736;
literal EVX$opc32_CVTQSC = 1541408640;
literal EVX$opc32_CVTQSM = 1541410688;
literal EVX$opc32_CVTQSP = 1541414784;
literal EVX$opc32_CVTQSSUI = 1541470080;
literal EVX$opc32_CVTQSSUIC = 1541465984;
literal EVX$opc32_CVTQSSUIM = 1541468032;
literal EVX$opc32_CVTQSSUIP = 1541472128;
literal EVX$opc32_CVTQT = 1541412800;
literal EVX$opc32_CVTQTC = 1541408704;
literal EVX$opc32_CVTQTM = 1541410752;
literal EVX$opc32_CVTQTP = 1541414848;
literal EVX$opc32_CVTQTSUI = 1541470144;
literal EVX$opc32_CVTQTSUIC = 1541466048;
literal EVX$opc32_CVTQTSUIM = 1541468096;
literal EVX$opc32_CVTQTSUIP = 1541472192;
literal EVX$opc32_CVTST = 1541428608;
literal EVX$opc32_CVTSTS = 1541461376;
literal EVX$opc32_CVTTS = 1541412224;
literal EVX$opc32_CVTTSC = 1541408128;
literal EVX$opc32_CVTTSM = 1541410176;
literal EVX$opc32_CVTTSP = 1541414272;
literal EVX$opc32_CVTTSU = 1541420416;
literal EVX$opc32_CVTTSUC = 1541416320;
literal EVX$opc32_CVTTSUM = 1541418368;
literal EVX$opc32_CVTTSUP = 1541422464;
literal EVX$opc32_CVTTSSU = 1541453184;
literal EVX$opc32_CVTTSSUC = 1541449088;
literal EVX$opc32_CVTTSSUM = 1541451136;
literal EVX$opc32_CVTTSSUP = 1541455232;
literal EVX$opc32_CVTTSSUI = 1541469568;
literal EVX$opc32_CVTTSSUIC = 1541465472;
literal EVX$opc32_CVTTSSUIM = 1541467520;
literal EVX$opc32_CVTTSSUIP = 1541471616;
literal EVX$opc32_DIVS = 1476399200;
literal EVX$opc32_DIVSC = 1476395104;
literal EVX$opc32_DIVSM = 1476397152;
literal EVX$opc32_DIVSP = 1476401248;
literal EVX$opc32_DIVSU = 1476407392;
literal EVX$opc32_DIVSUC = 1476403296;
literal EVX$opc32_DIVSUM = 1476405344;
literal EVX$opc32_DIVSUP = 1476409440;
literal EVX$opc32_DIVSSU = 1476440160;
literal EVX$opc32_DIVSSUC = 1476436064;
literal EVX$opc32_DIVSSUM = 1476438112;
literal EVX$opc32_DIVSSUP = 1476442208;
literal EVX$opc32_DIVSSUI = 1476456544;
literal EVX$opc32_DIVSSUIC = 1476452448;
literal EVX$opc32_DIVSSUIM = 1476454496;
literal EVX$opc32_DIVSSUIP = 1476458592;
literal EVX$opc32_DIVT = 1476400224;
literal EVX$opc32_DIVTC = 1476396128;
literal EVX$opc32_DIVTM = 1476398176;
literal EVX$opc32_DIVTP = 1476402272;
literal EVX$opc32_DIVTU = 1476408416;
literal EVX$opc32_DIVTUC = 1476404320;
literal EVX$opc32_DIVTUM = 1476406368;
literal EVX$opc32_DIVTUP = 1476410464;
literal EVX$opc32_DIVTSU = 1476441184;
literal EVX$opc32_DIVTSUC = 1476437088;
literal EVX$opc32_DIVTSUM = 1476439136;
literal EVX$opc32_DIVTSUP = 1476443232;
literal EVX$opc32_DIVTSUI = 1476457568;
literal EVX$opc32_DIVTSUIC = 1476453472;
literal EVX$opc32_DIVTSUIM = 1476455520;
literal EVX$opc32_DIVTSUIP = 1476459616;
literal EVX$opc32_MULS = 1476399168;
literal EVX$opc32_MULSC = 1476395072;
literal EVX$opc32_MULSM = 1476397120;
literal EVX$opc32_MULSP = 1476401216;
literal EVX$opc32_MULSU = 1476407360;
literal EVX$opc32_MULSUC = 1476403264;
literal EVX$opc32_MULSUM = 1476405312;
literal EVX$opc32_MULSUP = 1476409408;
literal EVX$opc32_MULSSU = 1476440128;
literal EVX$opc32_MULSSUC = 1476436032;
literal EVX$opc32_MULSSUM = 1476438080;
literal EVX$opc32_MULSSUP = 1476442176;
literal EVX$opc32_MULSSUI = 1476456512;
literal EVX$opc32_MULSSUIC = 1476452416;
literal EVX$opc32_MULSSUIM = 1476454464;
literal EVX$opc32_MULSSUIP = 1476458560;
literal EVX$opc32_MULT = 1476400192;
literal EVX$opc32_MULTC = 1476396096;
literal EVX$opc32_MULTM = 1476398144;
literal EVX$opc32_MULTP = 1476402240;
literal EVX$opc32_MULTU = 1476408384;
literal EVX$opc32_MULTUC = 1476404288;
literal EVX$opc32_MULTUM = 1476406336;
literal EVX$opc32_MULTUP = 1476410432;
literal EVX$opc32_MULTSU = 1476441152;
literal EVX$opc32_MULTSUC = 1476437056;
literal EVX$opc32_MULTSUM = 1476439104;
literal EVX$opc32_MULTSUP = 1476443200;
literal EVX$opc32_MULTSUI = 1476457536;
literal EVX$opc32_MULTSUIC = 1476453440;
literal EVX$opc32_MULTSUIM = 1476455488;
literal EVX$opc32_MULTSUIP = 1476459584;
literal EVX$opc32_SUBS = 1476399136;
literal EVX$opc32_SUBSC = 1476395040;
literal EVX$opc32_SUBSM = 1476397088;
literal EVX$opc32_SUBSP = 1476401184;
literal EVX$opc32_SUBSU = 1476407328;
literal EVX$opc32_SUBSUC = 1476403232;
literal EVX$opc32_SUBSUM = 1476405280;
literal EVX$opc32_SUBSUP = 1476409376;
literal EVX$opc32_SUBSSU = 1476440096;
literal EVX$opc32_SUBSSUC = 1476436000;
literal EVX$opc32_SUBSSUM = 1476438048;
literal EVX$opc32_SUBSSUP = 1476442144;
literal EVX$opc32_SUBSSUI = 1476456480;
literal EVX$opc32_SUBSSUIC = 1476452384;
literal EVX$opc32_SUBSSUIM = 1476454432;
literal EVX$opc32_SUBSSUIP = 1476458528;
literal EVX$opc32_SUBT = 1476400160;
literal EVX$opc32_SUBTC = 1476396064;
literal EVX$opc32_SUBTM = 1476398112;
literal EVX$opc32_SUBTP = 1476402208;
literal EVX$opc32_SUBTU = 1476408352;
literal EVX$opc32_SUBTUC = 1476404256;
literal EVX$opc32_SUBTUM = 1476406304;
literal EVX$opc32_SUBTUP = 1476410400;
literal EVX$opc32_SUBTSU = 1476441120;
literal EVX$opc32_SUBTSUC = 1476437024;
literal EVX$opc32_SUBTSUM = 1476439072;
literal EVX$opc32_SUBTSUP = 1476443168;
literal EVX$opc32_SUBTSUI = 1476457504;
literal EVX$opc32_SUBTSUIC = 1476453408;
literal EVX$opc32_SUBTSUIM = 1476455456;
literal EVX$opc32_SUBTSUIP = 1476459552;
literal EVX$opc32_CVTTQ = 1541412320;
literal EVX$opc32_CVTTQC = 1541408224;
literal EVX$opc32_CVTTQV = 1541420512;
literal EVX$opc32_CVTTQVC = 1541416416;
literal EVX$opc32_CVTTQSV = 1541453280;
literal EVX$opc32_CVTTQSVC = 1541449184;
literal EVX$opc32_CVTTQSVI = 1541469664;
literal EVX$opc32_CVTTQSVIC = 1541465568;
literal EVX$opc32_CVTTQD = 1541414368;
literal EVX$opc32_CVTTQVD = 1541422560;
literal EVX$opc32_CVTTQSVD = 1541455328;
literal EVX$opc32_CVTTQSVID = 1541471712;
literal EVX$opc32_CVTTQM = 1541410272;
literal EVX$opc32_CVTTQVM = 1541418464;
literal EVX$opc32_CVTTQSVM = 1541451232;
literal EVX$opc32_CVTTQSVIM = 1541467616;
literal EVX$opc32_CVTTQP = 1541414368;
literal EVX$opc32_CVTTQVP = 1541422560;
literal EVX$opc32_CVTTQSVP = 1541455328;
literal EVX$opc32_CVTTQSVIP = 1541471712;
literal EVX$opc32_ADDF = 1409290240;
literal EVX$opc32_ADDFC = 1409286144;
literal EVX$opc32_ADDFU = 1409298432;
literal EVX$opc32_ADDFUC = 1409294336;
literal EVX$opc32_ADDFS = 1409323008;
literal EVX$opc32_ADDFSC = 1409318912;
literal EVX$opc32_ADDFSU = 1409331200;
literal EVX$opc32_ADDFSUC = 1409327104;
literal EVX$opc32_ADDG = 1409291264;
literal EVX$opc32_ADDGC = 1409287168;
literal EVX$opc32_ADDGU = 1409299456;
literal EVX$opc32_ADDGUC = 1409295360;
literal EVX$opc32_ADDGS = 1409324032;
literal EVX$opc32_ADDGSC = 1409319936;
literal EVX$opc32_ADDGSU = 1409332224;
literal EVX$opc32_ADDGSUC = 1409328128;
literal EVX$opc32_CMPGEQ = 1409291424;
literal EVX$opc32_CMPGLT = 1409291456;
literal EVX$opc32_CMPGLE = 1409291488;
literal EVX$opc32_CMPGEQS = 1409324192;
literal EVX$opc32_CMPGLTS = 1409324224;
literal EVX$opc32_CMPGLES = 1409324256;
literal EVX$opc32_CVTDG = 1474302912;
literal EVX$opc32_CVTDGC = 1474298816;
literal EVX$opc32_CVTDGU = 1474311104;
literal EVX$opc32_CVTDGUC = 1474307008;
literal EVX$opc32_CVTDGS = 1474335680;
literal EVX$opc32_CVTDGSC = 1474331584;
literal EVX$opc32_CVTDGSU = 1474343872;
literal EVX$opc32_CVTDGSUC = 1474339776;
literal EVX$opc32_CVTGD = 1474303392;
literal EVX$opc32_CVTGDC = 1474299296;
literal EVX$opc32_CVTGDU = 1474311584;
literal EVX$opc32_CVTGDUC = 1474307488;
literal EVX$opc32_CVTGDS = 1474336160;
literal EVX$opc32_CVTGDSC = 1474332064;
literal EVX$opc32_CVTGDSU = 1474344352;
literal EVX$opc32_CVTGDSUC = 1474340256;
literal EVX$opc32_CVTGF = 1474303360;
literal EVX$opc32_CVTGFC = 1474299264;
literal EVX$opc32_CVTGFU = 1474311552;
literal EVX$opc32_CVTGFUC = 1474307456;
literal EVX$opc32_CVTGFS = 1474336128;
literal EVX$opc32_CVTGFSC = 1474332032;
literal EVX$opc32_CVTGFSU = 1474344320;
literal EVX$opc32_CVTGFSUC = 1474340224;
literal EVX$opc32_CVTQF = 1474303872;
literal EVX$opc32_CVTQFC = 1474299776;
literal EVX$opc32_CVTQG = 1474303936;
literal EVX$opc32_CVTQGC = 1474299840;
literal EVX$opc32_DIVF = 1409290336;
literal EVX$opc32_DIVFC = 1409286240;
literal EVX$opc32_DIVFU = 1409298528;
literal EVX$opc32_DIVFUC = 1409294432;
literal EVX$opc32_DIVFS = 1409323104;
literal EVX$opc32_DIVFSC = 1409319008;
literal EVX$opc32_DIVFSU = 1409331296;
literal EVX$opc32_DIVFSUC = 1409327200;
literal EVX$opc32_DIVG = 1409291360;
literal EVX$opc32_DIVGC = 1409287264;
literal EVX$opc32_DIVGU = 1409299552;
literal EVX$opc32_DIVGUC = 1409295456;
literal EVX$opc32_DIVGS = 1409324128;
literal EVX$opc32_DIVGSC = 1409320032;
literal EVX$opc32_DIVGSU = 1409332320;
literal EVX$opc32_DIVGSUC = 1409328224;
literal EVX$opc32_MULF = 1409290304;
literal EVX$opc32_MULFC = 1409286208;
literal EVX$opc32_MULFU = 1409298496;
literal EVX$opc32_MULFUC = 1409294400;
literal EVX$opc32_MULFS = 1409323072;
literal EVX$opc32_MULFSC = 1409318976;
literal EVX$opc32_MULFSU = 1409331264;
literal EVX$opc32_MULFSUC = 1409327168;
literal EVX$opc32_MULG = 1409291328;
literal EVX$opc32_MULGC = 1409287232;
literal EVX$opc32_MULGU = 1409299520;
literal EVX$opc32_MULGUC = 1409295424;
literal EVX$opc32_MULGS = 1409324096;
literal EVX$opc32_MULGSC = 1409320000;
literal EVX$opc32_MULGSU = 1409332288;
literal EVX$opc32_MULGSUC = 1409328192;
literal EVX$opc32_SUBF = 1409290272;
literal EVX$opc32_SUBFC = 1409286176;
literal EVX$opc32_SUBFU = 1409298464;
literal EVX$opc32_SUBFUC = 1409294368;
literal EVX$opc32_SUBFS = 1409323040;
literal EVX$opc32_SUBFSC = 1409318944;
literal EVX$opc32_SUBFSU = 1409331232;
literal EVX$opc32_SUBFSUC = 1409327136;
literal EVX$opc32_SUBG = 1409291296;
literal EVX$opc32_SUBGC = 1409287200;
literal EVX$opc32_SUBGU = 1409299488;
literal EVX$opc32_SUBGUC = 1409295392;
literal EVX$opc32_SUBGS = 1409324064;
literal EVX$opc32_SUBGSC = 1409319968;
literal EVX$opc32_SUBGSU = 1409332256;
literal EVX$opc32_SUBGSUC = 1409328160;
literal EVX$opc32_SQRTF = 1342181696;
literal EVX$opc32_SQRTFUC = 1342185792;
literal EVX$opc32_SQRTFU = 1342189888;
literal EVX$opc32_SQRTFC = 1342177600;
literal EVX$opc32_SQRTFSC = 1342181696;
literal EVX$opc32_SQRTFS = 1342214464;
literal EVX$opc32_SQRTFSUC = 1342218560;
literal EVX$opc32_SQRTFSU = 1342222656;
literal EVX$opc32_SQRTS = 1342181728;
literal EVX$opc32_SQRTSC = 1342177632;
literal EVX$opc32_SQRTSM = 1342179680;
literal EVX$opc32_SQRTSD = 1342183776;
literal EVX$opc32_SQRTSUC = 1342185824;
literal EVX$opc32_SQRTSUM = 1342187872;
literal EVX$opc32_SQRTSU = 1342189920;
literal EVX$opc32_SQRTSUD = 1342191968;
literal EVX$opc32_SQRTSSUC = 1342218592;
literal EVX$opc32_SQRTSSUM = 1342220640;
literal EVX$opc32_SQRTSSU = 1342222688;
literal EVX$opc32_SQRTSSUD = 1342224736;
literal EVX$opc32_SQRTSSUIC = 1342234976;
literal EVX$opc32_SQRTSSUIM = 1342237024;
literal EVX$opc32_SQRTSSUI = 1342239072;
literal EVX$opc32_SQRTSSUID = 1342241120;
literal EVX$opc32_SQRTT = 1342182752;
literal EVX$opc32_SQRTTC = 1342178656;
literal EVX$opc32_SQRTTM = 1342180704;
literal EVX$opc32_SQRTTD = 1342184800;
literal EVX$opc32_SQRTTUC = 1342186848;
literal EVX$opc32_SQRTTUM = 1342188896;
literal EVX$opc32_SQRTTU = 1342190944;
literal EVX$opc32_SQRTTUD = 1342192992;
literal EVX$opc32_SQRTTSUC = 1342219616;
literal EVX$opc32_SQRTTSUM = 1342221664;
literal EVX$opc32_SQRTTSU = 1342223712;
literal EVX$opc32_SQRTTSUD = 1342225760;
literal EVX$opc32_SQRTTSUIC = 1342236000;
literal EVX$opc32_SQRTTSUIM = 1342238048;
literal EVX$opc32_SQRTTSUI = 1342240096;
literal EVX$opc32_SQRTTSUID = 1342242144;
literal EVX$opc32_ITOFF = 1342177920;
literal EVX$opc32_ITOFS = 1342177408;
literal EVX$opc32_ITOFT = 1342178432;
literal EVX$opc32_SQRTG = 1342182720;
literal EVX$opc32_SQRTGC = 1342178624;
literal EVX$opc32_SQRTGUC = 1342186816;
literal EVX$opc32_SQRTGU = 1342190912;
literal EVX$opc32_SQRTGSC = 1342211392;
literal EVX$opc32_SQRTGS = 1342215488;
literal EVX$opc32_SQRTGSUC = 1342219584;
literal EVX$opc32_SQRTGSU = 1342223680;
literal EVX$opc32_CVTGQ = 1474303456;
literal EVX$opc32_CVTGQC = 1474299360;
literal EVX$opc32_CVTGQV = 1474311648;
literal EVX$opc32_CVTGQVC = 1474307552;
literal EVX$opc32_CVTGQS = 1474336224;
literal EVX$opc32_CVTGQSC = 1474332128;
literal EVX$opc32_CVTGQSV = 1474344416;
literal EVX$opc32_CVTGQSVC = 1474340320;
literal EVX$opc32_BPT = 128;
literal EVX$opc32_BUGCHK = 129;
literal EVX$opc32_CHME = 130;
literal EVX$opc32_CHMK = 131;
literal EVX$opc32_CHMS = 132;
literal EVX$opc32_CHMU = 133;
literal EVX$opc32_IMB = 134;
literal EVX$opc32_INSQHIL = 135;
literal EVX$opc32_INSQTIL = 136;
literal EVX$opc32_INSQHIQ = 137;
literal EVX$opc32_INSQTIQ = 138;
literal EVX$opc32_INSQUEL = 139;
literal EVX$opc32_INSQUEQ = 140;
literal EVX$opc32_INSQUELD = 141;
literal EVX$opc32_INSQUEQD = 142;
literal EVX$opc32_PROBER = 143;
literal EVX$opc32_INSQHILR = 162;
literal EVX$opc32_INSQTILR = 163;
literal EVX$opc32_INSQHIQR = 164;
literal EVX$opc32_INSQTIQR = 165;
literal EVX$opc32_AMOVRR = 160;
literal EVX$opc32_AMOVRM = 161;
literal EVX$opc32_PROBEW = 144;
literal EVX$opc32_RD_PS = 145;
literal EVX$opc32_REI = 146;
literal EVX$opc32_REMQHIL = 147;
literal EVX$opc32_REMQTIL = 148;
literal EVX$opc32_REMQHIQ = 149;
literal EVX$opc32_REMQTIQ = 150;
literal EVX$opc32_REMQUEL = 151;
literal EVX$opc32_REMQUEQ = 152;
literal EVX$opc32_REMQUELD = 153;
literal EVX$opc32_REMQUEQD = 154;
literal EVX$opc32_REMQHILR = 166;
literal EVX$opc32_REMQTILR = 167;
literal EVX$opc32_REMQHIQR = 168;
literal EVX$opc32_REMQTIQR = 169;
literal EVX$opc32_GENTRAP = 170;
literal EVX$opc32_SWASTEN = 155;
literal EVX$opc32_WR_PS_SW = 156;
literal EVX$opc32_RSCC = 157;
literal EVX$opc32_READ_UNQ = 158;
literal EVX$opc32_WRITE_UNQ = 159;
literal EVX$opc32_CFLUSH = 1;
literal EVX$opc32_DRAINA = 2;
literal EVX$opc32_HALT = 0;
literal EVX$opc32_LDQP = 3;
literal EVX$opc32_STQP = 4;
literal EVX$opc32_SWPCTX = 5;
literal EVX$opc32_MFPR_ASN = 6;
literal EVX$opc32_MTPR_ASTEN = 7;
literal EVX$opc32_MTPR_ASTSR = 8;
literal EVX$opc32_CSERVE = 9;
literal EVX$opc32_SWPPAL = 10;
literal EVX$opc32_MFPR_FEN = 11;
literal EVX$opc32_MTPR_FEN = 12;
literal EVX$opc32_MTPR_IPIR = 13;
literal EVX$opc32_MFPR_IPL = 14;
literal EVX$opc32_MTPR_IPL = 15;
literal EVX$opc32_MFPR_MCES = 16;
literal EVX$opc32_MTPR_MCES = 17;
literal EVX$opc32_MFPR_PCBB = 18;
literal EVX$opc32_MFPR_PRBR = 19;
literal EVX$opc32_MTPR_PRBR = 20;
literal EVX$opc32_MFPR_PTBR = 21;
literal EVX$opc32_MFPR_SCBB = 22;
literal EVX$opc32_MTPR_SCBB = 23;
literal EVX$opc32_MTPR_SIRR = 24;
literal EVX$opc32_MFPR_SISR = 25;
literal EVX$opc32_MFPR_TBCHK = 26;
literal EVX$opc32_MTPR_TBIA = 27;
literal EVX$opc32_MTPR_TBIAP = 28;
literal EVX$opc32_MTPR_TBIS = 29;
literal EVX$opc32_MFPR_ESP = 30;
literal EVX$opc32_MTPR_ESP = 31;
literal EVX$opc32_MFPR_SSP = 32;
literal EVX$opc32_MTPR_SSP = 33;
literal EVX$opc32_MFPR_USP = 34;
literal EVX$opc32_MTPR_USP = 35;
literal EVX$opc32_MTPR_TBISD = 36;
literal EVX$opc32_MTPR_TBISI = 37;
literal EVX$opc32_MFPR_ASTEN = 38;
literal EVX$opc32_MFPR_ASTSR = 39;
literal EVX$opc32_MFPR_VPTBASE = 41;
literal EVX$opc32_MTPR_VPTBASE = 42;
literal EVX$opc32_MTPR_PERFMON = 43;
literal EVX$opc32_MTPR_DATAFX = 46;
literal EVX$opc32_MFPR_WHAMI = 63;
literal EVX$OPC32_PAL19 = 1677721600;
literal EVX$OPC32_PAL1B = 1811939328;
literal EVX$OPC32_PAL1D = 1946157056;
literal EVX$OPC32_PAL1E = 2013265920;
literal EVX$OPC32_PAL1F = 2080374784;
literal EVX$OPC32_OPC01 = 67108864;
literal EVX$OPC32_OPC02 = 134217728;
literal EVX$OPC32_OPC03 = 201326592;
literal EVX$OPC32_OPC04 = 268435456;
literal EVX$OPC32_OPC05 = 335544320;
literal EVX$OPC32_OPC06 = 402653184;
literal EVX$OPC32_OPC07 = 469762048;

 

literal EVX$K_imemory = 1;
literal EVX$K_fmemory = 2;
literal EVX$K_ibranch = 3;
literal EVX$K_fbranch = 4;
literal EVX$K_operate = 5;
literal EVX$K_float2 = 6;
literal EVX$K_float3 = 7;
literal EVX$K_jsr = 8;
literal EVX$K_rcc = 9;
literal EVX$K_pal = 10;
literal EVX$K_sync0 = 11;
literal EVX$K_sync1 = 12;
literal EVX$K_floatoper = 13;
literal EVX$K_operfloat = 14;
literal EVX$K_unknown = 15;

literal EVX$K_R0 = 0;
literal EVX$K_R1 = 1;
literal EVX$K_R2 = 2;
literal EVX$K_R3 = 3;
literal EVX$K_R4 = 4;
literal EVX$K_R5 = 5;
literal EVX$K_R6 = 6;
literal EVX$K_R7 = 7;
literal EVX$K_R8 = 8;
literal EVX$K_R9 = 9;
literal EVX$K_R10 = 10;
literal EVX$K_R11 = 11;
literal EVX$K_R12 = 12;
literal EVX$K_R13 = 13;
literal EVX$K_R14 = 14;
literal EVX$K_R15 = 15;
literal EVX$K_R16 = 16;
literal EVX$K_R17 = 17;
literal EVX$K_R18 = 18;
literal EVX$K_R19 = 19;
literal EVX$K_R20 = 20;
literal EVX$K_R21 = 21;
literal EVX$K_R22 = 22;
literal EVX$K_R23 = 23;
literal EVX$K_R24 = 24;
literal EVX$K_R25 = 25;
literal EVX$K_R26 = 26;
literal EVX$K_R27 = 27;
literal EVX$K_R28 = 28;
literal EVX$K_R29 = 29;
literal EVX$K_R30 = 30;
literal EVX$K_R31 = 31;
literal EVX$K_F0 = 0;
literal EVX$K_F1 = 1;
literal EVX$K_F2 = 2;
literal EVX$K_F3 = 3;
literal EVX$K_F4 = 4;
literal EVX$K_F5 = 5;
literal EVX$K_F6 = 6;
literal EVX$K_F7 = 7;
literal EVX$K_F8 = 8;
literal EVX$K_F9 = 9;
literal EVX$K_F10 = 10;
literal EVX$K_F11 = 11;
literal EVX$K_F12 = 12;
literal EVX$K_F13 = 13;
literal EVX$K_F14 = 14;
literal EVX$K_F15 = 15;
literal EVX$K_F16 = 16;
literal EVX$K_F17 = 17;
literal EVX$K_F18 = 18;
literal EVX$K_F19 = 19;
literal EVX$K_F20 = 20;
literal EVX$K_F21 = 21;
literal EVX$K_F22 = 22;
literal EVX$K_F23 = 23;
literal EVX$K_F24 = 24;
literal EVX$K_F25 = 25;
literal EVX$K_F26 = 26;
literal EVX$K_F27 = 27;
literal EVX$K_F28 = 28;
literal EVX$K_F29 = 29;
literal EVX$K_F30 = 30;
literal EVX$K_F31 = 31;
literal EIF$Zero_register = 32;

literal EIF$S_INSTRDEF = 4;
macro EIF$L_Instr = 0,0,32,0 %;         
macro EIF$V_Mem_imm = 0,0,16,1 %;
literal EIF$S_Mem_imm = 16;             
macro EIF$V_Rb = 0,16,5,0 %;
literal EIF$S_Rb = 5;                   
macro EIF$V_Ra = 0,21,5,0 %;
literal EIF$S_Ra = 5;                   
macro EIF$V_Brnch_imm = 0,0,21,1 %;
literal EIF$S_Brnch_imm = 21;           
macro EIF$V_Rc = 0,0,5,0 %;
literal EIF$S_Rc = 5;                   
macro EIF$V_Opr_func = 0,5,7,0 %;
literal EIF$S_Opr_func = 7;             
macro EIF$V_Lit_mode = 0,12,1,0 %;      
macro EIF$V_Lit_val = 0,13,8,0 %;
literal EIF$S_Lit_val = 8;              
macro EIF$V_Fc = 0,0,5,0 %;
literal EIF$S_Fc = 5;                   
macro EIF$V_Flt_func = 0,5,11,0 %;
literal EIF$S_Flt_func = 11;            
macro EIF$V_Fb = 0,16,5,0 %;
literal EIF$S_Fb = 5;                   
macro EIF$V_Fa = 0,21,5,0 %;
literal EIF$S_Fa = 5;                   
macro EIF$V_Pal_func = 0,0,26,0 %;
literal EIF$S_Pal_func = 26;            
macro EIF$V_Sync_func = 0,0,16,0 %;
literal EIF$S_Sync_func = 16;           
macro EIF$V_Fill = 0,0,26,0 %;
literal EIF$S_Fill = 26;
macro EIF$V_Opcode = 0,26,6,0 %;
literal EIF$S_Opcode = 6;               

literal EIF$Opc_lower_bound = 0;
literal EIF$Opc_upper_bound = 64;
literal EIF$Opr_lower_bound = 0;
literal EIF$Opr_upper_bound = 128;
literal EIF$Flt_lower_bound = 0;
literal EIF$Flt_upper_bound = 2048;

literal EIF$Mem_imm_width = 4;
literal EIF$Brnch_imm_width = 6;
literal EIF$Opr_imm_width = 2;
 

literal EVT$S_EVSB = 8;
macro EVT$L_VMS_STATUS = 0,0,32,0 %;    
macro EVT$L_NT_STATUS = 4,0,32,0 %;     
literal EVSB$K_LENGTH = 8;              
literal EVSB$C_LENGTH = 8;              

literal EVT$FC_REGISTER_EVENT_SOURCE = 1; 
literal EVT$FC_REPORT_EVENT = 2;        
literal EVT$FC_DEREGISTER_EVENT_SOURCE = 3; 
literal EVT$FC_FUNCTION_CODE_TOO_BIG = 4; 

literal EVT$_SERVER_NAME = 1;           
literal EVT$_SOURCE = 2;                
literal EVT$_HANDLE = 3;                
literal EVT$_EVENT_TYPE = 4;            
literal EVT$_EVENT_CATEGORY = 5;        
literal EVT$_EVENT_ID = 6;              
literal EVT$_USER_SID = 7;              
literal EVT$_NUMSTRINGS = 8;            
literal EVT$_DATASIZE = 9;              
literal EVT$_STRING_ARRAY = 10;         
literal EVT$_RAW_DATA = 11;             
literal EVT$_ITEM_CODE_TOO_BIG = 12;    

literal EVT$_MAX_SERVER_NAME_LEN = 32;

literal EVT$_SUCCESS = 0;               
literal EVT$_ERROR = 1;                 
literal EVT$_WARNING = 2;               
literal EVT$_INFO = 4;                  
literal EVT$_AUDIT_SUCCESS = 8;         
literal EVT$_AUDIT_FAILURE = 16;        
 

literal SDV$_MP_SWITCH_PATH = 1;        
literal SDV$_MP_ENABLE_PATH = 2;        
literal SDV$_MP_DISABLE_PATH = 3;       

 

literal FDL$M_SIGNAL = %X'1';
literal FDL$M_FDL_STRING = %X'2';
literal FDL$M_DEFAULT_STRING = %X'4';
literal FDL$M_FULL_OUTPUT = %X'8';
literal FDL$M_$CALLBACK = %X'10';
literal FDL$M_LONG_NAMES = %X'20';
literal FDL$S_FDLDEF = 1;
macro FDL$V_SIGNAL = 0,0,1,0 %;         
macro FDL$V_FDL_STRING = 0,1,1,0 %;     
macro FDL$V_DEFAULT_STRING = 0,2,1,0 %; 
macro FDL$V_FULL_OUTPUT = 0,3,1,0 %;    
macro FDL$V_$CALLBACK = 0,4,1,0 %;      
macro FDL$V_LONG_NAMES = 0,5,1,0 %;     
 

literal FIB$M_NOWRITE = %X'1';
literal FIB$M_DLOCK = %X'2';
literal FIB$M_BLK_LOCK = %X'4';
literal FIB$M_FASTRDSQNOS = %X'8';
literal FIB$M_SPOOL = %X'10';
literal FIB$M_WRITECK = %X'20';
literal FIB$M_SEQONLY = %X'40';
literal FIB$M_SEQNO = %X'80';
literal FIB$M_WRITE = %X'100';
literal FIB$M_READCK = %X'200';
literal FIB$M_NOREAD = %X'400';
literal FIB$M_NOTRUNC = %X'800';
literal FIB$M_CONTROL = %X'1000';
literal FIB$M_NO_READ_DATA = %X'2000';
literal FIB$M_EXECUTE = %X'10000';
literal FIB$M_PRSRV_ATR = %X'20000';
literal FIB$M_RMSLOCK = %X'40000';
literal FIB$M_WRITETHRU = %X'80000';
literal FIB$M_NOLOCK = %X'100000';
literal FIB$M_NORECORD = %X'200000';
literal FIB$M_NOVERIFY = %X'400000';
literal FIB$M_CHANGE_VOL = %X'800000';
literal FIB$M_REWIND = %X'8';
literal FIB$M_CURPOS = %X'10';
literal FIB$M_UPDATE = %X'40';
literal FIB$K_ACCDATA = 10;             
literal FIB$C_ACCDATA = 10;             
literal FIB$K_DIRDATA = 22;             
literal FIB$C_DIRDATA = 22;             
literal FIB$M_NAMES_8BIT = %X'1';
literal FIB$M_NAMES_16BIT = %X'2';
literal FIB$M_PERCENT_LITERAL = %X'4';
literal FIB$M_ALLVER = %X'8';
literal FIB$M_ALLTYP = %X'10';
literal FIB$M_ALLNAM = %X'20';
literal FIB$M_CASE_SENSITIVE = %X'40';
literal FIB$M_SEARCH = %X'80';
literal FIB$M_WILD = %X'100';
literal FIB$M_NEWVER = %X'200';
literal FIB$M_SUPERSEDE = %X'400';
literal FIB$M_FINDFID = %X'800';
literal FIB$M_CASE_VARIANT = %X'2000';
literal FIB$M_LOWVER = %X'4000';
literal FIB$M_HIGHVER = %X'8000';
literal FIB$M_ALCON = %X'1';
literal FIB$M_ALCONB = %X'2';
literal FIB$M_FILCON = %X'4';
literal FIB$M_ALDEF = %X'8';
literal FIB$M_ALLOCATR = %X'10';
literal FIB$M_EXTEND = %X'80';
literal FIB$M_TRUNC = %X'100';
literal FIB$M_NOHDREXT = %X'200';
literal FIB$M_MARKBAD = %X'400';
literal FIB$M_NOPLACE = %X'4000';
literal FIB$M_NOCHARGE = %X'8000';
literal FIB$K_EXTDATA = 32;             
literal FIB$C_EXTDATA = 32;             
literal FIB$M_EXACT = %X'1';
literal FIB$M_ONCYL = %X'2';
literal FIB$C_CYL = 1;                  
literal FIB$C_LBN = 2;                  
literal FIB$C_VBN = 3;                  
literal FIB$C_RFI = 4;                  
literal FIB$K_ALCDATA = 44;             
literal FIB$C_ALCDATA = 44;             
literal FIB$M_ALT_REQ = %X'1';
literal FIB$M_ALT_GRANTED = %X'2';
literal FIB$M_DIRACL = %X'4';
literal FIB$M_PROPAGATE = %X'8';
literal FIB$M_NOCOPYACL = %X'10';
literal FIB$M_NOCOPYOWNER = %X'20';
literal FIB$M_NOCOPYPROT = %X'40';
literal FIB$M_EXCLPREVIOUS = %X'80';
literal FIB$M_ALIAS_ENTRY = %X'100';
literal FIB$M_WILDFID_FLAG = %X'200';
literal FIB$M_DID_FILESPEC = %X'400';
literal FIB$K_MOVEFILE = 72;            
literal FIB$C_MOVEFILE = 72;            
literal FIB$M_FILE_ATTRIBUTES = %X'F';
literal FIB$M_FILE_CONTENTS = %X'F0';
literal FIB$C_DEFAULT = 0;              
literal FIB$C_WRITETHROUGH = 1;         
literal FIB$C_WRITEBEHIND = 2;          
literal FIB$C_NOCACHING = 3;            
literal FIB$M_FLUSH_ON_CLOSE = %X'F00';
literal FIB$C_FLUSH = 1;                
literal FIB$C_NOFLUSH = 2;              
literal FIB$M_CACHING_OPTIONS_MBZ = %X'FFFFF000';
literal FIB$C_ODS2 = 0;                 
literal FIB$C_ISL1 = 1;                 
literal FIB$C_ISO_LATIN = 1;            
literal FIB$C_UCS2 = 3;                 
literal FIB$C_NAMETYPE_LEN = 96;        
literal FIB$K_LENGTH = 96;
literal FIB$C_LENGTH = 96;
literal FIB$K_F64LEN = 96;
literal FIB$C_F64LEN = 96;
literal FIB$S_FIBDEF = 96;
macro FIB$L_ACCTL = 0,0,32,0 %;         
macro FIB$V_NOWRITE = 0,0,1,0 %;        
macro FIB$V_DLOCK = 0,1,1,0 %;          
macro FIB$V_BLK_LOCK = 0,2,1,0 %;       
macro FIB$V_FASTRDSQNOS = 0,3,1,0 %;    
macro FIB$V_SPOOL = 0,4,1,0 %;          
macro FIB$V_WRITECK = 0,5,1,0 %;        
macro FIB$V_SEQONLY = 0,6,1,0 %;        
macro FIB$V_SEQNO = 0,7,1,0 %;          
macro FIB$V_WRITE = 0,8,1,0 %;          
macro FIB$V_READCK = 0,9,1,0 %;         
macro FIB$V_NOREAD = 0,10,1,0 %;        
macro FIB$V_NOTRUNC = 0,11,1,0 %;       
macro FIB$V_CONTROL = 0,12,1,0 %;       
macro FIB$V_NO_READ_DATA = 0,13,1,0 %;  

macro FIB$V_EXECUTE = 0,16,1,0 %;       
macro FIB$V_PRSRV_ATR = 0,17,1,0 %;     
macro FIB$V_RMSLOCK = 0,18,1,0 %;       
macro FIB$V_WRITETHRU = 0,19,1,0 %;     
macro FIB$V_NOLOCK = 0,20,1,0 %;        
macro FIB$V_NORECORD = 0,21,1,0 %;      
macro FIB$V_NOVERIFY = 0,22,1,0 %;      
macro FIB$V_CHANGE_VOL = 0,23,1,0 %;    
macro FIB$V_REWIND = 0,3,1,0 %;         
macro FIB$V_CURPOS = 0,4,1,0 %;         
macro FIB$V_UPDATE = 0,6,1,0 %;         
macro FIB$B_WSIZE = 3,0,8,1 %;          
macro FIB$W_FID = 4,0,0,0 %;
literal FIB$S_FID = 6;                  
macro FIB$W_FID_NUM = 4,0,16,0 %;       
macro FIB$W_FID_SEQ = 6,0,16,0 %;       
macro FIB$W_FID_RVN = 8,0,16,0 %;       
macro FIB$B_FID_RVN = 8,0,8,0 %;        
macro FIB$B_FID_NMX = 9,0,8,0 %;        
macro FIB$W_FID_DIRNUM = 4,0,16,0 %;    
macro FIB$L_FID_RECNUM = 6,0,32,0 %;    
macro FIB$W_DID = 10,0,0,0 %;
literal FIB$S_DID = 6;                  
macro FIB$W_DID_NUM = 10,0,16,0 %;      
macro FIB$W_DID_SEQ = 12,0,16,0 %;      
macro FIB$W_DID_RVN = 14,0,16,0 %;      
macro FIB$B_DID_RVN = 14,0,8,0 %;       
macro FIB$B_DID_NMX = 15,0,8,0 %;       
macro FIB$W_DID_DIRNUM = 10,0,16,0 %;   
macro FIB$L_DID_RECNUM = 12,0,32,0 %;   
macro FIB$L_WCC = 16,0,32,0 %;          
macro FIB$W_NMCTL = 20,0,16,0 %;        
macro FIB$V_NAMES_8BIT = 20,0,1,0 %;    
macro FIB$V_NAMES_16BIT = 20,1,1,0 %;   
macro FIB$V_PERCENT_LITERAL = 20,2,1,0 %; 
macro FIB$V_ALLVER = 20,3,1,0 %;        
macro FIB$V_ALLTYP = 20,4,1,0 %;        
macro FIB$V_ALLNAM = 20,5,1,0 %;        
macro FIB$V_CASE_SENSITIVE = 20,6,1,0 %; 
macro FIB$V_SEARCH = 20,7,1,0 %;        

macro FIB$V_WILD = 20,8,1,0 %;          
macro FIB$V_NEWVER = 20,9,1,0 %;        
macro FIB$V_SUPERSEDE = 20,10,1,0 %;    
macro FIB$V_FINDFID = 20,11,1,0 %;      
macro FIB$V_CASE_VARIANT = 20,13,1,0 %; 
macro FIB$V_LOWVER = 20,14,1,0 %;       
macro FIB$V_HIGHVER = 20,15,1,0 %;      
macro FIB$W_EXCTL = 22,0,16,0 %;        
macro FIB$V_ALCON = 22,0,1,0 %;         
macro FIB$V_ALCONB = 22,1,1,0 %;        
macro FIB$V_FILCON = 22,2,1,0 %;        
macro FIB$V_ALDEF = 22,3,1,0 %;         
macro FIB$V_ALLOCATR = 22,4,1,0 %;      
macro FIB$V_EXTEND = 22,7,1,0 %;        
macro FIB$V_TRUNC = 22,8,1,0 %;         
macro FIB$V_NOHDREXT = 22,9,1,0 %;      
macro FIB$V_MARKBAD = 22,10,1,0 %;      
macro FIB$V_NOPLACE = 22,14,1,0 %;      
macro FIB$V_NOCHARGE = 22,15,1,0 %;     
macro FIB$L_EXSZ = 24,0,32,0 %;         
macro FIB$L_EXVBN = 28,0,32,0 %;        
macro FIB$B_ALOPTS = 32,0,8,0 %;        
macro FIB$V_EXACT = 32,0,1,0 %;         
macro FIB$V_ONCYL = 32,1,1,0 %;         
macro FIB$B_ALALIGN = 33,0,8,0 %;       
macro FIB$W_ALLOC = 34,0,0,0 %;
literal FIB$S_ALLOC = 10;               
macro FIB$W_LOC_FID = 34,0,0,0 %;
literal FIB$S_LOC_FID = 6;              
macro FIB$W_LOC_NUM = 34,0,16,0 %;      
macro FIB$W_LOC_SEQ = 36,0,16,0 %;      
macro FIB$W_LOC_RVN = 38,0,16,0 %;      
macro FIB$B_LOC_RVN = 38,0,8,0 %;       
macro FIB$B_LOC_NMX = 39,0,8,0 %;       
macro FIB$L_LOC_ADDR = 40,0,32,0 %;     
macro FIB$W_VERLIMIT = 44,0,16,0 %;     
macro FIB$B_AGENT_MODE = 46,0,8,0 %;    
macro FIB$B_RU_FACILITY = 47,0,8,0 %;   
macro FIB$L_ACLCTX = 48,0,32,0 %;       
macro FIB$L_ACL_STATUS = 52,0,32,0 %;   
macro FIB$L_STATUS = 56,0,32,0 %;       
macro FIB$V_ALT_REQ = 56,0,1,0 %;       
macro FIB$V_ALT_GRANTED = 56,1,1,0 %;   
macro FIB$V_DIRACL = 56,2,1,0 %;        
macro FIB$V_PROPAGATE = 56,3,1,0 %;     
macro FIB$V_NOCOPYACL = 56,4,1,0 %;     
macro FIB$V_NOCOPYOWNER = 56,5,1,0 %;   
macro FIB$V_NOCOPYPROT = 56,6,1,0 %;    
macro FIB$V_EXCLPREVIOUS = 56,7,1,0 %;  
macro FIB$V_ALIAS_ENTRY = 56,8,1,0 %;   
macro FIB$V_WILDFID_FLAG = 56,9,1,0 %;  
macro FIB$V_DID_FILESPEC = 56,10,1,0 %; 
macro FIB$L_ALT_ACCESS = 60,0,32,0 %;   
macro FIB$L_MOV_SVBN = 64,0,32,0 %;     
macro FIB$L_MOV_VBNCNT = 68,0,32,0 %;   
macro FIB$W_FILE_HDRSEQ_INCR = 72,0,16,0 %; 
macro FIB$W_DIR_HDRSEQ_INCR = 74,0,16,0 %; 
macro FIB$W_FILE_DATASEQ_INCR = 76,0,16,0 %; 
macro FIB$W_DIR_DATASEQ_INCR = 78,0,16,0 %; 

macro FIB$L_CACHING_OPTIONS = 80,0,32,0 %; 
macro FIB$V_FILE_ATTRIBUTES = 80,0,4,0 %;
literal FIB$S_FILE_ATTRIBUTES = 4;      
macro FIB$V_FILE_CONTENTS = 80,4,4,0 %;
literal FIB$S_FILE_CONTENTS = 4;        
macro FIB$V_FLUSH_ON_CLOSE = 80,8,4,0 %;
literal FIB$S_FLUSH_ON_CLOSE = 4;       
macro FIB$V_CACHING_OPTIONS_MBZ = 80,12,20,0 %;
literal FIB$S_CACHING_OPTIONS_MBZ = 20; 
macro FIB$W_SD_FID = 84,0,0,0 %;
literal FIB$S_SD_FID = 6;               
macro FIB$W_SD_FID_NUM = 84,0,16,0 %;   
macro FIB$W_SD_FID_SEQ = 86,0,16,0 %;   
macro FIB$W_SD_FID_RVN = 88,0,16,0 %;   
macro FIB$B_SD_FID_RVN = 88,0,8,0 %;    
macro FIB$B_SD_FID_NMX = 89,0,8,0 %;    
macro FIB$B_NAME_FORMAT_IN = 92,0,8,0 %; 
macro FIB$B_NAME_FORMAT_OUT = 93,0,8,0 %; 
macro FIB$B_ASCNAME_FORMAT = 94,0,8,0 %; 
macro FIB$B_RESERVED_2 = 95,0,8,0 %;    
literal FIB$C_REWINDVOL = 1;            
literal FIB$C_POSEND = 2;               
literal FIB$C_NEXTVOL = 3;              
literal FIB$C_SPACE = 4;                
literal FIB$C_ILLEGAL = 5;              
literal FIB$C_REWINDFIL = 6;            
literal FIB$C_LOCK_VOL = 7;             
literal FIB$C_UNLK_VOL = 8;             
literal FIB$C_ENA_QUOTA = 9;            
literal FIB$C_DSA_QUOTA = 10;           
literal FIB$C_ADD_QUOTA = 11;           
literal FIB$C_EXA_QUOTA = 12;           
literal FIB$C_MOD_QUOTA = 13;           
literal FIB$C_REM_QUOTA = 14;           
literal FIB$C_USEREOT = 15;             
literal FIB$C_REMAP = 16;               
literal FIB$C_CLSEREXCP = 17;           
literal FIB$C_FLUSH_CACHE = 18;         
literal FIB$C_FORCE_MV = 19;            
literal FIB$C_VALIDATE_VOLUME = 20;     
literal FIB$C_VALIDATE_FILE = 21;       
literal FIB$C_UPDATE_VOL_PROFILE = 22;  
literal FIB$C_UPDATE_FIL_PROFILE = 23;  
literal FIB$C_CHECK_PROTECTION = 24;    
literal FIB$C_ADD_THREAD = 25;          
literal FIB$C_REM_THREAD = 26;          
literal FIB$C_EXA_THREAD = 27;          
literal FIB$C_CHECK_PATH = 28;          
literal FIB$C_ENA_DW = 29;              
literal FIB$C_DSA_DW = 30;              
literal FIB$C_WRITEBACK_CACHE = 31;     
literal FIB$C_WRITETHRU_CACHE = 32;     
literal FIB$C_FILE_SYNCH = 33;          
literal FIB$C_CACHING_OPTIONS = 34;     
literal FIB$C_WRITE_BARRIER = 35;       
literal FIB$C_VOL_FLUSH = 36;           
literal FIB$C_VOL_FLUSH_ALL = 37;       
literal FIB$C_CLONE_FIL_PROFILE = 38;   
literal FIB$C_STRUC_LEVEL2 = 39;        
literal FIB$C_STRUC_LEVEL5 = 40;        
literal FIB$C_EXPAND_VOLUME = 41;       
literal FIB$C_EXPAND_BITMAP = 42;       
literal FIB$K_MTALEN = 28;              
literal FIB$C_MTALEN = 28;              
literal FIB$C_FID_CACHE = 1;            
literal FIB$C_EXTENT_CACHE = 2;         
literal FIB$C_QUOTA_CACHE = 3;          
literal FIB$C_BFRD_CACHE = 4;           
literal FIB$C_VBN_CACHE = 5;            
literal FIB$C_FLUSH_FILE_ATTRIBUTES = 1; 
literal FIB$C_FLUSH_FILE_CONTENTS = 2;  
literal FIB$C_FLUSH_FILE = 3;           
literal FIB$M_ALL_MEM = %X'1';
literal FIB$M_ALL_GRP = %X'2';
literal FIB$M_MOD_USE = %X'4';
literal FIB$M_MOD_PERM = %X'8';
literal FIB$M_MOD_OVER = %X'10';
literal FIB$S_FIBDEF1 = 28;
macro FIB$W_CNTRLFUNC = 22,0,16,0 %;    

macro FIB$L_CNTRLVAL = 24,0,32,0 %;     

macro FIB$V_ALL_MEM = 24,0,1,0 %;       
macro FIB$V_ALL_GRP = 24,1,1,0 %;       
macro FIB$V_MOD_USE = 24,2,1,0 %;       
macro FIB$V_MOD_PERM = 24,3,1,0 %;      
macro FIB$V_MOD_OVER = 24,4,1,0 %;      
literal FIB$C_FILE_FLUSH = 33;
 

literal FID$K_LENGTH = 6;
literal FID$C_LENGTH = 6;
literal FID$C_INDEXF = 1;               
literal FID$C_BITMAP = 2;               
literal FID$C_BADBLK = 3;               
literal FID$C_MFD = 4;                  
literal FID$C_CORIMG = 5;               
literal FID$C_VOLSET = 6;               
literal FID$C_CONTIN = 7;               
literal FID$C_BACKUP = 8;               
literal FID$C_BADLOG = 9;               
literal FID$C_FREFIL = 10;              
literal FID$S_FIDDEF = 6;
macro FID$W_FID = 0,0,0,0 %;
literal FID$S_FID = 6;                  
macro FID$W_NUM = 0,0,16,0 %;           
macro FID$W_SEQ = 2,0,16,0 %;           
macro FID$W_RVN = 4,0,16,0 %;           
macro FID$B_RVN = 4,0,8,0 %;            
macro FID$B_NMX = 5,0,8,0 %;            
macro FID$W_DIRNUM = 0,0,16,0 %;        
macro FID$L_RECNUM = 2,0,32,0 %;        
 

literal FLT$M_NO_EXECUTE = %X'1';
literal FLT$M_EXECUTE_ONLY = %X'2';
literal FLT$M_PERM = %X'4';
literal FLT$S_FLTDEF = 1;
macro FLT$V_NO_EXECUTE = 0,0,1,0 %;     
macro FLT$V_EXECUTE_ONLY = 0,1,1,0 %;   
macro FLT$V_PERM = 0,2,1,0 %;           
 

literal GEN64$S_GENERIC_64 = 8;
macro GEN64$Q_QUADWORD = 0,0,0,0 %;
literal GEN64$S_QUADWORD = 8;           
macro GEN64$L_LONGWORD = 0,0,0,0 %;
literal GEN64$S_LONGWORD = 8;           
macro GEN64$W_WORD = 0,0,0,0 %;
literal GEN64$S_WORD = 8;               
literal GEN64$K_LENGTH = 8;             
literal GEN64$C_LENGTH = 8;             
 

literal GETSPI$C_EXETYPE = 1;           
literal GETSPI$C_EWSTYPE = 2;           
literal GETSPI$C_MONTYPE = 3;           
literal GETSPI$C_RMSTYPE = 4;           
literal GETSPI$C_LISTEND = 0;           

literal GETSPI$_initial = -1;           
literal GETSPI$_data_collection = -2;   
literal GETSPI$_sysinfo = -3;           
literal GETSPI$_version_number = -4;    
literal GETSPI$_rms_file = -5;          
literal GETSPI$_rms_gs = -6;            
literal GETSPI$_last_type = -7;
literal GETSPI$_server_version = 5;

literal GETSPI$S_getspi$pms_flags = 4;
macro GETSPI$l_flags = 0,0,32,0 %;
literal GETSPI$s_flags = 4;             
macro GETSPI$v_disk_enable = 0,0,1,0 %; 

macro GETSPI$v_filler1 = 0,1,7,0 %;
literal GETSPI$s_filler1 = 7;           
macro GETSPI$v_disk_sync = 0,8,1,0 %;   

macro GETSPI$v_filler2 = 0,9,23,0 %;
literal GETSPI$s_filler2 = 23;          

literal GETSPI$k_max_packet = 500;
literal GETSPI$k_pool_ovf = -2147483647;

literal GETSPI$_MODES = 4096;           
literal GETSPI$_INTERRUPT = 4097;       
literal GETSPI$_KERNEL = 4098;          
literal GETSPI$_EXEC = 4099;            
literal GETSPI$_SUPER = 4100;           
literal GETSPI$_USER = 4101;            
literal GETSPI$_COMPAT = 4102;          
literal GETSPI$_INTERRUPT_BUSY = 4103;  
literal GETSPI$_KERNEL_BUSY = 4104;     
literal GETSPI$_IDLE = 4105;            
literal GETSPI$_CPUBUSY = 4106;         
literal GETSPI$_COLPG = 4107;           
literal GETSPI$_MWAIT = 4108;           
literal GETSPI$_CEF = 4109;             
literal GETSPI$_PFW = 4110;             
literal GETSPI$_LEF = 4111;             
literal GETSPI$_LEFO = 4112;            
literal GETSPI$_HIB = 4113;             
literal GETSPI$_HIBO = 4114;            
literal GETSPI$_SUSP = 4115;            
literal GETSPI$_SUSPO = 4116;           
literal GETSPI$_FPG = 4117;             
literal GETSPI$_COM = 4118;             
literal GETSPI$_COMO = 4119;            
literal GETSPI$_CUR = 4120;             
literal GETSPI$_OTHSTAT = 4121;         
literal GETSPI$_PROCS = 4122;           
literal GETSPI$_PROC = 4123;            
literal GETSPI$_FRLIST = 4124;          
literal GETSPI$_MODLIST = 4125;         
literal GETSPI$_FAULTS = 4126;          
literal GETSPI$_PREADS = 4127;          
literal GETSPI$_PWRITES = 4128;         
literal GETSPI$_PWRITIO = 4129;         
literal GETSPI$_PREADIO = 4130;         
literal GETSPI$_GVALFLTS = 4131;        
literal GETSPI$_WRTINPROG = 4132;       
literal GETSPI$_FREFLTS = 4133;         
literal GETSPI$_MFYFLTS = 4134;         
literal GETSPI$_DZROFLTS = 4135;        
literal GETSPI$_SYSFAULTS = 4136;       
literal GETSPI$_LRPCNT = 4137;          
literal GETSPI$_LRPINUSE = 4138;        
literal GETSPI$_IRPCNT = 4139;          
literal GETSPI$_IRPINUSE = 4140;        
literal GETSPI$_SRPCNT = 4141;          
literal GETSPI$_SRPINUSE = 4142;        
literal GETSPI$_HOLECNT = 4143;         
literal GETSPI$_BIGHOLE = 4144;         
literal GETSPI$_SMALLHOLE = 4145;       
literal GETSPI$_HOLESUM = 4146;         
literal GETSPI$_DYNINUSE = 4147;        
literal GETSPI$_SMALLCNT = 4148;        
literal GETSPI$_ISWPCNT = 4149;         
literal GETSPI$_DIRIO = 4150;           
literal GETSPI$_BUFIO = 4151;           
literal GETSPI$_MBREADS = 4152;         
literal GETSPI$_MBWRITES = 4153;        
literal GETSPI$_LOGNAM = 4154;          
literal GETSPI$_FCPCALLS = 4155;        
literal GETSPI$_FCPREAD = 4156;         
literal GETSPI$_FCPWRITE = 4157;        
literal GETSPI$_FCPCACHE = 4158;        
literal GETSPI$_FCPCPU = 4159;          
literal GETSPI$_FCPHIT = 4160;          
literal GETSPI$_FCPSPLIT = 4161;        
literal GETSPI$_FCPFAULT = 4162;        
literal GETSPI$_ENQNEW = 4163;          
literal GETSPI$_ENQCVT = 4164;          
literal GETSPI$_DEQ = 4165;             
literal GETSPI$_BLKAST = 4166;          
literal GETSPI$_ENQWAIT = 4167;         
literal GETSPI$_ENQNOTQD = 4168;        
literal GETSPI$_DLCKSRCH = 4169;        
literal GETSPI$_DLCKFND = 4170;         
literal GETSPI$_NUMLOCKS = 4171;        
literal GETSPI$_NUMRES = 4172;          
literal GETSPI$_ARRLOCPK = 4173;        
literal GETSPI$_DEPLOCPK = 4174;        
literal GETSPI$_ARRTRAPK = 4175;        
literal GETSPI$_TRCNGLOS = 4176;        
literal GETSPI$_RCVBUFFL = 4177;        
literal GETSPI$_RESERVED1 = 4178;       
literal GETSPI$_RESERVED2 = 4179;       
literal GETSPI$_RESERVED3 = 4180;       
literal GETSPI$_RESERVED4 = 4181;       
literal GETSPI$_RESERVED5 = 4182;       
literal GETSPI$_RESERVED6 = 4183;       
literal GETSPI$_RESERVED7 = 4184;       
literal GETSPI$_RESERVED8 = 4185;       
literal GETSPI$_RESERVED9 = 4186;       
literal GETSPI$_RESERVED10 = 4187;      
literal GETSPI$_RESERVED11 = 4188;      
literal GETSPI$_RESERVED12 = 4189;      
literal GETSPI$_RESERVED13 = 4190;      
literal GETSPI$_RESERVED14 = 4191;      
literal GETSPI$_RESERVED15 = 4192;      
literal GETSPI$_RESERVED16 = 4193;      
literal GETSPI$_RESERVED17 = 4194;      
literal GETSPI$_RESERVED18 = 4195;      
literal GETSPI$_FID_TRIES = 4196;       
literal GETSPI$_FILHDR_TRIES = 4197;    
literal GETSPI$_DIRFCB_TRIES = 4198;    
literal GETSPI$_DIRDATA_TRIES = 4199;   
literal GETSPI$_EXT_TRIES = 4200;       
literal GETSPI$_QUO_TRIES = 4201;       
literal GETSPI$_STORAGMAP_TRIES = 4202; 
literal GETSPI$_DISKS = 4203;           
literal GETSPI$_TOTAL_LOCKS = 4204;     
literal GETSPI$_ENQNEWLOC = 4205;       
literal GETSPI$_ENQNEWIN = 4206;        
literal GETSPI$_ENQNEWOUT = 4207;       
literal GETSPI$_ENQCVTLOC = 4208;       
literal GETSPI$_ENQCVTIN = 4209;        
literal GETSPI$_ENQCVTOUT = 4210;       
literal GETSPI$_DEQLOC = 4211;          
literal GETSPI$_DEQIN = 4212;           
literal GETSPI$_DEQOUT = 4213;          
literal GETSPI$_BLKLOC = 4214;          
literal GETSPI$_BLKIN = 4215;           
literal GETSPI$_BLKOUT = 4216;          
literal GETSPI$_DIRIN = 4217;           
literal GETSPI$_DIROUT = 4218;          
literal GETSPI$_DLCKMSGS = 4219;        
literal GETSPI$_SCS = 4220;             
literal GETSPI$_SYSTIME = 4221;         
literal GETSPI$_MSCP_REQUEST = 4222;    
literal GETSPI$_MSCP_READ = 4223;       
literal GETSPI$_MSCP_WRITE = 4224;      
literal GETSPI$_MSCP_FRAGMENT = 4225;   
literal GETSPI$_MSCP_SPLIT = 4226;      
literal GETSPI$_MSCP_BUFWAIT = 4227;    
literal GETSPI$_MSCP_SIZE1 = 4228;      
literal GETSPI$_MSCP_SIZE2 = 4229;      
literal GETSPI$_MSCP_SIZE3 = 4230;      
literal GETSPI$_MSCP_SIZE4 = 4231;      
literal GETSPI$_MSCP_SIZE5 = 4232;      
literal GETSPI$_MSCP_SIZE6 = 4233;      
literal GETSPI$_MSCP_SIZE7 = 4234;      
literal GETSPI$_MSCP_ALL = 4235;        
literal GETSPI$_DDTM_STARTS = 4236;     
literal GETSPI$_DDTM_PREPARES = 4237;   
literal GETSPI$_DDTM_ONE_PHASE = 4238;  
literal GETSPI$_DDTM_COMMITS = 4239;    
literal GETSPI$_DDTM_ABORTS = 4240;     
literal GETSPI$_DDTM_ENDS = 4241;       
literal GETSPI$_DDTM_BRANCHS = 4242;    
literal GETSPI$_DDTM_ADDS = 4243;       
literal GETSPI$_DDTM_BUCKETS1 = 4244;   
literal GETSPI$_DDTM_BUCKETS2 = 4245;   
literal GETSPI$_DDTM_BUCKETS3 = 4246;   
literal GETSPI$_DDTM_BUCKETS4 = 4247;   
literal GETSPI$_DDTM_BUCKETS5 = 4248;   
literal GETSPI$_DDTM_BUCKETS6 = 4249;   
literal GETSPI$_DDTM_ALL = 4250;        
literal GETSPI$_VECTORP = 4251;         
literal GETSPI$_VBYTE_READ = 4252;      
literal GETSPI$_VBYTE_WRITE = 4253;     
literal GETSPI$_VVBS_TRAN = 4254;
literal GETSPI$_VRBS_TRAN = 4255;
literal GETSPI$_VDIO_SEL = 4256;
literal GETSPI$_VDIOMAP_ALLOC = 4257;
literal GETSPI$_VRBS_AVAIL = 4258;
literal GETSPI$_VSEL_FAIL = 4259;
literal GETSPI$_VVBSM_HIT = 4260;
literal GETSPI$_VVBSM_CACHE = 4261;
literal GETSPI$_VFLUIDBAL = 4262;
literal GETSPI$_VRECOPY = 4263;
literal GETSPI$_VCPUTICKS = 4264;
literal GETSPI$_RESERVEDEXE1 = 4265;    
literal GETSPI$_RESERVEDEXE2 = 4266;    
literal GETSPI$_RESERVEDEXE3 = 4267;    
literal GETSPI$_RESERVEDEXE4 = 4268;    
literal GETSPI$_RESERVEDEXE5 = 4269;    
literal GETSPI$_RESERVEDEXE6 = 4270;    
literal GETSPI$_RESERVEDEXE7 = 4271;    
literal GETSPI$_RESERVEDEXE8 = 4272;    
literal GETSPI$_RESERVEDEXE9 = 4273;    
literal GETSPI$_RESERVEDEXE10 = 4274;   
literal GETSPI$_RESERVEDEXE11 = 4275;   
literal GETSPI$_RESERVEDEXE12 = 4276;   
literal GETSPI$_RESERVEDEXE13 = 4277;   
literal GETSPI$_RESERVEDEXE14 = 4278;   
literal GETSPI$_RESERVEDEXE15 = 4279;   
literal GETSPI$_RESERVEDEXE16 = 4280;   
literal GETSPI$_RESERVEDEXE17 = 4281;   
literal GETSPI$_RESERVEDEXE18 = 4282;   
literal GETSPI$_RESERVEDEXE19 = 4283;   
literal GETSPI$_RESERVEDEXE20 = 4284;   
literal GETSPI$_RESERVEDEXE21 = 4285;   
literal GETSPI$_RESERVEDEXE22 = 4286;   
literal GETSPI$_RESERVEDEXE23 = 4287;   
literal GETSPI$_RESERVEDEXE24 = 4288;   
literal GETSPI$_RESERVEDEXE25 = 4289;   
literal GETSPI$_RESERVEDEXE26 = 4290;   
literal GETSPI$_RESERVEDEXE27 = 4291;   
literal GETSPI$_RESERVEDEXE28 = 4292;   
literal GETSPI$_RESERVEDEXE29 = 4293;   
literal GETSPI$_RESERVEDEXE30 = 4294;   
literal GETSPI$_RESERVEDEXE31 = 4295;   
literal GETSPI$_RESERVEDEXE32 = 4296;   
literal GETSPI$_RESERVEDEXE33 = 4297;   
literal GETSPI$_RESERVEDEXE34 = 4298;   
literal GETSPI$_RESERVEDEXE35 = 4299;   
literal GETSPI$_RESERVEDEXE36 = 4300;   
literal GETSPI$_RESERVEDEXE37 = 4301;   
literal GETSPI$_RESERVEDEXE38 = 4302;   
literal GETSPI$_RESERVEDEXE39 = 4303;   
literal GETSPI$_RESERVEDEXE40 = 4304;   
literal GETSPI$_RESERVEDEXE41 = 4305;   
literal GETSPI$_RESERVEDEXE42 = 4306;   
literal GETSPI$_RESERVEDEXE43 = 4307;   
literal GETSPI$_RESERVEDEXE44 = 4308;   
literal GETSPI$_RESERVEDEXE45 = 4309;   
literal GETSPI$_RESERVEDEXE46 = 4310;   
literal GETSPI$_RESERVEDEXE47 = 4311;   
literal GETSPI$_RESERVEDEXE48 = 4312;   
literal GETSPI$_RESERVEDEXE49 = 4313;   
literal GETSPI$_RESERVEDEXE50 = 4314;   
literal GETSPI$_RESERVEDEXE51 = 4315;   
literal GETSPI$_RESERVEDEXE52 = 4316;   
literal GETSPI$_RESERVEDEXE53 = 4317;   
literal GETSPI$_RESERVEDEXE54 = 4318;   
literal GETSPI$_RESERVEDEXE55 = 4319;   
literal GETSPI$_RESERVEDEXE56 = 4320;   
literal GETSPI$_RESERVEDEXE57 = 4321;   
literal GETSPI$_RESERVEDEXE58 = 4322;   
literal GETSPI$_RESERVEDEXE59 = 4323;   
literal GETSPI$_RESERVEDEXE60 = 4324;   
literal GETSPI$_RESERVEDEXE61 = 4325;   
literal GETSPI$_RESERVEDEXE62 = 4326;   
literal GETSPI$_RESERVEDEXE63 = 4327;   
literal GETSPI$_RESERVEDEXE64 = 4328;   
literal GETSPI$_RESERVEDEXE65 = 4329;   
literal GETSPI$_RESERVEDEXE66 = 4330;   
literal GETSPI$_RESERVEDEXE67 = 4331;   
literal GETSPI$_RESERVEDEXE68 = 4332;   
literal GETSPI$_RESERVEDEXE69 = 4333;   
literal GETSPI$_RESERVEDEXE70 = 4334;   
literal GETSPI$_RESERVEDEXE71 = 4335;   
literal GETSPI$_LASTEXE = 4336;         

literal GETSPI$_ACCESS = 8432;          
literal GETSPI$_ALLOC = 8433;           
literal GETSPI$_FCPCREATE = 8434;       
literal GETSPI$_VOLWAIT = 8435;         
literal GETSPI$_FCPTURN = 8436;         
literal GETSPI$_FCPERASE = 8437;        
literal GETSPI$_OPENS = 8438;           
literal GETSPI$_FIDHIT = 8439;          
literal GETSPI$_FIDMISS = 8440;         
literal GETSPI$_FILHDR_HIT = 8441;      
literal GETSPI$_DIRFCB_HIT = 8442;      
literal GETSPI$_DIRFCB_MISS = 8443;     
literal GETSPI$_DIRDATA_HIT = 8444;     
literal GETSPI$_EXTHIT = 8445;          
literal GETSPI$_EXTMISS = 8446;         
literal GETSPI$_QUOHIT = 8447;          
literal GETSPI$_QUOMISS = 8448;         
literal GETSPI$_STORAGMAP_HIT = 8449;   
literal GETSPI$_VOLLCK = 8450;          
literal GETSPI$_SYNCHLCK = 8451;        
literal GETSPI$_SYNCHWAIT = 8452;       
literal GETSPI$_ACCLCK = 8453;          
literal GETSPI$_XQPCACHEWAIT = 8454;    
literal GETSPI$_RESERVEDEWS1 = 8455;    
literal GETSPI$_RESERVEDEWS2 = 8456;    
literal GETSPI$_RESERVEDEWS3 = 8457;    
literal GETSPI$_RESERVEDEWS4 = 8458;    
literal GETSPI$_RESERVEDEWS5 = 8459;    
literal GETSPI$_RESERVEDEWS6 = 8460;    
literal GETSPI$_RESERVEDEWS7 = 8461;    
literal GETSPI$_RESERVEDEWS8 = 8462;    
literal GETSPI$_RESERVEDEWS9 = 8463;    
literal GETSPI$_RESERVEDEWS10 = 8464;   
literal GETSPI$_RESERVEDEWS11 = 8465;   
literal GETSPI$_RESERVEDEWS12 = 8466;   
literal GETSPI$_RESERVEDEWS13 = 8467;   
literal GETSPI$_RESERVEDEWS14 = 8468;   
literal GETSPI$_RESERVEDEWS15 = 8469;   
literal GETSPI$_RESERVEDEWS16 = 8470;   
literal GETSPI$_RESERVEDEWS17 = 8471;   
literal GETSPI$_RESERVEDEWS18 = 8472;   
literal GETSPI$_RESERVEDEWS19 = 8473;   
literal GETSPI$_RESERVEDEWS20 = 8474;   
literal GETSPI$_RESERVEDEWS21 = 8475;   
literal GETSPI$_RESERVEDEWS22 = 8476;   
literal GETSPI$_RESERVEDEWS23 = 8477;   
literal GETSPI$_RESERVEDEWS24 = 8478;   
literal GETSPI$_RESERVEDEWS25 = 8479;   
literal GETSPI$_RESERVEDEWS26 = 8480;   
literal GETSPI$_RESERVEDEWS27 = 8481;   
literal GETSPI$_RESERVEDEWS28 = 8482;   
literal GETSPI$_RESERVEDEWS29 = 8483;   
literal GETSPI$_RESERVEDEWS30 = 8484;   
literal GETSPI$_RESERVEDEWS31 = 8485;   
literal GETSPI$_RESERVEDEWS32 = 8486;   
literal GETSPI$_RESERVEDEWS33 = 8487;   
literal GETSPI$_RESERVEDEWS34 = 8488;   
literal GETSPI$_RESERVEDEWS35 = 8489;   
literal GETSPI$_RESERVEDEWS36 = 8490;   
literal GETSPI$_RESERVEDEWS37 = 8491;   
literal GETSPI$_RESERVEDEWS38 = 8492;   
literal GETSPI$_RESERVEDEWS39 = 8493;   
literal GETSPI$_RESERVEDEWS40 = 8494;   
literal GETSPI$_RESERVEDEWS41 = 8495;   
literal GETSPI$_RESERVEDEWS42 = 8496;   
literal GETSPI$_RESERVEDEWS43 = 8497;   
literal GETSPI$_RESERVEDEWS44 = 8498;   
literal GETSPI$_RESERVEDEWS45 = 8499;   
literal GETSPI$_RESERVEDEWS46 = 8500;   
literal GETSPI$_RESERVEDEWS47 = 8501;   
literal GETSPI$_RESERVEDEWS48 = 8502;   
literal GETSPI$_RESERVEDEWS49 = 8503;   
literal GETSPI$_RESERVEDEWS50 = 8504;   
literal GETSPI$_RESERVEDEWS51 = 8505;   
literal GETSPI$_RESERVEDEWS52 = 8506;   
literal GETSPI$_RESERVEDEWS53 = 8507;   
literal GETSPI$_RESERVEDEWS54 = 8508;   
literal GETSPI$_RESERVEDEWS55 = 8509;   
literal GETSPI$_RESERVEDEWS56 = 8510;   
literal GETSPI$_RESERVEDEWS57 = 8511;   
literal GETSPI$_RESERVEDEWS58 = 8512;   
literal GETSPI$_RESERVEDEWS59 = 8513;   
literal GETSPI$_RESERVEDEWS60 = 8514;   
literal GETSPI$_RESERVEDEWS61 = 8515;   
literal GETSPI$_RESERVEDEWS62 = 8516;   
literal GETSPI$_RESERVEDEWS63 = 8517;   
literal GETSPI$_RESERVEDEWS64 = 8518;   
literal GETSPI$_RESERVEDEWS65 = 8519;   
literal GETSPI$_RESERVEDEWS66 = 8520;   
literal GETSPI$_RESERVEDEWS67 = 8521;   
literal GETSPI$_RESERVEDEWS68 = 8522;   
literal GETSPI$_RESERVEDEWS69 = 8523;   
literal GETSPI$_RESERVEDEWS70 = 8524;   
literal GETSPI$_RESERVEDEWS71 = 8525;   
literal GETSPI$_RESERVEDEWS72 = 8526;   
literal GETSPI$_RESERVEDEWS73 = 8527;   
literal GETSPI$_RESERVEDEWS74 = 8528;   
literal GETSPI$_RESERVEDEWS75 = 8529;   
literal GETSPI$_RESERVEDEWS76 = 8530;   
literal GETSPI$_RESERVEDEWS77 = 8531;   
literal GETSPI$_RESERVEDEWS78 = 8532;   
literal GETSPI$_RESERVEDEWS79 = 8533;   
literal GETSPI$_RESERVEDEWS80 = 8534;   
literal GETSPI$_RESERVEDEWS81 = 8535;   
literal GETSPI$_RESERVEDEWS82 = 8536;   
literal GETSPI$_RESERVEDEWS83 = 8537;   
literal GETSPI$_RESERVEDEWS84 = 8538;   
literal GETSPI$_RESERVEDEWS85 = 8539;   
literal GETSPI$_RESERVEDEWS86 = 8540;   
literal GETSPI$_RESERVEDEWS87 = 8541;   
literal GETSPI$_RESERVEDEWS88 = 8542;   
literal GETSPI$_RESERVEDEWS89 = 8543;   
literal GETSPI$_RESERVEDEWS90 = 8544;   
literal GETSPI$_RESERVEDEWS91 = 8545;   
literal GETSPI$_RESERVEDEWS92 = 8546;   
literal GETSPI$_RESERVEDEWS93 = 8547;   
literal GETSPI$_RESERVEDEWS94 = 8548;   
literal GETSPI$_RESERVEDEWS95 = 8549;   
literal GETSPI$_RESERVEDEWS96 = 8550;   
literal GETSPI$_RESERVEDEWS97 = 8551;   
literal GETSPI$_RESERVEDEWS98 = 8552;   
literal GETSPI$_RESERVEDEWS99 = 8553;   
literal GETSPI$_RESERVEDEWS100 = 8554;  
literal GETSPI$_LASTEWS = 8555;         

literal GETSPI$_FIDHITPCNT = 12651;     
literal GETSPI$_FILHDR_HITPCNT = 12652; 
literal GETSPI$_DIRFCB_HITPCNT = 12653; 
literal GETSPI$_DIRDATA_HITPCNT = 12654; 
literal GETSPI$_EXTHITPCNT = 12655;     
literal GETSPI$_QUOHITPCNT = 12656;     
literal GETSPI$_STORAGMAP_HITPCNT = 12657; 
literal GETSPI$_OPCNT = 12658;          
literal GETSPI$_IOQUELEN = 12659;       
literal GETSPI$_IOAQUELEN = 12660;      
literal GETSPI$_DISKRESPTIM = 12661;    
literal GETSPI$_JNLIOCNT = 12662;       
literal GETSPI$_JDNQLEN = 12663;        
literal GETSPI$_JDWQLEN = 12664;        
literal GETSPI$_JDFQLEN = 12665;        
literal GETSPI$_JDEXCNT = 12666;        
literal GETSPI$_JNLWRTSS = 12667;       
literal GETSPI$_JNLBUFWR = 12668;       
literal GETSPI$_DGSENT = 12669;         
literal GETSPI$_DGRCVD = 12670;         
literal GETSPI$_DGDISCARD = 12671;      
literal GETSPI$_MSGSENT = 12672;        
literal GETSPI$_MSGRCVD = 12673;        
literal GETSPI$_SNDATS = 12674;         
literal GETSPI$_KBYTSENT = 12675;       
literal GETSPI$_REQDATS = 12676;        
literal GETSPI$_KBYTREQD = 12677;       
literal GETSPI$_KBYTMAPD = 12678;       
literal GETSPI$_QCR_CNT = 12679;        
literal GETSPI$_QBDT_CNT = 12680;       
literal GETSPI$_DIRLOOK = 12681;        
literal GETSPI$_DIRINS = 12682;         
literal GETSPI$_DIRDEL = 12683;         
literal GETSPI$_PACKETS = 12684;        
literal GETSPI$_KBYTES = 12685;         
literal GETSPI$_PACKETSIZE = 12686;     
literal GETSPI$_MPACKETS = 12687;       
literal GETSPI$_MKBYTES = 12688;        
literal GETSPI$_MPACKETSIZE = 12689;    
literal GETSPI$_SINGLECOLL = 12690;     
literal GETSPI$_MULTICOLL = 12691;      
literal GETSPI$_INITDEFER = 12692;      
literal GETSPI$_INTERNALBUFERR = 12693; 
literal GETSPI$_LOCBUFERR = 12694;      
literal GETSPI$_BUFFUNAVAIL = 12695;    
literal GETSPI$_FILLER = 12696;         
literal GETSPI$_RESERVEDMON1 = 12697;   
literal GETSPI$_RESERVEDMON2 = 12698;   
literal GETSPI$_RESERVEDMON3 = 12699;   
literal GETSPI$_RESERVEDMON4 = 12700;   
literal GETSPI$_RESERVEDMON5 = 12701;   
literal GETSPI$_RESERVEDMON6 = 12702;   
literal GETSPI$_RESERVEDMON7 = 12703;   
literal GETSPI$_RESERVEDMON8 = 12704;   
literal GETSPI$_RESERVEDMON9 = 12705;   
literal GETSPI$_RESERVEDMON10 = 12706;  
literal GETSPI$_RESERVEDMON11 = 12707;  
literal GETSPI$_RESERVEDMON12 = 12708;  
literal GETSPI$_RESERVEDMON13 = 12709;  
literal GETSPI$_RESERVEDMON14 = 12710;  
literal GETSPI$_RESERVEDMON15 = 12711;  
literal GETSPI$_RESERVEDMON16 = 12712;  
literal GETSPI$_RESERVEDMON17 = 12713;  
literal GETSPI$_RESERVEDMON18 = 12714;  
literal GETSPI$_RESERVEDMON19 = 12715;  
literal GETSPI$_RESERVEDMON20 = 12716;  
literal GETSPI$_RESERVEDMON21 = 12717;  
literal GETSPI$_RESERVEDMON22 = 12718;  
literal GETSPI$_RESERVEDMON23 = 12719;  
literal GETSPI$_RESERVEDMON24 = 12720;  
literal GETSPI$_RESERVEDMON25 = 12721;  
literal GETSPI$_RESERVEDMON26 = 12722;  
literal GETSPI$_RESERVEDMON27 = 12723;  
literal GETSPI$_RESERVEDMON28 = 12724;  
literal GETSPI$_RESERVEDMON29 = 12725;  
literal GETSPI$_RESERVEDMON30 = 12726;  
literal GETSPI$_RESERVEDMON31 = 12727;  
literal GETSPI$_RESERVEDMON32 = 12728;  
literal GETSPI$_RESERVEDMON33 = 12729;  
literal GETSPI$_RESERVEDMON34 = 12730;  
literal GETSPI$_RESERVEDMON35 = 12731;  
literal GETSPI$_RESERVEDMON36 = 12732;  
literal GETSPI$_RESERVEDMON37 = 12733;  
literal GETSPI$_RESERVEDMON38 = 12734;  
literal GETSPI$_RESERVEDMON39 = 12735;  
literal GETSPI$_RESERVEDMON40 = 12736;  
literal GETSPI$_RESERVEDMON41 = 12737;  
literal GETSPI$_RESERVEDMON42 = 12738;  
literal GETSPI$_RESERVEDMON43 = 12739;  
literal GETSPI$_RESERVEDMON44 = 12740;  
literal GETSPI$_RESERVEDMON45 = 12741;  
literal GETSPI$_RESERVEDMON46 = 12742;  
literal GETSPI$_RESERVEDMON47 = 12743;  
literal GETSPI$_RESERVEDMON48 = 12744;  
literal GETSPI$_RESERVEDMON49 = 12745;  
literal GETSPI$_RESERVEDMON50 = 12746;  
literal GETSPI$_RESERVEDMON51 = 12747;  
literal GETSPI$_RESERVEDMON52 = 12748;  
literal GETSPI$_RESERVEDMON53 = 12749;  
literal GETSPI$_RESERVEDMON54 = 12750;  
literal GETSPI$_RESERVEDMON55 = 12751;  
literal GETSPI$_RESERVEDMON56 = 12752;  
literal GETSPI$_RESERVEDMON57 = 12753;  
literal GETSPI$_RESERVEDMON58 = 12754;  
literal GETSPI$_RESERVEDMON59 = 12755;  
literal GETSPI$_RESERVEDMON60 = 12756;  
literal GETSPI$_RESERVEDMON61 = 12757;  
literal GETSPI$_RESERVEDMON62 = 12758;  
literal GETSPI$_RESERVEDMON63 = 12759;  
literal GETSPI$_RESERVEDMON64 = 12760;  
literal GETSPI$_RESERVEDMON65 = 12761;  
literal GETSPI$_RESERVEDMON66 = 12762;  
literal GETSPI$_RESERVEDMON67 = 12763;  
literal GETSPI$_RESERVEDMON68 = 12764;  
literal GETSPI$_RESERVEDMON69 = 12765;  
literal GETSPI$_RESERVEDMON70 = 12766;  
literal GETSPI$_RESERVEDMON71 = 12767;  
literal GETSPI$_RESERVEDMON72 = 12768;  
literal GETSPI$_RESERVEDMON73 = 12769;  
literal GETSPI$_RESERVEDMON74 = 12770;  
literal GETSPI$_RESERVEDMON75 = 12771;  
literal GETSPI$_RESERVEDMON76 = 12772;  
literal GETSPI$_RESERVEDMON77 = 12773;  
literal GETSPI$_RESERVEDMON78 = 12774;  
literal GETSPI$_RESERVEDMON79 = 12775;  
literal GETSPI$_RESERVEDMON80 = 12776;  
literal GETSPI$_RESERVEDMON81 = 12777;  
literal GETSPI$_RESERVEDMON82 = 12778;  
literal GETSPI$_RESERVEDMON83 = 12779;  
literal GETSPI$_RESERVEDMON84 = 12780;  
literal GETSPI$_RESERVEDMON85 = 12781;  
literal GETSPI$_RESERVEDMON86 = 12782;  
literal GETSPI$_RESERVEDMON87 = 12783;  
literal GETSPI$_RESERVEDMON88 = 12784;  
literal GETSPI$_RESERVEDMON89 = 12785;  
literal GETSPI$_RESERVEDMON90 = 12786;  
literal GETSPI$_RESERVEDMON91 = 12787;  
literal GETSPI$_RESERVEDMON92 = 12788;  
literal GETSPI$_RESERVEDMON93 = 12789;  
literal GETSPI$_RESERVEDMON94 = 12790;  
literal GETSPI$_RESERVEDMON95 = 12791;  
literal GETSPI$_RESERVEDMON96 = 12792;  
literal GETSPI$_RESERVEDMON97 = 12793;  
literal GETSPI$_RESERVEDMON98 = 12794;  
literal GETSPI$_RESERVEDMON99 = 12795;  
literal GETSPI$_RESERVEDMON100 = 12796; 
literal GETSPI$_LASTMON = 12797;        

literal GETSPI$_RMS_STATS = 16893;      
literal GETSPI$_SEQGETS = 16894;        
literal GETSPI$_KEYGETS = 16895;        
literal GETSPI$_RFAGETS = 16896;        
literal GETSPI$_GETBYTES = 16897;       
literal GETSPI$_SEQPUTS = 16898;        
literal GETSPI$_KEYPUTS = 16899;        
literal GETSPI$_PUTBYTES = 16900;       
literal GETSPI$_UPDATES = 16901;        
literal GETSPI$_UPDATEBYTES = 16902;    
literal GETSPI$_DELETES = 16903;        
literal GETSPI$_TRUNCATES = 16904;      
literal GETSPI$_TRUNCBLKS = 16905;      
literal GETSPI$_SEQFINDS = 16906;       
literal GETSPI$_KEYFINDS = 16907;       
literal GETSPI$_RFAFINDS = 16908;       
literal GETSPI$_READS = 16909;          
literal GETSPI$_READBYTES = 16910;      
literal GETSPI$_CONNECTS = 16911;       
literal GETSPI$_DISCONNECTS = 16912;    
literal GETSPI$_EXTENDS = 16913;        
literal GETSPI$_EXTBLOCKS = 16914;      
literal GETSPI$_FLUSHES = 16915;        
literal GETSPI$_REWINDS = 16916;        
literal GETSPI$_WRITES = 16917;         
literal GETSPI$_WRITEBYTES = 16918;     
literal GETSPI$_FLCKENQS = 16919;       
literal GETSPI$_FLCKDEQS = 16920;       
literal GETSPI$_FLCKCNVS = 16921;       
literal GETSPI$_LBLCKENQS = 16922;      
literal GETSPI$_LBLCKDEQS = 16923;      
literal GETSPI$_LBLCKCNVS = 16924;      
literal GETSPI$_GBLCKENQS = 16925;      
literal GETSPI$_GBLCKDEQS = 16926;      
literal GETSPI$_GBLCKCNVS = 16927;      
literal GETSPI$_GSLCKENQS = 16928;      
literal GETSPI$_GSLCKDEQS = 16929;      
literal GETSPI$_GSLCKCNVS = 16930;      
literal GETSPI$_RLCKENQS = 16931;       
literal GETSPI$_RLCKDEQS = 16932;       
literal GETSPI$_RLCKCNVS = 16933;       
literal GETSPI$_APPLCKENQS = 16934;     
literal GETSPI$_APPLCKDEQS = 16935;     
literal GETSPI$_APPLCKCNVS = 16936;     
literal GETSPI$_FLBLKASTS = 16937;      
literal GETSPI$_LBLBLKASTS = 16938;     
literal GETSPI$_GBLBLKASTS = 16939;     
literal GETSPI$_APPBLKASTS = 16940;     
literal GETSPI$_LCACHEHITS = 16941;     
literal GETSPI$_LCACHETRIES = 16942;    
literal GETSPI$_GCACHEHITS = 16943;     
literal GETSPI$_GCACHETRIES = 16944;    
literal GETSPI$_GBRDIRIOS = 16945;      
literal GETSPI$_GBWDIRIOS = 16946;      
literal GETSPI$_LBRDIRIOS = 16947;      
literal GETSPI$_LBWDIRIOS = 16948;      
literal GETSPI$_BKTSPLT = 16949;        
literal GETSPI$_MBKTSPLT = 16950;       
literal GETSPI$_RMSOPENS = 16951;       
literal GETSPI$_CLOSES = 16952;         
literal GETSPI$_GSBLKASTS = 16953;      
literal GETSPI$_FLWAITS = 16954;        
literal GETSPI$_LBWAITS = 16955;        
literal GETSPI$_GBWAITS = 16956;        
literal GETSPI$_GSWAITS = 16957;        
literal GETSPI$_RLWAITS = 16958;        
literal GETSPI$_APWAITS = 16959;        
literal GETSPI$_TOTWAITS = 16960;       
literal GETSPI$_OUTBUFQUO = 16961;      
literal GETSPI$_RMSDEV1 = 16962;        
literal GETSPI$_RMSDEV2 = 16963;        
literal GETSPI$_RMSDEV3 = 16964;        
literal GETSPI$_RMSDEV4 = 16965;        
literal GETSPI$_RMSDEV5 = 16966;        
literal GETSPI$_RMSDEV6 = 16967;        
literal GETSPI$_RMSDEV7 = 16968;        
literal GETSPI$_RMSDEV8 = 16969;        
literal GETSPI$_RMSDEV9 = 16970;        
literal GETSPI$_RMSDEV10 = 16971;       
literal GETSPI$_RMSDEV11 = 16972;       
literal GETSPI$_RMSDEV12 = 16973;       
literal GETSPI$_RMSDEV13 = 16974;       
literal GETSPI$_RMSDEV14 = 16975;       
literal GETSPI$_RMSDEV15 = 16976;       
literal GETSPI$_XQPQIOS = 16977;        
literal GETSPI$_LCACHEHITPCNT = 16978;  
literal GETSPI$_GCACHEHITPCNT = 16979;  
literal GETSPI$_TOTALGET = 16980;       
literal GETSPI$_TOTALPUT = 16981;       
literal GETSPI$_TOTALFIND = 16982;      
literal GETSPI$_BYTESGET = 16983;       
literal GETSPI$_BYTESPUT = 16984;       
literal GETSPI$_BYTESUPDATE = 16985;    
literal GETSPI$_BYTESREAD = 16986;      
literal GETSPI$_BYTESWRITE = 16987;     
literal GETSPI$_BLOCKSTRUNCATE = 16988; 
literal GETSPI$_BLOCKSEXTEND = 16989;   
literal GETSPI$_ACTIVE_STREAMS = 16990; 
literal GETSPI$_TOTAL_ENQS = 16991;     
literal GETSPI$_TOTAL_DEQS = 16992;     
literal GETSPI$_TOTAL_CNVS = 16993;     
literal GETSPI$_TOTAL_BLKAST = 16994;   
literal GETSPI$_RMS_ORG = 16995;        
literal GETSPI$_INTCOL_HSHTBL = 16996;  
literal GETSPI$_INTCOL_GBH = 16997;     
literal GETSPI$_INTRES_SETIMR = 16998;  
literal GETSPI$_INTNOTRES = 16999;      
literal GETSPI$_RESERVEDRMS5 = 17000;   
literal GETSPI$_RESERVEDRMS6 = 17001;   
literal GETSPI$_RESERVEDRMS7 = 17002;   
literal GETSPI$_RESERVEDRMS8 = 17003;   
literal GETSPI$_RESERVEDRMS9 = 17004;   
literal GETSPI$_RESERVEDRMS10 = 17005;  
literal GETSPI$_RESERVEDRMS11 = 17006;  
literal GETSPI$_RESERVEDRMS12 = 17007;  
literal GETSPI$_RESERVEDRMS13 = 17008;  
literal GETSPI$_RESERVEDRMS14 = 17009;  
literal GETSPI$_RESERVEDRMS15 = 17010;  
literal GETSPI$_RESERVEDRMS16 = 17011;  
literal GETSPI$_RESERVEDRMS17 = 17012;  
literal GETSPI$_RESERVEDRMS18 = 17013;  
literal GETSPI$_RESERVEDRMS19 = 17014;  
literal GETSPI$_RESERVEDRMS20 = 17015;  
literal GETSPI$_RESERVEDRMS21 = 17016;  
literal GETSPI$_RESERVEDRMS22 = 17017;  
literal GETSPI$_RESERVEDRMS23 = 17018;  
literal GETSPI$_RESERVEDRMS24 = 17019;  
literal GETSPI$_RESERVEDRMS25 = 17020;  
literal GETSPI$_RESERVEDRMS26 = 17021;  
literal GETSPI$_RESERVEDRMS27 = 17022;  
literal GETSPI$_RESERVEDRMS28 = 17023;  
literal GETSPI$_RESERVEDRMS29 = 17024;  
literal GETSPI$_RESERVEDRMS30 = 17025;  
literal GETSPI$_RESERVEDRMS31 = 17026;  
literal GETSPI$_RESERVEDRMS32 = 17027;  
literal GETSPI$_RESERVEDRMS33 = 17028;  
literal GETSPI$_RESERVEDRMS34 = 17029;  
literal GETSPI$_RESERVEDRMS35 = 17030;  
literal GETSPI$_RESERVEDRMS36 = 17031;  
literal GETSPI$_RESERVEDRMS37 = 17032;  
literal GETSPI$_RESERVEDRMS38 = 17033;  
literal GETSPI$_RESERVEDRMS39 = 17034;  
literal GETSPI$_RESERVEDRMS40 = 17035;  
literal GETSPI$_RESERVEDRMS41 = 17036;  
literal GETSPI$_RESERVEDRMS42 = 17037;  
literal GETSPI$_RESERVEDRMS43 = 17038;  
literal GETSPI$_RESERVEDRMS44 = 17039;  
literal GETSPI$_RESERVEDRMS45 = 17040;  
literal GETSPI$_RESERVEDRMS46 = 17041;  
literal GETSPI$_RESERVEDRMS47 = 17042;  
literal GETSPI$_RESERVEDRMS48 = 17043;  
literal GETSPI$_RESERVEDRMS49 = 17044;  
literal GETSPI$_RESERVEDRMS50 = 17045;  
literal GETSPI$_RESERVEDRMS51 = 17046;  
literal GETSPI$_RESERVEDRMS52 = 17047;  
literal GETSPI$_RESERVEDRMS53 = 17048;  
literal GETSPI$_RESERVEDRMS54 = 17049;  
literal GETSPI$_RESERVEDRMS55 = 17050;  
literal GETSPI$_RESERVEDRMS56 = 17051;  
literal GETSPI$_RESERVEDRMS57 = 17052;  
literal GETSPI$_RESERVEDRMS58 = 17053;  
literal GETSPI$_RESERVEDRMS59 = 17054;  
literal GETSPI$_RESERVEDRMS60 = 17055;  
literal GETSPI$_RESERVEDRMS61 = 17056;  
literal GETSPI$_RESERVEDRMS62 = 17057;  
literal GETSPI$_RESERVEDRMS63 = 17058;  
literal GETSPI$_RESERVEDRMS64 = 17059;  
literal GETSPI$_RESERVEDRMS65 = 17060;  
literal GETSPI$_RESERVEDRMS66 = 17061;  
literal GETSPI$_RESERVEDRMS67 = 17062;  
literal GETSPI$_RESERVEDRMS68 = 17063;  
literal GETSPI$_RESERVEDRMS69 = 17064;  
literal GETSPI$_RESERVEDRMS70 = 17065;  
literal GETSPI$_RESERVEDRMS71 = 17066;  
literal GETSPI$_RESERVEDRMS72 = 17067;  
literal GETSPI$_RESERVEDRMS73 = 17068;  
literal GETSPI$_RESERVEDRMS74 = 17069;  
literal GETSPI$_RESERVEDRMS75 = 17070;  
literal GETSPI$_RESERVEDRMS76 = 17071;  
literal GETSPI$_RESERVEDRMS77 = 17072;  
literal GETSPI$_RESERVEDRMS78 = 17073;  
literal GETSPI$_RESERVEDRMS79 = 17074;  
literal GETSPI$_RESERVEDRMS80 = 17075;  
literal GETSPI$_RESERVEDRMS81 = 17076;  
literal GETSPI$_RESERVEDRMS82 = 17077;  
literal GETSPI$_RESERVEDRMS83 = 17078;  
literal GETSPI$_RESERVEDRMS84 = 17079;  
literal GETSPI$_RESERVEDRMS85 = 17080;  
literal GETSPI$_RESERVEDRMS86 = 17081;  
literal GETSPI$_RESERVEDRMS87 = 17082;  
literal GETSPI$_RESERVEDRMS88 = 17083;  
literal GETSPI$_RESERVEDRMS89 = 17084;  
literal GETSPI$_RESERVEDRMS90 = 17085;  
literal GETSPI$_RESERVEDRMS91 = 17086;  
literal GETSPI$_RESERVEDRMS92 = 17087;  
literal GETSPI$_RESERVEDRMS93 = 17088;  
literal GETSPI$_RESERVEDRMS94 = 17089;  
literal GETSPI$_RESERVEDRMS95 = 17090;  
literal GETSPI$_RESERVEDRMS96 = 17091;  
literal GETSPI$_RESERVEDRMS97 = 17092;  
literal GETSPI$_RESERVEDRMS98 = 17093;  
literal GETSPI$_RESERVEDRMS99 = 17094;  
literal GETSPI$_RESERVEDRMS100 = 17095; 
literal GETSPI$_LASTRMS = 17096;        

literal GETSPI$_TABLESIZE = 712;
literal GETSPI$S_getspi$scs_offsets = 56; 
macro GETSPI$q_scs_nodename = 0,0,0,1 %;
literal GETSPI$s_scs_nodename = 8;      
macro GETSPI$l_scs_dgsent = 8,0,32,1 %; 
macro GETSPI$l_scs_dgrcvd = 12,0,32,1 %; 
macro GETSPI$l_scs_dgdiscard = 16,0,32,1 %; 
macro GETSPI$l_scs_msgsent = 20,0,32,1 %; 
macro GETSPI$l_scs_msgrcvd = 24,0,32,1 %; 
macro GETSPI$l_scs_snddats = 28,0,32,1 %; 
macro GETSPI$l_scs_kbytsent = 32,0,32,1 %; 
macro GETSPI$l_scs_reqdats = 36,0,32,1 %; 
macro GETSPI$l_scs_kbytreqd = 40,0,32,1 %; 
macro GETSPI$l_scs_kbytmapd = 44,0,32,1 %; 
macro GETSPI$l_scs_qcr_cnt = 48,0,32,1 %; 
macro GETSPI$l_scs_qbdt_cnt = 52,0,32,1 %; 
literal GETSPI$c_scs_minsize = 56;      
literal GETSPI$S_getspi$disk_offsets = 37; 
macro GETSPI$w_disk_alloclass = 0,0,16,1 %; 
macro GETSPI$l_disk_devname = 2,0,32,1 %; 
macro GETSPI$w_disk_unitnum = 6,0,16,1 %; 
macro GETSPI$b_disk_flags = 8,0,8,1 %;  
macro GETSPI$q_disk_nodename = 9,0,0,1 %;
literal GETSPI$s_disk_nodename = 8;     
macro GETSPI$q_disk_volnamel = 17,0,0,1 %;
literal GETSPI$s_disk_volnamel = 8;     
macro GETSPI$l_disk_volnameh = 25,0,32,1 %; 
macro GETSPI$l_disk_optcnt = 29,0,32,1 %; 
macro GETSPI$l_disk_qcount = 33,0,32,1 %; 
literal GETSPI$c_disk_minsize = 37;     
literal GETSPI$S_getspi$disk_offsets_rev4 = 36; 
macro GETSPI$b_disk_alloclass_rev4 = 0,0,8,1 %; 
macro GETSPI$l_disk_devname_rev4 = 1,0,32,1 %; 
macro GETSPI$w_disk_unitnum_rev4 = 5,0,16,1 %; 
macro GETSPI$b_disk_flags_rev4 = 7,0,8,1 %; 
macro GETSPI$q_disk_nodename_rev4 = 8,0,0,1 %;
literal GETSPI$s_disk_nodename_rev4 = 8; 
macro GETSPI$q_disk_volnamel_rev4 = 16,0,0,1 %;
literal GETSPI$s_disk_volnamel_rev4 = 8; 
macro GETSPI$l_disk_volnameh_rev4 = 24,0,32,1 %; 
macro GETSPI$l_disk_optcnt_rev4 = 28,0,32,1 %; 
macro GETSPI$l_disk_qcount_rev4 = 32,0,32,1 %; 
literal GETSPI$c_disk_minsize_rev4 = 36; 
literal GETSPI$S_getspi$proc_class = 67; 
macro GETSPI$l_proc_ipid = 0,0,32,1 %;  
macro GETSPI$l_proc_uic = 4,0,32,1 %;   
macro GETSPI$w_proc_state = 8,0,16,1 %; 
macro GETSPI$b_proc_pri = 10,0,8,1 %;   
macro GETSPI$o_proc_lname = 11,0,0,1 %;
literal GETSPI$s_proc_lname = 16;       
macro GETSPI$l_proc_gpgcnt = 27,0,32,1 %; 
macro GETSPI$l_proc_ppgcnt = 31,0,32,1 %; 
macro GETSPI$l_proc_sts = 35,0,32,1 %;  
macro GETSPI$l_proc_diocnt = 39,0,32,1 %; 
macro GETSPI$l_proc_pageflts = 43,0,32,1 %; 
macro GETSPI$l_proc_cputim = 47,0,32,1 %; 
macro GETSPI$l_proc_biocnt = 51,0,32,1 %; 
macro GETSPI$l_proc_epid = 55,0,32,1 %; 
macro GETSPI$l_proc_efwm = 59,0,32,1 %; 
macro GETSPI$l_proc_rbstran = 63,0,32,1 %; 
literal GETSPI$c_proc_minsize = 67;
 
literal glock$c_nowait = 1;             
literal glock$c_nospin = 2;             
literal glock$c_nobreak = 4;            
literal glock$c_auto_wait = 8;          
literal glock$c_num_nodes = 64;         
literal glcktbl$c_process = 0;          
literal glcktbl$c_system = 1;           
literal glcktbl$c_private = 2;          
literal glock_hist$S_glock_hist = 12;
macro glock_hist$l_pc = 0,0,32,1 %;
macro glock_hist$q_lock = 4,0,0,0 %;
literal glock_hist$s_lock = 8;
literal glock_hist$c_entries = 10;
literal glock$m_owned = %X'1';
literal glock$m_broken = %X'2';
literal glock$m_waiters = %X'4';
literal glock$m_process = %X'8';
literal glock$m_reserved_4_7 = %X'F0';
literal glock$m_owner_count = %X'FF00';
literal glock$m_node = %X'FF0000';
literal glock$m_node_seq = %X'FFFF000000';
literal glock$m_owner = %X'FFFFFF0000000000';
literal glock$S_GLOCK = 192;
macro glock$l_flink = 0,0,32,0 %;       
macro glock$l_spare1 = 4,0,32,0 %;      
macro glock$w_size = 8,0,16,0 %;        
macro glock$b_type = 10,0,8,0 %;        
macro glock$b_subtype = 11,0,8,0 %;     
macro glock$b_ipl = 12,0,8,0 %;         
macro glock$b_prev_ipl = 13,0,8,0 %;    
macro glock$b_rank = 14,0,8,0 %;        
macro glock$b_spare2 = 15,0,8,0 %;      
macro glock$q_lock = 16,0,0,0 %;
literal glock$s_lock = 8;               
macro glock$b_flags = 16,0,8,0 %;
literal glock$s_flags = 8;              
macro glock$v_owned = 16,0,1,0 %;       
macro glock$v_broken = 16,1,1,0 %;      
macro glock$v_waiters = 16,2,1,0 %;     
macro glock$v_process = 16,3,1,0 %;     
macro glock$v_reserved_4_7 = 16,4,4,0 %;
literal glock$s_reserved_4_7 = 4;       
macro glock$b_owner_count = 16,8,8,0 %;
literal glock$s_owner_count = 8;        
macro glock$b_node = 16,16,8,0 %;
literal glock$s_node = 8;               
macro glock$w_node_seq = 16,24,16,0 %;
literal glock$s_node_seq = 16;          
macro glock$v_owner = 20,8,24,0 %;
literal glock$s_owner = 24;             
macro glock$q_thread_id = 24,0,0,0 %;
literal glock$s_thread_id = 8;          
macro glock$q_waiters = 32,0,0,0 %;
literal glock$s_waiters = 8;            
macro glock$l_timeout = 40,0,32,0 %;    
macro glock$t_name = 44,0,0,0 %;
literal glock$s_name = 16;              
macro glock$l_spare4 = 60,0,32,0 %;     
macro glock$l_spare5 = 64,0,32,0 %;     
macro glock$l_history_idx = 68,0,32,0 %; 
macro glock$r_history = 72,0,0,0 %;
literal glock$s_history = 120;          
literal glock$c_length = 64;            
literal glock$k_length = 64;            
literal glock$c_max_length = 192;       
literal glock$k_max_length = 192;       
literal glock_lock$m_owned = %X'1';
literal glock_lock$m_broken = %X'2';
literal glock_lock$m_waiters = %X'4';
literal glock_lock$m_process = %X'8';
literal glock_lock$m_reserved_4_7 = %X'F0';
literal glock_lock$m_owner_count = %X'FF00';
literal glock_lock$m_node = %X'FF0000';
literal glock_lock$m_node_seq = %X'FFFF000000';
literal glock_lock$m_owner = %X'FFFFFF0000000000';
literal glock_lock$S_glock_lock = 8;
macro glock_lock$q_lock = 0,0,0,0 %;
literal glock_lock$s_lock = 8;          
macro glock_lock$b_flags = 0,0,8,0 %;
literal glock_lock$s_flags = 8;         
macro glock_lock$v_owned = 0,0,1,0 %;   
macro glock_lock$v_broken = 0,1,1,0 %;  
macro glock_lock$v_waiters = 0,2,1,0 %; 
macro glock_lock$v_process = 0,3,1,0 %; 
macro glock_lock$v_reserved_4_7 = 0,4,4,0 %;
literal glock_lock$s_reserved_4_7 = 4;  
macro glock_lock$b_owner_count = 0,8,8,0 %;
literal glock_lock$s_owner_count = 8;   
macro glock_lock$b_node = 0,16,8,0 %;
literal glock_lock$s_node = 8;          
macro glock_lock$w_node_seq = 0,24,16,0 %;
literal glock_lock$s_node_seq = 16;     
macro glock_lock$v_owner = 4,8,24,0 %;
literal glock_lock$s_owner = 24;        
literal glcktbl$m_valid = %X'1';
literal glcktbl$m_private = %X'2';
literal glcktbl$m_space = %X'4';
literal glcktbl$m_reserved_3_7 = %X'F8';
literal glcktbl$S_GLCKTBL = 256;
macro glcktbl$l_flink = 0,0,32,0 %;     
macro glcktbl$w_lock_size = 4,0,16,0 %; 
macro glcktbl$b_flags = 6,0,8,0 %;      
macro glcktbl$v_valid = 6,0,1,0 %;      
macro glcktbl$v_private = 6,1,1,0 %;    
macro glcktbl$v_space = 6,2,1,0 %;      
macro glcktbl$v_reserved_3_7 = 6,3,5,0 %;
literal glcktbl$s_reserved_3_7 = 5;     
macro glcktbl$b_accmode = 7,0,8,0 %;    
macro glcktbl$q_reg_id = 8,0,0,0 %;
literal glcktbl$s_reg_id = 8;           
macro glcktbl$q_reg_phys_size = 16,0,0,0 %;
literal glcktbl$s_reg_phys_size = 8;    
macro glcktbl$q_reg_virt_size = 24,0,0,0 %;
literal glcktbl$s_reg_virt_size = 8;    
macro glcktbl$q_num_locks = 32,0,0,0 %;
literal glcktbl$s_num_locks = 8;        
macro glcktbl$l_free_list = 40,0,32,0 %; 
macro glcktbl$l_used_list = 44,0,32,0 %; 
macro glcktbl$q_nodes = 48,0,0,0 %;
literal glcktbl$s_nodes = 8;            
macro glcktbl$q_glock_handle = 56,0,0,0 %;
literal glcktbl$s_glock_handle = 8;     
macro glcktbl$b_glock = 64,0,0,1 %;
literal glcktbl$s_glock = 64;           
macro glcktbl$w_ref_counts = 128,0,0,0 %;
literal glcktbl$s_ref_counts = 128;     
literal glcktbl$c_length = 256;         
literal glcktbl$k_length = 256;         
literal glock_nodeb$S_glock_nodeb = 32;
macro glock_nodeb$q_lock_handle = 0,0,0,0 %;
literal glock_nodeb$s_lock_handle = 8;  
macro glock_nodeb$b_spares = 8,0,0,1 %;
literal glock_nodeb$s_spares = 24;      
literal glock_nodeb$c_length = 32;      
literal gmdb_glock$S_gmdb_glock = 2576;
macro gmdb_glock$q_nodes = 0,0,0,0 %;
literal gmdb_glock$s_nodes = 8;         
macro gmdb_glock$q_max_nodes = 8,0,0,0 %;
literal gmdb_glock$s_max_nodes = 8;     
macro gmdb_glock$q_flags = 16,0,0,0 %;
literal gmdb_glock$s_flags = 8;         
macro gmdb_glock$q_handle = 24,0,0,0 %;
literal gmdb_glock$s_handle = 8;        
macro gmdb_glock$b_lock = 32,0,0,1 %;
literal gmdb_glock$s_lock = 64;         
macro gmdb_glock$b_lcktbl = 96,0,0,1 %;
literal gmdb_glock$s_lcktbl = 256;      
macro gmdb_glock$q_num_tables = 352,0,0,0 %;
literal gmdb_glock$s_num_tables = 16;   
macro gmdb_glock$l_free_list = 368,0,0,0 %;
literal gmdb_glock$s_free_list = 8;     
macro gmdb_glock$l_used_list = 376,0,0,0 %;
literal gmdb_glock$s_used_list = 8;     
macro gmdb_glock$q_reg_handle = 384,0,0,0 %;
literal gmdb_glock$s_reg_handle = 16;   
macro gmdb_glock$b_prc_lock = 400,0,0,1 %;
literal gmdb_glock$s_prc_lock = 64;     
macro gmdb_glock$b_sys_lock = 464,0,0,1 %;
literal gmdb_glock$s_sys_lock = 64;     
macro gmdb_glock$r_nodeb = 528,0,0,0 %;
literal gmdb_glock$s_nodeb = 2048;      
literal gmdb_glock$c_length = 2576;     
 
literal HW$_VAX = 1;                    
literal HW$_ALPHA = 2;                  
 

literal IAC$M_NOACT = %X'1';
literal IAC$M_WRITABLE = %X'2';
literal IAC$M_SHAREABLE = %X'4';
literal IAC$M_PRIVILEGE = %X'8';
literal IAC$M_MERGE = %X'10';
literal IAC$M_EXPREG = %X'20';
literal IAC$M_P1MERGE = %X'40';
literal IAC$M_PARANOID = %X'80';
literal IAC$M_LASTCLU = %X'100';
literal IAC$M_LIM = %X'200';
literal IAC$M_RETRY = %X'400';
literal IAC$M_NOCMKRNL = %X'800';
literal IAC$M_SEQDEVLOD = %X'1000';
literal IAC$M_XLINKER = %X'2000';
literal IAC$M_KP_RESHDR = %X'4000';
literal IAC$M_IS_RESHDR = %X'8000';
literal IAC$M_NOTSHARED = %X'10000';
literal IAC$M_GBLCLUSTR = %X'20000';
literal IAC$M_SHMIDENT = %X'40000';
literal IAC$M_NOCOPY = %X'80000';
literal IAC$M_P1MERG_P0 = %X'100000';
literal IAC$M_SETVECTOR = %X'200000';
literal IAC$M_PROTECTED = %X'400000';
literal IAC$M_P1DIRECT = %X'800000';
literal IAC$M_DEBUG = %X'1000000';
literal IAC$M_PERMANENT = %X'2000000';
literal IAC$M_NOTRANS = %X'4000000';
literal IAC$M_NO_SHARE_LINKAGE = %X'8000000';
literal IAC$C_LARGEST = 6;              
literal IAC$S_IACDEF = 4;
macro IAC$V_NOACT = 0,0,1,0 %;          
macro IAC$V_WRITABLE = 0,1,1,0 %;       
macro IAC$V_SHAREABLE = 0,2,1,0 %;      
macro IAC$V_PRIVILEGE = 0,3,1,0 %;      
macro IAC$V_MERGE = 0,4,1,0 %;          
macro IAC$V_EXPREG = 0,5,1,0 %;         
macro IAC$V_P1MERGE = 0,6,1,0 %;        
macro IAC$V_PARANOID = 0,7,1,0 %;       
macro IAC$V_LASTCLU = 0,8,1,0 %;        
macro IAC$V_LIM = 0,9,1,0 %;            
macro IAC$V_RETRY = 0,10,1,0 %;         
macro IAC$V_NOCMKRNL = 0,11,1,0 %;      
macro IAC$V_SEQDEVLOD = 0,12,1,0 %;     
macro IAC$V_XLINKER = 0,13,1,0 %;       
macro IAC$V_KP_RESHDR = 0,14,1,0 %;     
macro IAC$V_IS_RESHDR = 0,15,1,0 %;     
macro IAC$V_NOTSHARED = 0,16,1,0 %;     
macro IAC$V_GBLCLUSTR = 0,17,1,0 %;     
macro IAC$V_SHMIDENT = 0,18,1,0 %;      
macro IAC$V_NOCOPY = 0,19,1,0 %;        
macro IAC$V_P1MERG_P0 = 0,20,1,0 %;     
macro IAC$V_SETVECTOR = 0,21,1,0 %;     
macro IAC$V_PROTECTED = 0,22,1,0 %;     
macro IAC$V_P1DIRECT = 0,23,1,0 %;      
macro IAC$V_DEBUG = 0,24,1,0 %;         
macro IAC$V_PERMANENT = 0,25,1,0 %;     
macro IAC$V_NOTRANS = 0,26,1,0 %;       
macro IAC$V_NO_SHARE_LINKAGE = 0,27,1,0 %; 
 

literal IOS_ICC$S_IOS_ICC = 20;
macro IOS_ICC$w_status = 0,0,16,0 %;    
macro IOS_ICC$w_reserved = 2,0,16,0 %;  
macro IOS_ICC$r_parameters = 4,0,0,0 %;
literal IOS_ICC$s_parameters = 16;
macro IOS_ICC$r_connect = 4,0,0,0 %;
literal IOS_ICC$s_connect = 16;
macro IOS_ICC$l_remstat = 4,0,32,0 %;   
macro IOS_ICC$r_receive = 4,0,0,0 %;
literal IOS_ICC$s_receive = 16;
macro IOS_ICC$l_rcv_len = 4,0,32,0 %;   
macro IOS_ICC$l_req_handle = 8,0,32,0 %; 
macro IOS_ICC$l_reply_len = 12,0,32,0 %; 
macro IOS_ICC$r_reply = 4,0,0,0 %;
literal IOS_ICC$s_reply = 16;
macro IOS_ICC$l_replyto_handle = 4,0,32,0 %; 
macro IOS_ICC$r_transceive = 4,0,0,0 %;
literal IOS_ICC$s_transceive = 16;
macro IOS_ICC$l_txrcv_len = 4,0,32,0 %; 
macro IOS_ICC$A_reply_buffer = 8,0,0,1 %;
literal IOS_ICC$s_reply_buffer = 8;     
macro IOS_ICC$l_txreply_len = 16,0,32,0 %; 
literal ICC$C_receive_len = 16;
literal ICC$C_reply_len = 8;
literal ICC$C_transceive_len = 20;

literal ICC$C_MAX_ASSOC_LEN = 31;
literal ICC$C_MAX_CONN_DATA_LEN = 1000;

literal ICC$M_Synch_Mode = %X'1';
literal ICC$S_ICC_CONNECTION_FLAGS = 1;
macro ICC$V_Synch_Mode = 0,0,1,0 %;     

literal ICC$C_EV_CONNECT = 0;
literal ICC$C_EV_DISCONNECT = 1;
literal ICC$C_min_event = 0;
literal ICC$C_max_event = 1;

literal ICC$C_DFLT_ASSOC_HANDLE = 1;

literal ICC$C_DEFAULT_MAXFLOWBUFCNT = 5; 
 

literal IEEE$M_TRAP_ENABLE_INV = %X'2';
literal IEEE$M_TRAP_ENABLE_DZE = %X'4';
literal IEEE$M_TRAP_ENABLE_OVF = %X'8';
literal IEEE$M_TRAP_ENABLE_UNF = %X'10';
literal IEEE$M_TRAP_ENABLE_INE = %X'20';
literal IEEE$M_TRAP_ENABLE_DNOE = %X'40';
literal IEEE$M_MAP_DNZ = %X'2000';
literal IEEE$M_MAP_UMZ = %X'4000';
literal IEEE$M_INHERIT = %X'8000';
literal IEEE$M_STATUS_INV = %X'20000';
literal IEEE$M_STATUS_DZE = %X'40000';
literal IEEE$M_STATUS_OVF = %X'80000';
literal IEEE$M_STATUS_UNF = %X'100000';
literal IEEE$M_STATUS_INE = %X'200000';
literal IEEE$M_STATUS_DNO = %X'400000';
literal IEEE$S_IEEE = 8;
macro IEEE$Q_FLAGS = 0,0,0,0 %;
literal IEEE$S_FLAGS = 8;               
macro IEEE$V_TRAP_ENABLE_INV = 0,1,1,0 %; 
macro IEEE$V_TRAP_ENABLE_DZE = 0,2,1,0 %; 
macro IEEE$V_TRAP_ENABLE_OVF = 0,3,1,0 %; 
macro IEEE$V_TRAP_ENABLE_UNF = 0,4,1,0 %; 
macro IEEE$V_TRAP_ENABLE_INE = 0,5,1,0 %; 
macro IEEE$V_TRAP_ENABLE_DNOE = 0,6,1,0 %; 
macro IEEE$V_MAP_DNZ = 0,13,1,0 %;      
macro IEEE$V_MAP_UMZ = 0,14,1,0 %;      
macro IEEE$V_INHERIT = 0,15,1,0 %;      
macro IEEE$V_STATUS_INV = 0,17,1,0 %;   
macro IEEE$V_STATUS_DZE = 0,18,1,0 %;   
macro IEEE$V_STATUS_OVF = 0,19,1,0 %;   
macro IEEE$V_STATUS_UNF = 0,20,1,0 %;   
macro IEEE$V_STATUS_INE = 0,21,1,0 %;   
macro IEEE$V_STATUS_DNO = 0,22,1,0 %;   
 

literal ILE3$S_ILE3 = 12;
macro ILE3$W_LENGTH = 0,0,16,0 %;       
macro ILE3$W_CODE = 2,0,16,0 %;         
macro ILE3$PS_BUFADDR = 4,0,32,1 %;     
macro ILE3$PS_RETLEN_ADDR = 8,0,32,1 %; 
literal ILE3$K_LENGTH = 12;             
literal ILE3$C_LENGTH = 12;             

literal ILEB_64$S_ILEB_64 = 32;
macro ILEB_64$W_MBO = 0,0,16,0 %;       
macro ILEB_64$W_CODE = 2,0,16,0 %;      
macro ILEB_64$L_MBMO = 4,0,32,1 %;      
macro ILEB_64$Q_LENGTH = 8,0,0,0 %;
literal ILEB_64$S_LENGTH = 8;           
macro ILEB_64$PQ_BUFADDR = 16,0,0,1 %;
literal ILEB_64$S_BUFADDR = 8;          
macro ILEB_64$PQ_RETLEN_ADDR = 24,0,0,1 %;
literal ILEB_64$S_RETLEN_ADDR = 8;      
literal ILEB_64$K_LENGTH = 32;          
literal ILEB_64$C_LENGTH = 32;          

literal ILE2$S_ILE2 = 8;
macro ILE2$W_LENGTH = 0,0,16,0 %;       
macro ILE2$W_CODE = 2,0,16,0 %;         
macro ILE2$PS_BUFADDR = 4,0,32,1 %;     
literal ILE2$K_LENGTH = 8;              
literal ILE2$C_LENGTH = 8;              

literal ILEA_64$S_ILEA_64 = 24;
macro ILEA_64$W_MBO = 0,0,16,0 %;       
macro ILEA_64$W_CODE = 2,0,16,0 %;      
macro ILEA_64$L_MBMO = 4,0,32,1 %;      
macro ILEA_64$Q_LENGTH = 8,0,0,0 %;
literal ILEA_64$S_LENGTH = 8;           
macro ILEA_64$PQ_BUFADDR = 16,0,0,1 %;
literal ILEA_64$S_BUFADDR = 8;          
literal ILEA_64$K_LENGTH = 24;          
literal ILEA_64$C_LENGTH = 24;          
 

literal IMP$M_ASSUME_SECURITY = %X'1';
literal IMP$M_ASSUME_ACCOUNT = %X'2';
literal IMP$M_ASSUME_JOB_WIDE = %X'4';
literal IMP$M_ASSUME_DEFPRIV = %X'8';
literal IMP$M_ASSUME_DEFCLASS = %X'10';
literal IMP$S_IMPFLAGDEF = 4;
macro IMP$V_ASSUME_SECURITY = 0,0,1,0 %;
macro IMP$V_ASSUME_ACCOUNT = 0,1,1,0 %;
macro IMP$V_ASSUME_JOB_WIDE = 0,2,1,0 %;
macro IMP$V_ASSUME_DEFPRIV = 0,3,1,0 %;
macro IMP$V_ASSUME_DEFCLASS = 0,4,1,0 %;
 

literal INDICT$_VERSION = 1;            
literal INDICT$_OBJTYPE = 2;            
literal INDICT$_HANDLE = 3;             
literal INDICT$_COMPONENT_ID = 4;       
literal INDICT$_COMPONENT_TYPE = 5;     
literal INDICT$_COMPONENT_SUBTYPE = 6;  
literal INDICT$_MODULE_ID = 7;          
literal INDICT$_MODULE_TYPE = 8;        
literal INDICT$_MODULE_SUBTYPE = 9;     
literal INDICT$_URGENCY = 10;           
literal INDICT$_PROBABILITY = 11;       
literal INDICT$_TOTALINDICTMENTS = 12;  
literal INDICT$_DESCRIPTION = 13;       
literal INDICT$_REPORTHANDLE = 14;      
literal INDICT$_INITIATOR = 15;         
 

literal INIT$K_DENSITY_800_BPI = 1;     
literal INIT$K_DENSITY_1600_BPI = 2;    
literal INIT$K_DENSITY_6250_BPI = 3;    
literal INIT$K_DENSITY_SINGLE_DISK = 4; 
literal INIT$K_DENSITY_DOUBLE_DISK = 5; 
literal INIT$K_DENSITY_DD_DISK = 6;     
literal INIT$K_DENSITY_HD_DISK = 7;     
literal INIT$K_DENSITY_COMPACT = 8;     
literal INIT$K_DENSITY_ED_DISK = 9;     

literal INIT$K_HOMEBLOCKS_GEOMETRY = 1; 
literal INIT$K_HOMEBLOCKS_FIXED = 2;    
literal INIT$K_HOMEBLOCKS_CONTIGUOUS = 3; 

literal INIT$S_BADBLOCKS_LBN_DEF = 8;
macro INIT$L_BADBLOCKS_LBN = 0,0,32,0 %; 
macro INIT$L_BADBLOCKS_LBN_COUNT = 4,0,32,0 %; 
literal INIT$S_BADBLOCKS_SEC_DEF = 16;
macro INIT$L_BADBLOCKS_SECTOR = 0,0,32,0 %; 
macro INIT$L_BADBLOCKS_SEC_COUNT = 4,0,32,0 %; 
macro INIT$L_BADBLOCKS_TRACK = 8,0,32,0 %; 
macro INIT$L_BADBLOCKS_CYLINDER = 12,0,32,0 %; 
literal INIT$_ACCESSED = 1;             
literal INIT$_BADBLOCKS_LBN = 2;        
literal INIT$_BADBLOCKS_SEC = 3;        
literal INIT$_CLUSTERSIZE = 4;          
literal INIT$_COMPACTION = 5;           
literal INIT$_NO_COMPACTION = 6;        
literal INIT$_DENSITY = 7;              
literal INIT$_DIRECTORIES = 8;          
literal INIT$_ERASE = 9;                
literal INIT$_NO_ERASE = 10;            
literal INIT$_EXTENSION = 11;           
literal INIT$_FPROT = 12;               
literal INIT$_HEADERS = 13;             
literal INIT$_HIGHWATER = 14;           
literal INIT$_NO_HIGHWATER = 15;        
literal INIT$_INDEX_BEGINNING = 16;     
literal INIT$_INDEX_BLOCK = 17;         
literal INIT$_INDEX_END = 18;           
literal INIT$_INDEX_MIDDLE = 19;        
literal INIT$_INTERCHANGE = 20;         
literal INIT$_NO_INTERCHANGE = 21;      
literal INIT$_LABEL_ACCESS = 22;        
literal INIT$_LABEL_VOLO = 23;          
literal INIT$_MAXFILES = 24;            
literal INIT$_OVR_ACCESS = 25;          
literal INIT$_NO_OVR_ACCESS = 26;       
literal INIT$_OVR_EXP = 27;             
literal INIT$_NO_OVR_EXP = 28;          
literal INIT$_OVR_VOLO = 29;            
literal INIT$_NO_OVR_VOLO = 30;         
literal INIT$_OWNER = 31;               
literal INIT$_READCHECK = 32;           
literal INIT$_NO_READCHECK = 33;        
literal INIT$_SIZE = 34;                
literal INIT$_STRUCTURE_LEVEL_1 = 35;   
literal INIT$_STRUCTURE_LEVEL_2 = 36;   
literal INIT$_STRUCTURE_LEVEL_2_SUB_0 = 37; 
literal INIT$_USER_NAME = 38;           
literal INIT$_VERIFIED = 39;            
literal INIT$_NO_VERIFIED = 40;         
literal INIT$_VPROT = 41;               
literal INIT$_WINDOW = 42;              
literal INIT$_WRITECHECK = 43;          
literal INIT$_NO_WRITECHECK = 44;       
literal INIT$_MIN_CLASS = 45;           
literal INIT$_MAX_CLASS = 46;           
literal INIT$_NO_PROTECTION = 47;       
literal INIT$_HOMEBLOCKS = 48;          
literal INIT$_STRUCTURE_LEVEL_5 = 49;   
literal INIT$_SHADOW = 50;              
literal INIT$_HARDLINKS = 51;           
literal INIT$_ACCESS_DATES = 52;        
literal INIT$_SPARE = 53;
literal INIT$_VOLUME_LIMIT = 54;        
literal INIT$_LAST_INIT_ITEM = 55;      
literal INIT$_MAX_ITEM_CODE = 54;       
literal INIT$S_USER_NAME = 12;          
literal INIT$S_DEVICE_NAME = 64;        
 

literal IO$_NOP = 0;                    
literal IO$_UNLOAD = 1;                 
literal IO$_LOADMCODE = 1;              
literal IO$_START_BUS = 1;              
literal IO$_SEEK = 2;                   
literal IO$_SPACEFILE = 2;              
literal IO$_STARTMPROC = 2;             
literal IO$_STOP_BUS = 2;               
literal IO$_RECAL = 3;                  
literal IO$_DUPLEX = 3;                 
literal IO$_STOP = 3;                   
literal IO$_DEF_COMP = 3;               
literal IO$_DRVCLR = 4;                 
literal IO$_INITIALIZE = 4;             
literal IO$_MIMIC = 4;                  
literal IO$_DEF_COMP_LIST = 4;          
literal IO$_RELEASE = 5;                
literal IO$_SETCLOCKP = 5;              
literal IO$_START_ANALYSIS = 5;         
literal IO$_BIND = 5;                   
literal IO$_PATH_VERIFY = 5;            
literal IO$_OFFSET = 6;                 
literal IO$_ERASETAPE = 6;              
literal IO$_STARTDATAP = 6;             
literal IO$_STOP_ANALYSIS = 6;          
literal IO$_UNBIND = 6;                 
literal IO$_RETCENTER = 7;              
literal IO$_QSTOP = 7;                  
literal IO$_START_MONITOR = 7;          
literal IO$_CREDISK = 7;                
literal IO$_LOCAL_DRAIN = 7;            
literal IO$_PACKACK = 8;                
literal IO$_STOP_MONITOR = 8;           
literal IO$_SEARCH = 9;                 
literal IO$_SPACERECORD = 9;            
literal IO$_READRCT = 9;                
literal IO$_REMDISK = 9;                
literal IO$_WRITECHECK = 10;            
literal IO$_EXPORT = 10;                
literal IO$_WRITEPBLK = 11;             
literal IO$_READPBLK = 12;              
literal IO$_WRITEHEAD = 13;             
literal IO$_RDSTATS = 13;               
literal IO$_CRESHAD = 13;               
literal IO$_READHEAD = 14;              
literal IO$_ADDSHAD = 14;               
literal IO$_WRITETRACKD = 15;           
literal IO$_COPYSHAD = 15;              
literal IO$_READTRACKD = 16;            
literal IO$_REMSHAD = 16;               
literal IO$_AVAILABLE = 17;             
literal IO$_SETPRFPATH = 18;            
literal IO$_DISPLAY = 19;               
literal IO$_REMSHADMBR = 20;            
literal IO$_DSE = 21;                   
literal IO$_REREADN = 22;               
literal IO$_DISK_COPY_DATA = 22;        
literal IO$_MOUNTSHAD = 23;             
literal IO$_REREADP = 23;               
literal IO$_WHM = 23;                   
literal IO$_AS_SETCHAR = 23;            
literal IO$_WRITERET = 24;              
literal IO$_WRITECHECKH = 24;           
literal IO$_AS_SENSECHAR = 24;          
literal IO$_ADDSHADMBR = 25;            
literal IO$_READPRESET = 25;            
literal IO$_STARTSPNDL = 25;            
literal IO$_SETCHAR = 26;               
literal IO$_SENSECHAR = 27;             
literal IO$_WRITEMARK = 28;             
literal IO$_COPYMEM = 28;               
literal IO$_PSXSETCHAR = 28;            
literal IO$_WRTTMKR = 29;               
literal IO$_DIAGNOSE = 29;              
literal IO$_SHADMV = 29;                
literal IO$_PSXSENSECHAR = 29;          
literal IO$_FORMAT = 30;                
literal IO$_CLEAN = 30;                 
literal IO$_UPSHAD = 30;                
literal IO$_PHYSICAL = 31;              

literal IO$_WRITELBLK = 32;             
literal IO$_READLBLK = 33;              
literal IO$_REWINDOFF = 34;             
literal IO$_READRCTL = 34;              
literal IO$_SETMODE = 35;               
literal IO$_REWIND = 36;                
literal IO$_SKIPFILE = 37;              
literal IO$_PSXSETMODE = 37;            
literal IO$_SKIPRECORD = 38;            
literal IO$_PSXSENSEMODE = 38;          
literal IO$_SENSEMODE = 39;             
literal IO$_WRITEOF = 40;               
literal IO$_TTY_PORT_BUFIO = 40;        
literal IO$_TTY_PORT = 41;              
literal IO$_FREECAP = 41;               
literal IO$_FLUSH = 42;                 
literal IO$_AS_SETMODE = 42;            
literal IO$_READLCHUNK = 43;            
literal IO$_AS_SENSEMODE = 43;          
literal IO$_WRITELCHUNK = 44;           
literal IO$_LOGICAL = 47;               

literal IO$_WRITEVBLK = 48;             
literal IO$_READVBLK = 49;              
literal IO$_ACCESS = 50;                
literal IO$_PSXWRITEVBLK = 50;          
literal IO$_CREATE = 51;                
literal IO$_DEACCESS = 52;              
literal IO$_PSXREADVBLK = 52;           
literal IO$_DELETE = 53;                
literal IO$_MODIFY = 54;                
literal IO$_NETCONTROL = 54;            
literal IO$_READPROMPT = 55;            
literal IO$_SETCLOCK = 55;              
literal IO$_AUDIO = 55;                 
literal IO$_ACPCONTROL = 56;            
literal IO$_STARTDATA = 56;             
literal IO$_IOCTLV = 56;                
literal IO$_MANAGE = 56;                
literal IO$_MOUNT = 57;                 
literal IO$_TTYREADALL = 58;            
literal IO$_DISMOUNT = 58;              
literal IO$_TTYREADPALL = 59;           
literal IO$_USBATTR = 59;               
literal IO$_CONINTREAD = 60;            
literal IO$_CONINTWRITE = 61;           
literal IO$_READDIR = 62;               
literal IO$_VIRTUAL = 63;               

literal IO$M_FCODE = %X'3F';
literal IO$M_FMODIFIERS = %X'FFC0';
literal IO$M_INHERLOG = %X'800';
literal IO$M_ERASE = %X'400';
literal IO$M_EXFUNC = %X'2000';
literal IO$M_DATACHECK = %X'4000';
literal IO$M_INHRETRY = %X'8000';
literal IO$M_SYNCSTS = %X'10000';
literal IO$M_NOVCACHE = %X'20000';
literal IO$M_BUFOBJ = %X'40000';
literal IO$M_TRUSTED = %X'80000';
literal IO$M_FILE_FLUSH = %X'100000';
literal IO$M_BARRIER = %X'200000';
literal IO$M_RAH_HINT = %X'400000';
literal IO$M_INHSEEK = %X'1000';
literal IO$M_READ_TO_EOF = %X'200000';
literal IO$M_REVERSE = %X'40';
literal IO$M_NOWAIT = %X'80';
literal IO$M_INHEXTGAP = %X'1000';
literal IO$M_RETENSION = %X'2000';
literal IO$M_ALLOWFAST = %X'4000';
literal IO$M_MT3_DENSITY = %X'8000';
literal IO$M_MSCPMODIFS = %X'100';
literal IO$M_SHADOW = %X'40';
literal IO$M_LOCATE = %X'80';
literal IO$M_MSCP_FORMAT = %X'40';
literal IO$M_ALLHOSTS = %X'40';
literal IO$M_DISSOLVE = %X'80';
literal IO$M_NOCLEANUP = %X'100';
literal IO$M_SPINDOWN = %X'40';
literal IO$M_EST_COM_PATH = %X'40';
literal IO$M_LCL_SRC_UNIT = %X'80';
literal IO$M_RTN_COM_PATH = %X'100';
literal IO$M_DEALC_ALL = %X'40';
literal IO$M_DEALC_HRN = %X'80';
literal IO$M_DEALC_ENTLOC = %X'100';
literal IO$M_DECR_AFC = %X'200';
literal IO$M_READ_ALL = %X'400';
literal IO$M_READ_HRN = %X'800';
literal IO$M_BREAK_CONN = %X'1000';
literal IO$M_STEPOVER = %X'40';
literal IO$M_COPYOP = %X'100';
literal IO$M_EXISTS = %X'40';
literal IO$M_CBS = %X'80';
literal IO$M_BOOTING = %X'100';
literal IO$M_REQ_MINICOPY = %X'200';
literal IO$M_OPT_MINICOPY = %X'400';
literal IO$M_NOMINICOPY = %X'800';
literal IO$M_EXPECT_MOUNT_DONE = %X'2000';
literal IO$M_VUEX_FC = %X'200';
literal IO$M_WRITE_SCB = %X'200';
literal IO$M_UPD_SCBLBN = %X'2000';
literal IO$M_FORCEPATH = %X'40';
literal IO$M_PREFERRED_CPU = %X'80';
literal IO$M_SYS_ASSIGNABLE = %X'100';
literal IO$M_COMMOD = %X'40';
literal IO$M_MOVETRACKD = %X'80';
literal IO$M_DIAGNOSTIC = %X'100';
literal IO$M_SKPSECINH = %X'200';
literal IO$M_DELDATA = %X'40';
literal IO$M_NOMRSP = %X'40';
literal IO$M_SWAP = %X'100';
literal IO$M_OPPOSITE = %X'200';
literal IO$M_CLSEREXCP = %X'200';
literal IO$M_CHUNKDIAG = %X'40';
literal IO$M_TBC = %X'400';
literal IO$M_ENAREP = %X'40';
literal IO$M_ACCESS = %X'40';
literal IO$M_CREATE = %X'80';
literal IO$M_DELETE = %X'100';
literal IO$M_MOUNT = %X'200';
literal IO$M_DMOUNT = %X'400';
literal IO$M_REMOUNT = %X'800';
literal IO$M_MOVEFILE = %X'1000';
literal IO$M_RWSHELVED = %X'4000';
literal IO$M_SETDIR = %X'8000';
literal IO$M_BINARY = %X'40';
literal IO$M_PACKED = %X'80';
literal IO$M_NOW = %X'40';
literal IO$M_STREAM = %X'80';
literal IO$M_READERCHECK = %X'100';
literal IO$M_WRITERCHECK = %X'200';
literal IO$M_NORSWAIT = %X'400';
literal IO$M_MB_ROOM_NOTIFY = %X'40';
literal IO$M_READATTN = %X'80';
literal IO$M_WRTATTN = %X'100';
literal IO$M_SETPROT = %X'200';
literal IO$M_READERWAIT = %X'400';
literal IO$M_WRITERWAIT = %X'800';
literal IO$M_NOECHO = %X'40';
literal IO$M_TIMED = %X'80';
literal IO$M_CVTLOW = %X'100';
literal IO$M_NOFILTR = %X'200';
literal IO$M_DSABLMBX = %X'400';
literal IO$M_PURGE = %X'800';
literal IO$M_TRMNOECHO = %X'1000';
literal IO$M_REFRESH = %X'2000';
literal IO$M_ESCAPE = %X'4000';
literal IO$M_EXTEND = %X'8000';
literal IO$M_CANCTRLO = %X'40';
literal IO$M_ENABLMBX = %X'80';
literal IO$M_NOFORMAT = %X'100';
literal IO$M_BREAKTHRU = %X'200';
literal IO$M_NEWLINE = %X'400';
literal IO$M_TYPEAHDCNT = %X'40';
literal IO$M_MAINT = %X'40';
literal IO$M_CTRLYAST = %X'80';
literal IO$M_CTRLCAST = %X'100';
literal IO$M_HANGUP = %X'200';
literal IO$M_OUTBAND = %X'400';
literal IO$M_TT_CONNECT = %X'800';
literal IO$M_TT_DISCON = %X'1000';
literal IO$M_TT_PROCESS = %X'2000';
literal IO$M_BRDCST = %X'4000';
literal IO$M_LOOP = %X'80';
literal IO$M_UNLOOP = %X'100';
literal IO$M_LINE_OFF = %X'200';
literal IO$M_SET_MODEM = %X'400';
literal IO$M_LINE_ON = %X'800';
literal IO$M_LOOP_EXT = %X'1000';
literal IO$M_AUTXOF_ENA = %X'2000';
literal IO$M_AUTXOF_DIS = %X'4000';
literal IO$M_INCLUDE = %X'800';
literal IO$M_TT_ABORT = %X'1000';
literal IO$M_POSIXINIT = %X'40';
literal IO$M_POSIXFLOW = %X'80';
literal IO$M_SET_POSIX = %X'80';
literal IO$M_CLEAR_POSIX = %X'100';
literal IO$M_SET_TERMIOS = %X'200';
literal IO$M_SET_PTC = %X'400';
literal IO$M_CLEAR_PTC = %X'800';
literal IO$M_FLUSH_TAB = %X'1000';
literal IO$M_FLUSH_OUTPUT = %X'2000';
literal IO$M_UPDATE_PTC = %X'4000';
literal IO$M_OUT_XOFF = %X'100';
literal IO$M_OUT_XON = %X'200';
literal IO$M_IN_XOFF = %X'400';
literal IO$M_IN_XON = %X'800';
literal IO$M_O_NONBLOCK = %X'40';
literal IO$M_INTERRUPT = %X'40';
literal IO$M_MULTIPLE = %X'80';
literal IO$M_LOCKBUF = %X'100';
literal IO$M_NOBLOCK = %X'200';
literal IO$M_ABORT = %X'100';
literal IO$M_SYNCH = %X'200';
literal IO$M_RESPONSE = %X'40';
literal IO$M_STARTUP = %X'40';
literal IO$M_SHUTDOWN = %X'80';
literal IO$M_ATTNAST = %X'100';
literal IO$M_CTRL = %X'200';
literal IO$M_SET_MAC = %X'800';
literal IO$M_UPDATE_MAP = %X'1000';
literal IO$M_ROUTE = %X'2000';
literal IO$M_RD_MEM = %X'40';
literal IO$M_RD_MODEM = %X'80';
literal IO$M_RD_COUNT = %X'100';
literal IO$M_CLR_COUNT = %X'400';
literal IO$M_SENSE_MAC = %X'800';
literal IO$M_SHOW_MAP = %X'1000';
literal IO$M_SHOW_ROUTE = %X'2000';
literal IO$K_SRRUNOUT = 0;              
literal IO$K_PTPBSC = 8192;             
literal IO$K_LOOPTEST = 57344;          
literal IO$M_MORE = %X'40';
literal IO$M_QUALIFIED = %X'80';
literal IO$M_REDIRECT = %X'40';
literal IO$M_ACCEPT = %X'80';
literal IO$M_SETEVF = %X'40';
literal IO$M_WORD = %X'40';
literal IO$M_SETFNCT = %X'200';
literal IO$M_DATAPATH = %X'400';
literal IO$M_CYCLE = %X'1000';
literal IO$M_RESET = %X'2000';
literal IO$M_SETCUADR = %X'100';
literal IO$M_SETBSIZE = %X'200';
literal IO$M_SETPOOLSZ = %X'400';
literal IO$M_SETENQCNT = %X'800';
literal IO$M_CLEAR = %X'1000';
literal IO$M_LPBEXT = %X'2000';
literal IO$M_LPBINT = %X'4000';
literal IO$M_READCSR = %X'8000';
literal IO$M_NOCTSWAIT = %X'40';
literal IO$M_SLAVLOOP = %X'80';
literal IO$M_NODSRWAIT = %X'100';
literal IO$M_MAINTLOOP = %X'200';
literal IO$M_LASTBLOCK = %X'400';
literal IO$M_INTCLOCK = %X'1000';
literal IO$M_LT_CONNECT = %X'40';
literal IO$M_LT_DISCON = %X'80';
literal IO$M_LT_READPORT = %X'100';
literal IO$M_LT_MAP_PORT = %X'200';
literal IO$M_LT_RATING = %X'400';
literal IO$M_LT_SOL_INFO = %X'800';
literal IO$M_LT_RCV_INFO = %X'1000';
literal IO$M_LT_SETMODE = %X'2000';
literal IO$M_LT_SENSEMODE = %X'4000';
literal IO$M_LT_QUE_CHG_NOTIF = %X'8000';
literal IO$M_LT_MAP_FILLER = %X'1';
literal IO$M_LT_MAP_NODNAM = %X'2';
literal IO$M_LT_MAP_PORNAM = %X'4';
literal IO$M_LT_MAP_SRVNAM = %X'8';
literal IO$M_LT_MAP_LNKNAM = %X'10';
literal IO$M_LT_MAP_NETADR = %X'20';
literal IO$M_FLUSH = %X'40';
literal IO$M_WRITE_BARRIER = %X'80';
literal IO$M_MKFILL1 = %X'40';
literal IO$M_ALLOWFAST_NEVER = %X'80';
literal IO$M_ALLOWFAST_PER_IO = %X'100';
literal IO$M_ALLOWFAST_ALWAYS = %X'200';
literal IO$M_ADD = %X'40';
literal IO$M_IDSTRING = %X'40';
literal IO$M_SERIALNUM = %X'80';
literal IO$M_QSRVFILL1 = %X'40';
literal IO$M_QSRV_CLIENT_UPDATE = %X'80';
literal IO$S_IODEF = 3;
macro IO$V_FCODE = 0,0,6,0 %;
literal IO$S_FCODE = 6;                 
macro IO$V_FMODIFIERS = 0,6,10,0 %;
literal IO$S_FMODIFIERS = 10;           
macro IO$V_INHERLOG = 0,11,1,0 %;       
macro IO$V_ERASE = 0,10,1,0 %;          
macro IO$V_EXFUNC = 0,13,1,0 %;         
macro IO$V_DATACHECK = 0,14,1,0 %;      
macro IO$V_INHRETRY = 0,15,1,0 %;       
macro IO$V_SYNCSTS = 0,16,1,0 %;        
macro IO$V_NOVCACHE = 0,17,1,0 %;       
macro IO$V_BUFOBJ = 0,18,1,0 %;         
macro IO$V_TRUSTED = 0,19,1,0 %;        
macro IO$V_FILE_FLUSH = 0,20,1,0 %;     
macro IO$V_BARRIER = 0,21,1,0 %;        
macro IO$V_RAH_HINT = 0,22,1,0 %;       
macro IO$V_INHSEEK = 0,12,1,0 %;        

macro IO$V_READ_TO_EOF = 0,21,1,0 %;    
macro IO$V_REVERSE = 0,6,1,0 %;         
macro IO$V_NOWAIT = 0,7,1,0 %;          
macro IO$V_INHEXTGAP = 0,12,1,0 %;      
macro IO$V_RETENSION = 0,13,1,0 %;      
macro IO$V_ALLOWFAST = 0,14,1,0 %;      
macro IO$V_MT3_DENSITY = 0,15,1,0 %;    
macro IO$V_MSCPMODIFS = 0,8,1,0 %;      
macro IO$V_SHADOW = 0,6,1,0 %;          
macro IO$V_LOCATE = 0,7,1,0 %;          
macro IO$V_MSCP_FORMAT = 0,6,1,0 %;     
macro IO$V_ALLHOSTS = 0,6,1,0 %;        
macro IO$V_DISSOLVE = 0,7,1,0 %;        
macro IO$V_NOCLEANUP = 0,8,1,0 %;       
macro IO$V_SPINDOWN = 0,6,1,0 %;        
macro IO$V_EST_COM_PATH = 0,6,1,0 %;    
macro IO$V_LCL_SRC_UNIT = 0,7,1,0 %;    
macro IO$V_RTN_COM_PATH = 0,8,1,0 %;    
macro IO$V_DEALC_ALL = 0,6,1,0 %;       
macro IO$V_DEALC_HRN = 0,7,1,0 %;       
macro IO$V_DEALC_ENTLOC = 0,8,1,0 %;    
macro IO$V_DECR_AFC = 0,9,1,0 %;        
macro IO$V_READ_ALL = 0,10,1,0 %;       
macro IO$V_READ_HRN = 0,11,1,0 %;       
macro IO$V_BREAK_CONN = 0,12,1,0 %;     

macro IO$V_STEPOVER = 0,6,1,0 %;        
macro IO$V_COPYOP = 0,8,1,0 %;          
macro IO$V_EXISTS = 0,6,1,0 %;          
macro IO$V_CBS = 0,7,1,0 %;             
macro IO$V_BOOTING = 0,8,1,0 %;         
macro IO$V_REQ_MINICOPY = 0,9,1,0 %;    
macro IO$V_OPT_MINICOPY = 0,10,1,0 %;   
macro IO$V_NOMINICOPY = 0,11,1,0 %;     
macro IO$V_EXPECT_MOUNT_DONE = 0,13,1,0 %; 
macro IO$V_VUEX_FC = 0,9,1,0 %;         
macro IO$V_WRITE_SCB = 0,9,1,0 %;       
macro IO$V_UPD_SCBLBN = 0,13,1,0 %;     

macro IO$V_FORCEPATH = 0,6,1,0 %;       
macro IO$V_PREFERRED_CPU = 0,7,1,0 %;   
macro IO$V_SYS_ASSIGNABLE = 0,8,1,0 %;  
macro IO$V_COMMOD = 0,6,1,0 %;          
macro IO$V_MOVETRACKD = 0,7,1,0 %;      
macro IO$V_DIAGNOSTIC = 0,8,1,0 %;      
macro IO$V_SKPSECINH = 0,9,1,0 %;       
macro IO$V_DELDATA = 0,6,1,0 %;         
macro IO$V_NOMRSP = 0,6,1,0 %;          
macro IO$V_SWAP = 0,8,1,0 %;            
macro IO$V_OPPOSITE = 0,9,1,0 %;        
macro IO$V_CLSEREXCP = 0,9,1,0 %;       
macro IO$V_CHUNKDIAG = 0,6,1,0 %;       
macro IO$V_TBC = 0,10,1,0 %;            
macro IO$V_ENAREP = 0,6,1,0 %;          

macro IO$V_ACCESS = 0,6,1,0 %;          
macro IO$V_CREATE = 0,7,1,0 %;          
macro IO$V_DELETE = 0,8,1,0 %;          
macro IO$V_MOUNT = 0,9,1,0 %;           
macro IO$V_DMOUNT = 0,10,1,0 %;         
macro IO$V_REMOUNT = 0,11,1,0 %;        
macro IO$V_MOVEFILE = 0,12,1,0 %;       
macro IO$V_RWSHELVED = 0,14,1,0 %;      
macro IO$V_SETDIR = 0,15,1,0 %;         

macro IO$V_BINARY = 0,6,1,0 %;          
macro IO$V_PACKED = 0,7,1,0 %;          

macro IO$V_NOW = 0,6,1,0 %;             
macro IO$V_STREAM = 0,7,1,0 %;          
macro IO$V_READERCHECK = 0,8,1,0 %;     
macro IO$V_WRITERCHECK = 0,9,1,0 %;     
macro IO$V_NORSWAIT = 0,10,1,0 %;       

macro IO$V_MB_ROOM_NOTIFY = 0,6,1,0 %;  
macro IO$V_READATTN = 0,7,1,0 %;        
macro IO$V_WRTATTN = 0,8,1,0 %;         
macro IO$V_SETPROT = 0,9,1,0 %;         
macro IO$V_READERWAIT = 0,10,1,0 %;     
macro IO$V_WRITERWAIT = 0,11,1,0 %;     
macro IO$V_NOECHO = 0,6,1,0 %;          
macro IO$V_TIMED = 0,7,1,0 %;           
macro IO$V_CVTLOW = 0,8,1,0 %;          
macro IO$V_NOFILTR = 0,9,1,0 %;         
macro IO$V_DSABLMBX = 0,10,1,0 %;       
macro IO$V_PURGE = 0,11,1,0 %;          
macro IO$V_TRMNOECHO = 0,12,1,0 %;      
macro IO$V_REFRESH = 0,13,1,0 %;        
macro IO$V_ESCAPE = 0,14,1,0 %;         
macro IO$V_EXTEND = 0,15,1,0 %;         
macro IO$V_CANCTRLO = 0,6,1,0 %;        
macro IO$V_ENABLMBX = 0,7,1,0 %;        
macro IO$V_NOFORMAT = 0,8,1,0 %;        
macro IO$V_BREAKTHRU = 0,9,1,0 %;       
macro IO$V_NEWLINE = 0,10,1,0 %;        
macro IO$V_TYPEAHDCNT = 0,6,1,0 %;      
macro IO$V_MAINT = 0,6,1,0 %;           
macro IO$V_CTRLYAST = 0,7,1,0 %;        
macro IO$V_CTRLCAST = 0,8,1,0 %;        
macro IO$V_HANGUP = 0,9,1,0 %;          
macro IO$V_OUTBAND = 0,10,1,0 %;        
macro IO$V_TT_CONNECT = 0,11,1,0 %;     
macro IO$V_TT_DISCON = 0,12,1,0 %;      
macro IO$V_TT_PROCESS = 0,13,1,0 %;     
macro IO$V_BRDCST = 0,14,1,0 %;         
macro IO$V_LOOP = 0,7,1,0 %;            
macro IO$V_UNLOOP = 0,8,1,0 %;          
macro IO$V_LINE_OFF = 0,9,1,0 %;        
macro IO$V_SET_MODEM = 0,10,1,0 %;      
macro IO$V_LINE_ON = 0,11,1,0 %;        
macro IO$V_LOOP_EXT = 0,12,1,0 %;       
macro IO$V_AUTXOF_ENA = 0,13,1,0 %;     
macro IO$V_AUTXOF_DIS = 0,14,1,0 %;     
macro IO$V_INCLUDE = 0,11,1,0 %;        
macro IO$V_TT_ABORT = 0,12,1,0 %;       
macro IO$V_POSIXINIT = 0,6,1,0 %;       
macro IO$V_POSIXFLOW = 0,7,1,0 %;       
macro IO$V_SET_POSIX = 0,7,1,0 %;       
macro IO$V_CLEAR_POSIX = 0,8,1,0 %;     
macro IO$V_SET_TERMIOS = 0,9,1,0 %;     
macro IO$V_SET_PTC = 0,10,1,0 %;        
macro IO$V_CLEAR_PTC = 0,11,1,0 %;      
macro IO$V_FLUSH_TAB = 0,12,1,0 %;      
macro IO$V_FLUSH_OUTPUT = 0,13,1,0 %;   
macro IO$V_UPDATE_PTC = 0,14,1,0 %;     
macro IO$V_OUT_XOFF = 0,8,1,0 %;        
macro IO$V_OUT_XON = 0,9,1,0 %;         
macro IO$V_IN_XOFF = 0,10,1,0 %;        
macro IO$V_IN_XON = 0,11,1,0 %;         
macro IO$V_O_NONBLOCK = 0,6,1,0 %;      
macro IO$V_INTERRUPT = 0,6,1,0 %;       
macro IO$V_MULTIPLE = 0,7,1,0 %;        
macro IO$V_LOCKBUF = 0,8,1,0 %;         
macro IO$V_NOBLOCK = 0,9,1,0 %;         

macro IO$V_ABORT = 0,8,1,0 %;           
macro IO$V_SYNCH = 0,9,1,0 %;           
macro IO$V_RESPONSE = 0,6,1,0 %;        
macro IO$V_STARTUP = 0,6,1,0 %;         
macro IO$V_SHUTDOWN = 0,7,1,0 %;        
macro IO$V_ATTNAST = 0,8,1,0 %;         
macro IO$V_CTRL = 0,9,1,0 %;            
macro IO$V_SET_MAC = 0,11,1,0 %;        
macro IO$V_UPDATE_MAP = 0,12,1,0 %;     
macro IO$V_ROUTE = 0,13,1,0 %;          
macro IO$V_RD_MEM = 0,6,1,0 %;          
macro IO$V_RD_MODEM = 0,7,1,0 %;        
macro IO$V_RD_COUNT = 0,8,1,0 %;        
macro IO$V_CLR_COUNT = 0,10,1,0 %;      
macro IO$V_SENSE_MAC = 0,11,1,0 %;      
macro IO$V_SHOW_MAP = 0,12,1,0 %;       
macro IO$V_SHOW_ROUTE = 0,13,1,0 %;     
macro IO$V_MORE = 0,6,1,0 %;            
macro IO$V_QUALIFIED = 0,7,1,0 %;       
macro IO$V_REDIRECT = 0,6,1,0 %;        
macro IO$V_ACCEPT = 0,7,1,0 %;          
macro IO$V_SETEVF = 0,6,1,0 %;          
macro IO$V_WORD = 0,6,1,0 %;            
macro IO$V_SETFNCT = 0,9,1,0 %;         
macro IO$V_DATAPATH = 0,10,1,0 %;       
macro IO$V_CYCLE = 0,12,1,0 %;          
macro IO$V_RESET = 0,13,1,0 %;          
macro IO$V_SETCUADR = 0,8,1,0 %;        
macro IO$V_SETBSIZE = 0,9,1,0 %;        
macro IO$V_SETPOOLSZ = 0,10,1,0 %;      
macro IO$V_SETENQCNT = 0,11,1,0 %;      
macro IO$V_CLEAR = 0,12,1,0 %;          
macro IO$V_LPBEXT = 0,13,1,0 %;         
macro IO$V_LPBINT = 0,14,1,0 %;         
macro IO$V_READCSR = 0,15,1,0 %;        
macro IO$V_NOCTSWAIT = 0,6,1,0 %;       
macro IO$V_SLAVLOOP = 0,7,1,0 %;        
macro IO$V_NODSRWAIT = 0,8,1,0 %;       
macro IO$V_MAINTLOOP = 0,9,1,0 %;       
macro IO$V_LASTBLOCK = 0,10,1,0 %;      
macro IO$V_INTCLOCK = 0,12,1,0 %;       
macro IO$V_LT_CONNECT = 0,6,1,0 %;      
macro IO$V_LT_DISCON = 0,7,1,0 %;       
macro IO$V_LT_READPORT = 0,8,1,0 %;     
macro IO$V_LT_MAP_PORT = 0,9,1,0 %;     
macro IO$V_LT_RATING = 0,10,1,0 %;      
macro IO$V_LT_SOL_INFO = 0,11,1,0 %;    
macro IO$V_LT_RCV_INFO = 0,12,1,0 %;    
macro IO$V_LT_SETMODE = 0,13,1,0 %;     
macro IO$V_LT_SENSEMODE = 0,14,1,0 %;   
macro IO$V_LT_QUE_CHG_NOTIF = 0,15,1,0 %; 
macro IO$V_LT_MAP_FILLER = 0,0,1,0 %;   
macro IO$V_LT_MAP_NODNAM = 0,1,1,0 %;   
macro IO$V_LT_MAP_PORNAM = 0,2,1,0 %;   
macro IO$V_LT_MAP_SRVNAM = 0,3,1,0 %;   
macro IO$V_LT_MAP_LNKNAM = 0,4,1,0 %;   
macro IO$V_LT_MAP_NETADR = 0,5,1,0 %;   
macro IO$V_FLUSH = 0,6,1,0 %;           
macro IO$V_WRITE_BARRIER = 0,7,1,0 %;   
macro IO$V_MKFILL1 = 0,6,1,0 %;         
macro IO$V_ALLOWFAST_NEVER = 0,7,1,0 %; 
macro IO$V_ALLOWFAST_PER_IO = 0,8,1,0 %; 
macro IO$V_ALLOWFAST_ALWAYS = 0,9,1,0 %; 
macro IO$V_ADD = 0,6,1,0 %;             
macro IO$V_IDSTRING = 0,6,1,0 %;        
macro IO$V_SERIALNUM = 0,7,1,0 %;       
macro IO$V_QSRVFILL1 = 0,6,1,0 %;       
macro IO$V_QSRV_CLIENT_UPDATE = 0,7,1,0 %; 
 

literal IOSA$K_LENGTH = 32;             
literal IOSA$C_LENGTH = 32;             
literal IOSA$S_IOSADEF = 32;            
literal IOSA$S_IOSA = 32;
macro IOSA$R_IOSB = 0,0,0,0 %;
literal IOSA$S_IOSB = 8;
macro IOSA$W_IOSB_STATUS = 0,0,16,0 %;  
macro IOSA$W_IOSB_BCNT = 2,0,16,0 %;    
macro IOSA$r_l = 4,0,32,0 %;
literal IOSA$s_l = 4;
macro IOSA$L_IOSB_DEV_DEPEND = 4,0,32,0 %; 
macro IOSA$L_IOSB_PID = 4,0,32,0 %;     
macro IOSA$L_IOSB_BCNT = 2,0,32,0 %;    
macro IOSA$W_IOSB_DEV_DEPEND_HIGH = 6,0,16,0 %; 
macro IOSA$R_STATUSQ = 0,0,0,0 %;
literal IOSA$S_STATUSQ = 8;
macro IOSA$L_STATUS = 0,0,32,0 %;       
macro IOSA$L_RESD = 4,0,32,0 %;         
macro IOSA$Q_COUNT_Q = 8,0,0,1 %;
literal IOSA$S_COUNT_Q = 8;             
macro IOSA$IH_COUNT = 8,0,0,1 %;
literal IOSA$S_COUNT = 8;               
macro IOSA$Q_CONTEXT_Q = 16,0,0,1 %;
literal IOSA$S_CONTEXT_Q = 8;           
macro IOSA$PH_CONTEXT_P = 16,0,0,1 %;
literal IOSA$S_CONTEXT_P = 8;           
macro IOSA$IH_CONTEXT = 16,0,0,1 %;
literal IOSA$S_CONTEXT = 8;             
macro IOSA$PH_UPDSEC_NOWRT_VA = 16,0,0,1 %;
literal IOSA$S_UPDSEC_NOWRT_VA = 8;     
macro IOSA$L_RESL = 24,0,0,0 %;
literal IOSA$S_RESL = 8;                
macro IOSA$Q_RESQ = 24,0,0,1 %;
literal IOSA$S_RESQ = 8;                
macro IOSA$Q_CONTEXT_ID = 24,0,0,1 %;
literal IOSA$S_CONTEXT_ID = 8;          

literal FIO$M_EXPEDITE = %X'1';
literal FIO$M_AST_NOFLOAT = %X'2';
literal FIO$M_CTX = %X'4';
literal FIO$S_SETUP_FLAGS = 4;
macro FIO$L_FLAGS_LONGWORD = 0,0,32,1 %;
macro FIO$V_EXPEDITE = 0,0,1,0 %;       
macro FIO$V_AST_NOFLOAT = 0,1,1,0 %;    
macro FIO$V_CTX = 0,2,1,0 %;            
 

literal IOSB$S_IOSB = 8;
%IF 0 %THEN
macro IOSB$W_STATUS = 0,0,16,0 %;       
%FI
macro IOSB$W_BCNT = 2,0,16,0 %;         
macro IOSB$r_l = 4,0,32,0 %;
literal IOSB$s_l = 4;
macro IOSB$L_DEV_DEPEND = 4,0,32,0 %;   
macro IOSB$L_PID = 4,0,32,0 %;          
macro IOSB$L_BCNT = 2,0,32,0 %;         
macro IOSB$W_DEV_DEPEND_HIGH = 6,0,16,0 %; 
macro IOSB$L_GETXXI_STATUS = 0,0,32,0 %; 
macro IOSB$L_REG_STATUS = 0,0,32,0 %;   
literal IOSB$K_LENGTH = 8;              
literal IOSB$C_LENGTH = 8;              
 

literal ISS$_FLAGS = 1;                 
literal ISS$_ARBFLAGS = 2;              
literal ISS$_WORKPRIV = 3;              
literal ISS$_MODE = 4;                  
literal ISS$_WORKCLASS = 5;             
literal ISS$_RIGHTS = 6;                
literal ISS$_ADD_RIGHTS = 7;            
literal ISS$_ADD_AUTHRIGHTS = 8;        
literal ISS$_USERNAME = 9;              
literal ISS$_ACCOUNT = 10;              
literal ISS$_NOAUDIT = 11;              
literal ISS$_AUTHPRIV = 12;             
literal ISS$_PERMPRIV = 13;             
literal ISS$_IMAGE_WORKPRIV = 14;       
literal ISS$_ENABLED = 15;              
literal ISS$_AUTHRIGHTS = 16;           
literal ISS$_MINCLASS = 17;             
literal ISS$_MAXCLASS = 18;             
literal ISS$_UID = 19;                  
literal ISS$_PERSONA_ID = 20;           
literal ISS$_PRINCIPAL = 21;            
literal ISS$_UIC = 22;                  
literal ISS$_SWITCH_EXTENSION = 23;     
literal ISS$_PRIMARY_EXTENSION = 24;    
literal ISS$_EXTENSION_COUNT = 25;      
literal ISS$_EXTENSION_ARRAY = 26;      
literal ISS$_RIGHTS_INDEX = 27;         

literal ISS$_INPUT_DATA = 28;           
literal ISS$_POSIX_UID = 29;            
literal ISS$_POSIX_GID = 30;            
literal ISS$_MIN_ITEM_CODE = 1;
literal ISS$_MAX_ITEM_CODE = 30;

literal ISS$M_FLAG_PERMANENT = %X'1';
literal ISS$M_FLAG_SECAUDIT = %X'2';
literal ISS$S_ISSFLAGSDEF = 4;
macro ISS$V_FLAG_PERMANENT = 0,0,1,0 %;
macro ISS$V_FLAG_SECAUDIT = 0,1,1,0 %;

literal ISS$_COMMON_FLAGS = 1024;       
literal ISS$_COMMON_USERNAME = 1025;    
literal ISS$_COMMON_ACCOUNT = 1026;     
literal ISS$_DOMAIN = 1027;             
literal ISS$_COMMON_PRINCIPAL = 1028;   
literal ISS$_DOI = 1029;
literal ISS$_EXTENSION = 1030;          
literal ISS$_MAKE_TLV = 1031;           
literal ISS$_MIN_COMMON_ITEM_CODE = 1024;
literal ISS$_MAX_COMMON_ITEM_CODE = 1031;

literal ISS$_NT_TOKEN = 8192;           
literal ISS$_NT_SECURITY_SUBJECT = 8193; 
literal ISS$_NT_FLAGS = 8194;
literal ISS$_NT_USER_REFCOUNT = 8195;
literal ISS$_NT_PRINCIPAL = 8196;
literal ISS$_NT_CREDENTIALS = 8197;     
literal ISS$_NT_NT_OWF_PASSWORD = 8198; 
literal ISS$_NT_LM_OWF_PASSWORD = 8199; 
literal ISS$_NT_UNPACK_CRED_SIZE = 8200;
literal ISS$_NT_TOKEN_TOKENID = 8201;
literal ISS$_NT_TOKEN_IMPERSONATELEVEL = 8202;
literal ISS$_NT_TOKEN_AUTHENTICATIONID = 8203;
literal ISS$_NT_TOKEN_USERANDGROUPCOUNT = 8204;
literal ISS$_NT_TOKEN_VARIABLELENGTH = 8205;
literal ISS$_NT_TOKEN_USERANDGROUPS = 8206;
literal ISS$_NT_TOKEN_USERANDGROUPS_SID = 8207;
literal ISS$_NT_TOKEN_PRIMARYGROUP = 8208;
literal ISS$_NT_TOKEN_PRIVILEGES = 8209;
literal ISS$_NT_TOKEN_DEFAULTDACL = 8210;
literal ISS$_NT_TOKEN_UNIXUID = 8211;
literal ISS$_NT_TOKEN_UNIXGID = 8212;
literal ISS$_NT_TOKEN_GIDINFO = 8213;
literal ISS$_NT_TOKEN_GIDINFO_GIDS = 8214;
literal ISS$_NT_TOKEN_UNIXNAME = 8215;
literal ISS$_NT_TOKEN_DOMAINNAME = 8216;
literal ISS$_NT_TOKEN_USERNAME = 8217;
literal ISS$_NT_TOKEN_USERSESSIONKEY = 8218;
literal ISS$_NT_TOKEN_LMSESSIONKEY = 8219;
literal ISS$_NT_TOKEN_VARIABLEPART = 8220;
literal ISS$_NT_TOKEN_GROUP_LIST = 8221;
literal ISS$_NT_TOKEN_PRIVILEGES_LIST = 8222;
literal ISS$_NT_SECURITY_SIGNATURE = 8223;
literal ISS$_NT_SECURITY_SMBUID = 8224;
literal ISS$_NT_SECURITY_PROCESSAUDITID = 8225;
literal ISS$_NT_SECURITY_PROCESSID = 8226;
literal ISS$_NT_SECURITY_LOGONID = 8227;
literal ISS$_NT_SECURITY_LOGONTYPE = 8228;
literal ISS$_NT_SECURITY_SUBJECTFLAGS = 8229;
literal ISS$_NT_SECURITY_CONTEXT_OTHER = 8230;
literal ISS$_MIN_NT_ITEM_CODE = 8192;
literal ISS$_MAX_NT_ITEM_CODE = 8230;

literal ISS$M_ENABLED_PERSONA = %X'1';
literal ISS$M_ENABLED_SUBSYSTEM = %X'2';
literal ISS$M_ENABLED_IMAGE = %X'4';
literal ISS$M_ENABLED_SYSTEM = %X'8';
literal ISS$M_ENABLED_TEMPORARY = %X'10';
literal ISS$S_ISSENABLEDDEF = 4;
macro ISS$V_ENABLED_PERSONA = 0,0,1,0 %;
macro ISS$V_ENABLED_SUBSYSTEM = 0,1,1,0 %;
macro ISS$V_ENABLED_IMAGE = 0,2,1,0 %;
macro ISS$V_ENABLED_SYSTEM = 0,3,1,0 %;
macro ISS$V_ENABLED_TEMPORARY = 0,4,1,0 %;
literal ISS$C_ARB_UNSPECIFIED = -1;
literal ISS$C_ARB_NONE = 0;
literal ISS$C_ARB_CLEAR = 1;
literal ISS$C_ARB_READ_ONLY = 2;
literal ISS$C_ARB_FULL = 3;
literal ISS$C_ARB_MAX_CODE = 3;
literal ISS$C_ARB_MIN_CODE = 0;
literal ISS$C_ID_NATURAL = 1;
literal ISS$C_ID_POSIX_REAL = -2;
literal ISS$C_ID_IMAGE_PERSONA = -2;

literal ISS$M_IMP_FLAGS = %X'7F';
literal ISS$M_ASSUME_NODEREF_OLD = %X'10000';
literal ISS$M_ASSUME_NOREF_NEW = %X'20000';
literal ISS$M_CREATE_DEFPRIV = %X'8';
literal ISS$M_CREATE_DEFCLASS = %X'10';
literal ISS$M_CREATE_AUTHPRIV = %X'20';
literal ISS$M_NOACCESS = %X'100000';
literal ISS$S_ISSSRVCFLG = 4;

macro ISS$V_IMP_FLAGS = 0,0,7,0 %;
literal ISS$S_IMP_FLAGS = 7;            

macro ISS$R_ASSUME_FLAGS = 0,0,32,0 %;
literal ISS$S_ASSUME_FLAGS = 4;
macro ISS$V_ASSUME_NODEREF_OLD = 0,16,1,0 %; 
macro ISS$V_ASSUME_NOREF_NEW = 0,17,1,0 %; 

macro ISS$R_CREATE_FLAGS = 0,0,32,0 %;
literal ISS$S_CREATE_FLAGS = 4;
macro ISS$V_CREATE_DEFPRIV = 0,3,1,0 %; 
macro ISS$V_CREATE_DEFCLASS = 0,4,1,0 %; 
macro ISS$V_CREATE_AUTHPRIV = 0,5,1,0 %; 
macro ISS$V_NOACCESS = 0,20,1,0 %;      

literal ISS$K_NT_VERSION_1 = 1;
 

literal JPI$K_DEFAULT_POLICY = 0;       
literal JPI$K_PSX_FIFO_POLICY = 1;      
literal JPI$K_PSX_RR_POLICY = 2;        
literal JPI$K_ALL_THREADS = -2147483648; 

literal JPI$C_ADRTYPE = 1;              
literal JPI$C_CTLTYPE = 2;              
literal JPI$C_PCBTYPE = 3;              
literal JPI$C_PHDTYPE = 4;              
literal JPI$C_PCBFLDTYPE = 5;           
literal JPI$C_PHDFLDTYPE = 6;           
literal JPI$C_JIBTYPE = 7;              
literal JPI$C_PSBTYPE = 8;              
literal JPI$C_KTBTYPE = 9;              
literal JPI$C_MAXSTRUC = 6;             
literal JPI$C_LISTEND = 0;              
literal JPI$_CHAIN = -1;                
literal JPI$_GETJPI_CONTROL_FLAGS = -2; 
literal JPI$M_NO_TARGET_INSWAP = %X'1';
literal JPI$M_NO_TARGET_AST = %X'2';
literal JPI$M_IGNORE_TARGET_STATUS = %X'4';
literal JPI$M_THREAD = %X'8';
literal JPI$M_NATURAL_PERSONA = %X'10';
literal JPI$M_FILL1 = %X'7FE0';
literal JPI$M_NEED_THREAD_CAP = %X'8000';
literal JPI$S_JPICTLDEF = 4;
macro JPI$V_NO_TARGET_INSWAP = 0,0,1,0 %; 
macro JPI$V_NO_TARGET_AST = 0,1,1,0 %;  
macro JPI$V_IGNORE_TARGET_STATUS = 0,2,1,0 %; 
macro JPI$V_THREAD = 0,3,1,0 %;         
macro JPI$V_NATURAL_PERSONA = 0,4,1,0 %; 
macro JPI$V_FILL1 = 0,5,10,0 %;
literal JPI$S_FILL1 = 10;               
macro JPI$V_NEED_THREAD_CAP = 0,15,1,0 %; 

literal JPI$K_OTHER = 0;                
literal JPI$K_NETWORK = 1;              
literal JPI$K_BATCH = 2;                
literal JPI$K_INTERACTIVE = 3;          
literal JPI$K_DETACHED = 0;             
literal JPI$K_LOCAL = 3;                
literal JPI$K_DIALUP = 4;               
literal JPI$K_REMOTE = 5;               
literal JPI$M_NEW_MAIL_AT_LOGIN = %X'1';
literal JPI$M_PASSWORD_CHANGED = %X'2';
literal JPI$M_PASSWORD_EXPIRED = %X'4';
literal JPI$M_PASSWORD_WARNING = %X'8';
literal JPI$M_PASSWORD2_CHANGED = %X'10';
literal JPI$M_PASSWORD2_EXPIRED = %X'20';
literal JPI$M_PASSWORD2_WARNING = %X'40';
literal JPI$S_JPILGIDEF = 4;
macro JPI$V_NEW_MAIL_AT_LOGIN = 0,0,1,0 %; 
macro JPI$V_PASSWORD_CHANGED = 0,1,1,0 %; 
macro JPI$V_PASSWORD_EXPIRED = 0,2,1,0 %; 
macro JPI$V_PASSWORD_WARNING = 0,3,1,0 %; 
macro JPI$V_PASSWORD2_CHANGED = 0,4,1,0 %; 
macro JPI$V_PASSWORD2_EXPIRED = 0,5,1,0 %; 
macro JPI$V_PASSWORD2_WARNING = 0,6,1,0 %; 
literal JPI$_ASTACT = 768;              
literal JPI$_ASTEN = 769;               
literal JPI$_PRI = 770;                 
literal JPI$_OWNER = 771;               
literal JPI$_UIC = 772;                 
literal JPI$_STS = 773;                 
literal JPI$_STATE = 774;               
literal JPI$_MEM = 775;                 
literal JPI$_GRP = 776;                 
literal JPI$_PRIB = 777;                
literal JPI$_APTCNT = 778;              
literal JPI$_TMBU = 779;                
literal JPI$_GPGCNT = 780;              
literal JPI$_PPGCNT = 781;              
literal JPI$_ASTCNT = 782;              
literal JPI$_BIOCNT = 783;              
literal JPI$_BIOLM = 784;               
literal JPI$_BYTCNT = 785;              
literal JPI$_DIOCNT = 786;              
literal JPI$_DIOLM = 787;               
literal JPI$_FILCNT = 788;              
literal JPI$_TQCNT = 789;               
literal JPI$_EFWM = 790;                
literal JPI$_EFCS = 791;                
literal JPI$_EFCU = 792;                
literal JPI$_PID = 793;                 
literal JPI$_BYTLM = 794;               
literal JPI$_PRCCNT = 795;              
literal JPI$_PRCNAM = 796;              
literal JPI$_TERMINAL = 797;            
literal JPI$_JOBPRCCNT = 798;           
literal JPI$_ENQCNT = 799;              
literal JPI$_ENQLM = 800;               
literal JPI$_SWPFILLOC = 801;           
literal JPI$_MODE = 802;                
literal JPI$_JOBTYPE = 803;             
literal JPI$_PROC_INDEX = 804;          
literal JPI$_MASTER_PID = 805;          
literal JPI$_RIGHTSLIST = 806;          
literal JPI$_CPU_ID = 807;              
literal JPI$_STS2 = 808;                
literal JPI$_NODENAME = 809;            
literal JPI$_NODE_CSID = 810;           
literal JPI$_NODE_VERSION = 811;        
literal JPI$_TT_PHYDEVNAM = 812;        
literal JPI$_TT_ACCPORNAM = 813;        
literal JPI$_PROCESS_RIGHTS = 814;      
literal JPI$_SYSTEM_RIGHTS = 815;       
literal JPI$_IMAGE_RIGHTS = 816;        
literal JPI$_RIGHTS_SIZE = 817;         
literal JPI$_CLASSIFICATION = 818;      
literal JPI$_SCHED_POLICY = 819;        
literal JPI$_RMS_FILEPROT = 820;        
literal JPI$_MULTITHREAD = 821;         
literal JPI$_KT_COUNT = 822;            
literal JPI$_INITIAL_THREAD_PID = 823;  
literal JPI$_THREAD_INDEX = 824;        
literal JPI$_CURRENT_USERCAP_MASK = 825; 
literal JPI$_PERMANENT_USERCAP_MASK = 826; 
literal JPI$_CURRENT_AFFINITY_MASK = 827; 
literal JPI$_PERMANENT_AFFINITY_MASK = 828; 
literal JPI$_PERSONA_ID = 829;          
literal JPI$_PERSONA_AUTHPRIV = 830;    
literal JPI$_PERSONA_PERMPRIV = 831;    
literal JPI$_PERSONA_WORKPRIV = 832;    
literal JPI$_IMAGE_WORKPRIV = 833;      
literal JPI$_PERSONA_RIGHTS_SIZE = 834; 
literal JPI$_PERSONA_RIGHTS = 835;      
literal JPI$_SUBSYSTEM_RIGHTS_SIZE = 836; 
literal JPI$_SUBSYSTEM_RIGHTS = 837;    
literal JPI$_INSTALL_RIGHTS_SIZE = 838; 
literal JPI$_INSTALL_RIGHTS = 839;      
literal JPI$_SYSTEM_RIGHTS_SIZE = 840;  
literal JPI$_CURRENT_CAP_MASK = 841;    
literal JPI$_PERMANENT_CAP_MASK = 842;  
literal JPI$_SCHED_CLASS_NAME = 843;    
literal JPI$_HOME_RAD = 844;            
literal JPI$_POSIX_SID = 845;           
literal JPI$_POSIX_PGID = 846;          
literal JPI$_CREATOR = 847;             
literal JPI$_KRNLTIM = 848;             
literal JPI$_EXECTIM = 849;             
literal JPI$_SUPRTIM = 850;             
literal JPI$_USERTIM = 851;             
literal JPI$_ORG_BYTLM = 852;           
literal JPI$_LASTPCB = 853;             
literal JPI$_CURPRIV = 1024;            
literal JPI$_WSAUTH = 1025;             
literal JPI$_WSQUOTA = 1026;            
literal JPI$_DFWSCNT = 1027;            
literal JPI$_FREP0VA = 1028;            
literal JPI$_FREP1VA = 1029;            
literal JPI$_DFPFC = 1030;              
literal JPI$_CPUTIM = 1031;             
literal JPI$_PRCLM = 1032;              
literal JPI$_ASTLM = 1033;              
literal JPI$_PAGEFLTS = 1034;           
literal JPI$_DIRIO = 1035;              
literal JPI$_BUFIO = 1036;              
literal JPI$_CPULIM = 1037;             
literal JPI$_PGFLQUOTA = 1038;          
literal JPI$_FILLM = 1039;              
literal JPI$_TQLM = 1040;               
literal JPI$_WSSIZE = 1041;             
literal JPI$_AUTHPRIV = 1042;           
literal JPI$_IMAGPRIV = 1043;           
literal JPI$_PAGFILCNT = 1044;          
literal JPI$_FREPTECNT = 1045;          
literal JPI$_WSEXTENT = 1046;           
literal JPI$_WSAUTHEXT = 1047;          
literal JPI$_AUTHPRI = 1048;            
literal JPI$_PAGFILLOC = 1049;          
literal JPI$_IMAGECOUNT = 1050;         
literal JPI$_PHDFLAGS = 1051;           
literal JPI$_VP_CPUTIM = 1052;          
literal JPI$_VP_CONSUMER = 1053;        
literal JPI$_P0_FIRST_FREE_VA_64 = 1054; 
literal JPI$_P1_FIRST_FREE_VA_64 = 1055; 
literal JPI$_P2_FIRST_FREE_VA_64 = 1056; 
literal JPI$_IMAGE_AUTHPRIV = 1057;     
literal JPI$_IMAGE_PERMPRIV = 1058;     
literal JPI$_LASTPHD = 1059;            
literal JPI$_VIRTPEAK = 512;            
literal JPI$_WSPEAK = 513;              
literal JPI$_USERNAME = 514;            
literal JPI$_ACCOUNT = 515;             
literal JPI$_PROCPRIV = 516;            
literal JPI$_VOLUMES = 517;             
literal JPI$_LOGINTIM = 518;            
literal JPI$_IMAGNAME = 519;            
literal JPI$_SITESPEC = 520;            
literal JPI$_MSGMASK = 521;             
literal JPI$_CLINAME = 522;             
literal JPI$_TABLENAME = 523;           
literal JPI$_CREPRC_FLAGS = 524;        
literal JPI$_UAF_FLAGS = 525;           
literal JPI$_MAXDETACH = 526;           
literal JPI$_MAXJOBS = 527;             
literal JPI$_SHRFILLM = 528;            
literal JPI$_FAST_VP_SWITCH = 529;      
literal JPI$_SLOW_VP_SWITCH = 530;      
literal JPI$_LAST_LOGIN_I = 531;        
literal JPI$_LAST_LOGIN_N = 532;        
literal JPI$_LOGIN_FAILURES = 533;      
literal JPI$_LOGIN_FLAGS = 534;         
literal JPI$_RMS_DFMBC = 535;           
literal JPI$_RMS_DFMBFSDK = 536;        
literal JPI$_RMS_DFMBFSMT = 537;        
literal JPI$_RMS_DFMBFSUR = 538;        
literal JPI$_RMS_DFMBFREL = 539;        
literal JPI$_RMS_DFMBFIDX = 540;        
literal JPI$_RMS_PROLOGUE = 541;        
literal JPI$_RMS_EXTEND_SIZE = 542;     
literal JPI$_RMS_DFNBC = 543;           
literal JPI$_RMS_DFLRL = 544;           
literal JPI$_RMS_HEURISTIC = 545;       
literal JPI$_PARSE_STYLE_PERM = 546;    
literal JPI$_PARSE_STYLE_IMAGE = 547;   
literal JPI$_RMSD6 = 548;               
literal JPI$_RMS_QUERY_LOCK = 549;      
literal JPI$_CASE_LOOKUP_PERM = 550;    
literal JPI$_CASE_LOOKUP_IMAGE = 551;   
literal JPI$_UNITS = 552;               
literal JPI$_LASTCTL = 553;             
literal JPI$_EXCVEC = 256;              
literal JPI$_FINALEXC = 257;            
literal JPI$_LASTADR = 258;             

literal JPI$_LASTPCBFLD = 1280;         

literal JPI$_LASTPHDFLD = 1536;         
 

literal JPIF$M_UASTACT = %X'1';
literal JPIF$C_UASTACT = 0;
literal JPIF$M_RMS_DFMBC = %X'2';
literal JPIF$C_RMS_DFMBC = 1;
literal JPIF$M_PARSE_STYLE_PERM = %X'4';
literal JPIF$C_PARSE_STYLE_PERM = 2;
literal JPIF$M_PARSE_STYLE_IMAGE = %X'8';
literal JPIF$C_PARSE_STYLE_IMAGE = 3;
literal JPIF$M_LOGINTIM_L = %X'10';
literal JPIF$C_LOGINTIM_L = 4;
literal JPIF$M_LOGINTIM_H = %X'20';
literal JPIF$C_LOGINTIM_H = 5;
literal JPIF$M_CPUTIM = %X'40';
literal JPIF$C_CPUTIM = 6;
literal JPIF$S_JPIFDEF = 8;
macro JPIF$V_UASTACT = 0,0,1,0 %;       
macro JPIF$V_RMS_DFMBC = 0,1,1,0 %;     
macro JPIF$V_PARSE_STYLE_PERM = 0,2,1,0 %; 
macro JPIF$V_PARSE_STYLE_IMAGE = 0,3,1,0 %; 
macro JPIF$V_LOGINTIM_L = 0,4,1,0 %;    
macro JPIF$V_LOGINTIM_H = 0,5,1,0 %;    
macro JPIF$V_CPUTIM = 0,6,1,0 %;        
 

literal KGB$M_RESOURCE = %X'1';
literal KGB$M_DYNAMIC = %X'2';
literal KGB$M_NOACCESS = %X'4';
literal KGB$M_SUBSYSTEM = %X'8';
literal KGB$M_IMPERSONATE = %X'10';
literal KGB$M_HOLDER_HIDDEN = %X'20';
literal KGB$M_NAME_HIDDEN = %X'40';
literal KGB$K_HOLD_RECORD = 16;         
literal KGB$K_IDENT_RECORD = 48;        
literal KGB$K_LEVEL1 = 257;             
literal KGB$K_MAINT_RECORD = 64;        
literal KGB$K_NUMBER_OF_ATTRIBUTES = 7;
literal KGB$S_KGBDEF = 64;
macro KGB$L_IDENTIFIER = 0,0,32,0 %;    
macro KGB$L_ATTRIBUTES = 4,0,32,0 %;    
macro KGB$V_RESOURCE = 4,0,1,0 %;       
macro KGB$V_DYNAMIC = 4,1,1,0 %;        
macro KGB$V_NOACCESS = 4,2,1,0 %;       
macro KGB$V_SUBSYSTEM = 4,3,1,0 %;      
macro KGB$V_IMPERSONATE = 4,4,1,0 %;    
macro KGB$V_HOLDER_HIDDEN = 4,5,1,0 %;  
macro KGB$V_NAME_HIDDEN = 4,6,1,0 %;    
macro KGB$Q_HOLDER = 8,0,0,0 %;
literal KGB$S_HOLDER = 8;               
macro KGB$T_NAME = 16,0,0,0 %;
literal KGB$S_NAME = 32;                
macro KGB$W_LEVEL = 48,0,16,0 %;        
macro KGB$Q_SYS_ID = 52,0,0,0 %;
literal KGB$S_SYS_ID = 8;               
macro KGB$L_NEXT_ID = 60,0,32,0 %;      

literal KGB$K_BATCH_ID = -2147483647;   
literal KGB$K_DIALUP_ID = -2147483646;  
literal KGB$K_INTERACTIVE_ID = -2147483645; 
literal KGB$K_LOCAL_ID = -2147483644;   
literal KGB$K_NETWORK_ID = -2147483643; 
literal KGB$K_REMOTE_ID = -2147483642;  
literal KGB$K_DECWINDOWS_ID = -2147483641; 
literal KGB$K_BOBUSER_ID = -2147483640; 
literal KGB$K_MRES_USER_ID = -2147483639; 
literal KGB$K_LAST_ENV_ID = -2147483638; 

literal KGB$K_BASE_ENV_ID = -2147483647;
literal KGB$K_NUMBER_OF_ENV_IDS = 9;

literal KGB$K_RESTRICTED_RANGE = -2147418112;

literal KGB$K_SEC_LEVEL_BASE = -2147482648;
literal KGB$K_INT_LEVEL_BASE = -2147482392;
literal KGB$K_SEC_CATEGORY_BASE = -2147482136;
literal KGB$K_INT_CATEGORY_BASE = -2147482072;
literal KGB$K_SEC_ACCESS_CLASS_BASE = -2147482648;
literal KGB$K_SEC_ACCESS_CLASS_END = -2147482008;

literal KGB$K_PROCESS = 0;              
literal KGB$K_SYSTEM = 1;               
literal KGB$K_EXTENDED = 2;             
literal KGB$K_IMAGE = 3;                
literal KGB$K_MAX_SEG = 4;
literal KGB$K_SUBSYSTEM = 3;            
 

literal LA$K_MRMCODE = 1;               
literal LA$K_ADMCODE = 2;               
literal LA$K_DAMCODE = 3;               
literal LA$M_MCVALID = %X'1';
literal LA$M_CLOCKA = %X'8';
literal LA$M_CLOCKB = %X'10';
literal LA$M_AD1 = %X'20';
literal LA$M_AD2 = %X'40';
literal LA$M_DA = %X'80';
literal LA$M_DIO1 = %X'100';
literal LA$M_DIO2 = %X'200';
literal LA$M_DIO3 = %X'400';
literal LA$M_DIO4 = %X'800';
literal LA$M_DIO5 = %X'1000';
literal LA$M_BFROVRN = %X'800000';
literal LA$S_LADEF = 4;
macro LA$V_MCVALID = 0,0,1,0 %;         
macro LA$V_MCTYPE = 0,1,2,0 %;
literal LA$S_MCTYPE = 2;                
macro LA$V_CONFIG = 0,3,10,0 %;
literal LA$S_CONFIG = 10;               
macro LA$V_RATE = 0,13,3,0 %;
literal LA$S_RATE = 3;                  
macro LA$V_PRESET = 0,16,16,0 %;
literal LA$S_PRESET = 16;               
macro LA$V_CLOCKA = 0,3,1,0 %;          
macro LA$V_CLOCKB = 0,4,1,0 %;          
macro LA$V_AD1 = 0,5,1,0 %;             
macro LA$V_AD2 = 0,6,1,0 %;             
macro LA$V_DA = 0,7,1,0 %;              
macro LA$V_DIO1 = 0,8,1,0 %;            
macro LA$V_DIO2 = 0,9,1,0 %;            
macro LA$V_DIO3 = 0,10,1,0 %;           
macro LA$V_DIO4 = 0,11,1,0 %;           
macro LA$V_DIO5 = 0,12,1,0 %;           
macro LA$V_BFROVRN = 0,23,1,0 %;        
 
literal LAT$M_ETYPE = %X'FFFF';
literal LAT$C_ENT_NODE = 1;
literal LAT$C_ENT_SERVICE = 2;
literal LAT$C_ENT_LINK = 3;
literal LAT$C_ENT_PORT = 4;
literal LAT$C_ENT_CONNECTION = 5;
literal LAT$C_ENT_QUEUE_ENTRY = 6;
literal LAT$C_MAXETYPE = 6;
literal LAT$M_ESTATUS = %X'F';
literal LAT$C_ENTS_OLD = 0;             
literal LAT$C_ENTS_NEW = 1;             
literal LAT$C_ENTS_UNK = 2;             
literal LAT$C_ENTS_DEL = 3;             
literal LAT$M_SENSE_NEXT = %X'1';
literal LAT$M_SENSE_FULL = %X'2';
literal LAT$M_READ_HISTORY = %X'4';
literal LAT$S_ENTITY = 3;
macro LAT$V_ETYPE = 0,0,16,0 %;
literal LAT$S_ETYPE = 16;
macro LAT$R_ESTATFLAGS = 2,0,8,0 %;
literal LAT$S_ESTATFLAGS = 1;
macro LAT$V_ESTATUS = 2,0,4,0 %;
literal LAT$S_ESTATUS = 4;
macro LAT$R_EFLAG = 2,0,8,0 %;
literal LAT$S_EFLAG = 1;
macro LAT$B_EFLAGS = 2,0,8,0 %;         
macro LAT$R_EFLAGBITS = 2,0,8,0 %;
literal LAT$S_EFLAGBITS = 1;
macro LAT$V_SENSE_NEXT = 2,0,1,0 %;     
macro LAT$V_SENSE_FULL = 2,1,1,0 %;     
macro LAT$V_READ_HISTORY = 2,2,1,0 %;   
literal LAT$M_ITEMINDEX = %X'3FFF';
literal LAT$M_STRING = %X'4000';
literal LAT$M_CLEAR = %X'8000';
literal LAT$_ITM_STATE = 1;             
literal LAT$_ITM_CIRCUIT_TIMER = 2;     
literal LAT$_ITM_KEEPALIVE_TIMER = 3;   
literal LAT$_ITM_MULTICAST_TIMER = 4;   
literal LAT$_ITM_NODE_LIMIT = 5;        
literal LAT$_ITM_RETRANSMIT_LIMIT = 6;  
literal LAT$_ITM_SERVER_MODE = 7;       
literal LAT$_ITM_OUTGOING_SES_LIMIT = 8; 
literal LAT$_ITM_INCOMING_SES_LIMIT = 9; 
literal LAT$_ITM_CONNECTIONS = 10;      
literal LAT$_ITM_DECNET_ADDRESS = 11;   
literal LAT$_ITM_RATING = 12;           
literal LAT$_ITM_RATING_TYPE = 13;      
literal LAT$_ITM_NODE_TYPE = 14;        
literal LAT$_ITM_NODE_STATUS = 15;      
literal LAT$_ITM_SERVICE_STATUS = 16;   
literal LAT$_ITM_PORT_TYPE = 17;        
literal LAT$_ITM_QUEUED = 18;           
literal LAT$_ITM_DISCONNECT_REASON = 19; 
literal LAT$_ITM_CONNECTED_COUNT = 20;  
literal LAT$_ITM_SERVICE_TYPE = 21;     
literal LAT$_ITM_CTNOD_SSZ = 22;        
literal LAT$_ITM_CTNOD_MSGR = 23;       
literal LAT$_ITM_CTNOD_MSGT = 24;       
literal LAT$_ITM_CTNOD_SLTR = 25;       
literal LAT$_ITM_CTNOD_SLTT = 26;       
literal LAT$_ITM_CTNOD_BYTR = 27;       
literal LAT$_ITM_CTNOD_BYTT = 28;       
literal LAT$_ITM_CTNOD_MNA = 29;        
literal LAT$_ITM_CTNOD_DUP = 30;        
literal LAT$_ITM_CTNOD_MRT = 31;        
literal LAT$_ITM_CTNOD_ILM = 32;        
literal LAT$_ITM_CTNOD_ILS = 33;        
literal LAT$_ITM_CTNOD_SLCA = 34;       
literal LAT$_ITM_CTNOD_SLCR = 35;       
literal LAT$_ITM_CTNOD_TER = 36;        
literal LAT$_ITM_CTNOD_RES = 37;        
literal LAT$_ITM_CTNOD_NTB = 38;        
literal LAT$_ITM_CTNOD_TMO = 39;        
literal LAT$_ITM_CTNOD_DOB = 40;        
literal LAT$_ITM_CTNOD_LSTER = 41;      
literal LAT$_ITM_CTNOD_PROTO = 42;      
literal LAT$_ITM_CTPRO_IVM = 43;        
literal LAT$_ITM_CTPRO_ISM = 44;        
literal LAT$_ITM_CTPRO_IVS = 45;        
literal LAT$_ITM_CTPRO_NIZ = 46;        
literal LAT$_ITM_CTPRO_ICI = 47;        
literal LAT$_ITM_CTPRO_CSI = 48;        
literal LAT$_ITM_CTPRO_NLV = 49;        
literal LAT$_ITM_CTPRO_HALT = 50;       
literal LAT$_ITM_CTPRO_MIZ = 51;        
literal LAT$_ITM_CTPRO_SIZ = 52;        
literal LAT$_ITM_CTPRO_CRED = 53;       
literal LAT$_ITM_CTPRO_RCSM = 54;       
literal LAT$_ITM_CTPRO_RDSM = 55;       
literal LAT$_ITM_CTSRV_SSZ = 56;        
literal LAT$_ITM_CTSRV_MCNA = 57;       
literal LAT$_ITM_CTSRV_MCNC = 58;       
literal LAT$_ITM_CTSRV_SCNA = 59;       
literal LAT$_ITM_CTSRV_SCNR = 60;       
literal LAT$_ITM_CTPRT_SSZ = 61;        
literal LAT$_ITM_CTPRT_RMT = 62;        
literal LAT$_ITM_CTPRT_BYTR = 63;       
literal LAT$_ITM_CTPRT_BYTT = 64;       
literal LAT$_ITM_MAXIMUM_UNITS = 65;    
literal LAT$_ITM_SERVICE_CLASS = 66;    
literal LAT$_ITM_DISPLAY_NUMBER = 67;   
literal LAT$_ITM_CPU_RATING = 68;       
literal LAT$_ITM_SERVICE_RESPONDER = 69; 
literal LAT$_ITM_CTNOD_MCBXMT = 70;     
literal LAT$_ITM_CTNOD_MCBRCV = 71;     
literal LAT$_ITM_CTNOD_MCMXMT = 72;     
literal LAT$_ITM_CTNOD_MCMRCV = 73;     
literal LAT$_ITM_CTNOD_SOLFAIL = 74;    
literal LAT$_ITM_CTNOD_ATLOS = 75;      
literal LAT$_ITM_CTNOD_DATLOS = 76;     
literal LAT$_ITM_CTNOD_NOREJ = 77;      
literal LAT$_ITM_CTNOD_LOSCT = 78;      
literal LAT$_ITM_CTNOD_LOSSAM = 79;     
literal LAT$_ITM_CTNOD_NOSAM = 80;      
literal LAT$_ITM_CTNOD_NOSTS = 81;      
literal LAT$_ITM_CTNOD_NOXMT = 82;      
literal LAT$_ITM_HISTORY = 83;          
literal LAT$_ITM_CTNOD_CTLERR = 84;     
literal LAT$_ITM_CTNOD_CERRCOD = 85;    
literal LAT$_ITM_CTNOD_ISOLA = 86;      
literal LAT$_ITM_CTNOD_ISOLR = 87;      
literal LAT$_ITM_CONNECTED_SESSIONS = 88; 
literal LAT$_ITM_CONNECT_TYPE = 89;     
literal LAT$_ITM_CONNECTION_SESS_LIM = 90; 
literal LAT$_ITM_CTCON_MSGRCV = 91;     
literal LAT$_ITM_CTCON_DUPRCV = 92;     
literal LAT$_ITM_CTCON_MSGXMT = 93;     
literal LAT$_ITM_CTCON_MSGILL = 94;     
literal LAT$_ITM_CTCON_MSGRXT = 95;     
literal LAT$_ITM_CTCON_SLTILL = 96;     
literal LAT$_ITM_CTCON_DUPNOD = 97;     
literal LAT$_ITM_CTCON_SECZER = 98;     
literal LAT$_ITM_CTCON_BYTRCV = 99;     
literal LAT$_ITM_CTCON_BYTXMT = 100;    
literal LAT$_ITM_CTCON_SLTRCV = 101;    
literal LAT$_ITM_CTCON_SLTXMT = 102;    
literal LAT$_ITM_CTCON_SOLACP = 103;    
literal LAT$_ITM_CTCON_SOLREJ = 104;    
literal LAT$_ITM_CTCON_XERR = 105;      
literal LAT$_ITM_CTCON_XERRCOD = 106;   
literal LAT$_ITM_CTCON_ATTLOS = 107;    
literal LAT$_ITM_CTCON_DATLOS = 108;    
literal LAT$_ITM_CTCON_CANTREJ = 109;   
literal LAT$_ITM_SESSION_NUMBER = 110;  
literal LAT$_ITM_FORWARD_SESSION_LIMIT = 111; 
literal LAT$_ITM_EXTRA_DATALINK_BUFFERS = 112; 
literal LAT$_ITM_TRANSMIT_BUFFERS_INUSE = 113; 
literal LAT$_ITM_QUE_POS_OBSOLETE = 114; 

literal LAT$_ITM_QUEUE_DEPTH_LIMIT = 115; 
literal LAT$_ITM_DEVICE_SEED = 116;     
literal LAT$_ITM_NODE_QUEUE_POSITION = 117; 
literal LAT$_ITM_SERVICE_QUEUE_POSITION = 118; 
literal LAT$_ITM_DIALUP = 119;          
literal LAT$_ITM_AUTOPROMPT = 120;      
literal LAT$_ITM_RATING_LOAD_OBSOLETE = 121; 
literal LAT$_ITM_CTPRT_LCL = 122;       
literal LAT$_ITM_CTPRT_SLCA = 123;      
literal LAT$_ITM_CTPRT_SLCR = 124;      
literal LAT$_ITM_CTPRT_ISOLA = 125;     
literal LAT$_ITM_CTPRT_ISOLR = 126;     

literal LAT$_ITM_PASSWORD = 127;        
literal LAT$_ITM_HI_CIRCUITS = 128;     
literal LAT$_ITM_CUR_CIRCUITS = 129;    
literal LAT$_ITM_MAX_CIRCUITS = 130;    
literal LAT$_ITM_HI_SESSIONS = 131;     
literal LAT$_ITM_CUR_SESSIONS = 132;    
literal LAT$_ITM_MAX_SESSIONS = 133;    
literal LAT$_ITM_HI_OUT_QUEUE = 134;    
literal LAT$_ITM_CUR_OUT_QUEUE = 135;   
literal LAT$_ITM_MAX_OUT_QUEUE = 136;   
literal LAT$_ITM_HI_IN_QUEUE = 137;     
literal LAT$_ITM_CUR_IN_QUEUE = 138;    
literal LAT$_ITM_MAX_IN_QUEUE = 139;    
literal LAT$_ITM_HI_SAMS_QUEUED = 140;  
literal LAT$_ITM_CUR_SAMS_QUEUED = 141; 
literal LAT$_ITM_MAX_SAMS_QUEUED = 142; 
literal LAT$_ITM_HI_SOL_QUEUED = 143;   
literal LAT$_ITM_CUR_SOL_QUEUED = 144;  
literal LAT$_ITM_MAX_SOL_QUEUED = 145;  
literal LAT$_ITM_HI_AVAIL_SVCS = 146;   
literal LAT$_ITM_CUR_AVAIL_SVCS = 147;  
literal LAT$_ITM_MAX_AVAIL_SVCS = 148;  
literal LAT$_ITM_HI_REACH_NODES = 149;  
literal LAT$_ITM_CUR_REACH_NODES = 150; 
literal LAT$_ITM_MAX_REACH_NODES = 151; 
literal LAT$_ITM_HI_LCL_SVCS = 152;     
literal LAT$_ITM_CUR_LCL_SVCS = 153;    
literal LAT$_ITM_MAX_LCL_SVCS = 154;    
literal LAT$_ITM_DISCARDED_NODES = 155; 
literal LAT$_ITM_MAX_DL_BUFFERS = 156;  
literal LAT$_ITM_PRODUCT_TYPE = 157;    
literal LAT$_ITM_REM_PRODUCT_VERSION = 158; 
literal LAT$_ITM_CTPRT_FRAMERR = 159;   
literal LAT$_ITM_CTPRT_PARERR = 160;    
literal LAT$_ITM_CTPRT_OVERRUN = 161;   
literal LAT$_ITM_CTPRO_INVCLASS = 162;  
literal LAT$_ITM_CTPRO_EXCSTART = 163;  
literal LAT$_ITM_CTNOD_XSTR = 164;      
literal LAT$_ITM_PASSWORD_FAILURES = 165; 
literal LAT$_ITM_CTPRO_ILLSAM = 166;    
literal LAT$_ITM_TYPEAHEAD = 167;       
literal LAT$_ITM_CTLAT_RMSG = 168;      
literal LAT$_ITM_CTLAT_RBYT = 169;      
literal LAT$_ITM_CTLAT_XMSG = 170;      
literal LAT$_ITM_CTLAT_XBYT = 171;      
literal LAT$_ITM_CTLAT_MUL_RMSG = 172;  
literal LAT$_ITM_CTLAT_MUL_RBYT = 173;  
literal LAT$_ITM_CTLAT_MUL_XMSG = 174;  
literal LAT$_ITM_CTLAT_MUL_XBYT = 175;  
literal LAT$_ITM_PATH_STATE = 176;      
literal LAT$_ITM_LARGE_BUFFERS = 177;   
literal LAT$_ITM_ANNOUNCEMENTS = 178;   
literal LAT$_ITM_PORT_STATE = 179;      
literal LAT$_ITM_CTPRO_BADUID = 180;    
literal LAT$C_ITM_MAXSCALAR = 180;
literal LAT$_ITM_IDENTIFICATION = 16640; 
literal LAT$_ITM_SERVICE_NAME = 16641;  
literal LAT$_ITM_NODE_NAME = 16642;     
literal LAT$_ITM_PORT_NAME = 16643;     
literal LAT$_ITM_CONNECTED_SERVICE_NAME = 16644; 
literal LAT$_ITM_CONNECTED_NODE_NAME = 16645; 
literal LAT$_ITM_CONNECTED_PORT_NAME = 16646; 
literal LAT$_ITM_TARGET_SERVICE_NAME = 16647; 
literal LAT$_ITM_TARGET_NODE_NAME = 16648; 
literal LAT$_ITM_TARGET_PORT_NAME = 16649; 
literal LAT$_ITM_SERVICE_GROUPS = 16650; 
literal LAT$_ITM_USER_GROUPS = 16651;   
literal LAT$_ITM_LINK_NAME = 16652;     
literal LAT$_ITM_SERVICE_PASSWORD = 16653; 
literal LAT$_ITM_DEVICE_NAME = 16654;   
literal LAT$_ITM_DATALINK_ADDRESS = 16655; 
literal LAT$_ITM_PROTOCOL_VERSION = 16656; 
literal LAT$_ITM_SVC_NODE_BLOCK = 16657; 
literal LAT$_ITM_NODE_SVC_BLOCK = 16658; 
literal LAT$_ITM_DED_PORT_BLOCK = 16659; 
literal LAT$_ITM_COUNTERS = 16660;      
literal LAT$_ITM_PROTOCOL_ERRORS = 16661; 
literal LAT$_ITM_CONNECTED_LINK_NAME = 16662; 
literal LAT$_ITM_HISTORY_ENTRY = 16663; 
literal LAT$_ITM_CONNECT_ID = 16664;    
literal LAT$_ITM_SESSION_BLOCK = 16665; 
literal LAT$_ITM_QUEUED_ENTRY_ID = 16666; 
literal LAT$_ITM_LIM_PORT_BLOCK = 16667; 
literal LAT$_ITM_SERVICE_CLASSES = 16668; 
literal LAT$_ITM_LAT_DEV_CTR_BLOCK = 16669; 
literal LAT$_ITM_PATH_BLOCK = 16670;    
literal LAT$C_ITM_MAXSTRING = 16670;
literal LAT$S_ITEM_ENTRY = 6;
macro LAT$R_ITM_CODE = 0,0,16,0 %;
literal LAT$S_ITM_CODE = 2;
macro LAT$W_ITEMCODE = 0,0,16,0 %;
macro LAT$R_ITM_BITS = 0,0,16,0 %;
macro LAT$V_ITEMINDEX = 0,0,14,0 %;
literal LAT$S_ITEMINDEX = 14;
macro LAT$V_STRING = 0,14,1,0 %;
macro LAT$V_CLEAR = 0,15,1,0 %;
macro LAT$B_ITEM_BCNT = 2,0,8,0 %;
macro LAT$T_ITEM_STRING_VALUE = 3,0,8,0 %;
literal LAT$S_ITEM_STRING_VALUE = 1;
macro LAT$L_ITEM_SCALAR_VALUE = 2,0,32,0 %;
literal LAT$C_DISABLED = 0;
literal LAT$C_ENABLED = 1;
literal LAT$C_OFF = 0;
literal LAT$C_ON = 1;
literal LAT$C_SHUT = 2;
literal LAT$M_FLUSH_DATA = 1;
literal LAT$C_PT_FORWARD = 0;           
literal LAT$C_PT_INTERACTIVE = 1;       
literal LAT$C_PT_APPLICATION = 2;       
literal LAT$C_PT_DEDICATED = 3;         
literal LAT$C_PT_LIMITED = 4;           
literal LAT$C_PT_STATE_INACTIVE = 0;    
literal LAT$C_PT_STATE_CONNECTING = 1;  
literal LAT$C_PT_STATE_ACTIVE = 2;      
literal LAT$C_PT_STATE_DISCONNECTING = 3; 
literal LAT$C_NT_LOCAL = 0;             
literal LAT$C_NT_REMOTE = 1;            
literal LAT$C_ST_GENERAL = 0;           
literal LAT$C_ST_APPLICATION = 1;       
literal LAT$C_ST_LIMITED = 2;           
literal LAT$C_DYNAMIC = 0;              
literal LAT$C_STATIC = 1;               
literal LAT$C_PS_WORKING = 0;
literal LAT$C_PS_SUSPECT = 1;
literal LAT$C_PS_FAILED = 2;
literal LAT$C_CN_UNKNOWN = 0;           
literal LAT$C_CN_INCOMING = 1;          
literal LAT$C_CN_OUTGOING = 2;          
literal LAT$C_UNREACHABLE = 0;          
literal LAT$C_UNKNOWN = 1;              
literal LAT$C_REACHABLE = 2;            
literal LAT$C_UNAVAILABLE = 0;          
literal LAT$C_AVAILABLE = 1;            
literal LAT$C_SERVCLASS_INTERACTIVE = 1; 
literal LAT$C_SERVCLASS_TESTSERVICE = 2; 
literal LAT$C_SERVCLASS_XTRANSPORT = 3; 
literal LAT$C_SERVCLASS_FONT = 4;       
literal LAT$S_LATSETBITS = 1;
macro LAT$T_FILLER = 0,0,0,0 %;
macro LAT$T_FILLER2 = 0,0,8,0 %;
literal LAT$C_RATING_VECTOR_LENGTH = 56; 
literal LAT$S_RATING_VEC = 56;
macro LAT$A_CONTROL_INIT_RTN = 0,0,32,0 %; 
macro LAT$A_UNIT_INIT_RTN = 4,0,32,0 %; 
macro LAT$A_RATING_INIT_RTN = 8,0,32,0 %; 
macro LAT$A_TIMER_RTN = 12,0,32,0 %;    
macro LAT$A_CALC_RATING_RTN = 16,0,32,0 %; 
macro LAT$A_STOP_RTN = 20,0,32,0 %;     
macro LAT$A_SPARE1_RTN = 24,0,32,0 %;   
macro LAT$A_SPARE2_RTN = 28,0,32,0 %;   
macro LAT$A_SPARE3_RTN = 32,0,32,0 %;   
macro LAT$A_SPARE4_RTN = 36,0,32,0 %;   
macro LAT$A_SPARE5_RTN = 40,0,32,0 %;   
macro LAT$A_SPARE6_RTN = 44,0,32,0 %;   
macro LAT$A_SPARE7_RTN = 48,0,32,0 %;   
macro LAT$A_SPARE8_RTN = 52,0,32,0 %;   
 

literal LCK$M_VALBLK = %X'1';
literal LCK$M_CONVERT = %X'2';
literal LCK$M_NOQUEUE = %X'4';
literal LCK$M_SYNCSTS = %X'8';
literal LCK$M_SYSTEM = %X'10';
literal LCK$M_NOQUOTA = %X'20';
literal LCK$M_CVTSYS = %X'40';
literal LCK$M_RECOVER = %X'80';
literal LCK$M_PROTECT = %X'100';
literal LCK$M_NODLCKWT = %X'200';
literal LCK$M_NODLCKBLK = %X'400';
literal LCK$M_EXPEDITE = %X'800';
literal LCK$M_QUECVT = %X'1000';
literal LCK$M_BYPASS = %X'2000';
literal LCK$M_NOIOLOCK8 = %X'4000';
literal LCK$M_NOFORK = %X'8000';
literal LCK$M_DEQALL = %X'1';
literal LCK$M_CANCEL = %X'2';
literal LCK$M_INVVALBLK = %X'4';
literal LCK$M_RESV_NOIOLOCK8 = %X'4000';
literal LCK$M_RESV_NOFORK = %X'8000';
literal LCK$K_NLMODE = 0;               
literal LCK$K_CRMODE = 1;               
literal LCK$K_CWMODE = 2;               
literal LCK$K_PRMODE = 3;               
literal LCK$K_PWMODE = 4;               
literal LCK$K_EXMODE = 5;               
literal LCK$S_LCKDEF = 2;
macro LCK$V_VALBLK = 0,0,1,0 %;         
macro LCK$V_CONVERT = 0,1,1,0 %;        
macro LCK$V_NOQUEUE = 0,2,1,0 %;        
macro LCK$V_SYNCSTS = 0,3,1,0 %;        
macro LCK$V_SYSTEM = 0,4,1,0 %;         
macro LCK$V_NOQUOTA = 0,5,1,0 %;        
macro LCK$V_CVTSYS = 0,6,1,0 %;         
macro LCK$V_RECOVER = 0,7,1,0 %;        
macro LCK$V_PROTECT = 0,8,1,0 %;        
macro LCK$V_NODLCKWT = 0,9,1,0 %;       
macro LCK$V_NODLCKBLK = 0,10,1,0 %;     
macro LCK$V_EXPEDITE = 0,11,1,0 %;      
macro LCK$V_QUECVT = 0,12,1,0 %;        
macro LCK$V_BYPASS = 0,13,1,0 %;        
macro LCK$V_NOIOLOCK8 = 0,14,1,0 %;     
macro LCK$V_NOFORK = 0,15,1,0 %;        

macro LCK$V_DEQALL = 0,0,1,0 %;         
macro LCK$V_CANCEL = 0,1,1,0 %;         
macro LCK$V_INVVALBLK = 0,2,1,0 %;      
 

literal LIB$M_FIL_NOWILD = 1;           
literal LIB$M_FIL_MULTIPLE = 2;         
literal LIB$M_FIL_CUR_VER = 1;          
literal LIB$M_FIL_INH_SECUR = 2;        
literal LIB$M_FIL_LONG_NAMES = 4;       
literal LIB$M_FIL_IGNORE_ACCESS = 8;    
 

literal LIB$M_FIS_PARANOID = %X'1';
literal LIB$M_FIS_NOTRANSLOG = %X'8';
literal LIB$M_FIS_MIXEDCASE = %X'10';
literal LIB$S_LIB$FIS_FLAGS = 1;
macro LIB$V_FIS_PARANOID = 0,0,1,0 %;   
macro LIB$V_FIS_NOTRANSLOG = 0,3,1,0 %; 
macro LIB$V_FIS_MIXEDCASE = 0,4,1,0 %;  
 

literal LIB$K_VAX_F = 0;                
literal LIB$K_VAX_D = 1;                
literal LIB$K_VAX_G = 2;                
literal LIB$K_VAX_H = 3;                
literal LIB$K_IEEE_S = 4;               
literal LIB$K_IEEE_T = 5;               
literal LIB$K_WAKE = 0;                 
literal LIB$K_NOWAKE = 1;               
 

literal LOGTYP$C_SS_ENTRY = 0;          
literal LOGTYP$C_SS_EXIT = 1;           
literal LOGTYP$C_PS_ENTRY = 2;          
literal LOGTYP$C_PS_EXIT = 3;           
literal LOGTYP$C_STARTUP = 4;           
literal LOGTYP$C_STOP = 5;              
literal LOGTYP$C_UNLOAD = 6;            
literal LOGTYP$C_EOBUF = -1;
 

literal LKI$K_LENGTH = 24;              
literal LKI$C_LENGTH = 24;              
literal LKI$K_BR_LENGTH = 56;           
literal LKI$C_BR_LENGTH = 56;           
literal LKI$S_LKIDEF = 56;
macro LKI$L_MSTLKID = 0,0,32,0 %;       
macro LKI$L_LOCKID = 0,0,32,0 %;        
macro LKI$L_PID = 4,0,32,0 %;           
macro LKI$L_MSTCSID = 8,0,32,0 %;       
macro LKI$L_SYSID = 8,0,32,0 %;         
macro LKI$B_RQMODE = 12,0,8,0 %;        
macro LKI$B_GRMODE = 13,0,8,0 %;        
macro LKI$B_QUEUE = 14,0,8,1 %;         
macro LKI$L_LKID = 16,0,32,0 %;         
macro LKI$L_REMLKID = 16,0,32,0 %;      
macro LKI$L_CSID = 20,0,32,0 %;         
macro LKI$L_REMSYSID = 20,0,32,0 %;     
macro LKI$Q_RQSTART = 24,0,0,0 %;
literal LKI$S_RQSTART = 8;              
macro LKI$Q_RQLENGTH = 32,0,0,0 %;
literal LKI$S_RQLENGTH = 8;             
macro LKI$Q_GRSTART = 40,0,0,0 %;
literal LKI$S_GRSTART = 8;              
macro LKI$Q_GRLENGTH = 48,0,0,0 %;
literal LKI$S_GRLENGTH = 8;             
literal LKI$M_SYSNAM = %X'80000000';
literal LKI$S_NAMSPACE = 4;
macro LKI$W_GROUP = 0,0,16,0 %;         
macro LKI$B_RMOD = 2,0,8,0 %;           
macro LKI$B_STATUS = 3,0,8,0 %;         
macro LKI$R_STATUS_BITS = 0,0,32,0 %;
macro LKI$V_SYSNAM = 0,31,1,0 %;        
literal LKI$S_STATEF = 3;
macro LKI$B_STATE_RQMODE = 0,0,8,0 %;   
macro LKI$B_STATE_GRMODE = 1,0,8,0 %;   
macro LKI$B_STATE_QUEUE = 2,0,8,1 %;    
literal LKIUSR$K_LENGTH = 20;
literal LKIUSR$C_LENGTH = 20;
literal LKIUSR$K_BLOCKER_START = 20;    
literal LKIUSR$S_LKIUSRDEF = 20;
macro LKIUSR$Q_START = 0,0,0,0 %;
literal LKIUSR$S_START = 8;             
macro LKIUSR$Q_LENGTH = 8,0,0,0 %;
literal LKIUSR$S_LENGTH = 8;            
macro LKIUSR$B_RQMODE = 16,0,8,0 %;     
macro LKIUSR$B_IGNORE_OWN = 17,0,8,0 %; 
literal LKI$_RNG_S_RNGDEF = 32;
macro LKI$_RNG_Q_RQSTART = 0,0,0,0 %;
literal LKI$_RNG_S_RQSTART = 8;         
macro LKI$_RNG_Q_RQLENGTH = 8,0,0,0 %;
literal LKI$_RNG_S_RQLENGTH = 8;        
macro LKI$_RNG_Q_GRSTART = 16,0,0,0 %;
literal LKI$_RNG_S_GRSTART = 8;         
macro LKI$_RNG_Q_GRLENGTH = 24,0,0,0 %;
literal LKI$_RNG_S_GRLENGTH = 8;        
literal LKI$C_GRANTED = 1;              
literal LKI$C_CONVERT = 0;              
literal LKI$C_WAITING = -1;             
literal LKI$C_RETRY = -2;               
literal LKI$C_SCSWAIT = -3;             
literal LKI$C_RSPNOTQED = -4;           
literal LKI$C_RSPQUEUED = -5;           
literal LKI$C_RSPGRANTD = -6;           
literal LKI$C_RSPDOLOCL = -7;           
literal LKI$C_RSPRESEND = -8;           

literal LKI$C_LKBTYPE = 1;              
literal LKI$C_RSBTYPE = 2;              
literal LKI$C_LISTEND = 0;              
literal LKI$_PID = 256;                 
literal LKI$_STATE = 257;               
literal LKI$_PARENT = 258;              
literal LKI$_LCKREFCNT = 259;           
literal LKI$_LOCKID = 260;              
literal LKI$_REMLKID = 261;             
literal LKI$_MSTLKID = 262;             
literal LKI$_LKID = 263;                
literal LKI$_CSID = 264;                
literal LKI$_BRL = 265;                 
literal LKI$_RANGE = 266;               
literal LKI$_LASTLKB = 267;             
literal LKI$_NAMSPACE = 512;            
literal LKI$_RESNAM = 513;              
literal LKI$_RSBREFCNT = 514;           
literal LKI$_VALBLK = 515;              
literal LKI$_SYSTEM = 516;              
literal LKI$_LCKCOUNT = 517;            
literal LKI$_BLOCKEDBY = 518;           
literal LKI$_BLOCKING = 519;            
literal LKI$_LOCKS = 520;               
literal LKI$_CVTCOUNT = 521;            
literal LKI$_WAITCOUNT = 522;           
literal LKI$_GRANTCOUNT = 523;          
literal LKI$_MSTCSID = 524;             
literal LKI$_VALBLKST = 525;            
literal LKI$_BLOCKEDBY_BR = 526;        
literal LKI$_BLOCKING_BR = 527;         
literal LKI$_LOCKS_BR = 528;            
literal LKI$_BLOCKER_BR = 529;          

literal LKI$_LASTRSB = 530;             
literal LKISND$K_HDRLEN = 16;           
literal LKISND$C_HDRLEN = 16;           
literal LKISND$S_LKISNDDEF = 16;

macro LKISND$W_RETSIZE = 0,0,16,0 %;    
macro LKISND$W_STATUS = 2,0,16,0 %;     
macro LKISND$W_FLAGS = 4,0,16,0 %;      
macro LKISND$W_SEQNUM = 6,0,16,0 %;     
macro LKISND$W_SIZE = 8,0,16,0 %;       
macro LKISND$B_TYPE = 10,0,8,0 %;       
macro LKISND$B_FILL_2 = 11,0,8,0 %;     
macro LKISND$B_ITEM_LENGTH = 12,0,8,0 %; 
macro LKISND$B_FILL_3 = 13,0,8,0 %;     
macro LKISND$W_FILL_4 = 14,0,16,0 %;    
 

literal LKSB$S_LKSB = 24;
macro LKSB$W_STATUS = 0,0,16,0 %;       
macro LKSB$W_RESERVED = 2,0,16,0 %;     
macro LKSB$L_LKID = 4,0,32,0 %;         
macro LKSB$B_VALBLK = 8,0,0,0 %;
literal LKSB$S_VALBLK = 16;             
literal LKSB$K_LENGTH = 24;             
literal LKSB$C_LENGTH = 24;             
 
literal LMF$_PROD_TOKEN = 1;
literal LMF$_HW_ID = 2;
literal LMF$_PROD_VERSION = 3;
literal LMF$_PROD_DATE = 4;
literal LMF$_CHARGE_TYPE = 5;
literal LMF$_UNITS_IN_USE = 6;
literal LMF$_USERNAME = 7;
literal LMF$_CHECK_TOKEN = 8;
literal LMF$_CHECK_HWID = 9;
literal LMF$_NO_RELEASE = 10;
literal LMF$C_PRDNAMLEN = 24;
literal LMF$K_PRDNAMLEN = 24;
literal LMF$C_PRDUCERLEN = 24;
literal LMF$K_PRDUCERLEN = 24;
literal LMF$C_CONTEXTLEN = 16;
literal LMF$K_CONTEXTLEN = 16;
literal LMF$C_TOKENLEN = 31;
literal LMF$K_TOKENLEN = 31;
literal LMF$C_HW_IDLEN = 31;
literal LMF$K_HW_IDLEN = 31;
literal LMF$C_VERSIONLEN = 4;
literal LMF$K_VERSIONLEN = 4;
literal LMF$K_DATELEN = 8;
literal LMF$C_DATELEN = 8;
literal LMF$M_RETURN_FAILURES = %X'1';
literal LMF$M_BROADCAST_FAILURES = %X'2';
literal LMF$M_OUTPUT_FAILURES = %X'4';
literal LMF$M_KERNEL_GRANT = %X'8';
literal LMF$M_LOOKUP_LICENSE_SPARE = %X'FFFFFFF0';
literal LMF$S_dvspm_masks = 4;
macro LMF$V_RETURN_FAILURES = 0,0,1,0 %; 
macro LMF$V_BROADCAST_FAILURES = 0,1,1,0 %; 
macro LMF$V_OUTPUT_FAILURES = 0,2,1,0 %; 
macro LMF$V_KERNEL_GRANT = 0,3,1,0 %;   
macro LMF$V_LOOKUP_LICENSE_SPARE = 0,4,28,0 %;
literal LMF$S_LOOKUP_LICENSE_SPARE = 28; 
 
literal LNM$M_NO_ALIAS = %X'1';
literal LNM$M_CONFINE = %X'2';
literal LNM$M_CRELOG = %X'4';
literal LNM$M_TABLE = %X'8';
literal LNM$M_CONCEALED = %X'100';
literal LNM$M_TERMINAL = %X'200';
literal LNM$M_EXISTS = %X'400';
literal LNM$M_SHAREABLE = %X'10000';
literal LNM$M_CLUSTERWIDE = %X'20000';
literal LNM$M_DCL_REQUEST = %X'40000';
literal LNM$M_CREATE_IF = %X'1000000';
literal LNM$M_CASE_BLIND = %X'2000000';
literal LNM$M_INTERLOCKED = %X'4000000';
literal LNM$M_LOCAL_ACTION = %X'8000000';
literal LNM$S_LNMDEF = 4;
macro LNM$V_NO_ALIAS = 0,0,1,0 %;       
macro LNM$V_CONFINE = 0,1,1,0 %;        
macro LNM$V_CRELOG = 0,2,1,0 %;         
macro LNM$V_TABLE = 0,3,1,0 %;          
macro LNM$V_CONCEALED = 0,8,1,0 %;      
macro LNM$V_TERMINAL = 0,9,1,0 %;       
macro LNM$V_EXISTS = 0,10,1,0 %;        
macro LNM$V_SHAREABLE = 0,16,1,0 %;     
macro LNM$V_CLUSTERWIDE = 0,17,1,0 %;   
macro LNM$V_DCL_REQUEST = 0,18,1,0 %;   
macro LNM$V_CREATE_IF = 0,24,1,0 %;     
macro LNM$V_CASE_BLIND = 0,25,1,0 %;    
macro LNM$V_INTERLOCKED = 0,26,1,0 %;   
macro LNM$V_LOCAL_ACTION = 0,27,1,0 %;  

literal LNM$C_TABNAMLEN = 31;           
literal LNM$C_NAMLENGTH = 255;          
literal LNM$C_MAXDEPTH = 10;            
literal LNM$_INDEX = 1;                 
literal LNM$_STRING = 2;                
literal LNM$_ATTRIBUTES = 3;            
literal LNM$_TABLE = 4;                 
literal LNM$_LENGTH = 5;                
literal LNM$_ACMODE = 6;                
literal LNM$_MAX_INDEX = 7;             
literal LNM$_PARENT = 8;                
literal LNM$_LNMB_ADDR = 9;             

literal LNM$_AGENT_ACMODE = 10;         
literal LNM$_CHAIN = -1;                
 

literal LP$M_CR = %X'1';
literal LP$M_MECHFORM = %X'2';
literal LP$M_PRINTALL = %X'4';
literal LP$M_DAVFU = %X'8';
literal LP$M_WRAP = %X'10';
literal LP$M_TRUNCATE = %X'20';
literal LP$M_TAB = %X'40';
literal LP$M_LOWER = %X'80';
literal LP$M_PASSALL = %X'100';
literal LP$M_FALLBACK = %X'200';
literal LP$M_SIXELS = %X'400';
literal LP$M_BITMAPPED = %X'800';
literal LP$M_POLLED = %X'1000';
literal LP$M_BIDIRECTIONAL = %X'2000';
literal LP$M_PAGE_L = %X'FF000000';
literal LP$_LP11 = 1;
literal LP$_LA11 = 2;
literal LP$_LA180 = 3;
literal LP$_PC_PRINTER = 8;
literal LP$S_LPDEF = 4;
macro LP$V_CR = 0,0,1,0 %;              
macro LP$V_MECHFORM = 0,1,1,0 %;        
macro LP$V_PRINTALL = 0,2,1,0 %;        
macro LP$V_DAVFU = 0,3,1,0 %;           
macro LP$V_WRAP = 0,4,1,0 %;            
macro LP$V_TRUNCATE = 0,5,1,0 %;        
macro LP$V_TAB = 0,6,1,0 %;             
macro LP$V_LOWER = 0,7,1,0 %;           
macro LP$V_PASSALL = 0,8,1,0 %;         
macro LP$V_FALLBACK = 0,9,1,0 %;        
macro LP$V_SIXELS = 0,10,1,0 %;         
macro LP$V_BITMAPPED = 0,11,1,0 %;      
macro LP$V_POLLED = 0,12,1,0 %;         
macro LP$V_BIDIRECTIONAL = 0,13,1,0 %;  
macro LP$V_PAGE_L = 0,24,8,0 %;
literal LP$S_PAGE_L = 8;                
 

literal MACID$M_ID_NUM = %X'FFFF';
literal MACID$M_LVL_CAT_SEL = %X'10000';
literal MACID$K_LVL = 0;                
literal MACID$K_CAT = 1;                
literal MACID$M_SEC_INT_SEL = %X'20000';
literal MACID$K_SEC = 0;                
literal MACID$K_INT = 1;                
literal MACID$M_MBZ = %X'3FC0000';
literal MACID$M_FMT_SEL = %X'FC000000';
literal MACID$K_SEVMS_ID = 40;          
literal MACID$S_FILL_207_ = 4;
macro MACID$L_MACIDDEF = 0,0,32,0 %;
macro MACID$V_ID_NUM = 0,0,16,0 %;
literal MACID$S_ID_NUM = 16;            
macro MACID$V_LVL_CAT_SEL = 0,16,1,0 %; 
macro MACID$V_SEC_INT_SEL = 0,17,1,0 %; 
macro MACID$V_MBZ = 0,18,8,0 %;
literal MACID$S_MBZ = 8;
macro MACID$V_FMT_SEL = 0,26,6,0 %;
literal MACID$S_FMT_SEL = 6;            
 

literal mail$_send_spare_0 = 1;
literal mail$_send_foreign = 2;         
literal mail$_send_cc_line = 3;         
literal mail$_send_default_name = 4;    
literal mail$_send_default_transport = 5; 
literal mail$_send_error_entry = 6;     
literal mail$_send_filename = 7;        
literal mail$_send_from_line = 8;       
literal mail$_send_no_default_transport = 9; 
literal mail$_send_pers_name = 10;      
literal mail$_send_record = 11;         
literal mail$_send_resultspec = 12;     
literal mail$_send_server = 13;         
literal mail$_send_subject = 14;        
literal mail$_send_success_entry = 15;  
literal mail$_send_to_line = 16;        
literal mail$_send_uflags = 17;         
literal mail$_send_user_data = 18;      
literal mail$_send_username = 19;       
literal mail$_send_username_type = 20;  
literal mail$_send_fid = 21;            
literal mail$_send_no_pers_name = 22;   
literal mail$_send_sigfile = 23;        
literal mail$_send_no_sigfile = 24;     
literal mail$_send_parse_quotes = 25;   

literal mail$_send_copy_reply = 26;     
literal mail$_send_copy_send = 27;      
literal mail$_send_user = 28;           
literal mail$_send_copy_forward = 29;   
literal mail$_send_out_spare2 = 30;
literal mail$_send_out_spare3 = 31;
literal mail$_send_out_spare4 = 32;
literal mail$_send_out_spare5 = 33;
literal mail$k_send_min_item = 1;
literal mail$k_send_max_item = 33;
literal mail$k_send_items = 33;

literal mail$_mailfile_spare_0 = 1025;
literal mail$_mailfile_default_name = 1026; 
literal mail$_mailfile_folder_routine = 1027; 
literal mail$_mailfile_full_close = 1028; 
literal mail$_mailfile_name = 1029;     
literal mail$_mailfile_reclaim = 1030;  
literal mail$_mailfile_user_data = 1031; 
literal mail$_mailfile_wastebasket_name = 1032; 
literal mail$_mailfile_collate_seq = 1033; 
literal mail$_mailfile_in_spare2 = 1034;
literal mail$_mailfile_in_spare3 = 1035;
literal mail$_mailfile_in_spare4 = 1036;
literal mail$_mailfile_in_spare5 = 1037;
literal mail$_mailfile_in_spare6 = 1038;
literal mail$_mailfile_in_spare7 = 1039;
literal mail$_mailfile_in_spare8 = 1040;
literal mail$_mailfile_in_spare9 = 1041;
literal mail$_mailfile_in_spare10 = 1042;
literal mail$_mailfile_in_spare11 = 1043;
literal mail$_mailfile_in_spare12 = 1044;
literal mail$_mailfile_in_spare13 = 1045;
literal mail$_mailfile_in_spare14 = 1046;
literal mail$_mailfile_in_spare15 = 1047;
literal mail$_mailfile_in_spare16 = 1048;
literal mail$_mailfile_in_spare17 = 1049;
literal mail$_mailfile_in_spare18 = 1050;
literal mail$_mailfile_in_spare19 = 1051;
literal mail$_mailfile_in_spare20 = 1052;

literal mail$_mailfile_data_reclaim = 1053; 
literal mail$_mailfile_data_scan = 1054; 
literal mail$_mailfile_deleted_bytes = 1055; 
literal mail$_mailfile_index_reclaim = 1056; 
literal mail$_mailfile_mail_directory = 1057; 
literal mail$_mailfile_messages_deleted = 1058; 
literal mail$_mailfile_resultspec = 1059; 
literal mail$_mailfile_total_reclaim = 1060; 
literal mail$_mailfile_wastebasket = 1061; 
literal mail$_mailfile_indexed = 1062;  
literal mail$_mailfile_out_spare2 = 1063;
literal mail$_mailfile_out_spare3 = 1064;
literal mail$_mailfile_out_spare4 = 1065;
literal mail$_mailfile_out_spare5 = 1066;
literal mail$_mailfile_out_spare6 = 1067;
literal mail$_mailfile_out_spare7 = 1068;
literal mail$_mailfile_out_spare8 = 1069;
literal mail$_mailfile_out_spare9 = 1070;
literal mail$_mailfile_out_spare10 = 1071;
literal mail$_mailfile_out_spare11 = 1072;
literal mail$_mailfile_out_spare12 = 1073;
literal mail$_mailfile_out_spare13 = 1074;
literal mail$_mailfile_out_spare14 = 1075;
literal mail$_mailfile_out_spare15 = 1076;
literal mail$_mailfile_out_spare16 = 1077;
literal mail$_mailfile_out_spare17 = 1078;
literal mail$_mailfile_out_spare18 = 1079;
literal mail$_mailfile_out_spare19 = 1080;
literal mail$_mailfile_out_spare20 = 1081;
literal mail$k_mailfile_min_item = 1025;
literal mail$k_mailfile_max_item = 1081;
literal mail$k_mailfile_items = 57;

literal mail$_message_spare_0 = 2048;
literal mail$_message_back = 2049;      
literal mail$_message_before = 2050;    
literal mail$_message_cc_substring = 2051; 
literal mail$_message_continue = 2052;  
literal mail$_message_file_action = 2053; 
literal mail$_message_folder_action = 2054; 
literal mail$_message_default_name = 2055; 
literal mail$_message_delete = 2056;    
literal mail$_message_erase = 2057;     
literal mail$_message_file_ctx = 2058;  
literal mail$_message_filename = 2059;  
literal mail$_message_flags = 2060;     
literal mail$_message_folder = 2061;    
literal mail$_message_from_substring = 2062; 
literal mail$_message_id = 2063;        
literal mail$_message_next = 2064;      
literal mail$_message_since = 2065;     
literal mail$_message_subj_substring = 2066; 
literal mail$_message_to_substring = 2067; 
literal mail$_message_uflags = 2068;    
literal mail$_message_auto_newmail = 2069; 
literal mail$_message_user_data = 2070; 
literal mail$_message_flags_mbz = 2071; 
literal mail$_message_min_class = 2072; 
literal mail$_message_max_class = 2073; 
literal mail$_message_in_spare1 = 2074;
literal mail$_message_in_spare2 = 2075;
literal mail$_message_in_spare3 = 2076;
literal mail$_message_in_spare4 = 2077;
literal mail$_message_in_spare5 = 2078;
literal mail$_message_in_spare6 = 2079;
literal mail$_message_in_spare7 = 2080;
literal mail$_message_in_spare8 = 2081;
literal mail$_message_in_spare9 = 2082;
literal mail$_message_in_spare10 = 2083;
literal mail$_message_in_spare11 = 2084;
literal mail$_message_in_spare12 = 2085;
literal mail$_message_in_spare13 = 2086;
literal mail$_message_in_spare14 = 2087;
literal mail$_message_in_spare15 = 2088;
literal mail$_message_in_spare16 = 2089;
literal mail$_message_in_spare17 = 2090;
literal mail$_message_in_spare18 = 2091;
literal mail$_message_in_spare19 = 2092;
literal mail$_message_in_spare20 = 2093;

literal mail$_message_cc = 2094;        
literal mail$_message_current_id = 2095; 
literal mail$_message_date = 2096;      
literal mail$_message_extid = 2097;     
literal mail$_message_file_created = 2098; 
literal mail$_message_folder_created = 2099; 
literal mail$_message_from = 2100;      
literal mail$_message_record = 2101;    
literal mail$_message_record_type = 2102; 
literal mail$_message_reply_path = 2103; 
literal mail$_message_resultspec = 2104; 
literal mail$_message_return_flags = 2105; 
literal mail$_message_return_uflags = 2106; 
literal mail$_message_selected = 2107;  
literal mail$_message_sender = 2108;    
literal mail$_message_size = 2109;      
literal mail$_message_subject = 2110;   
literal mail$_message_to = 2111;        
literal mail$_message_buffer = 2112;    
literal mail$_message_return_class = 2113; 
literal mail$_message_binary_date = 2114; 
literal mail$_message_spare4 = 2115;
literal mail$_message_parse_quotes = 2116; 
literal mail$_message_spare6 = 2117;
literal mail$_message_spare7 = 2118;
literal mail$_message_spare8 = 2119;
literal mail$_message_spare9 = 2120;
literal mail$_message_spare10 = 2121;
literal mail$_message_spare11 = 2122;
literal mail$_message_spare12 = 2123;
literal mail$_message_spare13 = 2124;
literal mail$_message_spare14 = 2125;
literal mail$_message_spare15 = 2126;
literal mail$_message_spare16 = 2127;
literal mail$_message_spare17 = 2128;
literal mail$_message_spare18 = 2129;
literal mail$_message_spare19 = 2130;

literal mail$_message_null = 2131;      
literal mail$_message_header = 2132;    
literal mail$_message_text = 2133;      
literal mail$_message_spare20 = 2134;
literal mail$k_message_min_item = 2048;
literal mail$k_message_max_item = 2134;
literal mail$k_message_items = 87;

literal mail$_user_spare_0 = 3072;
literal mail$_user_first = 3073;        
literal mail$_user_next = 3074;         
literal mail$_user_username = 3075;     
literal mail$_user_set_auto_purge = 3076; 
literal mail$_user_set_no_auto_purge = 3077; 
literal mail$_user_set_sub_directory = 3078; 
literal mail$_user_set_no_sub_directory = 3079; 
literal mail$_user_set_forwarding = 3080; 
literal mail$_user_set_no_forwarding = 3081; 
literal mail$_user_set_personal_name = 3082; 
literal mail$_user_set_no_personal_name = 3083; 
literal mail$_user_set_copy_send = 3084; 
literal mail$_user_set_no_copy_send = 3085; 
literal mail$_user_set_copy_reply = 3086; 
literal mail$_user_set_no_copy_reply = 3087; 
literal mail$_user_set_new_messages = 3088; 
literal mail$_user_create_if = 3089;    
literal mail$_user_set_mailplus = 3090; 
literal mail$_user_set_no_mailplus = 3091; 
literal mail$_user_set_transport = 3092; 
literal mail$_user_set_no_transport = 3093; 
literal mail$_user_set_editor = 3094;   
literal mail$_user_set_no_editor = 3095; 
literal mail$_user_set_queue = 3096;    
literal mail$_user_set_no_queue = 3097; 
literal mail$_user_set_user1 = 3098;    
literal mail$_user_set_no_user1 = 3099; 
literal mail$_user_set_user2 = 3100;    
literal mail$_user_set_no_user2 = 3101; 
literal mail$_user_set_user3 = 3102;    
literal mail$_user_set_no_user3 = 3103; 
literal mail$_user_set_form = 3104;     
literal mail$_user_set_no_form = 3105;  
literal mail$_user_set_copy_forward = 3106; 
literal mail$_user_set_no_copy_forward = 3107; 
literal mail$_user_set_cc_prompt = 3108; 
literal mail$_user_set_no_cc_prompt = 3109; 
literal mail$_user_set_sigfile = 3110;  
literal mail$_user_set_no_sigfile = 3111; 
literal mail$_user_in_spare1 = 3112;
literal mail$_user_in_spare2 = 3113;
literal mail$_user_in_spare3 = 3114;
literal mail$_user_in_spare4 = 3115;
literal mail$_user_in_spare5 = 3116;
literal mail$_user_in_spare6 = 3117;
literal mail$_user_in_spare7 = 3118;
literal mail$_user_in_spare8 = 3119;
literal mail$_user_in_spare9 = 3120;
literal mail$_user_in_spare10 = 3121;
literal mail$_user_in_spare11 = 3122;
literal mail$_user_in_spare12 = 3123;
literal mail$_user_in_spare13 = 3124;
literal mail$_user_in_spare14 = 3125;
literal mail$_user_in_spare15 = 3126;
literal mail$_user_in_spare16 = 3127;
literal mail$_user_in_spare17 = 3128;
literal mail$_user_in_spare18 = 3129;
literal mail$_user_in_spare19 = 3130;
literal mail$_user_in_spare20 = 3131;

literal mail$_user_mailplus = 3132;     
literal mail$_user_transport = 3133;    
literal mail$_user_editor = 3134;       
literal mail$_user_queue = 3135;        
literal mail$_user_user1 = 3136;        
literal mail$_user_user2 = 3137;        
literal mail$_user_user3 = 3138;        
literal mail$_user_form = 3139;         
literal mail$_user_copy_forward = 3140; 
literal mail$_user_sigfile = 3141;      
literal mail$_user_return_username = 3142; 
literal mail$_user_auto_purge = 3143;   
literal mail$_user_sub_directory = 3144; 
literal mail$_user_full_directory = 3145; 
literal mail$_user_new_messages = 3146; 
literal mail$_user_forwarding = 3147;   
literal mail$_user_personal_name = 3148; 
literal mail$_user_copy_send = 3149;    
literal mail$_user_copy_reply = 3150;   
literal mail$_user_captive = 3151;      
literal mail$_user_cc_prompt = 3152;    
literal mail$_user_out_spare2 = 3153;
literal mail$_user_out_spare3 = 3154;
literal mail$_user_out_spare4 = 3155;
literal mail$_user_out_spare5 = 3156;
literal mail$_user_out_spare6 = 3157;
literal mail$_user_out_spare7 = 3158;
literal mail$_user_out_spare8 = 3159;
literal mail$_user_out_spare9 = 3160;
literal mail$_user_out_spare10 = 3161;
literal mail$_user_out_spare11 = 3162;
literal mail$_user_out_spare12 = 3163;
literal mail$_user_out_spare13 = 3164;
literal mail$_user_out_spare14 = 3165;
literal mail$_user_out_spare15 = 3166;
literal mail$_user_out_spare16 = 3167;
literal mail$_user_out_spare17 = 3168;
literal mail$_user_out_spare18 = 3169;
literal mail$_user_out_spare19 = 3170;
literal mail$_user_out_spare20 = 3171;
literal mail$k_user_min_item = 3072;
literal mail$k_user_max_item = 3171;
literal mail$k_user_items = 100;

literal mail$_noop = 4097;              
literal mail$_nosignal = 4098;          
literal mail$_noprobe = 4099;           
literal mail$_tld_input = 4100;         
literal mail$_tld_output = 4101;        

literal mail$_to = 1;                   
literal mail$_cc = 2;                   
literal mail$_spare1 = 3;
literal mail$_spare2 = 4;

literal MAIL$m_newmsg = %X'1';
literal MAIL$m_replied = %X'2';
literal MAIL$m_dwmail = %X'4';
literal MAIL$m_extmsg = %X'8';
literal MAIL$m_extfnf = %X'10';
literal MAIL$m_notrans = %X'20';
literal MAIL$m_extnstd = %X'40';
literal MAIL$m_marked = %X'80';
literal MAIL$m_recmode = %X'100';
literal MAIL$S_flagsdef = 2;
macro MAIL$w_flags = 0,0,16,0 %;        
macro MAIL$v_newmsg = 0,0,1,0 %;        
macro MAIL$v_replied = 0,1,1,0 %;       
macro MAIL$v_dwmail = 0,2,1,0 %;        
macro MAIL$v_extmsg = 0,3,1,0 %;        
macro MAIL$v_extfnf = 0,4,1,0 %;        
macro MAIL$v_notrans = 0,5,1,0 %;       
macro MAIL$v_extnstd = 0,6,1,0 %;       
macro MAIL$v_marked = 0,7,1,0 %;        
macro MAIL$v_recmode = 0,8,1,0 %;       
 
literal MAPPING$K_ADD = 1;
literal MAPPING$K_CREATE = 2;
literal MAPPING$K_DEFINE = 3;
literal MAPPING$K_DELETE = 4;
literal MAPPING$K_MODIFY = 5;
literal MAPPING$K_SCAN = 6;
literal MAPPING$K_LOOKUP = 7;
literal MAPPING$K_PERFORMANCE = 8;
literal MAPPING$K_ZERO_PERFORMANCE = 9;
literal MAPPING$K_STOP = 10;
literal MAPPING$K_START = 11;
literal MAPPING$K_MAX_MAPPING_CODE = 12;
literal MAPPING$K_END = 100;
literal MAPPING$K_TYPE = 101;
literal MAPPING$K_REMOTE_AREA = 102;
literal MAPPING$K_REMOTE_NAME = 103;
literal MAPPING$K_LOCAL_NAME = 104;
literal MAPPING$K_FLAGS = 105;
literal MAPPING$K_USER_DATA = 106;
literal MAPPING$K_USER_DATA_LENGTH = 107;
literal MAPPING$K_WILDCARD_MC = 108;
literal MAPPING$K_WILDCARD_SC = 109;
literal MAPPING$K_WILDCARD_TC = 110;
literal MAPPING$K_WILDCARD_TS = 111;
literal MAPPING$K_DEFINE_NAME = 112;
literal MAPPING$K_DEFINE_FLAGS = 113;
literal MAPPING$K_SCAN_BUFFER = 114;
literal MAPPING$K_PROPOSED_NAME = 115;
literal MAPPING$K_WC_RESOLUTION = 116;
literal MAPPING$K_MAX_MAPPING_ITEMS = 117;
literal MAPPING$K_WC_MUST_BE_UNIQUE = 200;
literal MAPPING$K_WC_MATCH_LONGEST = 201;
literal MAPPING$K_WC_MATCH_SHORTEST = 202;
literal MAPPING$K_WC_MATCH_MOST_TERMS = 203;
literal MAPPING$K_WC_MATCH_FEWEST_TERMS = 204;
literal MAPPING$K_WC_MATCH_LEFTMOST = 205;
literal MAPPING$K_WC_MATCH_RIGHTMOST = 206;
literal MAPPING$K_MAX_MAPPING_WC = 207;
literal MAPPING$K_ANY_TYPE = -2147483648;
literal MAPPING$K_TCP_USER = -2147483391;
literal MAPPING$K_TCP_GROUP = -2147483390;
literal MAPPING$K_TCP_PROXY = -2147483389;
literal MAPPING$K_DCE_MAPPING = -2147483135;
literal MAPPING$K_DCE_PROXY = -2147483134;
literal MAPPING$K_PATHWORKS_PROXY = -2147482879;
literal MAPPING$K_DECNET_PROXY = -2147482623;
literal MAPPING$K_KERBEROS_MAPPING = -2147482367;
literal MAPPING$K_PERFORMANCE_LENGTH = 56;
literal MAPPING$S_PERFORMANCE = 56;
macro MAPPING$L_TOTAL_MESSAGES = 0,0,32,0 %;
macro MAPPING$L_TOTAL_EXCEPTIONS = 4,0,32,0 %;
macro MAPPING$L_ADDS = 8,0,32,0 %;
macro MAPPING$L_CREATES = 12,0,32,0 %;
macro MAPPING$L_DEFINES = 16,0,32,0 %;
macro MAPPING$L_DELETES = 20,0,32,0 %;
macro MAPPING$L_MODIFYS = 24,0,32,0 %;
macro MAPPING$L_SCANS = 28,0,32,0 %;
macro MAPPING$L_LOOKUPS = 32,0,32,0 %;
macro MAPPING$L_PERFORMANCE = 36,0,32,0 %;
macro MAPPING$L_STOPS = 40,0,32,0 %;
macro MAPPING$L_STARTS = 44,0,32,0 %;
macro MAPPING$L_AUDITS = 48,0,32,0 %;
macro MAPPING$L_INVALID_MESSAGES = 52,0,32,0 %;
literal MAPPING$M_LOCAL_UNIQUE = %X'1';
literal MAPPING$M_REMOTE_UNIQUE = %X'2';
literal MAPPING$M_DEFAULT_IN = %X'4';
literal MAPPING$M_DEFAULT_OUT = %X'8';
literal MAPPING$M_NO_DEFAULT_IN = %X'10';
literal MAPPING$M_NO_DEFAULT_OUT = %X'20';
literal MAPPING$M_MODIFY = %X'40';
literal MAPPING$M_DEFINITION = %X'80';
literal MAPPING$M_CASE_BLIND = %X'100';
literal MAPPING$M_WILDCARD = %X'200';
literal MAPPING$M_FIND_LOCAL = %X'400';
literal MAPPING$M_FIND_REMOTE = %X'800';
literal MAPPING$M_FILL_1 = %X'FFFFF000';
literal MAPPING$K_HEADER_LENGTH = 40;
literal MAPPING$S_HEADER = 40;
macro MAPPING$L_LENGTH = 0,0,32,0 %;
macro MAPPING$L_CONTEXT = 4,0,32,0 %;
macro MAPPING$L_FLAGS = 8,0,32,0 %;
macro MAPPING$V_LOCAL_UNIQUE = 8,0,1,0 %;
macro MAPPING$V_REMOTE_UNIQUE = 8,1,1,0 %;
macro MAPPING$V_DEFAULT_IN = 8,2,1,0 %;
macro MAPPING$V_DEFAULT_OUT = 8,3,1,0 %;
macro MAPPING$V_NO_DEFAULT_IN = 8,4,1,0 %;
macro MAPPING$V_NO_DEFAULT_OUT = 8,5,1,0 %;
macro MAPPING$V_MODIFY = 8,6,1,0 %;
macro MAPPING$V_DEFINITION = 8,7,1,0 %;
macro MAPPING$V_CASE_BLIND = 8,8,1,0 %;
macro MAPPING$V_WILDCARD = 8,9,1,0 %;
macro MAPPING$V_FIND_LOCAL = 8,10,1,0 %;
macro MAPPING$V_FIND_REMOTE = 8,11,1,0 %;
macro MAPPING$V_FILL_1 = 8,12,20,0 %;
literal MAPPING$S_FILL_1 = 20;
macro MAPPING$L_TYPE = 12,0,32,0 %;
macro MAPPING$L_WILDFLAGS = 16,0,32,0 %;
macro MAPPING$L_WILDMULTI = 20,0,32,0 %;
macro MAPPING$L_WILDSINGLE = 24,0,32,0 %;
macro MAPPING$L_WILDTERM = 28,0,32,0 %;
macro MAPPING$L_TERMSEP = 32,0,32,0 %;
macro MAPPING$L_UNUSED = 36,0,32,0 %;
literal MAPPING$S_MAPPING$GENERIC_DESC1 = 5;
macro MAPPING$W_DESC_LENGTH = 0,0,16,0 %;
macro MAPPING$T_DESC_DATA = 4,0,8,0 %;
 
literal MME$_UNLOAD = 1;
literal MME$_ALLOC = 2;
literal MME$_BACKUP_FILE = 3;
literal MME$_CLOSE_READ = 4;
literal MME$_CLOSE_WRITE = 5;
literal MME$_CONTINUATION_VOLUME = 6;
literal MME$_DEALLOCATE = 7;
literal MME$_DEVICE_AVAIL = 8;
literal MME$_DEVICE_UNAVAIL = 9;
literal MME$_DISMOUNT = 10;
literal MME$_DISPLAY_MESSAGE = 11;
literal MME$_EOV_READ = 12;
literal MME$_EOV_WRITE = 13;
literal MME$_INITIALIZE = 14;
literal MME$_MOUNT = 15;
literal MME$_MOUNT_REQUEST = 16;
literal MME$_NEWVOL_REQUEST = 17;
literal MME$_NOTIFY_DEVICE = 18;
literal MME$_OPCOM_ACP = 19;
literal MME$_OPCOM_MOUNT = 20;
literal MME$_OPEN_READ = 21;
literal MME$_OPEN_WRITE = 22;
literal MME$_VOLUME_ONLINE = 23;
literal MME$_BACKUP_END = 24;
literal MME$_BACKUP_START = 25;
literal MME$_WRITE_REQUEST = 26;
literal MME$_MOUNT_END = 27;
literal MME$_INIT_END = 28;
literal MME$_NEWVOL_END = 29;
literal MME$_DISMNT_PROC_DEL = 30;
literal MME$S_ACMODE = 4;
literal MME$S_BLOCKSIZE = 4;
literal MME$S_DENSITY = 4;
literal MME$S_DEVICE_CONTEXT = 4;
literal MME$S_DMT_FLAGS = 4;
literal MME$S_ERASE = 4;
literal MME$S_EXPIRATION = 8;
literal MME$S_FILESEQNO = 4;
literal MME$S_FILESECNO = 4;
literal MME$S_IO_FUNCTION = 4;
literal MME$S_LABEL_ACCESS = 1;
literal MME$S_MOUNT_CONTEXT = 4;
literal MME$S_MNT_FLAGS = 8;
literal MME$S_OBJCNT = 4;
literal MME$S_OVR_ACCESS = 4;
literal MME$S_OVR_EXP = 4;
literal MME$S_OVR_VOLO = 4;
literal MME$S_OWNER_UIC = 4;
literal MME$S_PID = 4;
literal MME$S_RECORDSIZ = 4;
literal MME$S_RESPONSEREQ = 4;
literal MME$S_SETNEW1 = 4;
literal MME$S_SETNEW2 = 4;
literal MME$S_VPROT = 4;
literal MME$S_FILE_ID = 6;
literal MME$S_GROUPSIZE = 4;
literal MME$S_PROTECTION = 4;
literal MME$S_STATUS = 4;
literal MME$S_ASSIGNMENT_UNIT = 4;
literal MME$S_CARTRIDGE_SIDE = 4;
literal MME$S_DISPOSITION = 4;
literal MME$S_RECFORMAT = 1;
literal MME$_ACMODE = 1;
literal MME$_BLOCKSIZE = 2;
literal MME$_COMMENT = 3;
literal MME$_DENSITY = 4;
literal MME$_DEVICE_CONTEXT = 5;
literal MME$_DMT_FLAGS = 6;
literal MME$_EOF1 = 7;
literal MME$_EOF2 = 8;
literal MME$_EOF3 = 9;
literal MME$_EOF4 = 10;
literal MME$_EOV1 = 11;
literal MME$_EOV2 = 12;
literal MME$_EOV3 = 13;
literal MME$_EOV4 = 14;
literal MME$_ERASE = 15;
literal MME$_FIB = 16;
literal MME$_FILESEQNO = 17;
literal MME$_HDR1 = 18;
literal MME$_HDR2 = 19;
literal MME$_HDR3 = 20;
literal MME$_HDR4 = 21;
literal MME$_IO_FUNCTION = 22;
literal MME$_LABEL_ACCESS = 23;
literal MME$_LABEL_VOLO = 24;
literal MME$_MOUNT_CONTEXT = 25;
literal MME$_MNT_FLAGS = 26;
literal MME$_MSG1 = 27;
literal MME$_MSG2 = 28;
literal MME$_NEWDEVNAM = 29;
literal MME$_NEWMSG1 = 30;
literal MME$_NEWMSG2 = 31;
literal MME$_NEWVOLNAM = 32;
literal MME$_NXTVOL = 33;
literal MME$_OBJCNT = 34;
literal MME$_OVR_ACCESS = 35;
literal MME$_OVR_EXP = 36;
literal MME$_OVR_VOLO = 37;
literal MME$_OWNER_UIC = 38;
literal MME$_PHYDEVNAM = 39;
literal MME$_PID = 40;
literal MME$_PREV_VOL = 41;
literal MME$_PROCESSOR = 42;
literal MME$_RECORDSIZ = 43;
literal MME$_REQDEVNAM = 44;
literal MME$_RESPONSEREQ = 45;
literal MME$_SETNEW1 = 46;
literal MME$_SETNEW2 = 47;
literal MME$_VOL1 = 48;
literal MME$_VOL2 = 49;
literal MME$_VOLNAM = 50;
literal MME$_VPROT = 51;
literal MME$_BACKUP_FILE_FLAGS = 52;
literal MME$_BACKUP_FLAGS = 53;
literal MME$_EXPIRATION = 54;
literal MME$_FILENAME = 55;
literal MME$_FILE_ID = 56;
literal MME$_GROUPSIZE = 57;
literal MME$_IN_SAVE = 58;
literal MME$_IN_SPECIFICATION = 59;
literal MME$_IN_VOLUME = 60;
literal MME$_OUT_SAVE = 61;
literal MME$_PROTECTION = 62;
literal MME$_STATUS = 63;
literal MME$_ASSIGNMENT_UNIT = 64;
literal MME$_CART_MEDIA_NAME = 65;
literal MME$_CARTRIDGE_NAME = 66;
literal MME$_CARTRIDGE_SIDE = 67;
literal MME$_COLLECTION = 68;
literal MME$_DEVICE_TYPE = 69;
literal MME$_DISPOSITION = 70;
literal MME$_LOCATION = 71;
literal MME$_MEDIA_NAME = 72;
literal MME$_LABEL_TYPE = 73;
literal MME$_EXPDATE = 74;
literal MME$_CREDATE = 75;
literal MME$_RECFORMAT = 76;
literal MME$_FILESECNO = 77;
literal MME$_REPLY = 78;
literal MME$M_IMAGE = %X'1';
literal MME$M_CRC = %X'2';
literal MME$M_DELETE = %X'4';
literal MME$M_IGN_INTERLOCK = %X'8';
literal MME$M_IGN_LABEL = %X'10';
literal MME$M_IGN_NOBACKUP = %X'20';
literal MME$M_INTERCHANGE = %X'40';
literal MME$M_RECORD = %X'80';
literal MME$M_REWIND = %X'100';
literal MME$M_VERIFY = %X'200';
literal MME$M_PHYSICAL = %X'400';
literal MME$M_COMPACTION = %X'800';
literal MME$S_BACKUP_FLAGS = 4;
macro MME$L_FLAGS_MASK = 0,0,32,0 %;
macro MME$V_IMAGE = 0,0,1,0 %;
macro MME$V_CRC = 0,1,1,0 %;
macro MME$V_DELETE = 0,2,1,0 %;
macro MME$V_IGN_INTERLOCK = 0,3,1,0 %;
macro MME$V_IGN_LABEL = 0,4,1,0 %;
macro MME$V_IGN_NOBACKUP = 0,5,1,0 %;
macro MME$V_INTERCHANGE = 0,6,1,0 %;
macro MME$V_RECORD = 0,7,1,0 %;
macro MME$V_REWIND = 0,8,1,0 %;
macro MME$V_VERIFY = 0,9,1,0 %;
macro MME$V_PHYSICAL = 0,10,1,0 %;
macro MME$V_COMPACTION = 0,11,1,0 %;
literal MME$M_VERIF_ERR = %X'1';
literal MME$M_NOBACKUP = %X'2';
literal MME$M_FILE_OPEN = %X'4';
literal MME$M_ACC_CONF = %X'8';
literal MME$S_BACKUP_FILE_FLAGS = 4;
macro MME$L_FILE_FLAGS_MASK = 0,0,32,0 %;
macro MME$V_VERIF_ERR = 0,0,1,0 %;
macro MME$V_NOBACKUP = 0,1,1,0 %;
macro MME$V_FILE_OPEN = 0,2,1,0 %;
macro MME$V_ACC_CONF = 0,3,1,0 %;
macro MME$v_fill1 = 0,4,28,0 %;
literal MME$s_fill1 = 28;
literal MME$C_ANSI_1 = 1;
literal MME$C_ANSI_2 = 2;
literal MME$C_ANSI_3 = 3;
literal MME$C_ANSI_4 = 4;
literal MME$C_IBM_STD = 5;
literal MME$C_UNLABELLED = 6;
literal MME$C_ODS1 = 7;
literal MME$C_ODS2 = 8;
 
literal MMI$_FACILITY = 1;
literal MMI$_MBUNIT = 2;
literal MMI$_PID = 3;
literal MMI$_MBXUCB = 4;
literal MMI$_UNLOAD = 5;
literal MMI$_ALLOC = 6;
literal MMI$_BACKUP_END = 7;
literal MMI$_BACKUP_FILE = 8;
literal MMI$_BACKUP_START = 9;
literal MMI$_CLOSE_READ = 10;
literal MMI$_CLOSE_WRITE = 11;
literal MMI$_CONTINUATION_VOLUME = 12;
literal MMI$_DEALLOCATE = 13;
literal MMI$_DEVICE_AVAIL = 14;
literal MMI$_DEVICE_UNAVAIL = 15;
literal MMI$_DISMOUNT = 16;
literal MMI$_DISPLAY_MESSAGE = 17;
literal MMI$_EOV_READ = 18;
literal MMI$_EOV_WRITE = 19;
literal MMI$_INITIALIZE = 20;
literal MMI$_MOUNT = 21;
literal MMI$_MOUNT_REQUEST = 22;
literal MMI$_NEWVOL_REQUEST = 23;
literal MMI$_NOTIFY_DEVICE = 24;
literal MMI$_OPCOM_ACP = 25;
literal MMI$_OPCOM_MOUNT = 26;
literal MMI$_OPEN_READ = 27;
literal MMI$_OPEN_WRITE = 28;
literal MMI$_VOLUME_ONLINE = 29;
literal MMI$_WRITE_REQUEST = 30;
literal MMI$_MOUNT_END = 31;
literal MMI$_INIT_END = 32;
literal MMI$_NEWVOL_END = 33;
 

literal MNT$M_FOREIGN = %X'1';
literal MNT$M_GROUP = %X'2';
literal MNT$M_NOASSIST = %X'4';
literal MNT$M_NODISKQ = %X'8';
literal MNT$M_NOHDR3 = %X'10';
literal MNT$M_NOLABEL = %X'20';
literal MNT$M_NOWRITE = %X'40';
literal MNT$M_OVR_ACCESS = %X'80';
literal MNT$M_OVR_EXP = %X'100';
literal MNT$M_OVR_IDENT = %X'200';
literal MNT$M_OVR_SETID = %X'400';
literal MNT$M_READCHECK = %X'800';
literal MNT$M_SHARE = %X'1000';
literal MNT$M_MESSAGE = %X'2000';
literal MNT$M_SYSTEM = %X'4000';
literal MNT$M_WRITECHECK = %X'8000';
literal MNT$M_WRITETHRU = %X'10000';
literal MNT$M_NOCACHE = %X'20000';
literal MNT$M_OVR_LOCK = %X'40000';
literal MNT$M_NOMNTVER = %X'80000';
literal MNT$M_NOUNLOAD = %X'100000';
literal MNT$M_TAPE_DATA_WRITE = %X'200000';
literal MNT$M_NOCOPY = %X'400000';
literal MNT$M_NOAUTO = %X'800000';
literal MNT$M_INIT_ALL = %X'1000000';
literal MNT$M_INIT_CONT = %X'2000000';
literal MNT$M_OVR_VOLO = %X'4000000';
literal MNT$M_INTERCHG = %X'8000000';
literal MNT$M_CLUSTER = %X'10000000';
literal MNT$M_NOREBUILD = %X'20000000';
literal MNT$M_OVR_SHAMEM = %X'40000000';
literal MNT$M_MULTI_VOL = %X'80000000';
literal MNT2$M_DISKQ = %X'1';
literal MNT2$M_COMPACTION = %X'2';
literal MNT2$M_INCLUDE = %X'4';
literal MNT2$M_PASS2 = %X'8';
literal MNT2$M_OVR_NOFE = %X'10';
literal MNT2$M_SCRATCH = %X'20';
literal MNT2$M_CDROM = %X'40';
literal MNT2$M_XAR = %X'80';
literal MNT2$M_DSI = %X'100';
literal MNT2$M_SUBSYSTEM = %X'200';
literal MNT2$M_NOCOMPACTION = %X'400';
literal MNT2$M_OVR_SECURITY = %X'800';
literal MNT2$M_OVR_LIMITED_SEARCH = %X'1000';
literal MNT2$M_POOL = %X'2000';
literal MNT2$M_WLG_ENABLE = %X'4000';
literal MNT2$M_WLG_DISABLE = %X'8000';
literal MNT2$M_REQUIRE_MEMBERS = %X'10000';
literal MNT2$M_VERIFY_LABEL = %X'20000';
literal MNT2$M_FULL_MERGE = %X'40000';
literal MNT2$M_WRITE_FIRST = %X'80000';
literal MNT2$M_DCD = %X'100000';
literal MNT2$M_NODCD = %X'200000';
literal MNT2$M_LOCAL_HOST = %X'400000';
literal MNT2$M_FACTOR = %X'800000';
literal MNT2$M_PRIORITY = %X'1000000';
literal MNT$_DEVNAM = 1;                
literal MNT$_VOLNAM = 2;                
literal MNT$_LOGNAM = 3;                
literal MNT$_FLAGS = 4;                 
literal MNT$_ACCESSED = 5;              
literal MNT$_PROCESSOR = 6;             
literal MNT$_VOLSET = 7;                
literal MNT$_BLOCKSIZE = 8;             
literal MNT$_DENSITY = 9;               
literal MNT$_EXTENT = 10;               
literal MNT$_FILEID = 11;               
literal MNT$_LIMIT = 12;                
literal MNT$_OWNER = 13;                
literal MNT$_VPROT = 14;                
literal MNT$_QUOTA = 15;                
literal MNT$_RECORDSIZ = 16;            
literal MNT$_WINDOW = 17;               
literal MNT$_EXTENSION = 18;            
literal MNT$_VISUAL_ID = 19;            
literal MNT$_COMMENT = 20;              
literal MNT$_CLASS = 21;                
literal MNT$_UNUSED2 = 22;              
literal MNT$_ACCPTNAM = 23;             
literal MNT$_SHACOPY_BUF = 24;          
literal MNT$_SHANAM = 25;               
literal MNT$_SHAMEM = 26;               
literal MNT$_SHAMEM_MGCOPY = 27;        
literal MNT$_SHAMEM_COPY = 28;          
literal MNT$_PRFD_PATH = 29;            
literal MNT$_ASSIGNMENT_UNIT = 30;      
literal MNT$_CART_MEDIA_NAME = 31;      
literal MNT$_CARTRIDGE_NAME = 32;       
literal MNT$_CARTRIDGE_SIDE = 33;       
literal MNT$_COLLECTION = 34;           
literal MNT$_DEVICE_TYPE = 35;          
literal MNT$_DISPOSITION = 36;          
literal MNT$_LOCATION = 37;             
literal MNT$_MEDIA_NAME = 38;           
literal MNT$_UNUSED4 = 39;              
literal MNT$_UNDEFINED_FAT = 40;        
literal MNT$_UCS = 41;                  
literal MNT$_TAPE_EXPIRATION = 42;      
literal MNT$_PRIORITY = 43;             
literal MNT$_FACTOR = 44;               
literal MNT$_WBM_SIZE = 45;             

literal MNT$_LAST_ITEM_CODE = 46;       
literal MNT$C_BASE_CARTRIDGE = 1;       
literal MNT$C_COMPOUND_CARTRIDGE = 2;   
literal MNT$C_PREASSIGNED_SIDE = 3;     
literal MNT$C_SIDE = 4;                 
literal MNT$C_KEEP = 1;                 
literal MNT$C_RELEASE = 2;              
literal MNT$S_MNTDEF = 8;
macro MNT$V_FOREIGN = 0,0,1,0 %;        
macro MNT$V_GROUP = 0,1,1,0 %;          
macro MNT$V_NOASSIST = 0,2,1,0 %;       
macro MNT$V_NODISKQ = 0,3,1,0 %;        
macro MNT$V_NOHDR3 = 0,4,1,0 %;         
macro MNT$V_NOLABEL = 0,5,1,0 %;        
macro MNT$V_NOWRITE = 0,6,1,0 %;        
macro MNT$V_OVR_ACCESS = 0,7,1,0 %;     
macro MNT$V_OVR_EXP = 0,8,1,0 %;        
macro MNT$V_OVR_IDENT = 0,9,1,0 %;      
macro MNT$V_OVR_SETID = 0,10,1,0 %;     
macro MNT$V_READCHECK = 0,11,1,0 %;     
macro MNT$V_SHARE = 0,12,1,0 %;         
macro MNT$V_MESSAGE = 0,13,1,0 %;       
macro MNT$V_SYSTEM = 0,14,1,0 %;        
macro MNT$V_WRITECHECK = 0,15,1,0 %;    
macro MNT$V_WRITETHRU = 0,16,1,0 %;     
macro MNT$V_NOCACHE = 0,17,1,0 %;       
macro MNT$V_OVR_LOCK = 0,18,1,0 %;      
macro MNT$V_NOMNTVER = 0,19,1,0 %;      
macro MNT$V_NOUNLOAD = 0,20,1,0 %;      
macro MNT$V_TAPE_DATA_WRITE = 0,21,1,0 %; 
macro MNT$V_NOCOPY = 0,22,1,0 %;        
macro MNT$V_NOAUTO = 0,23,1,0 %;        
macro MNT$V_INIT_ALL = 0,24,1,0 %;      
macro MNT$V_INIT_CONT = 0,25,1,0 %;     
macro MNT$V_OVR_VOLO = 0,26,1,0 %;      
macro MNT$V_INTERCHG = 0,27,1,0 %;      
macro MNT$V_CLUSTER = 0,28,1,0 %;       
macro MNT$V_NOREBUILD = 0,29,1,0 %;     
macro MNT$V_OVR_SHAMEM = 0,30,1,0 %;    
macro MNT$V_MULTI_VOL = 0,31,1,0 %;     
macro MNT$V_DISKQ = 4,0,1,0 %;          
macro MNT$V_COMPACTION = 4,1,1,0 %;     
macro MNT$V_INCLUDE = 4,2,1,0 %;        
macro MNT$V_PASS2 = 4,3,1,0 %;          
macro MNT$V_OVR_NOFE = 4,4,1,0 %;       
macro MNT$V_SCRATCH = 4,5,1,0 %;        
macro MNT$V_CDROM = 4,6,1,0 %;          
macro MNT$V_XAR = 4,7,1,0 %;            
macro MNT$V_DSI = 4,8,1,0 %;            
macro MNT$V_SUBSYSTEM = 4,9,1,0 %;      
macro MNT$V_NOCOMPACTION = 4,10,1,0 %;  
macro MNT$V_OVR_SECURITY = 4,11,1,0 %;  
macro MNT$V_OVR_LIMITED_SEARCH = 4,12,1,0 %; 
macro MNT$V_POOL = 4,13,1,0 %;          
macro MNT$V_WLG_ENABLE = 4,14,1,0 %;    
macro MNT$V_WLG_DISABLE = 4,15,1,0 %;   
macro MNT$V_REQUIRE_MEMBERS = 4,16,1,0 %; 
macro MNT$V_VERIFY_LABEL = 4,17,1,0 %;  
macro MNT$V_FULL_MERGE = 4,18,1,0 %;    
macro MNT$V_WRITE_FIRST = 4,19,1,0 %;   
macro MNT$V_DCD = 4,20,1,0 %;           
macro MNT$V_NODCD = 4,21,1,0 %;         
macro MNT$V_LOCAL_HOST = 4,22,1,0 %;    
macro MNT$V_FACTOR = 4,23,1,0 %;        
macro MNT$V_PRIORITY = 4,24,1,0 %;      
macro MNT$V_MINICOPY_REQUIRED = 4,25,1,0 %; 
macro MNT$V_MINICOPY_OPTIONAL = 4,26,1,0 %; 
macro MNT$V_NOMINICOPY = 4,27,1,0 %;    
macro MNT2$V_DISKQ = 0,0,1,0 %;         
macro MNT2$V_COMPACTION = 0,1,1,0 %;    
macro MNT2$V_INCLUDE = 0,2,1,0 %;       
macro MNT2$V_PASS2 = 0,3,1,0 %;         
macro MNT2$V_OVR_NOFE = 0,4,1,0 %;      
macro MNT2$V_SCRATCH = 0,5,1,0 %;       
macro MNT2$V_CDROM = 0,6,1,0 %;         
macro MNT2$V_XAR = 0,7,1,0 %;           
macro MNT2$V_DSI = 0,8,1,0 %;           
macro MNT2$V_SUBSYSTEM = 0,9,1,0 %;     
macro MNT2$V_NOCOMPACTION = 0,10,1,0 %; 
macro MNT2$V_OVR_SECURITY = 0,11,1,0 %; 
macro MNT2$V_OVR_LIMITED_SEARCH = 0,12,1,0 %; 
macro MNT2$V_POOL = 0,13,1,0 %;         
macro MNT2$V_WLG_ENABLE = 0,14,1,0 %;   
macro MNT2$V_WLG_DISABLE = 0,15,1,0 %;  
macro MNT2$V_REQUIRE_MEMBERS = 0,16,1,0 %; 
macro MNT2$V_VERIFY_LABEL = 0,17,1,0 %; 
macro MNT2$V_FULL_MERGE = 0,18,1,0 %;   
macro MNT2$V_WRITE_FIRST = 0,19,1,0 %;  
macro MNT2$V_DCD = 0,20,1,0 %;          
macro MNT2$V_NODCD = 0,21,1,0 %;        
macro MNT2$V_LOCAL_HOST = 0,22,1,0 %;   
macro MNT2$V_FACTOR = 0,23,1,0 %;       
macro MNT2$V_PRIORITY = 0,24,1,0 %;     
macro MNT2$V_MINICOPY = 0,25,1,0 %;     
macro MNT2$V_MINICOPY_OPTIONAL = 0,26,1,0 %; 
macro MNT2$V_NOMINICOPY = 0,27,1,0 %;   

literal UNFAT$S_UNDEFINED_FAT = 4;
macro UNFAT$W_MRS = 0,0,16,0 %;         
macro UNFAT$B_RAT = 2,0,8,0 %;          
macro UNFAT$B_RFM = 3,0,8,0 %;          
 

literal MSG$_TRMUNSOLIC = 1;            
literal MSG$_CRUNSOLIC = 2;             
literal MSG$_DELPROC = 3;               
literal MSG$_SNDSMB = 4;                
literal MSG$_DEVOFFLIN = 5;             
literal MSG$_TRMHANGUP = 6;             
literal MSG$_DEVONLIN = 7;              
literal MSG$_OPRQST = 8;                
literal MSG$_OPREPLY = 9;               
literal MSG$_SMBINI = 8;                
literal MSG$_SMBDON = 9;                
literal MSG$_SNDACC = 10;               
literal MSG$_PURPROC = 11;              
literal MSG$_DELIMAG = 12;              
literal MSG$_PURIMAG = 13;              
literal MSG$_SYSFUNC = 14;              
literal MSG$_SNDJBC = 15;               
literal MSG$_GETQUI = 16;               
literal MSG$_XM_DATAVL = 11;            
literal MSG$_XM_SHUTDN = 12;            
literal MSG$_XM_ATTN = 13;              
literal MSG$_INIOPR = 16;               
literal MSG$_ABOOPR = 17;               
literal MSG$_SUSOPR = 18;               
literal MSG$_RESOPR = 19;               
literal MSG$_DELSMB = 20;               
literal MSG$_REQUE = 21;                
literal MSG$_SMBRSP = 32;               
literal MSG$_ACCRSP = 33;               
literal MSG$_SCANBAD = 40;              
literal MSG$_SCANRSP = 41;              
literal MSG$_ABORT = 48;                
literal MSG$_CONFIRM = 49;              
literal MSG$_CONNECT = 50;              
literal MSG$_DISCON = 51;               
literal MSG$_EXIT = 52;                 
literal MSG$_INTMSG = 53;               
literal MSG$_PATHLOST = 54;             
literal MSG$_PROTOCOL = 55;             
literal MSG$_REJECT = 56;               
literal MSG$_THIRDPARTY = 57;           
literal MSG$_TIMEOUT = 58;              
literal MSG$_NETSHUT = 59;              
literal MSG$_NODEACC = 60;              
literal MSG$_NODEINACC = 61;            
literal MSG$_EVTAVL = 62;               
literal MSG$_EVTRCVCHG = 63;            
literal MSG$_INCDAT = 64;               
literal MSG$_RESET = 65;                
literal MSG$_LINUP = 66;                
literal MSG$_LINDWN = 67;               
literal MSG$_EVTXMTCHG = 68;            
literal MSG$_DEVOFFLINX = 80;           
literal MSG$_WRONGVOL = 81;             
literal MSG$_DEVWRTLCK = 82;            
literal MSG$_TRMBRDCST = 83;            
literal MSG$_MVCOMPLETE = 84;           
literal MSG$_MVABORTED = 85;            
literal MSG$_DISMOUNTED = 86;           
literal MSG$_UDA50MVER = 87;            
literal MSG$_DUPUNITNO = 88;            
literal MSG$_CLUMBX = 89;               
literal MSG$_TM78MVER = 90;             
literal MSG$_SHAMEMFAL = 91;            
literal MSG$_SHARDUCED = 92;            
literal MSG$_RC25MVER = 93;             
literal MSG$_RDRXMVER = 94;             
literal MSG$_TU81MVER = 95;             
literal MSG$_MAYAMVER = 96;             
literal MSG$_SHACHASTA = 97;            
literal MSG$_SHACOPCOM = 98;            
literal MSG$_SHAREDZER = 99;            
literal MSG$_SHAPOSMEM = 100;           
literal MSG$_SHAALLCOM = 101;           
literal MSG$_SHACOPBEG = 102;           
literal MSG$_SHAWROMEM = 103;           
literal MSG$_SHAORGMEM = 104;           
literal MSG$_TRMLOSE_KB = 105;          
literal MSG$_TRMGAIN_KB = 106;          
literal MSG$_TRMSHRINK = 107;           
literal MSG$_TRMEXPAND = 108;           
literal MSG$_TRMRESIZE = 109;           
literal MSG$_TRMMOVE = 110;             
literal MSG$_SNDMME = 111;              
literal MSG$_RETMME = 112;              
literal MSG$_SHAADPBAD = 113;           
literal MSG$_SHAEMUPTH = 114;           
literal MSG$_SHABENODMP = 115;          
literal MSG$_SHABNODMP = 116;           
literal MSG$_SHALOCDEV = 117;           
literal MSG$_SHANOBPOK = 118;           
literal MSG$_SHABDMPOK = 119;           
literal MSG$_BOOTDMPOK = 120;           
literal MSG$_SHABDBCK = 121;            
literal MSG$_SHANODMP = 122;            
literal MSG$_SHADMPOK = 123;            
literal MSG$_OPCFAO = 124;              
literal MSG$_QMAN_INTERNAL = 200;       
 
literal MSGHLP$M_NOSORT = %X'1';
literal MSGHLP$M_BRIEF = %X'2';
literal MSGHLP$M_MACHINE = %X'4';
literal MSGHLP$M_NOSUBSTRING = %X'8';
literal MSGHLP$S_MSGHLPDEF = 4;
macro MSGHLP$V_NOSORT = 0,0,1,0 %;      
macro MSGHLP$V_BRIEF = 0,1,1,0 %;       
macro MSGHLP$V_MACHINE = 0,2,1,0 %;     
macro MSGHLP$V_NOSUBSTRING = 0,3,1,0 %; 
macro MSGHLP$B_WORK_FILES = 3,0,8,1 %;  
 

literal MTA$K_NOCHAR = 0;               
literal MTA$K_CHARVALID = 1;            
literal MTA$K_INVOL1 = 0;               
literal MTA$K_INHDR1 = 1;               
literal MTA$K_OUTVOL1 = 2;              
literal MTA$K_OUTHDR1 = 3;              
 

literal MT$M_SEREXCP = %X'1';
literal MT$M_ENAUTOPACK = %X'2';
literal MT$M_ENSEREXCP = %X'4';
literal MT$M_PARITY = %X'8';
literal MT$M_FORMAT = %X'F0';
literal MT$M_DENSITY = %X'1F00';
literal MT$M_FASTSKIP_USED = %X'2000';
literal MT$M_LOGSOFT = %X'4000';
literal MT$M_LOGSOFTOG = %X'8000';
literal MT$M_BOT = %X'10000';
literal MT$M_EOF = %X'20000';
literal MT$M_EOT = %X'40000';
literal MT$M_HWL = %X'80000';
literal MT$M_LOST = %X'100000';
literal MT$M_SUP_NRZI = %X'200000';
literal MT$M_SUP_PE = %X'400000';
literal MT$M_SUP_GCR = %X'800000';
literal MT$M_SPEED = %X'FF000000';
literal MT$K_DEFAULT = 0;               
literal MT$K_NORMAL11 = 12;             
literal MT$K_CORDMP11 = 13;             
literal MT$K_NORMAL15 = 14;             
literal MT$K_NRZI_800 = 3;              
literal MT$K_PE_1600 = 4;               
literal MT$K_GCR_6250 = 5;              
literal MT$K_WOD_6250 = 8;              
literal MT$K_SCSI_DC1 = 10;             
literal MT$K_HPC_40K = 12;              
literal MT$K_HPC_COMP = 13;             
literal MT$K_XPC_80K = 14;              
literal MT$K_XPC_COMP = 15;             
literal MT$K_BLK_833 = 17;              
literal MT$K_BLK_1250 = 18;             
literal MT$K_BLK_10K = 19;              
literal MT$K_BLK_20K = 20;              
literal MT$K_BLK_60K = 21;              
literal MT$K_BLK_COMP = 22;             
literal MT$K_DAT_61K = 24;              
literal MT$K_SPEED_DEF = 0;             
literal MT$K_SPEED_25 = 25;             
literal MT$K_SPEED_75 = 75;             
literal MT$S_MTDEF = 4;
macro MT$V_SEREXCP = 0,0,1,0 %;         
macro MT$V_ENAUTOPACK = 0,1,1,0 %;      
macro MT$V_ENSEREXCP = 0,2,1,0 %;       
macro MT$V_PARITY = 0,3,1,0 %;          
macro MT$V_FORMAT = 0,4,4,0 %;
literal MT$S_FORMAT = 4;                
macro MT$V_DENSITY = 0,8,5,0 %;
literal MT$S_DENSITY = 5;               
macro MT$V_FASTSKIP_USED = 0,13,1,0 %;  
macro MT$V_LOGSOFT = 0,14,1,0 %;        
macro MT$V_LOGSOFTOG = 0,15,1,0 %;      
macro MT$V_BOT = 0,16,1,0 %;            
macro MT$V_EOF = 0,17,1,0 %;            
macro MT$V_EOT = 0,18,1,0 %;            
macro MT$V_HWL = 0,19,1,0 %;            
macro MT$V_LOST = 0,20,1,0 %;           
macro MT$V_SUP_NRZI = 0,21,1,0 %;       
macro MT$V_SUP_PE = 0,22,1,0 %;         
macro MT$V_SUP_GCR = 0,23,1,0 %;        
macro MT$V_SPEED = 0,24,8,0 %;
literal MT$S_SPEED = 8;                 

 

literal MT2$M_SUP_DENS = %X'FFFF';
literal MT2$M_WBC_ENABLE = %X'10000';
literal MT2$M_RDC_DISABLE = %X'20000';
literal MT2$M_CACHED_DATA = %X'40000';
literal MT2$M_CD_LOST = %X'80000';
literal MT2$M_TAPE_MARK = %X'100000';
literal MT2$M_COMP_SUP = %X'200000';
literal MT2$M_COMP_ENA = %X'400000';
literal MT2$M_MT3_SUPPORTED = %X'800000';
literal MT2$M_ALLOWFAST_SUP = %X'1000000';
literal MT2$M_ALLOWFAST_ALWAYS = %X'2000000';
literal MT2$M_ALLOWFAST_PER_IO = %X'4000000';
literal MT2$M_ALLOWFAST_NEVER = %X'8000000';
literal MT2$S_MT2DEF = 4;
macro MT2$V_SUP_DENS = 0,0,16,0 %;
literal MT2$S_SUP_DENS = 16;            
macro MT2$V_WBC_ENABLE = 0,16,1,0 %;    
macro MT2$V_RDC_DISABLE = 0,17,1,0 %;   
macro MT2$V_CACHED_DATA = 0,18,1,0 %;   
macro MT2$V_CD_LOST = 0,19,1,0 %;       
macro MT2$V_TAPE_MARK = 0,20,1,0 %;     
macro MT2$V_COMP_SUP = 0,21,1,0 %;      
macro MT2$V_COMP_ENA = 0,22,1,0 %;      
macro MT2$V_MT3_SUPPORTED = 0,23,1,0 %; 
macro MT2$V_ALLOWFAST_SUP = 0,24,1,0 %; 
macro MT2$V_ALLOWFAST_ALWAYS = 0,25,1,0 %; 
macro MT2$V_ALLOWFAST_PER_IO = 0,26,1,0 %; 
macro MT2$V_ALLOWFAST_NEVER = 0,27,1,0 %; 
 

literal MT3$K_DEFAULT = 0;              
literal MT3$K_NRZI_800 = 257;           
literal MT3$K_PE_1600 = 258;            
literal MT3$K_GCR_6250 = 260;           
literal MT3$K_TK50 = 513;               
literal MT3$K_TK70 = 514;               
literal MT3$K_3480 = 769;               
literal MT3$K_3490E = 770;              
literal MT3$K_3480_COMP = 772;          
literal MT3$K_3490E_COMP = 776;         
literal MT3$K_WOD_6250 = 1025;          
literal MT3$K_DAT = 1281;               
literal MT3$K_DAT_COMP = 1282;          
literal MT3$K_DENSITY_INVALID = 31;     
literal MT3$K_8200 = 1537;              
literal MT3$K_8500 = 1538;              
literal MT3$K_8500_COMP = 1540;         
literal MT3$K_8200_COMP = 1544;         
literal MT3$K_8900 = 1552;              
literal MT3$K_8900_COMP = 1568;         
literal MT3$K_QIC = 1793;               
literal MT3$K_TK85 = 2052;              
literal MT3$K_TK86 = 2056;              
literal MT3$K_TK87 = 2064;              
literal MT3$K_TK87_COMP = 2080;         
literal MT3$K_TK89 = 2305;              
literal MT3$K_TK89_COMP = 2306;         
literal MT3$K_TK88 = 2368;              
literal MT3$K_TK88_COMP = 2432;         
literal MT3$K_DLT8000 = 3588;           
literal MT3$K_DLT8000_COMP = 3592;      
literal MT3$K_SDLT = 3600;              
literal MT3$K_SDLT_COMP = 3616;         
literal MT3$K_SDLT320 = 3648;           
literal MT3$K_SDLT320_COMP = 3712;      
literal MT3$K_AIT1 = 2561;              
literal MT3$K_AIT1_COMP = 2562;         
literal MT3$K_AIT2 = 2564;              
literal MT3$K_AIT2_COMP = 2568;         
literal MT3$K_AIT3 = 2576;              
literal MT3$K_AIT3_COMP = 2592;         
literal MT3$K_AIT4 = 2624;              
literal MT3$K_AIT4_COMP = 2688;         
literal MT3$K_DDS2 = 2817;              
literal MT3$K_DDS2_COMP = 2818;         
literal MT3$K_DDS3 = 3073;              
literal MT3$K_DDS3_COMP = 3074;         
literal MT3$K_DDS4 = 3329;              
literal MT3$K_DDS4_COMP = 3330;         

literal MT3$K_NO_COMP = 65280;          
literal MT3$K_COMP = 65281;             
 

literal NET$S_NETDEF = 4;
macro NET$B_USER_ECO = 0,0,8,0 %;       
macro NET$B_DEC_ECO = 1,0,8,0 %;        
macro NET$B_DEC_VERSION = 2,0,8,0 %;    
macro NET$B_RESERVED = 3,0,8,0 %;       
 

literal NSA$C_MSG_SERVER = 1;           
literal NSA$C_MSG_AUDIT = 2;            
literal NSA$C_MSG_BREAKIN = 3;          
literal NSA$C_MSG_INSTALL = 4;          
literal NSA$C_MSG_LOGFAIL = 5;          
literal NSA$C_MSG_LOGIN = 6;            
literal NSA$C_MSG_LOGOUT = 7;           
literal NSA$C_MSG_MOUNT = 8;            
literal NSA$C_MSG_NETPROXY = 9;         
literal NSA$C_MSG_ACCESS = 10;          
literal NSA$C_MSG_SYSUAF = 11;          
literal NSA$C_MSG_RIGHTSDB = 12;        
literal NSA$C_MSG_CUSTOMER = 13;        
literal NSA$C_MSG_CSS = 14;             
literal NSA$C_MSG_LP = 15;              
literal NSA$C_MSG_PRVAUD = 16;          
literal NSA$C_MSG_RESERVED_1 = 17;      
literal NSA$C_MSG_RESERVED_2 = 18;      
literal NSA$C_MSG_RESERVED_3 = 19;      
literal NSA$C_MSG_RESERVED_4 = 20;      
literal NSA$C_MSG_SYSTIME = 21;         
literal NSA$C_MSG_SYSGEN = 22;          
literal NSA$C_MSG_OBJ_CREATE = 23;      
literal NSA$C_MSG_OBJ_DELETE = 24;      
literal NSA$C_MSG_OBJ_DEACCESS = 25;    
literal NSA$C_MSG_OBJ_ACCESS = 26;      
literal NSA$C_MSG_CONNECTION = 27;      
literal NSA$C_MSG_RESERVED_5 = 28;      
literal NSA$C_MSG_NCP = 29;             
literal NSA$C_MSG_PROCESS = 30;         
literal NSA$C_MSG_OBJECT_SERVICE = 31;  
literal NSA$C_MSG_AUTHENTICATE = 32;    
literal NSA$C_MSG_PERSONA = 33;         
literal NSA$C_MSG_MAX_CODE = 34;        
literal NSA$M_MANDATORY = %X'1';
literal NSA$M_ACL = %X'2';
literal NSA$M_INTERNAL = %X'4';
literal NSA$M_ALARM = %X'8';
literal NSA$M_AUDIT = %X'10';
literal NSA$M_FOREIGN = %X'20';
literal NSA$M_FLUSH = %X'40';
literal NSA$M_SERVER = %X'80';
literal NSA$M_DEACCESS = %X'100';
literal NSA$M_SYNCH = %X'200';
literal NSA$M_IDENTIFIER = %X'400';
literal NSA$M_PROCPRIV = %X'800';
literal NSA$M_AUTHPRIV = %X'1000';
literal NSA$M_NOEVTCHECK = %X'2000';
literal NSA$M_NOFAILAUD = %X'4000';
literal NSA$M_NOSUCCAUD = %X'8000';
literal NSA$C_VERSION_1 = 1;            
literal NSA$C_VERSION_2 = 2;            
literal NSA$C_VERSION_3 = 3;            
literal NSA$C_V1_MSG_HDR_LENGTH = 12;   
literal NSA$K_V1_MSG_HDR_LENGTH = 12;
literal NSA$C_MSG_HDR_LENGTH = 20;      
literal NSA$K_MSG_HDR_LENGTH = 20;
literal NSA$S_NSAMSGDEF = 21;
macro NSA$W_RECORD_TYPE = 0,0,16,0 %;   
macro NSA$W_RECORD_SUBTYPE = 2,0,16,0 %; 
macro NSA$W_FLAGS = 4,0,16,0 %;         
macro NSA$V_MANDATORY = 4,0,1,0 %;      
macro NSA$V_ACL = 4,1,1,0 %;            
macro NSA$V_INTERNAL = 4,2,1,0 %;       
macro NSA$V_ALARM = 4,3,1,0 %;          
macro NSA$V_AUDIT = 4,4,1,0 %;          
macro NSA$V_FOREIGN = 4,5,1,0 %;        
macro NSA$V_FLUSH = 4,6,1,0 %;          
macro NSA$V_SERVER = 4,7,1,0 %;         
macro NSA$V_DEACCESS = 4,8,1,0 %;       
macro NSA$V_SYNCH = 4,9,1,0 %;          
macro NSA$V_IDENTIFIER = 4,10,1,0 %;    
macro NSA$V_PROCPRIV = 4,11,1,0 %;      
macro NSA$V_AUTHPRIV = 4,12,1,0 %;      
macro NSA$V_NOEVTCHECK = 4,13,1,0 %;    
macro NSA$V_NOFAILAUD = 4,14,1,0 %;     
macro NSA$V_NOSUCCAUD = 4,15,1,0 %;     
macro NSA$W_PACKET_COUNT = 6,0,16,0 %;  
macro NSA$W_REC_SIZE = 8,0,16,0 %;
macro NSA$W_RECORD_SIZE = 8,0,16,0 %;   
macro NSA$B_VERSION = 11,0,8,0 %;       
macro NSA$W_SPARE_4 = 12,0,0,0 %;
literal NSA$S_SPARE_4 = 6;              
macro NSA$W_FACILITY = 18,0,16,0 %;     
macro NSA$R_PACKET_LIST = 20,0,8,0 %;   
literal NSA$C_SRV_ADD_JOURNAL = 1;      
literal NSA$C_SRV_REM_JOURNAL = 2;      
literal NSA$C_SRV_FLUSH_JOURNAL = 3;    
literal NSA$C_SRV_FLUSH_ALL_JOURNALS = 4; 
literal NSA$C_SRV_FLUSH_INTERVAL = 5;   
literal NSA$C_SRV_ARCHIVE_DEVICE = 6;   
literal NSA$C_SRV_ARCHIVE_ENABLE = 7;   
literal NSA$C_SRV_ARCHIVE_DISABLE = 8;  
literal NSA$C_SRV_ARCHIVE_INTERVAL = 9; 
literal NSA$C_SRV_BADJNL_INTERVAL = 10; 
literal NSA$C_SRV_BADJNL_LIMIT = 11;    
literal NSA$C_SRV_EXIT = 12;            
literal NSA$C_SRV_CREATE_SYSTEM_LOG = 13; 
literal NSA$C_SRV_AUDIT_CHANGE = 14;    
literal NSA$C_SRV_REDIRECT_SYSTEM_LOG = 15; 
literal NSA$C_SRV_REM_ENABLE = 16;      
literal NSA$C_SRV_REM_DISABLE = 17;     
literal NSA$C_SRV_REM_MONITOR_INTERVAL = 18; 
literal NSA$C_SRV_REM_RESUME_INTERVAL = 19; 
literal NSA$C_SRV_REM_MONITOR_MODE = 20; 
literal NSA$C_SRV_REM_FINAL_ACTION = 21; 
literal NSA$C_SRV_REM_WARN_THRESHOLD = 22; 
literal NSA$C_SRV_REM_ACTION_THRESHOLD = 23; 
literal NSA$C_SRV_REM_RESUME_THRESHOLD = 24; 
literal NSA$C_SRV_REM_RESUME = 25;      
literal NSA$C_SRV_REM_ADD_EXCLUDE = 26; 
literal NSA$C_SRV_REM_DEL_EXCLUDE = 27; 
literal NSA$C_SRV_LISTENER_ENABLE = 28; 
literal NSA$C_SRV_LISTENER_DISABLE = 29; 
literal NSA$C_SRV_NEW_LOG = 30;         
literal NSA$C_SRV_RESTART = 31;         
literal NSA$C_SRV_LOCK_SERVER = 32;     
literal NSA$C_SRV_RESERVED_1 = 33;      
literal NSA$C_SRV_RESERVED_2 = 34;      
literal NSA$C_SRV_RESERVED_3 = 35;      
literal NSA$C_SRV_RESERVED_4 = 36;      
literal NSA$C_SRV_FAILURE_MODE = 37;    
literal NSA$C_SRV_SNAPSHOT = 38;        
literal NSA$C_SRV_BACKLOG_TOTAL = 39;   
literal NSA$C_SRV_BACKLOG_PROCESS = 40; 
literal NSA$C_SRV_INITIATE = 41;        
literal NSA$C_SRV_RESTART_ALL = 42;     
literal NSA$C_SRV_RESTART_OBJECT = 43;  
literal NSA$C_SRV_MAX_CODE = 44;        
literal NSA$C_REM_SPACE = 1;            
literal NSA$C_REM_PERCENTAGE = 2;       
literal NSA$C_REM_COUNT = 3;            
literal NSA$C_REM_TIME = 4;             
literal NSA$C_REM_MAX_MODE = 5;         
literal NSA$C_REM_PURGE_OLD = 1;        
literal NSA$C_REM_IGNORE_NEW = 2;       
literal NSA$C_REM_RESTART = 3;          
literal NSA$C_REM_CRASH = 4;            
literal NSA$C_REM_MAX_FINAL = 5;        
literal NSA$C_AUDIT_DISABLED = 1;
literal NSA$C_AUDIT_ENABLED = 2;
literal NSA$C_AUDIT_TERMINATE = 3;
literal NSA$C_AUDIT_INITIATE = 4;
literal NSA$C_SNAPSHOT_SAVE = 5;        
literal NSA$C_SNAPSHOT_ABORT = 6;       
literal NSA$C_SNAPSHOT_STARTUP = 7;     
literal NSA$C_SNAPSHOT_ACCESS = 8;      
literal NSA$C_AUDIT_STATE = 9;          
literal NSA$C_ALARM_STATE = 10;         
literal NSA$C_AUDIT_LOG_FINAL = 11;     
literal NSA$C_AUDIT_LOG_FIRST = 12;     
literal NSA$C_AUDIT_BAD_TCB_AUDIT = 13; 
literal NSA$C_AUDIT_MAX_CODE = 14;
literal NSA$C_FAIL_WAIT = 1;            
literal NSA$C_FAIL_CRASH = 2;           
literal NSA$C_FAIL_IGNORE = 3;          
literal NSA$C_FAIL_MAX_MODE = 4;        
literal NSA$C_BATCH = 1;
literal NSA$C_DETACHED = 2;
literal NSA$C_DIALUP = 3;
literal NSA$C_LOCAL = 4;
literal NSA$C_NETWORK = 5;
literal NSA$C_REMOTE = 6;
literal NSA$C_SUBPROCESS = 7;
literal NSA$C_SERVER = 8;
literal NSA$C_JOBTYPE_MAX_CODE = 9;
literal NSA$C_INSTALL_ADD = 1;
literal NSA$C_INSTALL_REMOVE = 2;
literal NSA$C_INSTALL_MAX_CODE = 3;

literal NSA$M_INS_SPARE_0 = %X'1';
literal NSA$M_INS_OPEN = %X'2';
literal NSA$M_INS_HEADER_RESIDENT = %X'4';
literal NSA$M_INS_SHARED = %X'8';
literal NSA$M_INS_EXECUTE_ONLY = %X'10';
literal NSA$M_INS_WRITEABLE = %X'20';
literal NSA$M_INS_PRIVILEGED = %X'40';
literal NSA$M_INS_PROTECTED = %X'80';
literal NSA$M_INS_NOPURGE = %X'100';
literal NSA$M_INS_ACCOUNTING = %X'200';
literal NSA$M_INS_AUTHORIZED = %X'400';
literal NSA$M_INS_SIGNAL = %X'800';
literal NSA$S_FILL_221_ = 4;
macro NSA$V_INS_SPARE_0 = 0,0,1,0 %;
macro NSA$V_INS_OPEN = 0,1,1,0 %;
macro NSA$V_INS_HEADER_RESIDENT = 0,2,1,0 %;
macro NSA$V_INS_SHARED = 0,3,1,0 %;
macro NSA$V_INS_EXECUTE_ONLY = 0,4,1,0 %;
macro NSA$V_INS_WRITEABLE = 0,5,1,0 %;
macro NSA$V_INS_PRIVILEGED = 0,6,1,0 %;
macro NSA$V_INS_PROTECTED = 0,7,1,0 %;
macro NSA$V_INS_NOPURGE = 0,8,1,0 %;
macro NSA$V_INS_ACCOUNTING = 0,9,1,0 %;
macro NSA$V_INS_AUTHORIZED = 0,10,1,0 %;
macro NSA$V_INS_SIGNAL = 0,11,1,0 %;
literal NSA$C_INS_SPARE_0 = 1;
literal NSA$C_INS_OPEN = 2;
literal NSA$C_INS_HEADER_RESIDENT = 3;
literal NSA$C_INS_SHARED = 4;
literal NSA$C_INS_EXECUTE_ONLY = 5;
literal NSA$C_INS_WRITEABLE = 6;
literal NSA$C_INS_PRIVILEGED = 7;
literal NSA$C_INS_PROTECTED = 8;
literal NSA$C_INS_NOPURGE = 9;
literal NSA$C_INS_ACCOUNTING = 10;
literal NSA$C_INS_AUTHORIZED = 11;
literal NSA$C_INS_SIGNAL = 12;
literal NSA$C_INS_MAX_CODE = 13;
literal NSA$C_VOL_DISMOUNT = 1;
literal NSA$C_VOL_MOUNT = 2;
literal NSA$C_VOL_MAX_CODE = 3;
literal NSA$M_MNT_FOREIGN = %X'1';
literal NSA$M_MNT_GROUP = %X'2';
literal NSA$M_MNT_NOASSIST = %X'4';
literal NSA$M_MNT_NODISKQ = %X'8';
literal NSA$M_MNT_NOHDR3 = %X'10';
literal NSA$M_MNT_NOLABEL = %X'20';
literal NSA$M_MNT_NOWRITE = %X'40';
literal NSA$M_MNT_OVR_ACCESS = %X'80';
literal NSA$M_MNT_OVR_EXP = %X'100';
literal NSA$M_MNT_OVR_IDENT = %X'200';
literal NSA$M_MNT_OVR_SETID = %X'400';
literal NSA$M_MNT_READCHECK = %X'800';
literal NSA$M_MNT_SHARE = %X'1000';
literal NSA$M_MNT_MESSAGE = %X'2000';
literal NSA$M_MNT_SYSTEM = %X'4000';
literal NSA$M_MNT_WRITECHECK = %X'8000';
literal NSA$M_MNT_WRITETHRU = %X'10000';
literal NSA$M_MNT_NOCACHE = %X'20000';
literal NSA$M_MNT_OVR_LOCK = %X'40000';
literal NSA$M_MNT_NOMNTVER = %X'80000';
literal NSA$M_MNT_NOUNLOAD = %X'100000';
literal NSA$M_MNT_TAPE_DATA_WRITE = %X'200000';
literal NSA$M_MNT_NOCOPY = %X'400000';
literal NSA$M_MNT_NOAUTO = %X'800000';
literal NSA$M_MNT_INIT_ALL = %X'1000000';
literal NSA$M_MNT_INIT_CONT = %X'2000000';
literal NSA$M_MNT_OVR_VOLO = %X'4000000';
literal NSA$M_MNT_INTERCHG = %X'8000000';
literal NSA$M_MNT_CLUSTER = %X'10000000';
literal NSA$M_MNT_NOREBUILD = %X'20000000';
literal NSA$M_MNT_OVR_SHAMEM = %X'40000000';
literal NSA$M_MNT_MULTI_VOL = %X'80000000';
literal NSA$S_FILL_224_ = 8;
macro NSA$V_MNT_FOREIGN = 0,0,1,0 %;
macro NSA$V_MNT_GROUP = 0,1,1,0 %;
macro NSA$V_MNT_NOASSIST = 0,2,1,0 %;
macro NSA$V_MNT_NODISKQ = 0,3,1,0 %;
macro NSA$V_MNT_NOHDR3 = 0,4,1,0 %;
macro NSA$V_MNT_NOLABEL = 0,5,1,0 %;
macro NSA$V_MNT_NOWRITE = 0,6,1,0 %;
macro NSA$V_MNT_OVR_ACCESS = 0,7,1,0 %;
macro NSA$V_MNT_OVR_EXP = 0,8,1,0 %;
macro NSA$V_MNT_OVR_IDENT = 0,9,1,0 %;
macro NSA$V_MNT_OVR_SETID = 0,10,1,0 %;
macro NSA$V_MNT_READCHECK = 0,11,1,0 %;
macro NSA$V_MNT_SHARE = 0,12,1,0 %;
macro NSA$V_MNT_MESSAGE = 0,13,1,0 %;
macro NSA$V_MNT_SYSTEM = 0,14,1,0 %;
macro NSA$V_MNT_WRITECHECK = 0,15,1,0 %;
macro NSA$V_MNT_WRITETHRU = 0,16,1,0 %;
macro NSA$V_MNT_NOCACHE = 0,17,1,0 %;
macro NSA$V_MNT_OVR_LOCK = 0,18,1,0 %;
macro NSA$V_MNT_NOMNTVER = 0,19,1,0 %;
macro NSA$V_MNT_NOUNLOAD = 0,20,1,0 %;
macro NSA$V_MNT_TAPE_DATA_WRITE = 0,21,1,0 %;
macro NSA$V_MNT_NOCOPY = 0,22,1,0 %;
macro NSA$V_MNT_NOAUTO = 0,23,1,0 %;
macro NSA$V_MNT_INIT_ALL = 0,24,1,0 %;
macro NSA$V_MNT_INIT_CONT = 0,25,1,0 %;
macro NSA$V_MNT_OVR_VOLO = 0,26,1,0 %;
macro NSA$V_MNT_INTERCHG = 0,27,1,0 %;
macro NSA$V_MNT_CLUSTER = 0,28,1,0 %;
macro NSA$V_MNT_NOREBUILD = 0,29,1,0 %;
macro NSA$V_MNT_OVR_SHAMEM = 0,30,1,0 %;
macro NSA$V_MNT_MULTI_VOL = 0,31,1,0 %;
macro NSA$V_MNT_DISKQ = 4,0,1,0 %;
macro NSA$V_MNT_COMPACTION = 4,1,1,0 %;
macro NSA$V_MNT_INCLUDE = 4,2,1,0 %;
macro NSA$V_MNT_PASS2 = 4,3,1,0 %;
macro NSA$V_MNT_OVR_NOFE = 4,4,1,0 %;
macro NSA$V_MNT_SCRATCH = 4,5,1,0 %;
macro NSA$V_MNT_CDROM = 4,6,1,0 %;
macro NSA$V_MNT_XAR = 4,7,1,0 %;
macro NSA$V_MNT_DSI = 4,8,1,0 %;
macro NSA$V_MNT_SUBSYSTEM = 4,9,1,0 %;
macro NSA$V_MNT_NOCOMPACTION = 4,10,1,0 %;
macro NSA$V_MNT_OVR_SECURITY = 4,11,1,0 %;
macro NSA$V_MNT_OVR_LIMITED_SEARCH = 4,12,1,0 %;
macro NSA$V_MNT_POOL = 4,13,1,0 %;
literal NSA$C_MNT_MAX_CODE = 47;        
literal NSA$C_DMT_MAX_CODE = 5;         
literal NSA$M_DMT_NOUNLOAD = %X'1';
literal NSA$M_DMT_UNIT = %X'2';
literal NSA$M_DMT_ABORT = %X'4';
literal NSA$M_DMT_CLUSTER = %X'8';
literal NSA$S_FILL_227_ = 4;
macro NSA$V_DMT_NOUNLOAD = 0,0,1,0 %;
macro NSA$V_DMT_UNIT = 0,1,1,0 %;
macro NSA$V_DMT_ABORT = 0,2,1,0 %;
macro NSA$V_DMT_CLUSTER = 0,3,1,0 %;
literal NSA$C_NETPROXY_ADD = 1;
literal NSA$C_NETPROXY_DELETE = 2;
literal NSA$C_NETPROXY_MODIFY = 3;
literal NSA$C_NETPROXY_NCP = 4;
literal NSA$C_NETPROXY_SHUTDOWN = 5;
literal NSA$C_NETPROXY_STARTUP = 6;
literal NSA$C_NETPROXY_CREATE = 7;
literal NSA$C_NETPROXY_MAX_CODE = 8;
literal NSA$C_PERSONA_CREATE = 1;
literal NSA$C_PERSONA_DELETE = 2;
literal NSA$C_PERSONA_MODIFY = 3;
literal NSA$C_PERSONA_MAX_CODE = 4;

literal NSA$C_FILE_ACCESS = 1;
literal NSA$C_DEVICE_ACCESS = 2;
literal NSA$C_QUEUE_ACCESS = 3;
literal NSA$C_CEF_ACCESS = 4;
literal NSA$C_LNM_ACCESS = 5;
literal NSA$C_PROCESS_ACCESS = 6;
literal NSA$C_GRPGBL_ACCESS = 7;
literal NSA$C_SYSGBL_ACCESS = 8;
literal NSA$C_CAPABILITY_ACCESS = 9;
literal NSA$C_EVENT_ACCESS = 10;
literal NSA$C_LOCK_ACCESS = 11;
literal NSA$C_VOLUME_ACCESS = 12;
literal NSA$C_OBJECT_MAX_CODE = 13;
literal NSA$C_SYSUAF_ADD = 1;
literal NSA$C_SYSUAF_COPY = 2;
literal NSA$C_SYSUAF_DELETE = 3;
literal NSA$C_SYSUAF_MODIFY = 4;
literal NSA$C_SYSUAF_RENAME = 5;
literal NSA$C_SYSUAF_MAX_CODE = 6;
literal NSA$C_RDB_ADD_ID = 1;
literal NSA$C_RDB_CREATE = 2;
literal NSA$C_RDB_GRANT_ID = 3;
literal NSA$C_RDB_MOD_HOLDER = 4;
literal NSA$C_RDB_MOD_ID = 5;
literal NSA$C_RDB_REM_ID = 6;
literal NSA$C_RDB_REVOKE_ID = 7;
literal NSA$C_RDB_MAX_CODE = 8;
literal NSA$C_PRVAUD_SUCCESS = 1;       
literal NSA$C_PRVAUD_FAILURE = 2;       
literal NSA$C_PRVAUD_MAX_CODE = 3;
literal NSA$C_SYSTIM_SET = 1;           
literal NSA$C_SYSTIM_CAL = 2;           
literal NSA$C_SYSTIM_MAX_CODE = 3;
literal NSA$C_SYSGEN_SET = 1;           
literal NSA$C_SYSGEN_MAX_CODE = 2;
literal NSA$C_OBJ_CREATE = 1;           
literal NSA$C_CREATE_MAX_CODE = 2;
literal NSA$C_OBJ_DELETE = 1;           
literal NSA$C_DELETE_MAX_CODE = 2;
literal NSA$C_OBJ_ACCESS = 1;           
literal NSA$C_ACCESS_MAX_CODE = 2;
literal NSA$C_OBJ_DEACCESS = 1;         
literal NSA$C_DEACCESS_MAX_CODE = 2;
literal NSA$C_CNX_REQUEST = 1;          
literal NSA$C_CNX_ACCEPT = 2;           
literal NSA$C_CNX_REJECT = 3;           
literal NSA$C_CNX_DISCONNECT = 4;       
literal NSA$C_CNX_ABORT = 5;            
literal NSA$C_CNX_DECNET_CREATE = 6;    
literal NSA$C_CNX_DECNET_DELETE = 7;    
literal NSA$C_CNX_IPC_OPEN = 8;         
literal NSA$C_CNX_IPC_CLOSE = 9;        
literal NSA$C_CNX_INC_REQUEST = 10;     
literal NSA$C_CNX_INC_ACCEPT = 11;      
literal NSA$C_CNX_INC_REJECT = 12;      
literal NSA$C_CNX_INC_DISCONNECT = 13;  
literal NSA$C_CNX_INC_ABORT = 14;       
literal NSA$C_CNX_MAX_CODE = 15;
literal NSA$C_NCP_COMMAND = 1;          
literal NSA$C_NCP_MAX_CODE = 2;
literal NSA$C_PRC_CREPRC = 1;           
literal NSA$C_PRC_DELPRC = 2;           
literal NSA$C_PRC_SCHDWK = 3;           
literal NSA$C_PRC_CANWAK = 4;           
literal NSA$C_PRC_WAKE = 5;             
literal NSA$C_PRC_SUSPND = 6;           
literal NSA$C_PRC_RESUME = 7;           
literal NSA$C_PRC_GRANTID = 8;          
literal NSA$C_PRC_REVOKID = 9;          
literal NSA$C_PRC_GETJPI = 10;          
literal NSA$C_PRC_FORCEX = 11;          
literal NSA$C_PRC_SIGPRC = 12;          
literal NSA$C_PRC_SETPRI = 13;          
literal NSA$C_PRC_PRCTERM = 14;         
literal NSA$C_PRC_CPU_CAPABILITIES = 15; 
literal NSA$C_PRC_PROCESS_CAPABILITIES = 16; 
literal NSA$C_PRC_PROCESS_AFFINITY = 17; 
literal NSA$C_PRC_SET_IMPLICIT_AFFINITY = 18; 
literal NSA$C_PRC_MAX_CODE = 19;
literal NSA$C_INSTANTIATE_ORB = 1;      

literal NSA$C_DISTRIBUTE_ORB = 2;       
literal NSA$C_OBJECT_AUDIT_CHANGE = 3;  
literal NSA$C_DISTRIBUTE_NOTICE = 4;    

literal NSA$C_OBJSRV_MAX_CODE = 5;
literal NSA$C_AUTH_NETWORK_LOGIN = 2;   
literal NSA$C_AUTH_RENEW_LOGIN = 3;     
literal NSA$C_AUTH_INIT_SEC_CTX = 4;    
literal NSA$C_AUTH_ACC_SEC_CTX = 5;     
literal NSA$C_AUTH_INSTALL_DEF_CRED = 6; 
literal NSA$C_AUTH_ACQUIRE_CRED = 7;    
literal NSA$C_AUTH_GRANT_CRED = 8;      
literal NSA$C_AUTH_RELEASE_CRED = 9;    
literal NSA$C_AUTH_DEL_SEC_CTX = 10;    
literal NSA$C_AUTH_PROC_CTX_TOKEN = 11; 
literal NSA$C_AUTH_VERIFY = 12;         
literal NSA$C_AUTH_SIGN = 13;           
literal NSA$C_AUTH_SEAL = 14;           
literal NSA$C_AUTH_UNSEAL = 15;         
literal NSA$C_CA_STARTUP = 16;          
literal NSA$C_CA_EXIT = 17;             
literal NSA$C_CA_ADD_DIRECTORY = 18;    
literal NSA$C_CA_ADD_PRINCIPAL = 19;    
literal NSA$C_CA_LINK_DIRECTORY = 20;   
literal NSA$C_CA_CHANGE_LINK = 21;      
literal NSA$C_CA_CHANGE_PRINCIPAL = 22; 
literal NSA$C_CA_REMOVE_DIRECTORY = 23; 
literal NSA$C_CA_REMOVE_PRINCIPAL = 24; 
literal NSA$C_CA_CERTIFICATE_DELETED = 25; 
literal NSA$C_CA_REVOKED_CERT_FOUND = 26; 
literal NSA$C_CA_PASSWORD_CHANGE = 27;  
literal NSA$C_CSS_OBJECT_CREATED = 28;  
literal NSA$C_CSS_OBJECT_DELETED = 29;  
literal NSA$C_CSS_CERTIFICATE_DELETED = 30; 
literal NSA$C_CSS_CREDENTIAL_READ = 31; 
literal NSA$C_CSS_CERTIFICATE_ADDED = 32; 
literal NSA$C_CSS_CREDENTIAL_WRITTEN = 33; 
literal NSA$C_CSS_USER_CHANGED_PASSWORD = 34; 
literal NSA$C_CSS_UPDATED_SECONDARY = 35; 
literal NSA$C_CSS_DATABASE_UPDATED = 36; 
literal NSA$C_CSS_STARTED = 37;         
literal NSA$C_CSS_WINDOW_OPEN = 38;     
literal NSA$C_CSS_WINDOW_CLOSED = 39;   
literal NSA$C_CSS_LOCTABLE_UPDATED = 40; 
literal NSA$C_AUTH_MAX_CODE = 41;
literal NSA$C_PKT_ACCESS_DESIRED = 1;   
literal NSA$C_PKT_ACCOUNT = 2;          
literal NSA$C_PKT_ALARM_NAME = 3;       
literal NSA$C_PKT_APPL_DATA = 4;        
literal NSA$C_PKT_AUDIT_FLAGS = 5;      
literal NSA$C_PKT_AUDIT_NAME = 6;       
literal NSA$C_PKT_SYSTEM_NAME = 7;      
literal NSA$C_PKT_SYSTEM_ID = 8;        
literal NSA$C_PKT_DEVICE_NAME = 9;      
literal NSA$C_PKT_DISMOUNT_FLAGS = 10;  
literal NSA$C_PKT_HOLDER_NAME = 11;     
literal NSA$C_PKT_HOLDER_OWNER = 12;    
literal NSA$C_PKT_ID_ATTRIBUTES = 13;   
literal NSA$C_PKT_ID_NAME = 14;         
literal NSA$C_PKT_ID_NEW_NAME = 15;     
literal NSA$C_PKT_ID_VALUE = 16;        
literal NSA$C_PKT_ID_NEW_VALUE = 17;    
literal NSA$C_PKT_IDENTIFIERS_USED = 18; 
literal NSA$C_PKT_IMAGE_NAME = 19;      
literal NSA$C_PKT_INSTALL_FILE = 20;    
literal NSA$C_PKT_INSTALL_FLAGS = 21;   
literal NSA$C_PKT_INSTALL_PRIVS = 22;   
literal NSA$C_PKT_LOGICAL_NAME = 23;    
literal NSA$C_PKT_MOUNT_FLAGS = 24;     
literal NSA$C_PKT_NEW_DATA = 25;        
literal NSA$C_PKT_FILE_ID = 26;         
literal NSA$C_PKT_OBJECT_MIN_CLASS = 27; 
literal NSA$C_PKT_OBJECT_MAX_CLASS = 28; 
literal NSA$C_PKT_OBJECT_NAME = 29;     
literal NSA$C_PKT_OBJECT_NAME_2 = 30;   
literal NSA$C_PKT_OBJECT_OWNER = 31;    
literal NSA$C_PKT_OBJECT_PROTECTION = 32; 
literal NSA$C_PKT_OBJECT_TYPE = 33;     
literal NSA$C_PKT_ORIGINAL_DATA = 34;   
literal NSA$C_PKT_PARENT_ID = 35;       
literal NSA$C_PKT_PARENT_NAME = 36;     
literal NSA$C_PKT_PARENT_OWNER = 37;    
literal NSA$C_PKT_PARENT_USERNAME = 38; 
literal NSA$C_PKT_PASSWORD = 39;        
literal NSA$C_PKT_PRIVS_USED = 40;      
literal NSA$C_PKT_PROCESS_ID = 41;      
literal NSA$C_PKT_PROCESS_NAME = 42;    
literal NSA$C_PKT_REMOTE_NODE_ID = 43;  
literal NSA$C_PKT_REMOTE_NODENAME = 44; 
literal NSA$C_PKT_REMOTE_USERNAME = 45; 
literal NSA$C_PKT_SUBJECT_CLASS = 46;   
literal NSA$C_PKT_SUBJECT_OWNER = 47;   
literal NSA$C_PKT_FINAL_STATUS = 48;    
literal NSA$C_PKT_TERMINAL = 49;        
literal NSA$C_PKT_TIME_STAMP = 50;      
literal NSA$C_PKT_UAF_ADD = 51;         
literal NSA$C_PKT_UAF_DELETE = 52;      
literal NSA$C_PKT_UAF_MODIFY = 53;      
literal NSA$C_PKT_UAF_COPY = 54;        
literal NSA$C_PKT_UAF_FIELDS = 55;      
literal NSA$C_PKT_USERNAME = 56;        
literal NSA$C_PKT_UAF_SOURCE = 57;      
literal NSA$C_PKT_UAF_RENAME = 58;      
literal NSA$C_PKT_VOLUME_NAME = 59;     
literal NSA$C_PKT_VOLUME_SET_NAME = 60; 
literal NSA$C_PKT_SERVER_ACCOUNT = 61;  
literal NSA$C_PKT_SERVER_SYSTEM_ID = 62; 
literal NSA$C_PKT_SERVER_SYSTEM_NAME = 63; 
literal NSA$C_PKT_SERVER_FINAL_STATUS = 64; 
literal NSA$C_PKT_SERVER_IMAGE_NAME = 65; 
literal NSA$C_PKT_SERVER_PARENT_ID = 66; 
literal NSA$C_PKT_SERVER_PARENT_OWNER = 67; 
literal NSA$C_PKT_SERVER_PARENT_NAME = 68; 
literal NSA$C_PKT_SERVER_PROCESS_ID = 69; 
literal NSA$C_PKT_SERVER_PROCESS_NAME = 70; 
literal NSA$C_PKT_SERVER_SUBJECT_CLASS = 71; 
literal NSA$C_PKT_SERVER_SUBJECT_OWNER = 72; 
literal NSA$C_PKT_SERVER_TERMINAL = 73; 
literal NSA$C_PKT_SERVER_TIME_STAMP = 74; 
literal NSA$C_PKT_SERVER_USERNAME = 75; 
literal NSA$C_PKT_AUDIT_DISABLE = 76;   
literal NSA$C_PKT_AUDIT_ENABLE = 77;    
literal NSA$C_PKT_ALARM_DISABLE = 78;   
literal NSA$C_PKT_ALARM_ENABLE = 79;    
literal NSA$C_PKT_NOP = 80;             
literal NSA$C_PKT_REPLY_MAILBOX = 81;   
literal NSA$C_PKT_DEFAULT_USERNAME = 82; 
literal NSA$C_PKT_LOCAL_USERNAME = 83;  
literal NSA$C_PKT_FIELD_NAME = 84;      
literal NSA$C_PKT_LISTENER_DEVICE = 85; 
literal NSA$C_PKT_FIELD_TITLE_STR = 86; 
literal NSA$C_PKT_FIELD_DATA_STR = 87;  
literal NSA$C_PKT_MESSAGE_TYPE_STR = 88; 
literal NSA$C_PKT_EVENT_TYPE = 89;      
literal NSA$C_PKT_EVENT_SUBTYPE = 90;   
literal NSA$C_PKT_EVENT_FACILITY = 91;  
literal NSA$C_PKT_DIRECTORY_ENTRY = 92; 
literal NSA$C_PKT_DIRECTORY_ID = 93;    

literal NSA$C_PKT_CUSTOMER_1 = 94;      
literal NSA$C_PKT_CUSTOMER_2 = 95;
literal NSA$C_PKT_CUSTOMER_3 = 96;
literal NSA$C_PKT_CUSTOMER_4 = 97;
literal NSA$C_PKT_CUSTOMER_5 = 98;
literal NSA$C_PKT_CUSTOMER_6 = 99;
literal NSA$C_PKT_CUSTOMER_7 = 100;
literal NSA$C_PKT_CUSTOMER_8 = 101;
literal NSA$C_PKT_CSS_1 = 102;          
literal NSA$C_PKT_CSS_2 = 103;
literal NSA$C_PKT_CSS_3 = 104;
literal NSA$C_PKT_CSS_4 = 105;
literal NSA$C_PKT_CSS_5 = 106;
literal NSA$C_PKT_CSS_6 = 107;
literal NSA$C_PKT_CSS_7 = 108;
literal NSA$C_PKT_CSS_8 = 109;
literal NSA$C_PKT_LP_1 = 110;           
literal NSA$C_PKT_LP_2 = 111;
literal NSA$C_PKT_LP_3 = 112;
literal NSA$C_PKT_LP_4 = 113;
literal NSA$C_PKT_LP_5 = 114;
literal NSA$C_PKT_LP_6 = 115;
literal NSA$C_PKT_LP_7 = 116;
literal NSA$C_PKT_LP_8 = 117;
literal NSA$C_PKT_ALARM_FAILURE = 118;  
literal NSA$C_PKT_AUDIT_FAILURE = 119;  
literal NSA$C_PKT_SEVMS_0 = 120;        
literal NSA$C_PKT_SEVMS_1 = 121;        
literal NSA$C_PKT_SEVMS_2 = 122;        
literal NSA$C_PKT_SEVMS_3 = 123;        
literal NSA$C_PKT_SEVMS_4 = 124;        
literal NSA$C_PKT_SEVMS_5 = 125;        
literal NSA$C_PKT_SEVMS_6 = 126;        
literal NSA$C_PKT_SEVMS_7 = 127;        
literal NSA$C_PKT_SEVMS_8 = 128;        
literal NSA$C_PKT_SEVMS_9 = 129;        
literal NSA$C_PKT_SEVMS_10 = 130;       
literal NSA$C_PKT_SEVMS_11 = 131;       
literal NSA$C_PKT_SEVMS_12 = 132;       
literal NSA$C_PKT_SEVMS_13 = 133;       
literal NSA$C_PKT_SEVMS_14 = 134;       
literal NSA$C_PKT_SEVMS_15 = 135;       
literal NSA$C_PKT_SEVMS_16 = 136;       
literal NSA$C_PKT_SEVMS_17 = 137;       
literal NSA$C_PKT_SEVMS_18 = 138;       
literal NSA$C_PKT_SNAPSHOT_TIME = 139;  
literal NSA$C_PKT_TRANSPORT_NAME = 140; 
literal NSA$C_PKT_DECNET_LINK_ID = 141; 
literal NSA$C_PKT_DECNET_OBJECT_NAME = 142; 
literal NSA$C_PKT_DECNET_OBJECT_NUMBER = 143; 
literal NSA$C_PKT_REMOTE_LINK_ID = 144; 
literal NSA$C_PKT_COMMAND_LINE = 145;   
literal NSA$C_PKT_ASSOCIATION_NAME = 146; 
literal NSA$C_PKT_REM_ASSOCIATION_NAME = 147; 
literal NSA$C_PKT_CONNECTION_ID = 148;  
literal NSA$C_PKT_MESSAGE = 149;        
literal NSA$C_PKT_MSGFILNAM = 150;      
literal NSA$C_PKT_OBJECT_POINTER = 151; 
literal NSA$C_PKT_ID_NEW_ATTRIBUTES = 152; 
literal NSA$C_PKT_SYSTIM_NEW = 153;     
literal NSA$C_PKT_SYSTIM_OLD = 154;     
literal NSA$C_PKT_PARAMS_WRITE = 155;   
literal NSA$C_PKT_PARAMS_INUSE = 156;   
literal NSA$C_PKT_MATCHING_ACE = 157;   
literal NSA$C_PKT_SNAPSHOT_SAVE_FILNAM = 158; 
literal NSA$C_PKT_MAILBOX_UNIT = 159;   
literal NSA$C_PKT_NEW_OWNER = 160;      
literal NSA$C_PKT_NEW_PRIORITY = 161;   
literal NSA$C_PKT_OLD_PRIORITY = 162;   
literal NSA$C_PKT_DIAG_FUNC = 163;      
literal NSA$C_PKT_RESOURCE_NAME = 164;  
literal NSA$C_PKT_LNM_TABLE_NAME = 165; 
literal NSA$C_PKT_LNM_PARENT_NAME = 166; 
literal NSA$C_PKT_EFC_NAME = 167;       
literal NSA$C_PKT_TARGET_PROCESS_CLASS = 168; 
literal NSA$C_PKT_TARGET_PROCESS_ID = 169; 
literal NSA$C_PKT_TARGET_PROCESS_NAME = 170; 
literal NSA$C_PKT_TARGET_PROCESS_OWNER = 171; 
literal NSA$C_PKT_TARGET_USERNAME = 172; 
literal NSA$C_PKT_NEW_PRIVILEGES = 173; 
literal NSA$C_PKT_OLD_PRIVILEGES = 174; 
literal NSA$C_PKT_REMOTE_NODE_FULLNAME = 175; 
literal NSA$C_PKT_UID = 176;            
literal NSA$C_PKT_UNUSED_3 = 177;       
literal NSA$C_PKT_UNUSED_4 = 178;       
literal NSA$C_PKT_UNUSED_5 = 179;       
literal NSA$C_PKT_UNUSED_6 = 180;       
literal NSA$C_PKT_UNUSED_7 = 181;       
literal NSA$C_PKT_UNUSED_8 = 182;       
literal NSA$C_PKT_UNUSED_9 = 183;       
literal NSA$C_PKT_UNUSED_10 = 184;      
literal NSA$C_PKT_PRIVS_MISSING = 185;  
literal NSA$C_PKT_TARGET_DEVICE_NAME = 186; 
literal NSA$C_PKT_SECTION_NAME = 187;   
literal NSA$C_PKT_ID_VALUE_ASCII = 188; 
literal NSA$C_PKT_OBJECT_CLASS = 189;   
literal NSA$C_PKT_SUPPRESS = 190;       
literal NSA$C_PKT_SNAPSHOT_BOOTFILE = 191; 
literal NSA$C_PKT_SOURCE_PROCESS_ID = 192; 
literal NSA$C_PKT_REQUEST_NUMBER = 193; 
literal NSA$C_PKT_ACCESS_MODE = 194;    
literal NSA$C_PKT_SYSTEM_SERVICE_NAME = 195; 
literal NSA$C_PKT_NEW_AUTH_PRIVILEGES = 196; 
literal NSA$C_PKT_OLD_AUTH_PRIVILEGES = 197; 
literal NSA$C_PKT_NEW_DEF_PRIVILEGES = 198; 
literal NSA$C_PKT_OLD_DEF_PRIVILEGES = 199; 
literal NSA$C_PKT_NEW_PROCESS_ID = 200; 
literal NSA$C_PKT_NEW_PROCESS_OWNER = 201; 
literal NSA$C_PKT_NEW_PROCESS_NAME = 202; 
literal NSA$C_PKT_NEW_IMAGE_NAME = 203; 
literal NSA$C_PKT_NEW_USERNAME = 204;   
literal NSA$C_PKT_DEACCESS_KEY = 205;   
literal NSA$C_PKT_OBJECT_RIGHTS_BLOCK = 206; 
literal NSA$C_PKT_OBJSRV_COMPLETE = 207; 
literal NSA$C_PKT_TLV_ORB = 208;        
literal NSA$C_PKT_FILE_NAME = 209;      
literal NSA$C_PKT_DIRECTORY_NAME = 210; 
literal NSA$C_PKT_SEQUENCE_KEY = 211;   
literal NSA$C_PKT_PRINCIPAL_FULLNAME = 212;
literal NSA$C_PKT_TARGET_FULLNAME = 213;
literal NSA$C_PKT_SOURCE_FULLNAME = 214;
literal NSA$C_PKT_DESIRED_FULLNAME = 215;
literal NSA$C_PKT_CLAIMED_USERNAME = 216;
literal NSA$C_PKT_CLAIMED_FULLNAME = 217;
literal NSA$C_PKT_CLAIMED_NODENAME = 218;
literal NSA$C_PKT_TIME_REQ = 219;
literal NSA$C_PKT_TIME_REC = 220;
literal NSA$C_PKT_REQ_FLAGS = 221;
literal NSA$C_PKT_RET_FLAGS = 222;
literal NSA$C_PKT_LIFETIME_REQ = 223;
literal NSA$C_PKT_LIFETIME_REC = 224;
literal NSA$C_PKT_CRED_USAGE = 225;
literal NSA$C_PKT_CONTEXT_HANDLE = 226;
literal NSA$C_PKT_QOP_STATE = 227;
literal NSA$C_PKT_CONF_STATE = 228;
literal NSA$C_PKT_DELEG_CRED_HANDLE = 229;
literal NSA$C_PKT_MAJOR_STATUS = 230;
literal NSA$C_PKT_DAS_1 = 231;
literal NSA$C_PKT_DAS_2 = 232;
literal NSA$C_PKT_DAS_3 = 233;
literal NSA$C_PKT_DAS_4 = 234;
literal NSA$C_PKT_DAS_5 = 235;
literal NSA$C_PKT_DAS_6 = 236;
literal NSA$C_PKT_DAS_7 = 237;
literal NSA$C_PKT_DAS_8 = 238;
literal NSA$C_PKT_DAS_9 = 239;
literal NSA$C_PKT_DAS_10 = 240;
literal NSA$C_PKT_STATE_FILE_NAME = 241;
literal NSA$C_PKT_DIRECTORY_FULLNAME = 242;
literal NSA$C_PKT_FROM_DIR_FULLNAME = 243;
literal NSA$C_PKT_TO_DIR_FULLNAME = 244;
literal NSA$C_PKT_ISSUER_FULLNAME = 245;
literal NSA$C_PKT_SUBJECT_FULLNAME = 246;
literal NSA$C_PKT_CERTIF_TYPE = 247;
literal NSA$C_PKT_CSS_SECONDARY_NAME = 248;
literal NSA$C_PKT_CSS_OBJECT_FULLNAME = 249;
literal NSA$C_PKT_CSS_REQUEST_FROM = 250;
literal NSA$C_PKT_CSS_PRIMARY_NAME = 251;
literal NSA$C_PKT_CERTIF_SERIAL_NUMBER = 252;
literal NSA$C_PKT_WINDOW_END_TIME = 253;
literal NSA$C_PKT_LOG_CLOSED = 254;     
literal NSA$C_PKT_LOG_OPENED = 255;     
literal NSA$C_PKT_IDENTIFIERS_MISSING = 256; 
literal NSA$C_PKT_SENSITIVE_FIELD_NAME = 257;
literal NSA$C_PKT_SENSITIVE_ORIG_DATA = 258;
literal NSA$C_PKT_SENSITIVE_NEW_DATA = 259;
literal NSA$C_PKT_SENSITIVE_FIELD_TITLE = 260;
literal NSA$C_PKT_SENSITIVE_FIELD_DATA = 261;
literal NSA$C_PKT_INSTALL_AUTHPRIVS = 262; 
literal NSA$C_PKT_PERSONA_FLAGS = 263;  
literal NSA$C_PKT_PERSONA_UID = 264;    
literal NSA$C_PKT_PERSONA_MODE = 265;   
literal NSA$C_PKT_PERSONA_USERNAME = 266; 
literal NSA$C_PKT_PERSONA_ACCOUNT = 267; 
literal NSA$C_PKT_PERSONA_NOAUDIT = 268; 
literal NSA$C_PKT_PERSONA_UIC = 269;    
literal NSA$C_PKT_PERSONA_AUTHPRIV = 270; 
literal NSA$C_PKT_PERSONA_PERMPRIV = 271; 
literal NSA$C_PKT_PERSONA_WORKPRIV = 272; 
literal NSA$C_PKT_PERSONA_ENABLED = 273; 
literal NSA$C_PKT_PERSONA_RIGHTS = 274; 
literal NSA$C_PKT_PERSONA_MINCLASS = 275; 
literal NSA$C_PKT_PERSONA_MAXCLASS = 276; 
literal NSA$C_PKT_PERSONA_WORKCLASS = 277; 
literal NSA$C_PKT_PERSONA_ID = 278;     
literal NSA$C_PKT_PERSONA_POSIX_UID = 279;
literal NSA$C_PKT_PERSONA_POSIX_GID = 280;
literal NSA$C_PKT_PARENT_POSIX_UID = 281;
literal NSA$C_PKT_PARENT_POSIX_GID = 282;
literal NSA$C_PKT_MAX_CODE = 283;       
literal NSA$C_PKT_HDR_LENGTH = 4;
literal NSA$K_PKT_HDR_LENGTH = 4;
literal NSA$_ACCESS_DESIRED = 1;        
literal NSA$_ACCOUNT = 2;               
literal NSA$_ALARM_NAME = 3;            
literal NSA$_APPL_DATA = 4;             
literal NSA$_AUDIT_FLAGS = 5;           
literal NSA$_AUDIT_NAME = 6;            
literal NSA$_SYSTEM_NAME = 7;           
literal NSA$_SYSTEM_ID = 8;             
literal NSA$_DEVICE_NAME = 9;           
literal NSA$_DISMOUNT_FLAGS = 10;       
literal NSA$_HOLDER_NAME = 11;          
literal NSA$_HOLDER_OWNER = 12;         
literal NSA$_ID_ATTRIBUTES = 13;        
literal NSA$_ID_NAME = 14;              
literal NSA$_ID_NEW_NAME = 15;          
literal NSA$_ID_VALUE = 16;             
literal NSA$_ID_NEW_VALUE = 17;         
literal NSA$_IDENTIFIERS_USED = 18;     
literal NSA$_IMAGE_NAME = 19;           
literal NSA$_INSTALL_FILE = 20;         
literal NSA$_INSTALL_FLAGS = 21;        
literal NSA$_INSTALL_PRIVS = 22;        
literal NSA$_LOGICAL_NAME = 23;         
literal NSA$_MOUNT_FLAGS = 24;          
literal NSA$_NEW_DATA = 25;             
literal NSA$_FILE_ID = 26;              
literal NSA$_OBJECT_MIN_CLASS = 27;     
literal NSA$_OBJECT_MAX_CLASS = 28;     
literal NSA$_OBJECT_NAME = 29;          
literal NSA$_OBJECT_NAME_2 = 30;        
literal NSA$_OBJECT_OWNER = 31;         
literal NSA$_OBJECT_PROTECTION = 32;    
literal NSA$_OBJECT_TYPE = 33;          
literal NSA$_ORIGINAL_DATA = 34;        
literal NSA$_PARENT_ID = 35;            
literal NSA$_PARENT_NAME = 36;          
literal NSA$_PARENT_OWNER = 37;         
literal NSA$_PARENT_USERNAME = 38;      
literal NSA$_PASSWORD = 39;             
literal NSA$_PRIVS_USED = 40;           
literal NSA$_PROCESS_ID = 41;           
literal NSA$_PROCESS_NAME = 42;         
literal NSA$_REMOTE_NODE_ID = 43;       
literal NSA$_REMOTE_NODENAME = 44;      
literal NSA$_REMOTE_USERNAME = 45;      
literal NSA$_SUBJECT_CLASS = 46;        
literal NSA$_SUBJECT_OWNER = 47;        
literal NSA$_FINAL_STATUS = 48;         
literal NSA$_TERMINAL = 49;             
literal NSA$_TIME_STAMP = 50;           
literal NSA$_UAF_ADD = 51;              
literal NSA$_UAF_DELETE = 52;           
literal NSA$_UAF_MODIFY = 53;           
literal NSA$_UAF_COPY = 54;             
literal NSA$_UAF_FIELDS = 55;           
literal NSA$_USERNAME = 56;             
literal NSA$_UAF_SOURCE = 57;           
literal NSA$_UAF_RENAME = 58;           
literal NSA$_VOLUME_NAME = 59;          
literal NSA$_VOLUME_SET_NAME = 60;      
literal NSA$_SERVER_ACCOUNT = 61;       
literal NSA$_SERVER_SYSTEM_ID = 62;     
literal NSA$_SERVER_SYSTEM_NAME = 63;   
literal NSA$_SERVER_FINAL_STATUS = 64;  
literal NSA$_SERVER_IMAGE_NAME = 65;    
literal NSA$_SERVER_PARENT_ID = 66;     
literal NSA$_SERVER_PARENT_OWNER = 67;  
literal NSA$_SERVER_PARENT_NAME = 68;   
literal NSA$_SERVER_PROCESS_ID = 69;    
literal NSA$_SERVER_PROCESS_NAME = 70;  
literal NSA$_SERVER_SUBJECT_CLASS = 71; 
literal NSA$_SERVER_SUBJECT_OWNER = 72; 
literal NSA$_SERVER_TERMINAL = 73;      
literal NSA$_SERVER_TIME_STAMP = 74;    
literal NSA$_SERVER_USERNAME = 75;      
literal NSA$_AUDIT_DISABLE = 76;        
literal NSA$_AUDIT_ENABLE = 77;         
literal NSA$_ALARM_DISABLE = 78;        
literal NSA$_ALARM_ENABLE = 79;         
literal NSA$_NOP = 80;                  
literal NSA$_REPLY_MAILBOX = 81;        
literal NSA$_DEFAULT_USERNAME = 82;     
literal NSA$_LOCAL_USERNAME = 83;       
literal NSA$_FIELD_NAME = 84;           
literal NSA$_LISTENER_DEVICE = 85;      
literal NSA$_FIELD_TITLE_STR = 86;      
literal NSA$_FIELD_DATA_STR = 87;       
literal NSA$_MESSAGE_TYPE_STR = 88;     
literal NSA$_EVENT_TYPE = 89;           
literal NSA$_EVENT_SUBTYPE = 90;        
literal NSA$_EVENT_FACILITY = 91;       
literal NSA$_DIRECTORY_ENTRY = 92;      
literal NSA$_DIRECTORY_ID = 93;         
literal NSA$_CUSTOMER_1 = 94;           
literal NSA$_CUSTOMER_2 = 95;
literal NSA$_CUSTOMER_3 = 96;
literal NSA$_CUSTOMER_4 = 97;
literal NSA$_CUSTOMER_5 = 98;
literal NSA$_CUSTOMER_6 = 99;
literal NSA$_CUSTOMER_7 = 100;
literal NSA$_CUSTOMER_8 = 101;
literal NSA$_CSS_1 = 102;               
literal NSA$_CSS_2 = 103;
literal NSA$_CSS_3 = 104;
literal NSA$_CSS_4 = 105;
literal NSA$_CSS_5 = 106;
literal NSA$_CSS_6 = 107;
literal NSA$_CSS_7 = 108;
literal NSA$_CSS_8 = 109;
literal NSA$_LP_1 = 110;                
literal NSA$_LP_2 = 111;
literal NSA$_LP_3 = 112;
literal NSA$_LP_4 = 113;
literal NSA$_LP_5 = 114;
literal NSA$_LP_6 = 115;
literal NSA$_LP_7 = 116;
literal NSA$_LP_8 = 117;
literal NSA$_ALARM_FAILURE = 118;       
literal NSA$_AUDIT_FAILURE = 119;       
literal NSA$_SEVMS_0 = 120;             
literal NSA$_SEVMS_1 = 121;             
literal NSA$_SEVMS_2 = 122;             
literal NSA$_SEVMS_3 = 123;             
literal NSA$_SEVMS_4 = 124;             
literal NSA$_SEVMS_5 = 125;             
literal NSA$_SEVMS_6 = 126;             
literal NSA$_SEVMS_7 = 127;             
literal NSA$_SEVMS_8 = 128;             
literal NSA$_SEVMS_9 = 129;             
literal NSA$_SEVMS_10 = 130;            
literal NSA$_SEVMS_11 = 131;            
literal NSA$_SEVMS_12 = 132;            
literal NSA$_SEVMS_13 = 133;            
literal NSA$_SEVMS_14 = 134;            
literal NSA$_SEVMS_15 = 135;            
literal NSA$_SEVMS_16 = 136;            
literal NSA$_SEVMS_17 = 137;            
literal NSA$_SEVMS_18 = 138;            
literal NSA$_SNAPSHOT_TIME = 139;       
literal NSA$_TRANSPORT_NAME = 140;      
literal NSA$_DECNET_LINK_ID = 141;      
literal NSA$_DECNET_OBJECT_NAME = 142;  
literal NSA$_DECNET_OBJECT_NUMBER = 143; 
literal NSA$_REMOTE_LINK_ID = 144;      
literal NSA$_COMMAND_LINE = 145;        
literal NSA$_ASSOCIATION_NAME = 146;    
literal NSA$_REM_ASSOCIATION_NAME = 147; 
literal NSA$_CONNECTION_ID = 148;       
literal NSA$_MESSAGE = 149;             
literal NSA$_MSGFILNAM = 150;           
literal NSA$_OBJECT_POINTER = 151;      
literal NSA$_ID_NEW_ATTRIBUTES = 152;   
literal NSA$_SYSTIM_NEW = 153;          
literal NSA$_SYSTIM_OLD = 154;          
literal NSA$_PARAMS_WRITE = 155;
literal NSA$_PARAMS_INUSE = 156;
literal NSA$_MATCHING_ACE = 157;        
literal NSA$_SNAPSHOT_SAVE_FILNAM = 158; 
literal NSA$_MAILBOX_UNIT = 159;        
literal NSA$_NEW_OWNER = 160;           
literal NSA$_NEW_PRIORITY = 161;        
literal NSA$_OLD_PRIORITY = 162;        
literal NSA$_DIAG_FUNC = 163;           
literal NSA$_RESOURCE_NAME = 164;       
literal NSA$_LNM_TABLE_NAME = 165;      
literal NSA$_LNM_PARENT_NAME = 166;     
literal NSA$_EFC_NAME = 167;            
literal NSA$_TARGET_PROCESS_CLASS = 168; 
literal NSA$_TARGET_PROCESS_ID = 169;   
literal NSA$_TARGET_PROCESS_NAME = 170; 
literal NSA$_TARGET_PROCESS_OWNER = 171; 
literal NSA$_TARGET_USERNAME = 172;     
literal NSA$_NEW_PRIVILEGES = 173;      
literal NSA$_OLD_PRIVILEGES = 174;      
literal NSA$_REMOTE_NODE_FULLNAME = 175; 
literal NSA$_UID = 176;                 
literal NSA$_UNUSED_3 = 177;            
literal NSA$_UNUSED_4 = 178;            
literal NSA$_UNUSED_5 = 179;            
literal NSA$_UNUSED_6 = 180;            
literal NSA$_UNUSED_7 = 181;            
literal NSA$_UNUSED_8 = 182;            
literal NSA$_UNUSED_9 = 183;            
literal NSA$_UNUSED_10 = 184;           
literal NSA$_PRIVS_MISSING = 185;       
literal NSA$_TARGET_DEVICE_NAME = 186;  
literal NSA$_SECTION_NAME = 187;        
literal NSA$_ID_VALUE_ASCII = 188;      
literal NSA$_OBJECT_CLASS = 189;        
literal NSA$_SUPPRESS = 190;            
literal NSA$_SNAPSHOT_BOOTFILE = 191;   
literal NSA$_SOURCE_PROCESS_ID = 192;   
literal NSA$_REQUEST_NUMBER = 193;      
literal NSA$_ACCESS_MODE = 194;         
literal NSA$_SYSTEM_SERVICE_NAME = 195; 
literal NSA$_NEW_AUTH_PRIVILEGES = 196; 
literal NSA$_OLD_AUTH_PRIVILEGES = 197; 
literal NSA$_NEW_DEF_PRIVILEGES = 198;  
literal NSA$_OLD_DEF_PRIVILEGES = 199;  
literal NSA$_NEW_PROCESS_ID = 200;      
literal NSA$_NEW_PROCESS_OWNER = 201;   
literal NSA$_NEW_PROCESS_NAME = 202;    
literal NSA$_NEW_IMAGE_NAME = 203;      
literal NSA$_NEW_USERNAME = 204;        
literal NSA$_DEACCESS_KEY = 205;        
literal NSA$_OBJECT_RIGHTS_BLOCK = 206; 
literal NSA$_OBJSRV_COMPLETE = 207;     
literal NSA$_TLV_ORB = 208;             
literal NSA$_FILE_NAME = 209;           
literal NSA$_DIRECTORY_NAME = 210;      
literal NSA$_SEQUENCE_KEY = 211;        
literal NSA$_PRINCIPAL_FULLNAME = 212;
literal NSA$_TARGET_FULLNAME = 213;
literal NSA$_SOURCE_FULLNAME = 214;
literal NSA$_DESIRED_FULLNAME = 215;
literal NSA$_CLAIMED_USERNAME = 216;
literal NSA$_CLAIMED_FULLNAME = 217;
literal NSA$_CLAIMED_NODENAME = 218;
literal NSA$_TIME_REQ = 219;
literal NSA$_TIME_REC = 220;
literal NSA$_REQ_FLAGS = 221;
literal NSA$_RET_FLAGS = 222;
literal NSA$_LIFETIME_REQ = 223;
literal NSA$_LIFETIME_REC = 224;
literal NSA$_CRED_USAGE = 225;
literal NSA$_CONTEXT_HANDLE = 226;
literal NSA$_QOP_STATE = 227;
literal NSA$_CONF_STATE = 228;
literal NSA$_DELEG_CRED_HANDLE = 229;
literal NSA$_MAJOR_STATUS = 230;
literal NSA$_DAS_1 = 231;
literal NSA$_DAS_2 = 232;
literal NSA$_DAS_3 = 233;
literal NSA$_DAS_4 = 234;
literal NSA$_DAS_5 = 235;
literal NSA$_DAS_6 = 236;
literal NSA$_DAS_7 = 237;
literal NSA$_DAS_8 = 238;
literal NSA$_DAS_9 = 239;
literal NSA$_DAS_10 = 240;
literal NSA$_STATE_FILE_NAME = 241;
literal NSA$_DIRECTORY_FULLNAME = 242;
literal NSA$_FROM_DIRECTORY_FULLNAME = 243;
literal NSA$_TO_DIRECTORY_FULLNAME = 244;
literal NSA$_ISSUER_FULLNAME = 245;
literal NSA$_SUBJECT_FULLNAME = 246;
literal NSA$_CERTIF_TYPE = 247;
literal NSA$_CSS_SECONDARY_NAME = 248;
literal NSA$_CSS_OBJECT_FULLNAME = 249;
literal NSA$_CSS_REQUEST_FROM = 250;
literal NSA$_CSS_PRIMARY_NAME = 251;
literal NSA$_CERTIF_SERIAL_NUMBER = 252;
literal NSA$_WINDOW_END_TIME = 253;
literal NSA$_LOG_CLOSED = 254;          
literal NSA$_LOG_OPENED = 255;          
literal NSA$_IDENTIFIERS_MISSING = 256; 
literal NSA$_SENSITIVE_FIELD_NAME = 257;
literal NSA$_SENSITIVE_ORIG_DATA = 258;
literal NSA$_SENSITIVE_NEW_DATA = 259;
literal NSA$_SENSITIVE_FIELD_TITLE = 260;
literal NSA$_SENSITIVE_FIELD_DATA = 261;
literal NSA$_INSTALL_AUTHPRIVS = 262;   
literal NSA$_PERSONA_FLAGS = 263;       
literal NSA$_PERSONA_UID = 264;         
literal NSA$_PERSONA_MODE = 265;        
literal NSA$_PERSONA_USERNAME = 266;    
literal NSA$_PERSONA_ACCOUNT = 267;     
literal NSA$_PERSONA_NOAUDIT = 268;     
literal NSA$_PERSONA_UIC = 269;         
literal NSA$_PERSONA_AUTHPRIV = 270;    
literal NSA$_PERSONA_PERMPRIV = 271;    
literal NSA$_PERSONA_WORKPRIV = 272;    
literal NSA$_PERSONA_ENABLED = 273;     
literal NSA$_PERSONA_RIGHTS = 274;      
literal NSA$_PERSONA_MINCLASS = 275;    
literal NSA$_PERSONA_MAXCLASS = 276;    
literal NSA$_PERSONA_WORKCLASS = 277;   
literal NSA$_PERSONA_ID = 278;          
literal NSA$_PERSONA_POSIX_UID = 279;
literal NSA$_PERSONA_POSIX_GID = 280;
literal NSA$_PARENT_POSIX_UID = 281;
literal NSA$_PARENT_POSIX_GID = 282;
literal NSA$_MAX_ITM_CODE = 283;        
literal NSA$_CHAIN = 65535;             
literal NSA$_CLIENT_ACCOUNT = 2;
literal NSA$_CLIENT_SYSTEM_ID = 8;
literal NSA$_CLIENT_SYSTEM_NAME = 7;
literal NSA$_CLIENT_FINAL_STATUS = 48;
literal NSA$_CLIENT_IMAGE_NAME = 19;
literal NSA$_CLIENT_PARENT_ID = 35;
literal NSA$_CLIENT_PARENT_OWNER = 37;
literal NSA$_CLIENT_PARENT_NAME = 36;
literal NSA$_CLIENT_PROCESS_ID = 41;
literal NSA$_CLIENT_PROCESS_NAME = 42;
literal NSA$_CLIENT_SUBJECT_CLASS = 46;
literal NSA$_CLIENT_SUBJECT_OWNER = 47;
literal NSA$_CLIENT_TERMINAL = 49;
literal NSA$_CLIENT_TIME_STAMP = 50;
literal NSA$_CLIENT_USERNAME = 56;
literal NSA$S_NSADATADEF = 5;
macro NSA$W_PACKET_SIZE = 0,0,16,0 %;   
macro NSA$W_PACKET_TYPE = 2,0,16,0 %;   
macro NSA$R_PACKET_DATA = 4,0,8,0 %;    

literal NSA$M_ACCOUNT_NAME = %X'1';
literal NSA$M_SYSTEM_ID = %X'2';
literal NSA$M_SYSTEM_NAME = %X'4';
literal NSA$M_FINAL_STATUS = %X'8';
literal NSA$M_IMAGE_NAME = %X'10';
literal NSA$M_PARENT_ID = %X'20';
literal NSA$M_PARENT_OWNER = %X'40';
literal NSA$M_PARENT_NAME = %X'80';
literal NSA$M_PROCESS_ID = %X'100';
literal NSA$M_PROCESS_NAME = %X'200';
literal NSA$M_SUBJECT_CLASS = %X'400';
literal NSA$M_SUBJECT_OWNER = %X'800';
literal NSA$M_TERMINAL = %X'1000';
literal NSA$M_TIME_STAMP = %X'2000';
literal NSA$M_USERNAME = %X'4000';
literal NSA$M_PARENT_USERNAME = %X'8000';
literal NSA$M_POSIX_UID = %X'10000';
literal NSA$M_POSIX_GID = %X'20000';
literal NSA$M_PARENT_POSIX_UID = %X'40000';
literal NSA$M_PARENT_POSIX_GID = %X'80000';
literal NSA$S_FILL_230_ = 4;
macro NSA$V_ACCOUNT_NAME = 0,0,1,0 %;   
macro NSA$V_SYSTEM_ID = 0,1,1,0 %;      
macro NSA$V_SYSTEM_NAME = 0,2,1,0 %;    
macro NSA$V_FINAL_STATUS = 0,3,1,0 %;   
macro NSA$V_IMAGE_NAME = 0,4,1,0 %;     
macro NSA$V_PARENT_ID = 0,5,1,0 %;      
macro NSA$V_PARENT_OWNER = 0,6,1,0 %;   
macro NSA$V_PARENT_NAME = 0,7,1,0 %;    
macro NSA$V_PROCESS_ID = 0,8,1,0 %;     
macro NSA$V_PROCESS_NAME = 0,9,1,0 %;   
macro NSA$V_SUBJECT_CLASS = 0,10,1,0 %; 
macro NSA$V_SUBJECT_OWNER = 0,11,1,0 %; 
macro NSA$V_TERMINAL = 0,12,1,0 %;      
macro NSA$V_TIME_STAMP = 0,13,1,0 %;    
macro NSA$V_USERNAME = 0,14,1,0 %;      
macro NSA$V_PARENT_USERNAME = 0,15,1,0 %; 
macro NSA$V_POSIX_UID = 0,16,1,0 %;
macro NSA$V_POSIX_GID = 0,17,1,0 %;
macro NSA$V_PARENT_POSIX_UID = 0,18,1,0 %;
macro NSA$V_PARENT_POSIX_GID = 0,19,1,0 %;

literal NSA$C_REPLY_LENGTH = 4;
literal NSA$K_REPLY_LENGTH = 4;
literal NSA$S_NSAREPLYDEF = 4;
macro NSA$L_REPLY_STATUS = 0,0,32,0 %;  

literal NSA$C_FMTINF_NONE = 0;          
literal NSA$C_FMTINF_LONG_VALUE = 1;    
literal NSA$C_FMTINF_IDENTIFIER = 2;    
literal NSA$C_FMTINF_DATE = 3;          
literal NSA$C_FMTINF_STRING = 4;        
literal NSA$C_FMTINF_CLASSIFICATION = 5; 
literal NSA$C_FMTINF_UID = 6;           
literal NSA$C_FMTINF_RIGHTS = 7;        
literal NSA$C_FMTINF_SPECIAL = 8;       
literal NSA$M_FMTINF_CHECK_PREVIOUS = %X'1';
literal NSA$M_FMTINF_NTH_NEW_LINE = %X'2';
literal NSA$M_FMTINF_NOFORMAT = %X'4';
literal NSA$M_FMTINF_SENSITIVE = %X'8';
literal NSA$K_FMTINF_LENGTH = 28;
literal NSA$C_FMTINF_LENGTH = 28;
literal NSA$C_FORMAT_STYLE_BRIEF = 1;   
literal NSA$C_FORMAT_STYLE_FULL = 2;    
literal NSA$C_FORMAT_STYLE_PACKET_TYPE = 3; 
literal NSA$C_FMTINF_MAX_SINGLE_SEC_STR = 3895; 
literal NSA$C_FMTINF_MAX_SINGLE_INT_STR = 1977; 
literal NSA$C_FMTINF_MAX_RANGE_SEC_STR = 7801; 
literal NSA$C_FMTINF_MAX_RANGE_INT_STR = 3963; 
literal NSA$S_FMTTBLDEF = 28;
macro NSA$L_FMTINF_PACKET_NAME = 0,0,32,1 %; 
macro NSA$W_FMTINF_PACKET_TYPE = 4,0,16,0 %; 
macro NSA$W_FMTINF_OUTPUT_ORDER = 6,0,16,0 %; 
macro NSA$L_FMTINF_FAO_CTRSTR = 8,0,32,1 %; 
macro NSA$L_FMTINF_CLIENT_FAO_CTRSTR = 12,0,32,1 %; 
macro NSA$L_FMTINF_NTH_FAO_CTRSTR = 16,0,32,1 %; 
macro NSA$B_FMTINF_DATA_TYPE = 20,0,8,0 %; 
macro NSA$B_FMTINF_FMT_FLAGS = 21,0,8,0 %;
macro NSA$V_FMTINF_CHECK_PREVIOUS = 21,0,1,0 %; 
macro NSA$V_FMTINF_NTH_NEW_LINE = 21,1,1,0 %; 
macro NSA$V_FMTINF_NOFORMAT = 21,2,1,0 %; 
macro NSA$V_FMTINF_SENSITIVE = 21,3,1,0 %; 
macro NSA$W_FMTINF_SERVER_PKT = 22,0,16,0 %; 
macro NSA$W_FMTINF_INDENT = 24,0,16,0 %; 

literal NSA$K_IMGXFR_LENGTH = 53;
literal NSA$C_IMGXFR_LENGTH = 53;
literal NSA$S_FMTCALLDEF = 53;
macro NSA$L_IMGXFR_FLINK = 0,0,32,1 %;  
macro NSA$L_IMGXFR_BLINK = 4,0,32,1 %;  
macro NSA$W_IMGXFR_SIZE = 8,0,16,0 %;   
macro NSA$W_IMGXFR_FACILITY = 10,0,16,0 %; 
macro NSA$L_IMGXFR_BASE_ORDER_OFFSET = 12,0,32,0 %; 
macro NSA$A_IMGXFR_MESSAGE_INFO = 16,0,32,0 %; 
macro NSA$A_IMGXFR_VALIDATE_PACKET = 20,0,32,0 %; 
macro NSA$A_IMGXFR_DISPLAY_INFO = 24,0,32,0 %; 
macro NSA$A_IMGXFR_LINE_BREAK = 28,0,32,0 %; 
macro NSA$A_IMGXFR_FORMAT_SPECIAL = 32,0,32,0 %; 
macro NSA$A_IMGXFR_FORMAT_INFO = 36,0,32,0 %; 
macro NSA$A_IMGXFR_FORMAT_BRIEF = 40,0,32,0 %; 
macro NSA$A_IMGXFR_FORMAT_PACKET_TYPE = 44,0,32,0 %; 
macro NSA$A_IMGXFR_FORMAT_EVENT_TYPE = 48,0,32,0 %; 
macro NSA$T_IMGXFR_IMAGE_NAME = 52,0,8,0 %;
literal NSA$S_IMGXFR_IMAGE_NAME = 1;    

literal NSA$M_FMTARG_SENSITIVE = %X'1';
literal NSA$M_FMTARG_DISPLAY_TITLE = %X'2';
literal NSA$M_FMTARG_CHECK_PREVIOUS = %X'1';
literal NSA$M_FMTARG_NTH_NEW_LINE = %X'2';
literal NSA$M_FMTARG_NOFORMAT = %X'4';
literal NSA$K_FMTARG_LENGTH = 36;
literal NSA$C_FMTARG_LENGTH = 36;
literal NSA$S_FMTARGDEF = 36;
macro NSA$Q_FMTARG_BUFFER = 0,0,0,1 %;
literal NSA$S_FMTARG_BUFFER = 8;
macro NSA$W_FMTARG_BUFFER_SIZE = 0,0,16,0 %; 
macro NSA$A_FMTARG_BUFFER_POINTER = 4,0,32,1 %; 
macro NSA$W_FMTARG_BUFFER_OFFSET = 8,0,16,0 %; 
macro NSA$W_FMTARG_BOL_OFFSET = 10,0,16,0 %; 
macro NSA$Q_FMTARG_TERMINATOR = 12,0,0,1 %;
literal NSA$S_FMTARG_TERMINATOR = 8;
macro NSA$W_FMTARG_TERM_SIZE = 12,0,16,0 %; 
macro NSA$A_FMTARG_TERM_TEXT = 16,0,32,1 %; 
macro NSA$W_FMTARG_LINE_WIDTH = 20,0,16,0 %; 
macro NSA$W_FMTARG_LINE_INDENT = 22,0,16,0 %; 
macro NSA$A_FMTARG_OUTPUT_ROUTINE = 24,0,32,1 %; 
macro NSA$L_FMTARG_FLAGS = 28,0,32,0 %;
macro NSA$W_FMTARG_FLAGS_LOW = 28,0,16,0 %;
macro NSA$V_FMTARG_SENSITIVE = 28,0,1,0 %; 
macro NSA$V_FMTARG_DISPLAY_TITLE = 28,1,1,0 %; 
macro NSA$W_FMTARG_FLAGS_HIGH = 30,0,16,0 %;
macro NSA$V_FMTARG_CHECK_PREVIOUS = 30,0,1,0 %; 
macro NSA$V_FMTARG_NTH_NEW_LINE = 30,1,1,0 %; 
macro NSA$V_FMTARG_NOFORMAT = 30,2,1,0 %; 
macro NSA$L_FMTARG_USER_CONTEXT = 32,0,32,0 %; 
literal NSA$C_IMGXFR_MESSAGE_INFO = 0;  
literal NSA$C_IMGXFR_VALIDATE_PACKET = 1; 
literal NSA$C_IMGXFR_DISPLAY_INFO = 2;  
literal NSA$C_IMGXFR_LINE_BREAK = 3;    
literal NSA$C_IMGXFR_FORMAT_SPECIAL = 4; 
literal NSA$C_IMGXFR_FORMAT_INFO = 5;   
literal NSA$C_IMGXFR_FORMAT_BRIEF = 6;  
literal NSA$C_IMGXFR_FORMAT_PACKET_TYPE = 7; 
literal NSA$C_IMGXFR_FORMAT_EVENT_TYPE = 8; 
literal NSA$S_FMTXFERDEF = 72;
macro NSA$R_IMGXFR_MESSAGE_INFO = 0,0,0,0 %;
literal NSA$S_IMGXFR_MESSAGE_INFO = 8;  
macro NSA$R_IMGXFR_VALIDATE_PACKET = 8,0,0,0 %;
literal NSA$S_IMGXFR_VALIDATE_PACKET = 8; 
macro NSA$R_IMGXFR_DISPLAY_INFO = 16,0,0,0 %;
literal NSA$S_IMGXFR_DISPLAY_INFO = 8;  
macro NSA$R_IMGXFR_LINE_BREAK = 24,0,0,0 %;
literal NSA$S_IMGXFR_LINE_BREAK = 8;    
macro NSA$R_IMGXFR_FORMAT_SPECIAL = 32,0,0,0 %;
literal NSA$S_IMGXFR_FORMAT_SPECIAL = 8; 
macro NSA$R_IMGXFR_FORMAT_INFO = 40,0,0,0 %;
literal NSA$S_IMGXFR_FORMAT_INFO = 8;   
macro NSA$R_IMGXFR_FORMAT_BRIEF = 48,0,0,0 %;
literal NSA$S_IMGXFR_FORMAT_BRIEF = 8;  
macro NSA$R_IMGXFR_FORMAT_PACKET_TYPE = 56,0,0,0 %;
literal NSA$S_IMGXFR_FORMAT_PACKET_TYPE = 8; 
macro NSA$R_IMGXFR_FORMAT_EVENT_TYPE = 64,0,0,0 %;
literal NSA$S_IMGXFR_FORMAT_EVENT_TYPE = 8; 

literal NSA$K_ACCNAM_LENGTH = 139;      
literal NSA$C_ACCNAM_LENGTH = 139;
literal NSA$S_FMTACCNAMDEF = 139;
macro NSA$L_ACCNAM_FLINK = 0,0,32,1 %;  
macro NSA$L_ACCNAM_BLINK = 4,0,32,1 %;  
macro NSA$W_ACCNAM_SIZE = 8,0,16,0 %;   
macro NSA$L_ACCNAM_CODES = 10,0,0,1 %;
literal NSA$S_ACCNAM_CODES = 128;       
macro NSA$T_ACCNAM_OBJECT_TYPE = 138,0,8,0 %;
literal NSA$S_ACCNAM_OBJECT_TYPE = 1;   

literal NSA$K_MSGINF_LENGTH = 8;
literal NSA$C_MSGINF_LENGTH = 8;
literal NSA$S_MSGINFODEF = 8;
macro NSA$L_MSGINF_MAX_ORDER_OFFSET = 0,0,32,0 %; 
macro NSA$A_MSGINF_BRIEF_TITLE = 4,0,32,1 %; 

literal NSA$K_SUBTBL_LENGTH = 8;
literal NSA$C_SUBTBL_LENGTH = 8;
literal NSA$S_SUBFMTTBLDEF = 8;
macro NSA$L_SUBTBL_DESCRIPTION = 0,0,32,1 %; 
macro NSA$L_SUBTBL_TABLE_SIZE = 0,0,32,0 %; 
macro NSA$L_SUBTBL_MNEMONIC = 4,0,32,0 %; 
literal NSA$C_MSG_NETUAF = 9;
literal NSA$C_MSG_PRIV_AUDIT = 16;
literal NSA$C_PRIV_AUDIT = 1;
literal NSA$C_JOBCTL_QUEUE_ACCESS = 3;
literal NSA$C_NETUAF_ADD = 1;
literal NSA$C_NETUAF_DELETE = 2;
literal NSA$C_NETUAF_MODIFY = 3;
literal NSA$C_NETUAF_NCP = 4;
literal NSA$C_NETUAF_MAX_CODE = 8;
literal NSA$C_PKT_OBJECT_ID = 26;
literal NSA$_OBJECT_ID = 26;
literal NSA$C_PKT_PRIV_MASK = 22;
literal NSA$_PRIV_MASK = 22;
literal NSA$C_PKT_PRIVILEGES = 22;
literal NSA$_PRIVILEGES = 22;
literal NSA$C_PKT_SNAPSHOT_FILNAM = 158;
literal NSA$_SNAPSHOT_FILNAM = 158;
literal NSA$C_PKT_PERFORMANCE_NOP = 80;
literal NSA$_PERFORMANCE_NOP = 80;
literal NSA$C_PKT_SUPPLIED_FLAGS = 190;
literal NSA$_SUPPLIED_FLAGS = 190;
 

literal NSA$C_REC_MAXLENGTH = 1024;     
literal NSA$K_REC_MAXLENGTH = 1024;     
literal NSA$S_REC_MAXLENGTH = 1024;     

literal NSA$K_RECTYP_FIL = 1;           
literal NSA$K_RECTYP_SYSUAF = 2;        
literal NSA$K_RECTYP_NETUAF = 3;        
literal NSA$K_RECTYP_LOGB = 4;          
literal NSA$K_RECTYP_LOGI = 5;          
literal NSA$K_RECTYP_LOGF = 6;          
literal NSA$K_RECTYP_LOGO = 7;          
literal NSA$K_RECTYP_VOL = 8;           
literal NSA$K_RECTYP_GBL = 9;           
literal NSA$K_RECTYP_INSTAL = 10;       
literal NSA$K_RECTYP_RIGHTS = 11;       
literal NSA$K_RECTYP_AUDIT = 12;        
literal NSA$K_RECTYPNUM = 12;

literal NSA$K_RECTYP_FIL_SUCC = 1;      
literal NSA$K_RECTYP_FIL_FAIL = 2;      
literal NSA$K_RECTYPNUM_FIL = 2;
literal NSA$K_RECID_FIL_SUCC = 65537;
literal NSA$K_RECID_FIL_FAIL = 131073;
literal NSA$K_RECTYP_GBL_SUCC = 1;      
literal NSA$K_RECTYP_GBL_FAIL = 2;      
literal NSA$K_RECTYPNUM_GBL = 2;
literal NSA$K_RECID_GBL_SUCC = 65545;
literal NSA$K_RECID_GBL_FAIL = 131081;
literal NSA$K_RECTYP_SYSUAF_ADD = 1;    
literal NSA$K_RECTYP_SYSUAF_DEL = 2;    
literal NSA$K_RECTYP_SYSUAF_MOD = 3;    
literal NSA$K_RECTYP_SYSUAF_COP = 4;    
literal NSA$K_RECTYP_SYSUAF_REN = 5;    
literal NSA$K_RECTYPNUM_SYSUAF = 5;
literal NSA$K_RECID_SYSUAF_ADD = 65538;
literal NSA$K_RECID_SYSUAF_DEL = 131074;
literal NSA$K_RECID_SYSUAF_MOD = 196610;
literal NSA$K_RECID_SYSUAF_COP = 262146;
literal NSA$K_RECID_SYSUAF_REN = 327682;
literal NSA$K_RECTYP_NETUAF_ADD = 1;    
literal NSA$K_RECTYP_NETUAF_DEL = 2;    
literal NSA$K_RECTYP_NETUAF_MOD = 3;    
literal NSA$K_RECTYPNUM_NETUAF = 3;
literal NSA$K_RECID_NETUAF_ADD = 65539;
literal NSA$K_RECID_NETUAF_DEL = 131075;
literal NSA$K_RECID_NETUAF_MOD = 196611;
literal NSA$K_RECTYP_LOGB_DIA = 1;      
literal NSA$K_RECTYP_LOGB_LOC = 2;      
literal NSA$K_RECTYP_LOGB_REM = 3;      
literal NSA$K_RECTYP_LOGB_NET = 4;      
literal NSA$K_RECTYP_LOGB_DET = 5;      
literal NSA$K_RECTYPNUM_LOGB = 5;
literal NSA$K_RECID_LOGB_DIA = 65540;
literal NSA$K_RECID_LOGB_LOC = 131076;
literal NSA$K_RECID_LOGB_REM = 196612;
literal NSA$K_RECID_LOGB_NET = 262148;
literal NSA$K_RECID_LOGB_DET = 327684;
literal NSA$K_RECTYP_LOGI_BAT = 1;      
literal NSA$K_RECTYP_LOGI_DIA = 2;      
literal NSA$K_RECTYP_LOGI_LOC = 3;      
literal NSA$K_RECTYP_LOGI_REM = 4;      
literal NSA$K_RECTYP_LOGI_NET = 5;      
literal NSA$K_RECTYP_LOGI_SUB = 6;      
literal NSA$K_RECTYP_LOGI_DET = 7;      
literal NSA$K_RECTYPNUM_LOGI = 7;
literal NSA$K_RECID_LOGI_BAT = 65541;
literal NSA$K_RECID_LOGI_DIA = 131077;
literal NSA$K_RECID_LOGI_LOC = 196613;
literal NSA$K_RECID_LOGI_REM = 262149;
literal NSA$K_RECID_LOGI_NET = 327685;
literal NSA$K_RECID_LOGI_SUB = 393221;
literal NSA$K_RECID_LOGI_DET = 458757;
literal NSA$K_RECTYP_LOGF_BAT = 1;      
literal NSA$K_RECTYP_LOGF_DIA = 2;      
literal NSA$K_RECTYP_LOGF_LOC = 3;      
literal NSA$K_RECTYP_LOGF_REM = 4;      
literal NSA$K_RECTYP_LOGF_NET = 5;      
literal NSA$K_RECTYP_LOGF_SUB = 6;      
literal NSA$K_RECTYP_LOGF_DET = 7;      
literal NSA$K_RECTYPNUM_LOGF = 7;
literal NSA$K_RECID_LOGF_BAT = 65542;
literal NSA$K_RECID_LOGF_DIA = 131078;
literal NSA$K_RECID_LOGF_LOC = 196614;
literal NSA$K_RECID_LOGF_REM = 262150;
literal NSA$K_RECID_LOGF_NET = 327686;
literal NSA$K_RECID_LOGF_SUB = 393222;
literal NSA$K_RECID_LOGF_DET = 458758;
literal NSA$K_RECTYP_LOGO_BAT = 1;      
literal NSA$K_RECTYP_LOGO_DIA = 2;      
literal NSA$K_RECTYP_LOGO_LOC = 3;      
literal NSA$K_RECTYP_LOGO_REM = 4;      
literal NSA$K_RECTYP_LOGO_NET = 5;      
literal NSA$K_RECTYP_LOGO_SUB = 6;      
literal NSA$K_RECTYP_LOGO_DET = 7;      
literal NSA$K_RECTYPNUM_LOGO = 7;
literal NSA$K_RECID_LOGO_BAT = 65543;
literal NSA$K_RECID_LOGO_DIA = 131079;
literal NSA$K_RECID_LOGO_LOC = 196615;
literal NSA$K_RECID_LOGO_REM = 262151;
literal NSA$K_RECID_LOGO_NET = 327687;
literal NSA$K_RECID_LOGO_SUB = 393223;
literal NSA$K_RECID_LOGO_DET = 458759;
literal NSA$K_RECTYP_VOL_MOU = 1;       
literal NSA$K_RECTYP_VOL_DMOU = 2;      
literal NSA$K_RECTYPNUM_VOL = 2;
literal NSA$K_RECID_VOL_MOU = 65544;
literal NSA$K_RECID_VOL_DMOU = 131080;
literal NSA$K_RECTYP_INSTAL_ADD = 1;    
literal NSA$K_RECTYP_INSTAL_REM = 2;    
literal NSA$K_RECTYPNUM_INSTAL = 2;
literal NSA$K_RECTYP_RIGHTS_CRE = 1;    
literal NSA$K_RECTYP_RIGHTS_ADD = 2;    
literal NSA$K_RECTYP_RIGHTS_REM = 3;    
literal NSA$K_RECTYP_RIGHTS_MOD_ID = 4; 
literal NSA$K_RECTYP_RIGHTS_MOD_HO = 5; 
literal NSA$K_RECTYP_RIGHTS_GRANT = 6;  
literal NSA$K_RECTYP_RIGHTS_REVOK = 7;  
literal NSA$K_RECTYPNUM_RIGHTS = 7;
literal NSA$K_RECTYP_AUDIT_ENA_AL = 1;  
literal NSA$K_RECTYP_AUDIT_DIS_AL = 2;  
literal NSA$K_RECTYP_AUDIT_ENA_JL = 3;  
literal NSA$K_RECTYP_AUDIT_DIS_JL = 4;  
literal NSA$K_RECTYPNUM_AUDIT = 4;

literal nsa$S_sysuaff_bits = 8;
macro nsa$q_sysuaff = 0,0,0,0 %;
literal nsa$s_sysuaff = 8;              
macro nsa$v_access = 0,0,1,0 %;         
macro nsa$v_account = 0,1,1,0 %;        
macro nsa$v_astlm = 0,2,1,0 %;          
macro nsa$v_batch = 0,3,1,0 %;          
macro nsa$v_biolm = 0,4,1,0 %;          
macro nsa$v_bytlm = 0,5,1,0 %;          
macro nsa$v_cli = 0,6,1,0 %;            
macro nsa$v_clitables = 0,7,1,0 %;      
macro nsa$v_cputime = 0,8,1,0 %;        
macro nsa$v_defprivileges = 0,9,1,0 %;  
macro nsa$v_device = 0,10,1,0 %;        
macro nsa$v_dialup = 0,11,1,0 %;        
macro nsa$v_diolm = 0,12,1,0 %;         
macro nsa$v_directory = 0,13,1,0 %;     
macro nsa$v_enqlm = 0,14,1,0 %;         
macro nsa$v_expiration = 0,15,1,0 %;    
macro nsa$v_fillm = 0,16,1,0 %;         
macro nsa$v_flags = 0,17,1,0 %;         
macro nsa$v_interactive = 0,18,1,0 %;   
macro nsa$v_jtquota = 0,19,1,0 %;       
macro nsa$v_lgicmd = 0,20,1,0 %;        
macro nsa$v_local = 0,21,1,0 %;         
macro nsa$v_maxdetach = 0,22,1,0 %;     
macro nsa$v_maxjobs = 0,23,1,0 %;       
macro nsa$v_maxacctjobs = 0,24,1,0 %;   
macro nsa$v_network = 0,25,1,0 %;       
macro nsa$v_owner = 0,26,1,0 %;         
macro nsa$v_password = 0,27,1,0 %;      
macro nsa$v_pbytlm = 0,28,1,0 %;        
macro nsa$v_pflags = 0,29,1,0 %;        
macro nsa$v_p_restrict = 0,30,1,0 %;    
macro nsa$v_pgflquota = 0,31,1,0 %;     
macro nsa$v_prclm = 4,0,1,0 %;          
macro nsa$v_primedays = 4,1,1,0 %;      
macro nsa$v_priority = 4,2,1,0 %;       
macro nsa$v_privileges = 4,3,1,0 %;     
macro nsa$v_pwdlifetime = 4,4,1,0 %;    
macro nsa$v_pwdminimum = 4,5,1,0 %;     
macro nsa$v_quepriority = 4,6,1,0 %;    
macro nsa$v_remote = 4,7,1,0 %;         
macro nsa$v_sflags = 4,8,1,0 %;         
macro nsa$v_s_restrict = 4,9,1,0 %;     
macro nsa$v_shrfillm = 4,10,1,0 %;      
macro nsa$v_tqelm = 4,11,1,0 %;         
macro nsa$v_uic = 4,12,1,0 %;           
macro nsa$v_wsdefault = 4,13,1,0 %;     
macro nsa$v_wsextent = 4,14,1,0 %;      
macro nsa$v_wsquota = 4,15,1,0 %;       

literal NSA$M_REC_FLAGS_PKTCON = %X'1';
literal NSA$C_RECHDR_LENGTH = 76;
literal NSA$K_RECHDR_LENGTH = 76;
literal NSA$S_NSARECHDRDEF = 76;
macro NSA$L_REC_ID = 0,0,32,0 %;        
macro NSA$W_REC_TYPE = 0,0,16,0 %;      
macro NSA$W_REC_SUBTYPE = 2,0,16,0 %;   
macro NSA$B_REC_SEQNUM = 4,0,8,0 %;     
macro NSA$B_REC_SEQLAST = 5,0,8,0 %;    
macro NSA$B_REC_FLAGS = 6,0,8,0 %;      
macro NSA$V_REC_FLAGS_PKTCON = 6,0,1,0 %; 
macro NSA$B_REC_PKTNUM = 7,0,8,0 %;     
macro NSA$W_REC_PKTOFF = 8,0,16,0 %;    
macro NSA$W_REC_PKTHDRSIZ = 10,0,16,0 %; 
macro NSA$L_REC_EPID = 12,0,32,0 %;     
macro NSA$Q_REC_TIME = 16,0,0,0 %;
literal NSA$S_REC_TIME = 8;             
macro NSA$T_REC_CLUSNAM = 24,0,0,0 %;
literal NSA$S_REC_CLUSNAM = 16;         
macro NSA$T_REC_PROCNAM = 40,0,0,0 %;
literal NSA$S_REC_PROCNAM = 16;         
macro NSA$T_REC_USERNAM = 56,0,0,0 %;
literal NSA$S_REC_USERNAM = 12;         
macro NSA$T_REC_ACCTNAM = 68,0,0,0 %;
literal NSA$S_REC_ACCTNAM = 8;          

literal NSA$K_PKTTYP_IMGNAM = 1;        
literal NSA$K_PKTTYP_FACMOD = 2;        
literal NSA$K_PKTTYP_PRIVUSED = 3;      
literal NSA$K_PKTTYP_FILNAM = 4;        
literal NSA$K_PKTTYP_DEVNAM = 5;        
literal NSA$K_PKTTYP_LOGNAM = 6;        
literal NSA$K_PKTTYP_VOLNAM = 7;        
literal NSA$K_PKTTYP_VOLSNAM = 8;       
literal NSA$K_PKTTYP_NODENAM = 9;       
literal NSA$K_PKTTYP_USERNAM = 10;      
literal NSA$K_PKTTYP_PASSWORD = 11;     
literal NSA$K_PKTTYP_UIC = 12;          
literal NSA$K_PKTTYP_VOLPRO = 13;       
literal NSA$K_PKTTYP_MOUFLG = 14;       
literal NSA$K_PKTTYP_DMOUFLG = 15;      
literal NSA$K_PKTTYP_NODEID = 16;       
literal NSA$K_PKTTYP_EPID = 17;         
literal NSA$K_PKTTYP_SYSUAFF = 18;      
literal NSA$K_PKTTYP_STATUS = 19;       
literal NSA$K_PKTTYP_SECNAM = 20;       
literal NSA$K_PKTTYP_PRIVS = 21;        
literal NSA$K_PKTTYP_INSFLG = 22;       
literal NSA$K_PKTTYP_IDNAME = 23;       
literal NSA$K_PKTTYP_IDVAL = 24;        
literal NSA$K_PKTTYP_IDATTR = 25;       
literal NSA$K_PKTTYP_HOLDER = 26;       
literal NSA$K_PKTTYP_AUDIT = 27;        
literal NSA$K_PKTTYP_DEFUSERNAM = 28;   
literal NSA$K_PKTTYP_OLDUSERNAM = 29;   
literal NSA$K_PKTTYP_OLDDEFUNAM = 30;   
literal NSA$K_PKTTYP_OLDNODENAM = 31;   
literal NSA$K_PKTTYPNUM = 31;

literal NSA$C_PKTHDR_LENGTH = 4;
literal NSA$K_PKTHDR_LENGTH = 4;
literal NSA$M_PKT_INS_OPEN = %X'2';
literal NSA$M_PKT_INS_HDR = %X'4';
literal NSA$M_PKT_INS_SHARE = %X'8';
literal NSA$M_PKT_INS_EXEC = %X'10';
literal NSA$M_PKT_INS_WRITE = %X'20';
literal NSA$M_PKT_INS_PRIV = %X'40';
literal NSA$M_PKT_INS_PROT = %X'80';
literal NSA$M_PKT_INS_NOPRG = %X'100';
literal NSA$M_PKT_INS_ACC = %X'200';
literal NSA$M_PKT_INS_RESIDENT = %X'400';
literal NSA$S_NSAPKTDEF = 448;
macro NSA$W_PKT_TYPE = -4,0,16,0 %;     
macro NSA$W_PKT_SIZE = -2,0,16,0 %;     
macro NSA$T_PKT_DATA = 0,0,0,0 %;
macro NSA$T_PKT_IMGNAM = 0,0,0,0 %;
literal NSA$S_PKT_IMGNAM = 444;         
macro NSA$L_PKT_FACMOD = 0,0,32,0 %;    
macro NSA$L_PKT_PRIVUSED = 0,0,32,0 %;  
macro NSA$T_PKT_FILNAM = 0,0,0,0 %;
literal NSA$S_PKT_FILNAM = 444;         
macro NSA$T_PKT_DEVNAM = 0,0,0,0 %;
literal NSA$S_PKT_DEVNAM = 64;          
macro NSA$T_PKT_LOGNAM = 0,0,0,0 %;
literal NSA$S_PKT_LOGNAM = 255;         
macro NSA$T_PKT_VOLNAM = 0,0,0,0 %;
literal NSA$S_PKT_VOLNAM = 12;          
macro NSA$T_PKT_VOLSNAM = 0,0,0,0 %;
literal NSA$S_PKT_VOLSNAM = 12;         
macro NSA$T_PKT_NODENAM = 0,0,0,0 %;
literal NSA$S_PKT_NODENAM = 6;          
macro NSA$T_PKT_USERNAM = 0,0,0,0 %;
literal NSA$S_PKT_USERNAM = 32;         
macro NSA$T_PKT_PASSWORD = 0,0,0,0 %;
literal NSA$S_PKT_PASSWORD = 32;        
macro NSA$L_PKT_UIC = 0,0,32,0 %;       
macro NSA$W_PKT_VOLPRO = 0,0,16,0 %;    
macro NSA$L_PKT_MOUFLG = 0,0,32,0 %;    
macro NSA$W_PKT_DMOUFLG = 0,0,16,0 %;   
macro NSA$Q_PKT_NODEID = 0,0,0,0 %;
literal NSA$S_PKT_NODEID = 8;           
macro NSA$L_PKT_EPID = 0,0,32,0 %;      
macro NSA$Q_PKT_SYSUAFF = 0,0,0,0 %;
literal NSA$S_PKT_SYSUAFF = 8;          
macro NSA$L_PKT_STATUS = 0,0,32,0 %;    
macro NSA$T_PKT_SECNAM = 0,0,0,0 %;
literal NSA$S_PKT_SECNAM = 54;          
macro NSA$Q_PKT_PRIVS = 0,0,0,0 %;
literal NSA$S_PKT_PRIVS = 8;            
macro NSA$L_PKT_INSFLG = 0,0,32,0 %;    
macro NSA$V_PKT_INS_OPEN = 0,1,1,0 %;   
macro NSA$V_PKT_INS_HDR = 0,2,1,0 %;    
macro NSA$V_PKT_INS_SHARE = 0,3,1,0 %;  
macro NSA$V_PKT_INS_EXEC = 0,4,1,0 %;   
macro NSA$V_PKT_INS_WRITE = 0,5,1,0 %;  
macro NSA$V_PKT_INS_PRIV = 0,6,1,0 %;   
macro NSA$V_PKT_INS_PROT = 0,7,1,0 %;   
macro NSA$V_PKT_INS_NOPRG = 0,8,1,0 %;  
macro NSA$V_PKT_INS_ACC = 0,9,1,0 %;    
macro NSA$V_PKT_INS_RESIDENT = 0,10,1,0 %; 
macro NSA$T_PKT_IDNAME = 0,0,0,0 %;
literal NSA$S_PKT_IDNAME = 32;          
macro NSA$L_PKT_IDVAL = 0,0,32,0 %;     
macro NSA$L_PKT_IDATTR = 0,0,32,0 %;    
macro NSA$Q_PKT_HOLDER = 0,0,0,0 %;
literal NSA$S_PKT_HOLDER = 8;           
macro NSA$R_PKT_AUDIT = 0,0,0,0 %;      
macro NSA$T_PKT_DEFUSERNAM = 0,0,0,0 %;
literal NSA$S_PKT_DEFUSERNAM = 32;      
macro NSA$T_PKT_OLDUSERNAM = 0,0,0,0 %;
literal NSA$S_PKT_OLDUSERNAM = 32;      
macro NSA$T_PKT_OLDDEFUNAM = 0,0,0,0 %;
literal NSA$S_PKT_OLDDEFUNAM = 32;      
macro NSA$T_PKT_OLDNODENAM = 0,0,0,0 %;
literal NSA$S_PKT_OLDNODENAM = 6;       
 

literal OPR$_TERMENABL = 1;             
literal OPR$_LOGINIT = 2;               
literal OPR$_OPRQST = 3;                
literal OPR$_OPREPLY = 4;               
literal OPR$M_CENTRAL = %X'1';
literal OPR$M_PRINTER = %X'2';
literal OPR$M_TAPES = %X'4';
literal OPR$M_DISKS = %X'8';
literal OPR$M_DEVICES = %X'10';
literal OPR$M_USER1 = %X'1FFE0';
literal OPR$M_USER2 = %X'20000';
literal OPR$M_USER3 = %X'40000';
literal OPR$M_USER4 = %X'80000';
literal OPR$M_USER5 = %X'100000';
literal OPR$M_USER6 = %X'200000';
literal OPR$M_USER7 = %X'400000';
literal OPR$M_USER8 = %X'800000';
literal OPR$M_USER9 = %X'1000000';
literal OPR$M_USER10 = %X'2000000';
literal OPR$M_USER11 = %X'4000000';
literal OPR$M_USER12 = %X'8000000';
literal OPR$S_OPRDEF = 4;               
macro OPR$V_CENTRAL = 0,0,1,0 %;        
macro OPR$V_PRINTER = 0,1,1,0 %;        
macro OPR$V_TAPES = 0,2,1,0 %;          
macro OPR$V_DISKS = 0,3,1,0 %;          
macro OPR$V_DEVICES = 0,4,1,0 %;        
macro OPR$V_USER1 = 0,5,12,0 %;
literal OPR$S_USER1 = 12;               
macro OPR$V_USER2 = 0,17,1,0 %;         
macro OPR$V_USER3 = 0,18,1,0 %;         
macro OPR$V_USER4 = 0,19,1,0 %;         
macro OPR$V_USER5 = 0,20,1,0 %;         
macro OPR$V_USER6 = 0,21,1,0 %;         
macro OPR$V_USER7 = 0,22,1,0 %;         
macro OPR$V_USER8 = 0,23,1,0 %;         
macro OPR$V_USER9 = 0,24,1,0 %;         
macro OPR$V_USER10 = 0,25,1,0 %;        
macro OPR$V_USER11 = 0,26,1,0 %;        
macro OPR$V_USER12 = 0,27,1,0 %;        
 

literal OSS$M_WLOCK = %X'1';
literal OSS$M_RELCTX = %X'2';
literal OSS$M_LOCAL = %X'4';
literal OSS$S_OSSDEF = 1;
macro OSS$V_WLOCK = 0,0,1,0 %;          
macro OSS$V_RELCTX = 0,1,1,0 %;         
macro OSS$V_LOCAL = 0,2,1,0 %;          
literal OSS$_ACCESS_NAMES = 1;          
literal OSS$_ACCESS_NAMES_LENGTH = 2;   
literal OSS$_ACL_ADD_ENTRY = 3;         
literal OSS$_ACL_DELETE_ENTRY = 4;      
literal OSS$_ACL_DELETE = 5;            
literal OSS$_ACL_DELETE_ALL = 6;        
literal OSS$_ACL_FIND_ENTRY = 7;        
literal OSS$_ACL_FIND_NEXT = 8;         
literal OSS$_ACL_FIND_TYPE = 9;         
literal OSS$_ACL_GRANT_ACE = 10;        
literal OSS$_ACL_LENGTH = 11;           
literal OSS$_ACL_MODIFY_ENTRY = 12;     
literal OSS$_ACL_POSITION = 13;         
literal OSS$_ACL_POSITION_TOP = 14;     
literal OSS$_ACL_POSITION_BOTTOM = 15;  
literal OSS$_ACL_READ_ENTRY = 16;       
literal OSS$_ACL_READ = 17;             
literal OSS$_MAX_CLASS = 18;            
literal OSS$_MIN_CLASS = 19;            
literal OSS$_NEXT_OBJECT = 20;          
literal OSS$_OWNER = 21;                
literal OSS$_PROTECTION = 22;           
literal OSS$_SYS_PROT = 23;             
literal OSS$_OWN_PROT = 24;             
literal OSS$_GRP_PROT = 25;             
literal OSS$_WOR_PROT = 26;             
literal OSS$_CLASS_NAME = 27;           
literal OSS$_FIRST_TEMPLATE = 28;       
literal OSS$_NEXT_TEMPLATE = 29;        
literal OSS$_OBJECT_NAME = 30;          
literal OSS$_ACCESS_CLASS_NAME = 31;    
literal OSS$_DAMAGED_ACL = 32;          
literal OSS$_IN_TRANSITION = 33;        
literal OSS$_TRANQUILITY_COUNT = 34;
literal OSS$_POSIX_GID = 35;            
literal OSS$_POSIX_GRP_MODE = 36;       
literal OSS$_POSIX_MODE = 37;           
literal OSS$_POSIX_SGID = 38;           
literal OSS$_POSIX_SUID = 39;           
literal OSS$_ACCESS_BITNAMES = 1;
literal OSS$_ACCESS_BITNAMES_LENGTH = 2;
literal OSS$_ACL_ADDACE = 3;
literal OSS$_ACL_DELACE = 4;
literal OSS$_ACL_FNDACE = 7;
literal OSS$_ACL_FNDNXT = 8;
literal OSS$_ACL_FNDTYP = 9;
literal OSS$_ACL_MODACE = 12;
literal OSS$_ACL_READACE = 16;
 
literal MMG$C_VAX_PAGE_SIZE = 512;      
literal MMG$C_ALPHA_MAX_PAGE_SIZE = 65536; 
literal IOC$C_DISK_BLKSIZ = 512;        
literal IOC$M_BLOCK_BYTEMASK = %X'1FF';
literal IOC$M_BLOCK_BLKNUM = %X'FFFFFE00';
literal IOC$S_BLOCKDEF = 4;
macro IOC$V_BLOCK_BYTEMASK = 0,0,9,0 %;
literal IOC$S_BLOCK_BYTEMASK = 9;       
macro IOC$V_BLOCK_BLKNUM = 0,9,23,0 %;
literal IOC$S_BLOCK_BLKNUM = 23;        
 

literal PCC$M_CHAR = %X'1F';
literal PCC$M_EIGHTBIT = %X'40';
literal PCC$M_SINGLE = %X'80';
literal PCC$M_LINECNT = %X'7F';
literal PCC$_FTN_SINGLE = 32;           
literal PCC$_FTN_DOUBLE = 48;           
literal PCC$_FTN_PAGE = 49;             
literal PCC$_FTN_OVRPRT = 43;           
literal PCC$_FTN_PROMPT = 36;           
literal PCC$S_PCCDEF = 4;
macro PCC$W_FORTRAN = 0,0,16,0 %;       
macro PCC$B_PREFIX = 2,0,8,0 %;
macro PCC$B_POSTFIX = 3,0,8,0 %;        
macro PCC$V_CHAR = 3,0,5,0 %;
literal PCC$S_CHAR = 5;                 
macro PCC$V_EIGHTBIT = 3,6,1,0 %;       
macro PCC$V_SINGLE = 3,7,1,0 %;         
macro PCC$V_LINECNT = 3,0,7,0 %;
literal PCC$S_LINECNT = 7;              
 

literal PDSC$K_KIND_BOUND = 0;          
literal PDSC$K_KIND_NULL = 8;           
literal PDSC$K_KIND_FP_STACK = 9;       
literal PDSC$K_KIND_FP_REGISTER = 10;   
literal PDSC$M_HANDLER_VALID = %X'10';
literal PDSC$M_HANDLER_REINVOKABLE = %X'20';
literal PDSC$M_HANDLER_DATA_VALID = %X'40';
literal PDSC$M_BASE_REG_IS_FP = %X'80';
literal PDSC$M_REI_RETURN = %X'100';
literal PDSC$M_STACK_RETURN_VALUE = %X'200';
literal PDSC$M_BASE_FRAME = %X'400';
literal PDSC$M_TARGET_INVO = %X'800';
literal PDSC$M_NATIVE = %X'1000';
literal PDSC$M_NO_JACKET = %X'2000';
literal PDSC$M_TIE_FRAME = %X'4000';
literal PDSC$M_FUNC_RETURN = %X'F';
literal PDSC$M_EXCEPTION_MODE = %X'70';
literal PDSC$K_EXC_MODE_SIGNAL = 0;     
literal PDSC$K_EXC_MODE_SIGNAL_ALL = 1; 
literal PDSC$K_EXC_MODE_SIGNAL_SILENT = 2; 
literal PDSC$K_EXC_MODE_FULL_IEEE = 3;  
literal PDSC$K_EXC_MODE_CALLER = 4;     
literal PDSC$K_NULL_SIZE = 16;          
literal PDSC$K_BOUND_SIZE = 24;         
literal PDSC$K_MIN_BOUND_SIZE = 24;     
literal PDSC$K_MIN_LENGTH_SF = 32;      
literal PDSC$K_MIN_STACK_SIZE = 32;     
literal PDSC$K_MAX_STACK_SIZE = 48;     
literal PDSC$K_MIN_LENGTH_RF = 24;      
literal PDSC$K_MIN_REGISTER_SIZE = 24;  
literal PDSC$K_MAX_REGISTER_SIZE = 40;  
literal PDSC$K_BOUND_ENVIRONMENT_SIZE = 32; 
literal PDSC$S_PDSCDEF = 48;
macro PDSC$W_FLAGS = 0,0,16,0 %;        
macro PDSC$V_KIND = 0,0,4,0 %;
literal PDSC$S_KIND = 4;                
macro PDSC$V_HANDLER_VALID = 0,4,1,0 %; 
macro PDSC$V_HANDLER_REINVOKABLE = 0,5,1,0 %; 
macro PDSC$V_HANDLER_DATA_VALID = 0,6,1,0 %; 
macro PDSC$V_BASE_REG_IS_FP = 0,7,1,0 %; 
macro PDSC$V_REI_RETURN = 0,8,1,0 %;    
macro PDSC$V_STACK_RETURN_VALUE = 0,9,1,0 %; 
macro PDSC$V_BASE_FRAME = 0,10,1,0 %;   
macro PDSC$V_TARGET_INVO = 0,11,1,0 %;  
macro PDSC$V_NATIVE = 0,12,1,0 %;       
macro PDSC$V_NO_JACKET = 0,13,1,0 %;    
macro PDSC$V_TIE_FRAME = 0,14,1,0 %;    
macro PDSC$W_RSA_OFFSET = 2,0,16,1 %;   
macro PDSC$B_SAVE_FP = 2,0,8,0 %;       
macro PDSC$B_SAVE_RA = 3,0,8,0 %;       
macro PDSC$B_ENTRY_RA = 4,0,8,1 %;      
macro PDSC$V_FUNC_RETURN = 5,0,4,0 %;
literal PDSC$S_FUNC_RETURN = 4;         
macro PDSC$V_EXCEPTION_MODE = 5,4,3,0 %;
literal PDSC$S_EXCEPTION_MODE = 3;      
macro PDSC$W_SIGNATURE_OFFSET = 6,0,16,1 %; 
macro PDSC$Q_ENTRY = 8,0,0,1 %;
literal PDSC$S_ENTRY = 8;               
macro PDSC$L_ENTRY = 8,0,32,1 %;        
macro PDSC$L_SIZE = 16,0,32,0 %;        
macro PDSC$Q_PROC_VALUE = 16,0,0,1 %;
literal PDSC$S_PROC_VALUE = 8;          
macro PDSC$L_PROC_VALUE = 16,0,32,1 %;  
macro PDSC$R_KIND_SPECIFIC = 24,0,0,0 %;
literal PDSC$S_KIND_SPECIFIC = 24;
macro PDSC$L_IREG_MASK = 24,0,32,0 %;   
macro PDSC$L_FREG_MASK = 28,0,32,0 %;   
macro PDSC$Q_STACK_HANDLER = 32,0,0,1 %;
literal PDSC$S_STACK_HANDLER = 8;       
macro PDSC$Q_STACK_HANDLER_DATA = 40,0,0,1 %;
literal PDSC$S_STACK_HANDLER_DATA = 8;  
macro PDSC$Q_REG_HANDLER = 24,0,0,1 %;
literal PDSC$S_REG_HANDLER = 8;         
macro PDSC$Q_REG_HANDLER_DATA = 32,0,0,1 %;
literal PDSC$S_REG_HANDLER_DATA = 8;    
macro PDSC$L_ENVIRONMENT = 24,0,32,1 %;
macro PDSC$Q_ENVIRONMENT = 24,0,0,1 %;
literal PDSC$S_ENVIRONMENT = 8;
literal PDSC$K_LKP_LENGTH = 16;         
literal PDSC$S_PDSC_LKPDEF = 16;        
macro PDSC$Q_LKP_ENTRY = 0,0,0,1 %;
literal PDSC$S_LKP_ENTRY = 8;           
macro PDSC$PS_LKP_ENTRY = 0,0,32,1 %;
macro PDSC$Q_LKP_PROC_VALUE = 8,0,0,1 %;
literal PDSC$S_LKP_PROC_VALUE = 8;      
macro PDSC$PS_LKP_PROC_VALUE = 8,0,32,1 %;
literal LKP$K_SIZE = 16;                
literal LKP$S_LKPDEF = 16;              
macro LKP$Q_ENTRY = 0,0,0,1 %;
literal LKP$S_ENTRY = 8;
macro LKP$PS_ENTRY = 0,0,32,1 %;
macro LKP$Q_PROC_VALUE = 8,0,0,1 %;
literal LKP$S_PROC_VALUE = 8;
macro LKP$PS_PROC_VALUE = 8,0,32,1 %;
 

literal PMM$m_console = %X'1';
literal PMM$m_openvms = %X'2';
literal PMM$m_available = %X'4';
literal PMM$m_base = %X'8';
literal PMM$m_galaxy_shared = %X'10';
literal PMM$m_undefined_5_15 = %X'FFE0';
literal PMM$C_LENGTH = 12;              
literal PMM$K_LENGTH = 12;              
literal PMM$S_PMM = 12;
macro PMM$W_LENGTH = 0,0,16,1 %;        
macro PMM$w_flags = 2,0,16,0 %;
macro PMM$v_console = 2,0,1,0 %;        
macro PMM$v_openvms = 2,1,1,0 %;        
macro PMM$v_available = 2,2,1,0 %;      
macro PMM$v_base = 2,3,1,0 %;           
macro PMM$v_galaxy_shared = 2,4,1,0 %;  
macro PMM$v_undefined_5_15 = 2,5,11,0 %;
literal PMM$s_undefined_5_15 = 11;      
macro PMM$l_start_pfn = 4,0,32,0 %;     
macro PMM$l_pfn_count = 8,0,32,0 %;     
 

literal POSIX$C_BLOCK_FORK = 1;         
literal POSIX$C_UNBLOCK_FORK = 2;       
literal POSIX$C_DISABLE_FORK = 3;       
literal POSIX$C_SETUP_CALLBACK = 4;     
literal POSIX$C_SYSTEM_CALLBACK = 5;    
literal POSIX$C_PROCESS_CALLBACK = 6;   
literal POSIX$C_CANCEL_CALLBACK = 7;    
literal POSIX$C_CONTINUE = 8;           
literal POSIX$C_TEST_CALLS = 9;         
literal POSIX$C_MAX_CNTRL = 9;
literal POSIX$K_MAX_CNTRL = 9;

literal POSIX$V_CALL_BEFORE_COPY = 0;
literal POSIX$V_CALL_IN_CHILD = 1;
literal POSIX$V_CALL_AFTER_CHILD = 2;
literal POSIX$V_CALL_ON_FAILURE = 3;
literal POSIX$V_CALL_BEFORE_COPY_FAIL = 4;
literal POSIX$V_CALL_IN_CHILD_FAIL = 5;
literal POSIX$V_CALL_AFTER_CHILD_FAIL = 6;
literal POSIX$M_CALL_BEFORE_COPY = 1;
literal POSIX$M_CALL_IN_CHILD = 2;
literal POSIX$M_CALL_AFTER_CHILD = 4;
literal POSIX$M_CALL_ON_FAILURE = 8;
literal POSIX$M_CALL_BEFORE_COPY_FAIL = 16;
literal POSIX$M_CALL_IN_CHILD_FAIL = 32;
literal POSIX$M_CALL_AFTER_CHILD_FAIL = 64;
 

literal PPROP$C_PARSE_STYLE_TEMP = 0;   
literal PPROP$C_PARSE_STYLE_PERM = 1;   
literal PPROP$C_HOME_RAD = 2;           
literal PPROP$C_CASE_LOOKUP_TEMP = 3;   
literal PPROP$C_CASE_LOOKUP_PERM = 4;   
literal PPROP$C_MEDDLE_ENABLE = 5;      
literal PPROP$C_MEDDLE = 6;             
literal PPROP$C_UNITS = 7;              
literal PPROP$C_SS_LOG_ENABLE = 8;      
literal PPROP$C_SS_LOG_DISABLE = 9;     
literal PPROP$C_SS_LOG_UNLOAD = 10;     
literal PARSE_STYLE$C_ODS2 = 0;         
literal PARSE_STYLE$C_ODS5 = 1;         
literal PARSE_STYLE$C_TRADITIONAL = 0;  
literal PARSE_STYLE$C_EXTENDED = 1;     
literal PPROP$K_CASE_BLIND = 0;         
literal PPROP$K_CASE_SENSITIVE = 1;     
 

literal PQL$_LISTEND = 0;               
literal PQL$_ASTLM = 1;                 
literal PQL$_BIOLM = 2;                 
literal PQL$_BYTLM = 3;                 
literal PQL$_CPULM = 4;                 
literal PQL$_DIOLM = 5;                 
literal PQL$_FILLM = 6;                 
literal PQL$_PGFLQUOTA = 7;             
literal PQL$_PRCLM = 8;                 
literal PQL$_TQELM = 9;                 
literal PQL$_WSQUOTA = 10;              
literal PQL$_WSDEFAULT = 11;            
literal PQL$_ENQLM = 12;                
literal PQL$_WSEXTENT = 13;             
literal PQL$_JTQUOTA = 14;              
literal PQL$_LENGTH = 15;               
 

literal PRC$M_SSRWAIT = %X'1';
literal PRC$M_SSFEXCU = %X'2';
literal PRC$M_PSWAPM = %X'4';
literal PRC$M_NOACNT = %X'8';
literal PRC$M_BATCH = %X'10';
literal PRC$M_HIBER = %X'20';
literal PRC$M_NOUAF = %X'40';
literal PRC$M_NETWRK = %X'80';
literal PRC$M_DISAWS = %X'100';
literal PRC$M_DETACH = %X'200';
literal PRC$M_INTER = %X'400';
literal PRC$M_IMGDMP = %X'800';
literal PRC$M_CLISPEC = %X'1000';
literal PRC$M_NOPASSWORD = %X'2000';
literal PRC$M_DEBUG = %X'4000';
literal PRC$M_DBGTRU = %X'8000';
literal PRC$M_SUBSYSTEM = %X'10000';
literal PRC$M_TCB = %X'20000';
literal PRC$M_NO_IMAGE_PRIVS = %X'40000';
literal PRC$M_PERM_SUBSYSTEM = %X'80000';
literal PRC$M_PARSE_EXTENDED = %X'100000';
literal PRC$M_INHERIT_PERSONA = %X'200000';
literal PRC$M_HOME_RAD = %X'400000';
literal PRC$M_CASE_SENSITIVE = %X'800000';
literal PRC$M_SPAWN_DETACHED = %X'1000000';
literal PRC$M_LOGIN = %X'40';
literal PRC$S_PRCDEF = 4;
macro PRC$V_SSRWAIT = 0,0,1,0 %;        
macro PRC$V_SSFEXCU = 0,1,1,0 %;        
macro PRC$V_PSWAPM = 0,2,1,0 %;         
macro PRC$V_NOACNT = 0,3,1,0 %;         
macro PRC$V_BATCH = 0,4,1,0 %;          
macro PRC$V_HIBER = 0,5,1,0 %;          
macro PRC$V_NOUAF = 0,6,1,0 %;          
macro PRC$V_NETWRK = 0,7,1,0 %;         
macro PRC$V_DISAWS = 0,8,1,0 %;         
macro PRC$V_DETACH = 0,9,1,0 %;         
macro PRC$V_INTER = 0,10,1,0 %;         
macro PRC$V_IMGDMP = 0,11,1,0 %;        
macro PRC$V_CLISPEC = 0,12,1,0 %;       
macro PRC$V_NOPASSWORD = 0,13,1,0 %;    
macro PRC$V_DEBUG = 0,14,1,0 %;         
macro PRC$V_DBGTRU = 0,15,1,0 %;        
macro PRC$V_SUBSYSTEM = 0,16,1,0 %;     
macro PRC$V_TCB = 0,17,1,0 %;           
macro PRC$V_NO_IMAGE_PRIVS = 0,18,1,0 %; 
macro PRC$V_PERM_SUBSYSTEM = 0,19,1,0 %; 
macro PRC$V_PARSE_EXTENDED = 0,20,1,0 %; 
macro PRC$V_INHERIT_PERSONA = 0,21,1,0 %; 
macro PRC$V_HOME_RAD = 0,22,1,0 %;      
macro PRC$V_CASE_SENSITIVE = 0,23,1,0 %; 
macro PRC$V_SPAWN_DETACHED = 0,24,1,0 %; 
macro PRC$V_LOGIN = 0,6,1,0 %;          

literal PRC$_LISTEND = 0;               
literal PRC$_PGFLCHAR = 1;              
literal PRC$_PGFLINDEX = 2;             
literal PRC$_INPUT_ATT = 3;             
literal PRC$_OUTPUT_ATT = 4;            
literal PRC$_ERROR_ATT = 5;             
literal PRC$_CLASS = 6;                 
 

literal PR$_ESP = 1;                    
literal PR$_SSP = 2;                    
literal PR$_USP = 3;                    
literal PR$_ASN = 6;                    
literal PR$_ASTEN = 48;                 
literal PR$_ASTSR = 49;                 
literal PR$_DATFX = 23;                 
literal PR$_IPIR = 22;                  
literal PR$_IPL = 18;                   
literal PR$_MCES = 38;                  
literal PR$_PCBB = 16;                  
literal PR$_PME = 61;                   
literal PR$_PRBR = 15;                  
literal PR$_SCBB = 17;                  
literal PR$_SIRR = 20;                  
literal PR$_SISR = 21;                  
literal PR$_TBIA = 57;                  
literal PR$_TBIAP = 50;                 
literal PR$_TBIS = 58;                  
literal PR$_TBIS_64 = 60;               
literal PR$_TBISD = 59;                 
literal PR$_TBISI = 47;                 
literal PR$_VPTB = 12;                  

literal PR$_SID_TYP780 = 1;             
literal PR$_SID_TYP750 = 2;             
literal PR$_SID_TYP730 = 3;             
literal PR$_SID_TYP790 = 4;             
literal PR$_SID_TYP8SS = 5;             
literal PR$_SID_TYP8NN = 6;             
literal PR$_SID_TYPUV1 = 7;             
literal PR$_SID_TYPUV2 = 8;             
literal PR$_SID_TYP410 = 8;             
literal PR$_SID_TYP009 = 9;             
literal PR$_SID_TYP420 = 10;            
literal PR$_SID_TYP520 = 10;            
literal PR$_SID_TYP650 = 10;            
literal PR$_SID_TYP9CC = 10;            
literal PR$_SID_TYP9CI = 10;
literal PR$_SID_TYP60 = 10;             
literal PR$_SID_TYP670 = 11;            
literal PR$_SID_TYP9RR = 11;            
literal PR$_SID_TYP43 = 11;             
literal PR$_SID_TYP9AQ = 14;            
literal PR$_SID_TYP8PS = 17;            
literal PR$_SID_TYP1202 = 18;           
literal PR$_SID_TYP46 = 18;             
literal PR$_SID_TYP600 = 19;
literal PR$_SID_TYP690 = 19;
literal PR$_SID_TYP700 = 19;
literal PR$_SID_TYP1302 = 19;
literal PR$_SID_TYP49 = 19;
literal PR$_SID_TYP1303 = 19;
literal PR$_SID_TYP660 = 20;            
literal PR$_SID_TYP440 = 20;            
literal PR$_SID_TYP4A = 20;             
literal PR$_SID_TYP550 = 20;            
literal PR$_SID_TYP1701 = 23;           
literal PR$_SID_TYPMAX = 23;            
literal PR$_SID_TYP_NOTAVAX = 128;      
literal PR$_SID_TYPUV = 8;              
literal PR$_XSID_UV_UV = 0;             
literal PR$_XSID_UV_UV2 = 1;            
literal PR$_XSID_UV_410 = 4;            
literal PR$_SID_TYPCV = 10;             
literal PR$_XSID_CV_CV = 0;             
literal PR$_XSID_CV_650 = 1;            
literal PR$_XSID_CV_9CC = 2;            
literal PR$_XSID_CV_60 = 3;             
literal PR$_XSID_CV_420 = 4;            
literal PR$_XSID_CV_9CI = 5;
literal PR$_XSID_CV_520 = 7;            
literal PR$_SID_TYPRV = 11;             
literal PR$_XSID_RV_RV = 0;             
literal PR$_XSID_RV_670 = 1;            
literal PR$_XSID_RV_9RR = 2;            
literal PR$_XSID_RV_43 = 4;             
literal PR$_SID_TYPV12 = 18;            
literal PR$_XSID_V12_V12 = 0;           
literal PR$_XSID_V12_1202 = 2;          
literal PR$_XSID_V12_46 = 4;            
literal PR$_SID_TYPV13 = 19;
literal PR$_XSID_V13_V13 = 0;
literal PR$_XSID_V13_690 = 1;
literal PR$_XSID_V13_1302 = 2;
literal PR$_XSID_V13_1303 = 3;
literal PR$_XSID_V13_49 = 4;
literal PR$_XSID_V13_700 = 5;
literal PR$_XSID_V13_600 = 6;
literal PR$_SID_TYPV14 = 20;            
literal PR$_XSID_V14_V14 = 0;           
literal PR$_XSID_V14_660 = 1;           
literal PR$_XSID_V14_440 = 4;           
literal PR$_XSID_V14_4A = 5;            
literal PR$_XSID_V14_550 = 7;           
literal PR$_SID_TYPV17 = 23;            
literal PR$_XSID_V17_V17 = 0;           
literal PR$_XSID_V17_1701 = 1;          
literal PR$_XSID_N8800 = 0;             
literal PR$_XSID_N8700 = 1;             
literal PR$_XSID_N2 = 2;                
literal PR$_XSID_N3 = 3;                
literal PR$_XSID_N4 = 4;                
literal PR$_XSID_N5 = 5;                
literal PR$_XSID_N8550 = 6;             
literal PR$_XSID_N8500 = 7;             
literal PR$_XSID_N8NNN = -1;            
literal PR$M_ASTEN = %X'F';
literal PR$M_ASTEN_KEN = %X'1';
literal PR$M_ASTEN_EEN = %X'2';
literal PR$M_ASTEN_SEN = %X'4';
literal PR$M_ASTEN_UEN = %X'8';
literal PR$M_ASTEN_DSBL_ALL = 0;        
literal PR$M_ASTEN_ENBL_ALL = 255;      
literal PR$M_ASTEN_ENBL_K = 17;         
literal PR$M_ASTEN_ENBL_E = 34;         
literal PR$M_ASTEN_ENBL_S = 68;         
literal PR$M_ASTEN_ENBL_U = 136;        
literal PR$M_ASTEN_PRSRV_ALL = 15;      
literal PR$M_ASTEN_PRSRV_K = 1;         
literal PR$M_ASTEN_PRSRV_E = 2;         
literal PR$M_ASTEN_PRSRV_S = 4;         
literal PR$M_ASTEN_PRSRV_U = 8;         
literal PR$M_ASTSR = %X'F';
literal PR$M_ASTSR_KPD = %X'1';
literal PR$M_ASTSR_EPD = %X'2';
literal PR$M_ASTSR_SPD = %X'4';
literal PR$M_ASTSR_UPD = %X'8';
literal PR$M_ASTSR_CLR_ALL = 0;         
literal PR$M_ASTSR_SET_ALL = 255;       
literal PR$M_ASTSR_SET_K = 17;          
literal PR$M_ASTSR_SET_E = 34;          
literal PR$M_ASTSR_SET_S = 68;          
literal PR$M_ASTSR_SET_U = 136;         
literal PR$M_ASTSR_PRSRV_ALL = 15;      
literal PR$M_ASTSR_PRSRV_K = 1;         
literal PR$M_ASTSR_PRSRV_E = 2;         
literal PR$M_ASTSR_PRSRV_S = 4;         
literal PR$M_ASTSR_PRSRV_U = 8;         
literal PR$M_FEN_FEN = %X'1';
literal PR$M_DATFX_DATFX = %X'1';
literal PR$M_IPL_IPL = %X'1F';
literal PR$M_MCES_MCK = %X'1';
literal PR$M_MCES_SCE = %X'2';
literal PR$M_MCES_PCE = %X'4';
literal PR$M_MCES_DPC = %X'8';
literal PR$M_MCES_DSC = %X'10';
literal PR$V_PCBB_PA = 0;               
literal PR$S_PCBB_PA = 48;              
literal PR$M_PS_SW = %X'3';
literal PR$M_PS_PRVMOD = %X'3';
literal PR$M_PS_SYSSTATE = %X'4';
literal PR$M_PS_CURMOD = %X'18';
literal PR$M_PS_VMM = %X'80';
literal PR$M_PS_IPL = %X'1F00';
literal PR$M_PS_MBZ_62 = %X'4000000000000000';
literal PR$M_PS_MBZ_63 = %X'8000000000000000';
literal PR$V_PS_MAX_PS_REG_BIT = 13;
literal PR$C_PS_KERNEL = 0;             
literal PR$C_PS_EXEC = 1;               
literal PR$C_PS_SUPER = 2;              
literal PR$C_PS_USER = 3;               
literal PR$M_PTBR_PFN = %X'FFFFFFFF';
literal PR$M_SCBB_PFN = %X'FFFFFFFF';
literal PR$M_SIRR_LVL = %X'F';
literal PR$M_SISR_SUMMARY = %X'FFFF';
literal PR$M_SISR_RAZ = %X'1';
literal PR$M_SISR_IR1 = %X'2';
literal PR$M_SISR_IR2 = %X'4';
literal PR$M_SISR_IR3 = %X'8';
literal PR$M_SISR_IR4 = %X'10';
literal PR$M_SISR_IR5 = %X'20';
literal PR$M_SISR_IR6 = %X'40';
literal PR$M_SISR_IR7 = %X'80';
literal PR$M_SISR_IR8 = %X'100';
literal PR$M_SISR_IR9 = %X'200';
literal PR$M_SISR_IR10 = %X'400';
literal PR$M_SISR_IR11 = %X'800';
literal PR$M_SISR_IR12 = %X'1000';
literal PR$M_SISR_IR13 = %X'2000';
literal PR$M_SISR_IR14 = %X'4000';
literal PR$M_SISR_IR15 = %X'8000';
literal PR$M_TBCHK_VA_PRESENT = %X'1';
literal PR$M_IEEE_DNOD = %X'800000000000';
literal PR$M_IEEE_DNZ = %X'1000000000000';
literal PR$M_IEEE_INVD = %X'2000000000000';
literal PR$M_IEEE_DZED = %X'4000000000000';
literal PR$M_IEEE_OVFD = %X'8000000000000';
literal PR$M_IEEE_INV = %X'10000000000000';
literal PR$M_IEEE_DZE = %X'20000000000000';
literal PR$M_IEEE_OVF = %X'40000000000000';
literal PR$M_IEEE_UNF = %X'80000000000000';
literal PR$M_IEEE_INE = %X'100000000000000';
literal PR$M_IEEE_IOV = %X'200000000000000';
literal PR$M_IEEE_UNDZ = %X'1000000000000000';
literal PR$M_IEEE_UNFD = %X'2000000000000000';
literal PR$M_IEEE_INED = %X'4000000000000000';
literal PR$M_IEEE_SUMMARY = %X'8000000000000000';
literal PR$S_PRDEF = 8;
macro PR$Q_QUAD_ACCESS = 0,0,0,0 %;
literal PR$S_QUAD_ACCESS = 8;           
macro PR$L_LONG_ACCESS = 0,0,0,0 %;
literal PR$S_LONG_ACCESS = 8;           
macro PR$V_SID_SN = 0,0,12,0 %;
literal PR$S_SID_SN = 12;               
macro PR$V_SID_PL = 0,12,3,0 %;
literal PR$S_SID_PL = 3;                
macro PR$V_SID_ECO = 0,15,9,0 %;
literal PR$S_SID_ECO = 9;               
macro PR$V_SID_TYPE = 0,24,8,0 %;
literal PR$S_SID_TYPE = 8;              
macro PR$V_XSID_TYPE = 0,24,8,0 %;
literal PR$S_XSID_TYPE = 8;             

macro PR$V_ASTEN = 0,0,4,0 %;
literal PR$S_ASTEN = 4;                 
macro PR$V_ASTEN_KEN = 0,0,1,0 %;       
macro PR$V_ASTEN_EEN = 0,1,1,0 %;       
macro PR$V_ASTEN_SEN = 0,2,1,0 %;       
macro PR$V_ASTEN_UEN = 0,3,1,0 %;       

macro PR$V_ASTSR = 0,0,4,0 %;
literal PR$S_ASTSR = 4;                 
macro PR$V_ASTSR_KPD = 0,0,1,0 %;       
macro PR$V_ASTSR_EPD = 0,1,1,0 %;       
macro PR$V_ASTSR_SPD = 0,2,1,0 %;       
macro PR$V_ASTSR_UPD = 0,3,1,0 %;       

macro PR$V_FEN_FEN = 0,0,1,0 %;         

macro PR$V_DATFX_DATFX = 0,0,1,0 %;     

macro PR$V_IPL_IPL = 0,0,5,0 %;
literal PR$S_IPL_IPL = 5;               

macro PR$V_MCES_MCK = 0,0,1,0 %;        
macro PR$V_MCES_SCE = 0,1,1,0 %;        
macro PR$V_MCES_PCE = 0,2,1,0 %;        
macro PR$V_MCES_DPC = 0,3,1,0 %;        
macro PR$V_MCES_DSC = 0,4,1,0 %;        

macro PR$V_PS_SW = 0,0,2,0 %;
literal PR$S_PS_SW = 2;                 
macro PR$V_PS_PRVMOD = 0,0,2,0 %;
literal PR$S_PS_PRVMOD = 2;             
macro PR$V_PS_SYSSTATE = 0,2,1,0 %;     
macro PR$V_PS_CURMOD = 0,3,2,0 %;
literal PR$S_PS_CURMOD = 2;             
macro PR$V_PS_VMM = 0,7,1,0 %;          
macro PR$V_PS_IPL = 0,8,5,0 %;
literal PR$S_PS_IPL = 5;                
macro PR$V_PS_SP_ALIGN = 4,24,6,0 %;
literal PR$S_PS_SP_ALIGN = 6;           
macro PR$V_PS_MBZ_62 = 4,30,1,0 %;      
macro PR$V_PS_MBZ_63 = 4,31,1,0 %;      

macro PR$V_PTBR_PFN = 0,0,32,0 %;
literal PR$S_PTBR_PFN = 32;             

macro PR$V_SCBB_PFN = 0,0,32,0 %;
literal PR$S_SCBB_PFN = 32;             

macro PR$V_SIRR_LVL = 0,0,4,0 %;
literal PR$S_SIRR_LVL = 4;              

macro PR$V_SISR_SUMMARY = 0,0,16,0 %;
literal PR$S_SISR_SUMMARY = 16;         
macro PR$V_SISR_IR1 = 0,1,1,0 %;        
macro PR$V_SISR_IR2 = 0,2,1,0 %;        
macro PR$V_SISR_IR3 = 0,3,1,0 %;        
macro PR$V_SISR_IR4 = 0,4,1,0 %;        
macro PR$V_SISR_IR5 = 0,5,1,0 %;        
macro PR$V_SISR_IR6 = 0,6,1,0 %;        
macro PR$V_SISR_IR7 = 0,7,1,0 %;        
macro PR$V_SISR_IR8 = 0,8,1,0 %;        
macro PR$V_SISR_IR9 = 0,9,1,0 %;        
macro PR$V_SISR_IR10 = 0,10,1,0 %;      
macro PR$V_SISR_IR11 = 0,11,1,0 %;      
macro PR$V_SISR_IR12 = 0,12,1,0 %;      
macro PR$V_SISR_IR13 = 0,13,1,0 %;      
macro PR$V_SISR_IR14 = 0,14,1,0 %;      
macro PR$V_SISR_IR15 = 0,15,1,0 %;      

macro PR$V_TBCHK_VA_PRESENT = 0,0,1,0 %; 
macro PR$V_TBCHK_NO_TBCHK = 4,31,1,0 %; 

macro PR$V_IEEE_DNOD = 4,15,1,0 %;      
macro PR$V_IEEE_DNZ = 4,16,1,0 %;       
macro PR$V_IEEE_INVD = 4,17,1,0 %;      
macro PR$V_IEEE_DZED = 4,18,1,0 %;      
macro PR$V_IEEE_OVFD = 4,19,1,0 %;      
macro PR$V_IEEE_INV = 4,20,1,0 %;       
macro PR$V_IEEE_DZE = 4,21,1,0 %;       
macro PR$V_IEEE_OVF = 4,22,1,0 %;       
macro PR$V_IEEE_UNF = 4,23,1,0 %;       
macro PR$V_IEEE_INE = 4,24,1,0 %;       
macro PR$V_IEEE_IOV = 4,25,1,0 %;       
macro PR$V_IEEE_DYN_RND = 4,26,2,0 %;
literal PR$S_IEEE_DYN_RND = 2;          
macro PR$V_IEEE_UNDZ = 4,28,1,0 %;      
macro PR$V_IEEE_UNFD = 4,29,1,0 %;      
macro PR$V_IEEE_INED = 4,30,1,0 %;      
macro PR$V_IEEE_SUMMARY = 4,31,1,0 %;   
 

literal PRT$C_NA = 0;                   
literal PRT$C_KR = 3;                   
literal PRT$C_KW = 2;                   
literal PRT$C_ER = 7;                   
literal PRT$C_EW = 5;                   
literal PRT$C_SR = 11;                  
literal PRT$C_SW = 8;                   
literal PRT$C_UR = 15;                  
literal PRT$C_UW = 4;                   
literal PRT$C_ERKW = 6;                 
literal PRT$C_SRKW = 10;                
literal PRT$C_SREW = 9;                 
literal PRT$C_URKW = 14;                
literal PRT$C_UREW = 13;                
literal PRT$C_URSW = 12;                
literal PRT$C_RESERVED = 1;             
 

literal PRV$M_CMKRNL = %X'1';
literal PRV$M_CMEXEC = %X'2';
literal PRV$M_SYSNAM = %X'4';
literal PRV$M_GRPNAM = %X'8';
literal PRV$M_ALLSPOOL = %X'10';
literal PRV$M_IMPERSONATE = %X'20';
literal PRV$M_DIAGNOSE = %X'40';
literal PRV$M_LOG_IO = %X'80';
literal PRV$M_GROUP = %X'100';
literal PRV$M_NOACNT = %X'200';
literal PRV$M_PRMCEB = %X'400';
literal PRV$M_PRMMBX = %X'800';
literal PRV$M_PSWAPM = %X'1000';
literal PRV$M_SETPRI = %X'2000';
literal PRV$M_SETPRV = %X'4000';
literal PRV$M_TMPMBX = %X'8000';
literal PRV$M_WORLD = %X'10000';
literal PRV$M_MOUNT = %X'20000';
literal PRV$M_OPER = %X'40000';
literal PRV$M_EXQUOTA = %X'80000';
literal PRV$M_NETMBX = %X'100000';
literal PRV$M_VOLPRO = %X'200000';
literal PRV$M_PHY_IO = %X'400000';
literal PRV$M_BUGCHK = %X'800000';
literal PRV$M_PRMGBL = %X'1000000';
literal PRV$M_SYSGBL = %X'2000000';
literal PRV$M_PFNMAP = %X'4000000';
literal PRV$M_SHMEM = %X'8000000';
literal PRV$M_SYSPRV = %X'10000000';
literal PRV$M_BYPASS = %X'20000000';
literal PRV$M_SYSLCK = %X'40000000';
literal PRV$M_SHARE = %X'80000000';
literal PRV$M_UPGRADE = %X'100000000';
literal PRV$M_DOWNGRADE = %X'200000000';
literal PRV$M_GRPPRV = %X'400000000';
literal PRV$M_READALL = %X'800000000';
literal PRV$M_IMPORT = %X'1000000000';
literal PRV$M_AUDIT = %X'2000000000';
literal PRV$M_SECURITY = %X'4000000000';
literal PRV$K_NUMBER_OF_PRIVS = 39;     
literal PRV$M_ACNT = %X'200';
literal PRV$M_ALTPRI = %X'2000';
literal PRV$M_DETACH = %X'20';
literal PRV$S_PRVDEF = 8;
macro PRV$V_CMKRNL = 0,0,1,0 %;         
macro PRV$V_CMEXEC = 0,1,1,0 %;         
macro PRV$V_SYSNAM = 0,2,1,0 %;         
macro PRV$V_GRPNAM = 0,3,1,0 %;         
macro PRV$V_ALLSPOOL = 0,4,1,0 %;       
macro PRV$V_IMPERSONATE = 0,5,1,0 %;    
macro PRV$V_DIAGNOSE = 0,6,1,0 %;       
macro PRV$V_LOG_IO = 0,7,1,0 %;         
macro PRV$V_GROUP = 0,8,1,0 %;          
macro PRV$V_NOACNT = 0,9,1,0 %;         
macro PRV$V_PRMCEB = 0,10,1,0 %;        
macro PRV$V_PRMMBX = 0,11,1,0 %;        
macro PRV$V_PSWAPM = 0,12,1,0 %;        
macro PRV$V_SETPRI = 0,13,1,0 %;        
macro PRV$V_SETPRV = 0,14,1,0 %;        
macro PRV$V_TMPMBX = 0,15,1,0 %;        
macro PRV$V_WORLD = 0,16,1,0 %;         
macro PRV$V_MOUNT = 0,17,1,0 %;         
macro PRV$V_OPER = 0,18,1,0 %;          
macro PRV$V_EXQUOTA = 0,19,1,0 %;       
macro PRV$V_NETMBX = 0,20,1,0 %;        
macro PRV$V_VOLPRO = 0,21,1,0 %;        
macro PRV$V_PHY_IO = 0,22,1,0 %;        
macro PRV$V_BUGCHK = 0,23,1,0 %;        
macro PRV$V_PRMGBL = 0,24,1,0 %;        
macro PRV$V_SYSGBL = 0,25,1,0 %;        
macro PRV$V_PFNMAP = 0,26,1,0 %;        
macro PRV$V_SHMEM = 0,27,1,0 %;         
macro PRV$V_SYSPRV = 0,28,1,0 %;        
macro PRV$V_BYPASS = 0,29,1,0 %;        
macro PRV$V_SYSLCK = 0,30,1,0 %;        
macro PRV$V_SHARE = 0,31,1,0 %;         
macro PRV$V_UPGRADE = 4,0,1,0 %;        
macro PRV$V_DOWNGRADE = 4,1,1,0 %;      
macro PRV$V_GRPPRV = 4,2,1,0 %;         
macro PRV$V_READALL = 4,3,1,0 %;        
macro PRV$V_IMPORT = 4,4,1,0 %;         
macro PRV$V_AUDIT = 4,5,1,0 %;          
macro PRV$V_SECURITY = 4,6,1,0 %;       
macro PRV$V_ACNT = 0,9,1,0 %;           
macro PRV$V_ALTPRI = 0,13,1,0 %;        
macro PRV$L_L1_BITS = 0,0,32,0 %;       
macro PRV$L_L2_BITS = 4,0,32,0 %;       
macro PRV$V_DETACH = 0,5,1,0 %;         
literal PRV$M_SORTED = %X'1';
literal PRV$M_BRIEF = %X'2';
literal PRV$M_FILLED = %X'4';
literal PRV$S_PRVDSP_BITS = 1;
macro PRV$V_SORTED = 0,0,1,0 %;         
macro PRV$V_BRIEF = 0,1,1,0 %;          
macro PRV$V_FILLED = 0,2,1,0 %;         
literal PRV$K_PRVMASK_WORKING = 0;      
literal PRV$K_PRVMASK_PERMANENT = 1;    
literal PRV$K_PRVMASK_IMAGE = 2;        
 
literal PRX$K_ADD = 1;
literal PRX$K_DELETE = 2;
literal PRX$K_SHOW = 3;
literal PRX$K_VERIFY = 4;
literal PRX$K_PERFORMANCE = 5;
literal PRX$K_ZERO_PERFORMANCE = 6;
literal PRX$K_CREATE = 7;
literal PRX$K_STOP = 8;
literal PRX$K_START = 9;
literal PRX$K_MAX_PROXY_CODE = 10;
literal PRX$K_PERFORMANCE_LENGTH = 48;
literal PRX$S_PERFORMANCE = 48;
macro PRX$L_TOTAL_MESSAGES = 0,0,32,0 %;
macro PRX$L_TOTAL_EXCEPTIONS = 4,0,32,0 %;
macro PRX$L_SHOWS = 8,0,32,0 %;
macro PRX$L_ADDS = 12,0,32,0 %;
macro PRX$L_DELETES = 16,0,32,0 %;
macro PRX$L_VERIFYS = 20,0,32,0 %;
macro PRX$L_PERFORMANCE = 24,0,32,0 %;
macro PRX$L_CREATES = 28,0,32,0 %;
macro PRX$L_STOPS = 32,0,32,0 %;
macro PRX$L_STARTS = 36,0,32,0 %;
macro PRX$L_AUDITS = 40,0,32,0 %;
macro PRX$L_INVALID_MESSAGES = 44,0,32,0 %;
literal PRX$M_IGNORE_RETURN = %X'1';
literal PRX$M_BYPASS_EXPAND = %X'2';
literal PRX$M_RESERVE_1 = %X'FC';
literal PRX$M_DEFAULT = %X'100';
literal PRX$M_EXACT = %X'200';
literal PRX$M_DELETE_ALLOWED = %X'400';
literal PRX$M_FILL_1 = %X'FFFFF800';
literal PRX$K_HEADER_LENGTH = 8;
literal PRX$S_HEADER = 8;
macro PRX$L_CONTEXT = 0,0,32,0 %;
macro PRX$L_FLAGS = 4,0,32,0 %;
macro PRX$V_IGNORE_RETURN = 4,0,1,0 %;
macro PRX$V_BYPASS_EXPAND = 4,1,1,0 %;
macro PRX$V_DEFAULT = 4,8,1,0 %;
macro PRX$V_EXACT = 4,9,1,0 %;
macro PRX$V_DELETE_ALLOWED = 4,10,1,0 %;
macro PRX$V_FILL_1 = 4,11,21,0 %;
literal PRX$S_FILL_1 = 21;
literal PRX$S_PRX$GENERIC_DESC1 = 5;
macro PRX$W_DESC_LENGTH = 0,0,16,0 %;
macro PRX$T_DESC_DATA = 4,0,8,0 %;
literal PRX$K_USER_NAME_LENGTH = 32;
literal PRX$K_REMOTE_NODE_NAME_LENGTH = 1024;
literal PRX$K_MAX_LOCAL_USERS = 16;
literal PRX$K_LOCAL_USER_ENTRY = 36;
literal PRX$S_DATA = 1100;
macro PRX$W_LOCAL_USER_LENGTH = 0,0,16,0 %;
macro PRX$T_LOCAL_USER_NAME = 4,0,0,0 %;
literal PRX$S_LOCAL_USER_NAME = 32;
macro PRX$W_REMOTE_USER_LENGTH = 36,0,16,0 %;
macro PRX$T_REMOTE_USER_NAME = 40,0,0,0 %;
literal PRX$S_REMOTE_USER_NAME = 32;
macro PRX$W_REMOTE_NODE_LENGTH = 72,0,16,0 %;
macro PRX$T_REMOTE_NODE_NAME = 76,0,0,0 %;
literal PRX$S_REMOTE_NODE_NAME = 1024;
literal PRX$K_DATA_LENGTH = 1100;
literal PRX$S_BUFSIZ_SUMMARY = 8;
macro PRX$W_BUFSIZ_USER = 0,0,16,0 %;   
macro PRX$W_BUFSIZ_NODE = 2,0,16,0 %;   
macro PRX$W_BUFSIZ_LOCAL_COUNT = 4,0,16,0 %; 
macro PRX$W_BUFSIZ_DEF_USER = 6,0,16,0 %; 
literal PRX$K_MAX_REPLY = 1692;
literal PRX$S_REPLY_UNION = 88;
macro PRX$L_REPLY_STATUS = 0,0,32,0 %;  
macro PRX$W_VALID_USER = 4,0,16,0 %;    
macro PRX$T_VALID_USER = 8,0,0,0 %;
literal PRX$S_VALID_USER = 32;          
macro PRX$L_SHOW_CONTEXT = 4,0,32,0 %;  
macro PRX$W_SHOW_DEF_USER = 8,0,16,0 %; 
macro PRX$T_SHOW_DEF_USER = 12,0,0,0 %;
literal PRX$S_SHOW_DEF_USER = 32;       
macro PRX$W_SHOW_REM_USER = 44,0,16,0 %; 
macro PRX$T_SHOW_REM_USER = 48,0,0,0 %;
literal PRX$S_SHOW_REM_USER = 32;       
macro PRX$W_SHOW_LOCAL_COUNT = 80,0,16,0 %; 
macro PRX$W_SHOW_LOCAL_SIZE = 82,0,16,0 %; 
macro PRX$R_SHOW_LOCAL_DATA = 84,0,32,0 %;
literal PRX$S_SHOW_LOCAL_DATA = 4;      
literal PRX$K_MAX_LENGTH = 1108;
 

literal pscan$_BEGIN = 0;
literal pscan$_ACCOUNT = 1;             
literal pscan$_AUTHPRI = 2;             
literal pscan$_CURPRIV = 3;             
literal pscan$_GRP = 4;                 
literal pscan$_HW_MODEL = 5;            
literal pscan$_HW_NAME = 6;             
literal pscan$_JOBPRCCNT = 7;           
literal pscan$_JOBTYPE = 8;             
literal pscan$_MASTER_PID = 9;          
literal pscan$_MEM = 10;                
literal pscan$_MODE = 11;               
literal pscan$_NODE_CSID = 12;          
literal pscan$_NODENAME = 13;           
literal pscan$_OWNER = 14;              
literal pscan$_PRCCNT = 15;             
literal pscan$_PRCNAM = 16;             
literal pscan$_PRI = 17;                
literal pscan$_PRIB = 18;               
literal pscan$_STATE = 19;              
literal pscan$_STS = 20;                
literal pscan$_TERMINAL = 21;           
literal pscan$_UIC = 22;                
literal pscan$_USERNAME = 23;           
literal pscan$_GETJPI_BUFFER_SIZE = 24; 
literal pscan$_PSCAN_CONTROL_FLAGS = 25; 
literal pscan$_KT_COUNT = 26;           
literal pscan$_MULTITHREAD = 27;        
literal pscan$_SCHED_CLASS_NAME = 28;   
literal pscan$_END = 29;
literal pscan$k_type = 129;
literal PSCAN$M_THREAD = %X'1';
literal PSCAN$S_PSCANCTLDEF = 4;
macro PSCAN$V_THREAD = 0,0,1,0 %;       
literal pscan$M_OR = %X'1';
literal pscan$M_BIT_ALL = %X'2';
literal pscan$M_BIT_ANY = %X'4';
literal pscan$M_GEQ = %X'8';
literal pscan$M_GTR = %X'10';
literal pscan$M_LEQ = %X'20';
literal pscan$M_LSS = %X'40';
literal pscan$M_PREFIX_MATCH = %X'80';
literal pscan$M_WILDCARD = %X'100';
literal pscan$M_CASE_BLIND = %X'200';
literal pscan$M_EQL = %X'400';
literal pscan$M_NEQ = %X'800';
literal pscan$S_item_specific_flags = 2;
macro pscan$V_OR = 0,0,1,0 %;           
macro pscan$V_BIT_ALL = 0,1,1,0 %;      
macro pscan$V_BIT_ANY = 0,2,1,0 %;      
macro pscan$V_GEQ = 0,3,1,0 %;
macro pscan$V_GTR = 0,4,1,0 %;
macro pscan$V_LEQ = 0,5,1,0 %;
macro pscan$V_LSS = 0,6,1,0 %;
macro pscan$V_PREFIX_MATCH = 0,7,1,0 %; 
macro pscan$V_WILDCARD = 0,8,1,0 %;     
macro pscan$V_CASE_BLIND = 0,9,1,0 %;   
macro pscan$V_EQL = 0,10,1,0 %;
macro pscan$V_NEQ = 0,11,1,0 %;
 

literal PSIG$K_FR_I64 = 0;              
literal PSIG$K_FR_D64 = 1;              
literal PSIG$K_FR_I32 = 2;              
literal PSIG$K_FR_U32 = 3;              
literal PSIG$K_FR_FF = 4;               
literal PSIG$K_FR_FD = 5;               
literal PSIG$K_FR_FG = 6;               
literal PSIG$K_FR_FS = 7;               
literal PSIG$K_FR_FT = 8;               
literal PSIG$K_FR_FFC = 11;             
literal PSIG$K_FR_FDC = 12;             
literal PSIG$K_FR_FGC = 13;             
literal PSIG$K_FR_FSC = 14;             
literal PSIG$K_FR_FTC = 15;             
literal PSIG$M_FUNC_RETURN = %X'F';
literal PSIG$M_REG_ARG_INFO = %X'FFFFFF0';
literal PSIG$M_SU_VLIST = %X'40000000';
literal PSIG$K_MIN_LENGTH = 8;          
literal PSIG$K_MAX_LENGTH = 72;         
literal PSIG$K_MIN_SIZE = 8;            
literal PSIG$K_MAX_SIZE = 72;           
literal PSIG$S_PSIGDEF = 8;

macro PSIG$L_REGISTER_INFO = 0,0,32,0 %;
macro PSIG$V_FUNC_RETURN = 0,0,4,0 %;
literal PSIG$S_FUNC_RETURN = 4;         
macro PSIG$V_REG_ARG_INFO = 0,4,24,0 %;
literal PSIG$S_REG_ARG_INFO = 24;       
macro PSIG$V_SUMMARY = 0,28,4,0 %;
literal PSIG$S_SUMMARY = 4;             

macro PSIG$L_SUMMARY_INFO = 0,0,32,0 %;
macro PSIG$V_FILL = 0,0,28,0 %;
literal PSIG$S_FILL = 28;
macro PSIG$V_SU_ASUM = 0,28,2,0 %;
literal PSIG$S_SU_ASUM = 2;             
macro PSIG$V_SU_VLIST = 0,30,1,0 %;     
macro PSIG$V_UNUSED = 0,31,1,0 %;

macro PSIG$B_ARG_COUNT = 4,0,8,0 %;     
macro PSIG$V_MEMORY_ARG_INFO = 4,8,24,0 %;
literal PSIG$S_MEMORY_ARG_INFO = 24;    
literal RASE$M_SIG_ENC = %X'F';
literal RASE$K_RA_I64 = 0;              
literal RASE$K_RA_NOARG = 0;            
literal RASE$K_RA_Q = 1;                
literal RASE$K_RA_I32 = 2;              
literal RASE$K_RA_U32 = 3;              
literal RASE$K_RA_FF = 4;               
literal RASE$K_RA_FD = 5;               
literal RASE$K_RA_FG = 6;               
literal RASE$K_RA_FS = 7;               
literal RASE$K_RA_FT = 8;               
literal RASE$S_RASEDEF = 1;
macro RASE$V_SIG_ENC = 0,0,4,0 %;
literal RASE$S_SIG_ENC = 4;             
literal MASE$K_MA_I64 = 0;              
literal MASE$K_MA_Q = 0;                
literal MASE$K_MA_I32 = 2;              
literal MASE$S_MASEDEF = 1;
macro MASE$V_SIG_ENC = 0,0,2,0 %;
literal MASE$S_SIG_ENC = 2;             

literal AI$K_AR_I64 = 0;                
literal AI$K_AR_FF = 1;                 
literal AI$K_AR_FD = 2;                 
literal AI$K_AR_FG = 3;                 
literal AI$K_AR_FS = 4;                 
literal AI$K_AR_FT = 5;                 
literal AI$K_AR_RESERVED_6 = 6;         
literal AI$K_AR_RESERVED_7 = 7;         
literal AI$M_ARG_REG_INFO = %X'700';
literal AI$K_AI_SIZE = 8;               
literal AI$S_AIDEF = 8;
macro AI$B_ARG_COUNT = 0,0,8,0 %;
macro AI$V_ARG_REG_INFO = 0,8,3,0 %;
literal AI$S_ARG_REG_INFO = 3;          
 

literal PSL$M_PRVMOD = %X'3';
literal PSL$M_CURMOD = %X'18';
literal PSL$M_IPL = %X'1F00';
literal PSL$V_MAX_PS_REG_BIT = 13;
literal PSL$C_KERNEL = 0;               
literal PSL$C_EXEC = 1;                 
literal PSL$C_SUPER = 2;                
literal PSL$C_USER = 3;                 
literal PSL$S_PSLDEF = 2;
macro PSL$V_PRVMOD = 0,0,2,0 %;
literal PSL$S_PRVMOD = 2;               
macro PSL$V_CURMOD = 0,3,2,0 %;
literal PSL$S_CURMOD = 2;               
macro PSL$V_IPL = 0,8,5,0 %;
literal PSL$S_IPL = 5;                  

 

literal PTD$C_SEND_XON = 0;             
literal PTD$C_SEND_BELL = 1;            
literal PTD$C_SEND_XOFF = 2;            
literal PTD$C_STOP_OUTPUT = 3;          
literal PTD$C_RESUME_OUTPUT = 4;        
literal PTD$C_CHAR_CHANGED = 5;         
literal PTD$C_ABORT_OUTPUT = 6;         
literal PTD$C_START_READ = 7;           
literal PTD$C_MIDDLE_READ = 8;          
literal PTD$C_END_READ = 9;             
literal PTD$C_ENABLE_READ = 10;         
literal PTD$C_DISABLE_READ = 11;        
literal PTD$C_MAX_EVENTS = 12;
 

literal QUI$_CANCEL_OPERATION = 1;      
literal QUI$_DISPLAY_CHARACTERISTIC = 2; 
literal QUI$_DISPLAY_FILE = 3;          
literal QUI$_DISPLAY_FORM = 4;          
literal QUI$_DISPLAY_JOB = 5;           
literal QUI$_DISPLAY_QUEUE = 6;         
literal QUI$_TRANSLATE_QUEUE = 7;       
literal QUI$_DISPLAY_ENTRY = 8;         
literal QUI$_DISPLAY_QMAN = 9;          
literal QUI$_DISPLAY_MANAGER = 10;      
literal QUI$K_MIN_FUNC = 1;             
literal QUI$K_MAX_FUNC = 10;            

literal QUI$_ACCOUNT_NAME = 1;          
literal QUI$_AFTER_TIME = 2;            
literal QUI$_ASSIGNED_QUEUE_NAME = 3;   
literal QUI$_BASE_PRIORITY = 4;         
literal QUI$_CHARACTERISTIC_NAME = 5;   
literal QUI$_CHARACTERISTIC_NUMBER = 6; 
literal QUI$_CHARACTERISTICS = 7;       
literal QUI$_CHECKPOINT_DATA = 8;       
literal QUI$_CLI = 9;                   
literal QUI$_COMPLETED_BLOCKS = 10;     
literal QUI$_CONDITION_VECTOR = 11;     
literal QUI$_CPU_DEFAULT = 12;          
literal QUI$_CPU_LIMIT = 13;            
literal QUI$_DEVICE_NAME = 14;          
literal QUI$_ENTRY_NUMBER = 15;         
literal QUI$_FILE_COPIES = 16;          
literal QUI$_FILE_COPIES_CHKPT = 17;    
literal QUI$_FILE_COPIES_DONE = 18;     
literal QUI$_FILE_FLAGS = 19;           
literal QUI$_FILE_SETUP_MODULES = 20;   
literal QUI$_FILE_SPECIFICATION = 21;   
literal QUI$_FILE_STATUS = 22;          
literal QUI$_FIRST_PAGE = 23;           
literal QUI$_FORM_DESCRIPTION = 24;     
literal QUI$_FORM_FLAGS = 25;           
literal QUI$_FORM_LENGTH = 26;          
literal QUI$_FORM_MARGIN_BOTTOM = 27;   
literal QUI$_FORM_MARGIN_LEFT = 28;     
literal QUI$_FORM_MARGIN_RIGHT = 29;    
literal QUI$_FORM_MARGIN_TOP = 30;      
literal QUI$_FORM_NAME = 31;            
literal QUI$_FORM_NUMBER = 32;          
literal QUI$_FORM_SETUP_MODULES = 33;   
literal QUI$_FORM_STOCK = 34;           
literal QUI$_FORM_WIDTH = 35;           
literal QUI$_GENERIC_TARGET = 36;       
literal QUI$_INTERVENING_BLOCKS = 37;   
literal QUI$_INTERVENING_JOBS = 38;     
literal QUI$_JOB_COPIES = 39;           
literal QUI$_JOB_COPIES_CHKPT = 40;     
literal QUI$_JOB_COPIES_DONE = 41;      
literal QUI$_JOB_FLAGS = 42;            
literal QUI$_JOB_LIMIT = 43;            
literal QUI$_JOB_NAME = 44;             
literal QUI$_JOB_RESET_MODULES = 45;    
literal QUI$_JOB_SIZE = 46;             
literal QUI$_JOB_SIZE_MAXIMUM = 47;     
literal QUI$_JOB_SIZE_MINIMUM = 48;     
literal QUI$_JOB_STATUS = 49;           
literal QUI$_LAST_PAGE = 50;            
literal QUI$_LIBRARY_SPECIFICATION = 51; 
literal QUI$_LOG_QUEUE = 52;            
literal QUI$_LOG_SPECIFICATION = 53;    
literal QUI$_NOTE = 54;                 
literal QUI$_OPERATOR_REQUEST = 55;     
literal QUI$_OWNER_UIC = 56;            
literal QUI$_PAGE_SETUP_MODULES = 57;   
literal QUI$_PARAMETER_1 = 58;          
literal QUI$_PARAMETER_2 = 59;
literal QUI$_PARAMETER_3 = 60;
literal QUI$_PARAMETER_4 = 61;
literal QUI$_PARAMETER_5 = 62;
literal QUI$_PARAMETER_6 = 63;
literal QUI$_PARAMETER_7 = 64;
literal QUI$_PARAMETER_8 = 65;
literal QUI$_PRIORITY = 66;             
literal QUI$_PROCESSOR = 67;            
literal QUI$_PROTECTION = 68;           
literal QUI$_QUEUE_FLAGS = 69;          
literal QUI$_QUEUE_NAME = 70;           
literal QUI$_QUEUE_STATUS = 71;         
literal QUI$_REFUSAL_REASON = 72;       
literal QUI$_REQUEUE_PRIORITY = 73;     
literal QUI$_REQUEUE_QUEUE_NAME = 74;   
literal QUI$_SCSNODE_NAME = 75;         
literal QUI$_SEARCH_FLAGS = 76;         
literal QUI$_SEARCH_NAME = 77;          
literal QUI$_SEARCH_NUMBER = 78;        
literal QUI$_SUBMISSION_TIME = 79;      
literal QUI$_UIC = 80;                  
literal QUI$_USERNAME = 81;             
literal QUI$_WSDEFAULT = 82;            
literal QUI$_WSEXTENT = 83;             
literal QUI$_WSQUOTA = 84;              
literal QUI$_RAD = 85;                  
literal QUI$_RESERVED_OUTPUT_86 = 86;   
literal QUI$_JOB_CONTROL_GQC = 87;      
literal QUI$_SEARCH_USERNAME = 88;      
literal QUI$_DEFAULT_FORM_NAME = 89;    
literal QUI$_DEFAULT_FORM_NUMBER = 90;  
literal QUI$_DEFAULT_FORM_STOCK = 91;   
literal QUI$_JOB_PID = 92;              
literal QUI$_FILE_IDENTIFICATION = 93;  
literal QUI$_PENDING_JOB_BLOCK_COUNT = 94; 
literal QUI$_JOB_RETENTION_TIME = 95;   
literal QUI$_JOB_COMPLETION_TIME = 96;  
literal QUI$_JOB_COMPLETION_QUEUE = 97; 
literal QUI$_RESERVED_OUTPUT_98 = 98;   
literal QUI$_RESERVED_OUTPUT_99 = 99;   
literal QUI$_RESERVED_OUTPUT_100 = 100; 
literal QUI$_RESERVED_OUTPUT_101 = 101; 
literal QUI$_RESERVED_OUTPUT_102 = 102; 
literal QUI$_SEARCH_BATCH_EPID = 103;   
literal QUI$_SEARCH_JOB_NAME = 104;     
literal QUI$_RESERVED_INPUT_105 = 105;  
literal QUI$_RESERVED_INPUT_106 = 106;  
literal QUI$_EXECUTING_JOB_COUNT = 107; 
literal QUI$_HOLDING_JOB_COUNT = 108;   
literal QUI$_TIMED_RELEASE_JOB_COUNT = 109; 
literal QUI$_PENDING_JOB_REASON = 110;  
literal QUI$_ORB = 111;                 
literal QUI$_QUEUE_DESCRIPTION = 112;   
literal QUI$_SYMBIONT_FLAGS = 113;      
literal QUI$_JOB_ACCESS_CLASS = 114;    
literal QUI$_ORB_LOCK_KEY = 115;        
literal QUI$_CHECKPOINT_FREQUENCY = 116; 
literal QUI$_PENDING_JOB_COUNT = 117;   
literal QUI$_RETAINED_JOB_COUNT = 118;  
literal QUI$_RESTART_QUEUE_NAME = 119;  
literal QUI$_FILE_COUNT = 120;          
literal QUI$_ATTRIBUTES = 121;          
literal QUI$_ATTRIBUTES_SIZE = 122;     
literal QUI$_QUEUE_SUPPORT = 123;       
literal QUI$_QUEUE_ATTRIBUTES = 124;    
literal QUI$_QUEUE_ATTRIBUTES_SIZE = 125; 
literal QUI$_JOB_ATTRIBUTES = 126;      
literal QUI$_JOB_ATTRIBUTES_SIZE = 127; 
literal QUI$_FILE_ATTRIBUTES = 128;     
literal QUI$_FILE_ATTRIBUTES_SIZE = 129; 
literal QUI$_AUTOSTART_ON = 130;        
literal QUI$_AGENT_PROFILE = 131;       
literal QUI$_MANAGER_NAME = 132;        
literal QUI$_MANAGER_STATUS = 133;      
literal QUI$_RESERVED_OUTPUT_134 = 134; 
literal QUI$_MANAGER_NODES = 135;       
literal QUI$_MANAGER_AUTOSTART = 136;   
literal QUI$_QUEUE_DIRECTORY = 137;     
literal QUI$_RESERVED_OUTPUT_138 = 138; 
literal QUI$_RESERVED_OUTPUT_139 = 139; 
literal QUI$_RESERVED_OUTPUT_140 = 140; 
literal QUI$_RESERVED_OUTPUT_141 = 141; 
literal QUI$_RESERVED_OUTPUT_142 = 142; 
literal QUI$_RESERVED_OUTPUT_143 = 143; 
literal QUI$_RESERVED_OUTPUT_144 = 144; 
literal QUI$_RESERVED_OUTPUT_145 = 145; 
literal QUI$_RESERVED_OUTPUT_146 = 146; 
literal QUI$_RESERVED_OUTPUT_147 = 147; 
literal QUI$_RESERVED_OUTPUT_148 = 148; 
literal QUI$_RESERVED_OUTPUT_149 = 149; 
literal QUI$_RESERVED_OUTPUT_150 = 150; 
literal QUI$_RESERVED_OUTPUT_151 = 151; 
literal QUI$_RESERVED_OUTPUT_152 = 152; 
literal QUI$_RESERVED_OUTPUT_153 = 153; 
literal QUI$_RESERVED_OUTPUT_154 = 154; 
literal QUI$_RESERVED_OUTPUT_155 = 155; 
literal QUI$_RESERVED_OUTPUT_156 = 156; 
literal QUI$_RESERVED_OUTPUT_157 = 157; 
literal QUI$_RESERVED_OUTPUT_158 = 158; 
literal QUI$_RESERVED_OUTPUT_159 = 159; 
literal QUI$_RESERVED_INPUT_160 = 160;  
literal QUI$_RESERVED_INPUT_161 = 161;  
literal QUI$_RESERVED_INPUT_162 = 162;  
literal QUI$_RESERVED_INPUT_163 = 163;  
literal QUI$_RESERVED_INPUT_164 = 164;  
literal QUI$_RESERVED_INPUT_165 = 165;  
literal QUI$K_MIN_ITEM = 1;             
literal QUI$K_MAX_ITEM = 165;           
literal QUI$_CHARGE_CODE = 1;           

literal QUI$M_FILE_BURST = %X'1';
literal QUI$M_FILE_BURST_EXP = %X'2';
literal QUI$M_FILE_DELETE = %X'4';
literal QUI$M_FILE_DOUBLE_SPACE = %X'8';
literal QUI$M_FILE_FLAG = %X'10';
literal QUI$M_FILE_FLAG_EXP = %X'20';
literal QUI$M_FILE_TRAILER = %X'40';
literal QUI$M_FILE_TRAILER_EXP = %X'80';
literal QUI$M_FILE_PAGE_HEADER = %X'100';
literal QUI$M_FILE_PAGINATE = %X'200';
literal QUI$M_FILE_PASSALL = %X'400';
literal QUI$M_FILE_PAGINATE_EXP = %X'800';
literal QUI$M_FILE_DELETE_ALWAYS = %X'1000';
literal QUI$S_FILE_FLAGS = 4;
macro QUI$V_FILE_BURST = 0,0,1,0 %;     
macro QUI$V_FILE_BURST_EXP = 0,1,1,0 %; 
macro QUI$V_FILE_DELETE = 0,2,1,0 %;    
macro QUI$V_FILE_DOUBLE_SPACE = 0,3,1,0 %; 
macro QUI$V_FILE_FLAG = 0,4,1,0 %;      
macro QUI$V_FILE_FLAG_EXP = 0,5,1,0 %;  
macro QUI$V_FILE_TRAILER = 0,6,1,0 %;   
macro QUI$V_FILE_TRAILER_EXP = 0,7,1,0 %; 
macro QUI$V_FILE_PAGE_HEADER = 0,8,1,0 %; 
macro QUI$V_FILE_PAGINATE = 0,9,1,0 %;  
macro QUI$V_FILE_PASSALL = 0,10,1,0 %;  
macro QUI$V_FILE_PAGINATE_EXP = 0,11,1,0 %; 
macro QUI$V_FILE_DELETE_ALWAYS = 0,12,1,0 %; 

literal QUI$M_FILE_CHECKPOINTED = %X'1';
literal QUI$M_FILE_EXECUTING = %X'2';
literal QUI$S_FILE_STATUS = 4;
macro QUI$V_FILE_CHECKPOINTED = 0,0,1,0 %; 
macro QUI$V_FILE_EXECUTING = 0,1,1,0 %; 

literal QUI$M_FORM_SHEET_FEED = %X'1';
literal QUI$M_FORM_TRUNCATE = %X'2';
literal QUI$M_FORM_WRAP = %X'4';
literal QUI$S_FORM_FLAGS = 4;
macro QUI$V_FORM_SHEET_FEED = 0,0,1,0 %; 
macro QUI$V_FORM_TRUNCATE = 0,1,1,0 %;  
macro QUI$V_FORM_WRAP = 0,2,1,0 %;      

literal QUI$M_JOB_CPU_LIMIT = %X'1';
literal QUI$M_JOB_FILE_BURST = %X'2';
literal QUI$M_JOB_FILE_BURST_ONE = %X'4';
literal QUI$M_JOB_FILE_BURST_EXP = %X'8';
literal QUI$M_JOB_FILE_FLAG = %X'10';
literal QUI$M_JOB_FILE_FLAG_ONE = %X'20';
literal QUI$M_JOB_FILE_FLAG_EXP = %X'40';
literal QUI$M_JOB_FILE_TRAILER = %X'80';
literal QUI$M_JOB_FILE_TRAILER_ONE = %X'100';
literal QUI$M_JOB_FILE_TRAILER_EXP = %X'200';
literal QUI$M_JOB_LOG_DELETE = %X'400';
literal QUI$M_JOB_LOG_NULL = %X'800';
literal QUI$M_JOB_LOG_SPOOL = %X'1000';
literal QUI$M_JOB_LOWERCASE = %X'2000';
literal QUI$M_JOB_NOTIFY = %X'4000';
literal QUI$M_JOB_RESTART = %X'8000';
literal QUI$M_JOB_WSDEFAULT = %X'10000';
literal QUI$M_JOB_WSEXTENT = %X'20000';
literal QUI$M_JOB_WSQUOTA = %X'40000';
literal QUI$M_JOB_FILE_PAGINATE = %X'80000';
literal QUI$M_JOB_FILE_PAGINATE_EXP = %X'100000';
literal QUI$M_JOB_RETENTION = %X'200000';
literal QUI$M_JOB_ERROR_RETENTION = %X'400000';
literal QUI$M_JOB_RAD = %X'800000';
literal QUI$S_JOB_FLAGS = 4;
macro QUI$V_JOB_CPU_LIMIT = 0,0,1,0 %;  
macro QUI$V_JOB_FILE_BURST = 0,1,1,0 %; 
macro QUI$V_JOB_FILE_BURST_ONE = 0,2,1,0 %; 
macro QUI$V_JOB_FILE_BURST_EXP = 0,3,1,0 %; 
macro QUI$V_JOB_FILE_FLAG = 0,4,1,0 %;  
macro QUI$V_JOB_FILE_FLAG_ONE = 0,5,1,0 %; 
macro QUI$V_JOB_FILE_FLAG_EXP = 0,6,1,0 %; 
macro QUI$V_JOB_FILE_TRAILER = 0,7,1,0 %; 
macro QUI$V_JOB_FILE_TRAILER_ONE = 0,8,1,0 %; 
macro QUI$V_JOB_FILE_TRAILER_EXP = 0,9,1,0 %; 
macro QUI$V_JOB_LOG_DELETE = 0,10,1,0 %; 
macro QUI$V_JOB_LOG_NULL = 0,11,1,0 %;  
macro QUI$V_JOB_LOG_SPOOL = 0,12,1,0 %; 
macro QUI$V_JOB_LOWERCASE = 0,13,1,0 %; 
macro QUI$V_JOB_NOTIFY = 0,14,1,0 %;    
macro QUI$V_JOB_RESTART = 0,15,1,0 %;   
macro QUI$V_JOB_WSDEFAULT = 0,16,1,0 %; 
macro QUI$V_JOB_WSEXTENT = 0,17,1,0 %;  
macro QUI$V_JOB_WSQUOTA = 0,18,1,0 %;   
macro QUI$V_JOB_FILE_PAGINATE = 0,19,1,0 %; 
macro QUI$V_JOB_FILE_PAGINATE_EXP = 0,20,1,0 %; 
macro QUI$V_JOB_RETENTION = 0,21,1,0 %; 
macro QUI$V_JOB_ERROR_RETENTION = 0,22,1,0 %; 
macro QUI$V_JOB_RAD = 0,23,1,0 %;       

literal QUI$M_JOB_ABORTING = %X'1';
literal QUI$M_JOB_EXECUTING = %X'2';
literal QUI$M_JOB_HOLDING = %X'4';
literal QUI$M_JOB_INACCESSIBLE = %X'8';
literal QUI$M_JOB_REFUSED = %X'10';
literal QUI$M_JOB_REQUEUE = %X'20';
literal QUI$M_JOB_RESTARTING = %X'40';
literal QUI$M_JOB_RETAINED = %X'80';
literal QUI$M_JOB_STARTING = %X'100';
literal QUI$M_JOB_TIMED_RELEASE = %X'200';
literal QUI$M_JOB_SUSPENDED = %X'400';
literal QUI$M_JOB_PENDING = %X'800';
literal QUI$M_JOB_UNDEFINED = %X'1000';
literal QUI$M_JOB_STALLED = %X'2000';
literal QUI$M_JOB_INCOMPLETE = %X'4000';
literal QUI$M_JOB_COMPLETING = %X'8000';
literal QUI$S_JOB_STATUS = 4;
macro QUI$V_JOB_ABORTING = 0,0,1,0 %;   
macro QUI$V_JOB_EXECUTING = 0,1,1,0 %;  
macro QUI$V_JOB_HOLDING = 0,2,1,0 %;    
macro QUI$V_JOB_INACCESSIBLE = 0,3,1,0 %; 
macro QUI$V_JOB_REFUSED = 0,4,1,0 %;    
macro QUI$V_JOB_REQUEUE = 0,5,1,0 %;    
macro QUI$V_JOB_RESTARTING = 0,6,1,0 %; 
macro QUI$V_JOB_RETAINED = 0,7,1,0 %;   
macro QUI$V_JOB_STARTING = 0,8,1,0 %;   
macro QUI$V_JOB_TIMED_RELEASE = 0,9,1,0 %; 
macro QUI$V_JOB_SUSPENDED = 0,10,1,0 %; 
macro QUI$V_JOB_PENDING = 0,11,1,0 %;   
macro QUI$V_JOB_UNDEFINED = 0,12,1,0 %; 
macro QUI$V_JOB_STALLED = 0,13,1,0 %;   
macro QUI$V_JOB_INCOMPLETE = 0,14,1,0 %; 
macro QUI$V_JOB_COMPLETING = 0,15,1,0 %; 
literal QUI$V_JOB_TIMED = 9;            
literal QUI$M_JOB_TIMED = 512;          

literal QUI$M_PEND_CHAR_MISMATCH = %X'1';
literal QUI$M_PEND_JOB_SIZE_MAX = %X'2';
literal QUI$M_PEND_JOB_SIZE_MIN = %X'4';
literal QUI$M_PEND_LOWERCASE_MISMATCH = %X'8';
literal QUI$M_PEND_NO_ACCESS = %X'10';
literal QUI$M_PEND_QUEUE_BUSY = %X'20';
literal QUI$M_PEND_QUEUE_STATE = %X'40';
literal QUI$M_PEND_STOCK_MISMATCH = %X'80';
literal QUI$S_PENDING_JOB_REASON = 4;
macro QUI$V_PEND_CHAR_MISMATCH = 0,0,1,0 %; 
macro QUI$V_PEND_JOB_SIZE_MAX = 0,1,1,0 %; 
macro QUI$V_PEND_JOB_SIZE_MIN = 0,2,1,0 %; 
macro QUI$V_PEND_LOWERCASE_MISMATCH = 0,3,1,0 %; 
macro QUI$V_PEND_NO_ACCESS = 0,4,1,0 %; 
macro QUI$V_PEND_QUEUE_BUSY = 0,5,1,0 %; 
macro QUI$V_PEND_QUEUE_STATE = 0,6,1,0 %; 
macro QUI$V_PEND_STOCK_MISMATCH = 0,7,1,0 %; 

literal QUI$M_QUEUE_BATCH = %X'1';
literal QUI$M_QUEUE_CPU_DEFAULT = %X'2';
literal QUI$M_QUEUE_CPU_LIMIT = %X'4';
literal QUI$M_QUEUE_FILE_BURST = %X'8';
literal QUI$M_QUEUE_FILE_BURST_ONE = %X'10';
literal QUI$M_QUEUE_FILE_FLAG = %X'20';
literal QUI$M_QUEUE_FILE_FLAG_ONE = %X'40';
literal QUI$M_QUEUE_FILE_TRAILER = %X'80';
literal QUI$M_QUEUE_FILE_TRAILER_ONE = %X'100';
literal QUI$M_QUEUE_GENERIC = %X'200';
literal QUI$M_QUEUE_GENERIC_SELECTION = %X'400';
literal QUI$M_QUEUE_JOB_BURST = %X'800';
literal QUI$M_QUEUE_JOB_FLAG = %X'1000';
literal QUI$M_QUEUE_JOB_SIZE_SCHED = %X'2000';
literal QUI$M_QUEUE_JOB_TRAILER = %X'4000';
literal QUI$M_QUEUE_RETAIN_ALL = %X'8000';
literal QUI$M_QUEUE_RETAIN_ERROR = %X'10000';
literal QUI$M_QUEUE_SWAP = %X'20000';
literal QUI$M_QUEUE_TERMINAL = %X'40000';
literal QUI$M_QUEUE_WSDEFAULT = %X'80000';
literal QUI$M_QUEUE_WSEXTENT = %X'100000';
literal QUI$M_QUEUE_WSQUOTA = %X'200000';
literal QUI$M_QUEUE_FILE_PAGINATE = %X'400000';
literal QUI$M_QUEUE_RECORD_BLOCKING = %X'800000';
literal QUI$M_QUEUE_PRINTER = %X'1000000';
literal QUI$M_QUEUE_ACL_SPECIFIED = %X'2000000';
literal QUI$M_QUEUE_NOTIFY_ON_INTERRUPT = %X'4000000';
literal QUI$M_QUEUE_CHECKPOINT_FREQ = %X'8000000';
literal QUI$M_QUEUE_AUTOSTART = %X'10000000';
literal QUI$M_SECURITY_INACCESSIBLE = %X'20000000';
literal QUI$M_QUEUE_NO_INITIAL_FF = %X'40000000';
literal QUI$M_QUEUE_RAD = %X'80000000';
literal QUI$S_QUEUE_FLAGS = 4;
macro QUI$V_QUEUE_BATCH = 0,0,1,0 %;    
macro QUI$V_QUEUE_CPU_DEFAULT = 0,1,1,0 %; 
macro QUI$V_QUEUE_CPU_LIMIT = 0,2,1,0 %; 
macro QUI$V_QUEUE_FILE_BURST = 0,3,1,0 %; 
macro QUI$V_QUEUE_FILE_BURST_ONE = 0,4,1,0 %; 
macro QUI$V_QUEUE_FILE_FLAG = 0,5,1,0 %; 
macro QUI$V_QUEUE_FILE_FLAG_ONE = 0,6,1,0 %; 
macro QUI$V_QUEUE_FILE_TRAILER = 0,7,1,0 %; 
macro QUI$V_QUEUE_FILE_TRAILER_ONE = 0,8,1,0 %; 
macro QUI$V_QUEUE_GENERIC = 0,9,1,0 %;  
macro QUI$V_QUEUE_GENERIC_SELECTION = 0,10,1,0 %; 
macro QUI$V_QUEUE_JOB_BURST = 0,11,1,0 %; 
macro QUI$V_QUEUE_JOB_FLAG = 0,12,1,0 %; 
macro QUI$V_QUEUE_JOB_SIZE_SCHED = 0,13,1,0 %; 
macro QUI$V_QUEUE_JOB_TRAILER = 0,14,1,0 %; 
macro QUI$V_QUEUE_RETAIN_ALL = 0,15,1,0 %; 
macro QUI$V_QUEUE_RETAIN_ERROR = 0,16,1,0 %; 
macro QUI$V_QUEUE_SWAP = 0,17,1,0 %;    
macro QUI$V_QUEUE_TERMINAL = 0,18,1,0 %; 
macro QUI$V_QUEUE_WSDEFAULT = 0,19,1,0 %; 
macro QUI$V_QUEUE_WSEXTENT = 0,20,1,0 %; 
macro QUI$V_QUEUE_WSQUOTA = 0,21,1,0 %; 
macro QUI$V_QUEUE_FILE_PAGINATE = 0,22,1,0 %; 
macro QUI$V_QUEUE_RECORD_BLOCKING = 0,23,1,0 %; 
macro QUI$V_QUEUE_PRINTER = 0,24,1,0 %; 
macro QUI$V_QUEUE_ACL_SPECIFIED = 0,25,1,0 %; 
macro QUI$V_QUEUE_NOTIFY_ON_INTERRUPT = 0,26,1,0 %; 
macro QUI$V_QUEUE_CHECKPOINT_FREQ = 0,27,1,0 %; 
macro QUI$V_QUEUE_AUTOSTART = 0,28,1,0 %; 
macro QUI$V_SECURITY_INACCESSIBLE = 0,29,1,0 %; 
macro QUI$V_QUEUE_NO_INITIAL_FF = 0,30,1,0 %; 
macro QUI$V_QUEUE_RAD = 0,31,1,0 %;     

literal QUI$M_QUEUE_ALIGNING = %X'1';
literal QUI$M_QUEUE_IDLE = %X'2';
literal QUI$M_QUEUE_LOWERCASE = %X'4';
literal QUI$M_QUEUE_OPERATOR_REQUEST = %X'8';
literal QUI$M_QUEUE_PAUSED = %X'10';
literal QUI$M_QUEUE_PAUSING = %X'20';
literal QUI$M_QUEUE_REMOTE = %X'40';
literal QUI$M_QUEUE_RESETTING = %X'80';
literal QUI$M_QUEUE_RESUMING = %X'100';
literal QUI$M_QUEUE_SERVER = %X'200';
literal QUI$M_QUEUE_STALLED = %X'400';
literal QUI$M_QUEUE_STARTING = %X'800';
literal QUI$M_QUEUE_STOPPED = %X'1000';
literal QUI$M_QUEUE_STOPPING = %X'2000';
literal QUI$M_QUEUE_UNAVAILABLE = %X'4000';
literal QUI$M_QUEUE_CLOSED = %X'8000';
literal QUI$M_QUEUE_BUSY = %X'10000';
literal QUI$M_QUEUE_UNDEFINED = %X'20000';
literal QUI$M_QUEUE_AVAILABLE = %X'40000';
literal QUI$M_QUEUE_DISABLED = %X'80000';
literal QUI$M_QUEUE_AUTOSTART_INACTIVE = %X'100000';
literal QUI$M_QUEUE_STOP_PENDING = %X'200000';
literal QUI$S_QUEUE_STATUS = 4;
macro QUI$V_QUEUE_ALIGNING = 0,0,1,0 %; 
macro QUI$V_QUEUE_IDLE = 0,1,1,0 %;     
macro QUI$V_QUEUE_LOWERCASE = 0,2,1,0 %; 
macro QUI$V_QUEUE_OPERATOR_REQUEST = 0,3,1,0 %; 
macro QUI$V_QUEUE_PAUSED = 0,4,1,0 %;   
macro QUI$V_QUEUE_PAUSING = 0,5,1,0 %;  
macro QUI$V_QUEUE_REMOTE = 0,6,1,0 %;   
macro QUI$V_QUEUE_RESETTING = 0,7,1,0 %; 
macro QUI$V_QUEUE_RESUMING = 0,8,1,0 %; 
macro QUI$V_QUEUE_SERVER = 0,9,1,0 %;   
macro QUI$V_QUEUE_STALLED = 0,10,1,0 %; 
macro QUI$V_QUEUE_STARTING = 0,11,1,0 %; 
macro QUI$V_QUEUE_STOPPED = 0,12,1,0 %; 
macro QUI$V_QUEUE_STOPPING = 0,13,1,0 %; 
macro QUI$V_QUEUE_UNAVAILABLE = 0,14,1,0 %; 
macro QUI$V_QUEUE_CLOSED = 0,15,1,0 %;  
macro QUI$V_QUEUE_BUSY = 0,16,1,0 %;    
macro QUI$V_QUEUE_UNDEFINED = 0,17,1,0 %; 
macro QUI$V_QUEUE_AVAILABLE = 0,18,1,0 %; 
macro QUI$V_QUEUE_DISABLED = 0,19,1,0 %; 
macro QUI$V_QUEUE_AUTOSTART_INACTIVE = 0,20,1,0 %; 
macro QUI$V_QUEUE_STOP_PENDING = 0,21,1,0 %; 

literal QUI$M_SEARCH_ALL_JOBS = %X'1';
literal QUI$M_SEARCH_WILDCARD = %X'2';
literal QUI$M_SEARCH_BATCH = %X'4';
literal QUI$M_SEARCH_SYMBIONT = %X'8';
literal QUI$M_SEARCH_THIS_JOB = %X'10';
literal QUI$M_SEARCH_PRINTER = %X'20';
literal QUI$M_SEARCH_SERVER = %X'40';
literal QUI$M_SEARCH_TERMINAL = %X'80';
literal QUI$M_SEARCH_GENERIC = %X'100';
literal QUI$M_SEARCH_GENERIC_TARGET = %X'200';
literal QUI$M_SEARCH_PENDING_JOBS = %X'400';
literal QUI$M_SEARCH_EXECUTING_JOBS = %X'800';
literal QUI$M_SEARCH_TIMED_RELEASE_JOBS = %X'1000';
literal QUI$M_SEARCH_HOLDING_JOBS = %X'2000';
literal QUI$M_SEARCH_RETAINED_JOBS = %X'4000';
literal QUI$M_SEARCH_FREEZE_CONTEXT = %X'8000';
literal QUI$M_SEARCH_OPEN_JOBS = %X'10000';
literal QUI$M_SEARCH_RESERVED_BIT1 = %X'20000';
literal QUI$M_SEARCH_RESERVED_BIT2 = %X'40000';
literal QUI$S_SEARCH_FLAGS = 4;
macro QUI$V_SEARCH_ALL_JOBS = 0,0,1,0 %; 
macro QUI$V_SEARCH_WILDCARD = 0,1,1,0 %; 
macro QUI$V_SEARCH_BATCH = 0,2,1,0 %;   
macro QUI$V_SEARCH_SYMBIONT = 0,3,1,0 %; 
macro QUI$V_SEARCH_THIS_JOB = 0,4,1,0 %; 
macro QUI$V_SEARCH_PRINTER = 0,5,1,0 %; 
macro QUI$V_SEARCH_SERVER = 0,6,1,0 %;  
macro QUI$V_SEARCH_TERMINAL = 0,7,1,0 %; 
macro QUI$V_SEARCH_GENERIC = 0,8,1,0 %; 
macro QUI$V_SEARCH_GENERIC_TARGET = 0,9,1,0 %; 

macro QUI$V_SEARCH_PENDING_JOBS = 0,10,1,0 %; 
macro QUI$V_SEARCH_EXECUTING_JOBS = 0,11,1,0 %; 
macro QUI$V_SEARCH_TIMED_RELEASE_JOBS = 0,12,1,0 %; 
macro QUI$V_SEARCH_HOLDING_JOBS = 0,13,1,0 %; 
macro QUI$V_SEARCH_RETAINED_JOBS = 0,14,1,0 %; 
macro QUI$V_SEARCH_FREEZE_CONTEXT = 0,15,1,0 %; 
macro QUI$V_SEARCH_OPEN_JOBS = 0,16,1,0 %; 
macro QUI$V_SEARCH_RESERVED_BIT1 = 0,17,1,0 %; 
macro QUI$V_SEARCH_RESERVED_BIT2 = 0,18,1,0 %; 

literal QUI$M_SYM_NOTIFIES = %X'1';
literal QUI$M_SYM_REQUESTS_OPER = %X'2';
literal QUI$M_SYM_COPIES_FILE = %X'4';
literal QUI$M_SYM_COPIES_JOB = %X'8';
literal QUI$M_SYM_ACCEPTS_ALL_FORMS = %X'10';
literal QUI$M_SYM_NO_JOB_CHECKPOINT = %X'20';
literal QUI$S_SYMBIONT_FLAGS = 4;
macro QUI$V_SYM_NOTIFIES = 0,0,1,0 %;   
macro QUI$V_SYM_REQUESTS_OPER = 0,1,1,0 %; 
macro QUI$V_SYM_COPIES_FILE = 0,2,1,0 %; 
macro QUI$V_SYM_COPIES_JOB = 0,3,1,0 %; 
macro QUI$V_SYM_ACCEPTS_ALL_FORMS = 0,4,1,0 %; 
macro QUI$V_SYM_NO_JOB_CHECKPOINT = 0,5,1,0 %; 

literal QUI$M_MANAGER_START_PENDING = %X'1';
literal QUI$M_MANAGER_STARTING = %X'2';
literal QUI$M_MANAGER_RUNNING = %X'4';
literal QUI$M_MANAGER_FAILOVER = %X'8';
literal QUI$M_MANAGER_STOPPING = %X'10';
literal QUI$M_MANAGER_STOPPED = %X'20';
literal QUI$S_MANAGER_STATUS = 4;
macro QUI$V_MANAGER_START_PENDING = 0,0,1,0 %; 
macro QUI$V_MANAGER_STARTING = 0,1,1,0 %; 
macro QUI$V_MANAGER_RUNNING = 0,2,1,0 %; 
macro QUI$V_MANAGER_FAILOVER = 0,3,1,0 %; 
macro QUI$V_MANAGER_STOPPING = 0,4,1,0 %; 
macro QUI$V_MANAGER_STOPPED = 0,5,1,0 %; 
 

literal QSRV$_CANCEL_OPERATION = 1;     
literal QSRV$_COMMIT_VOLATILE = 2;      
literal QSRV$_SET_CLIENT = 3;           
literal QSRV$_SET_DEVICE = 4;           
literal QSRV$_SET_LOGGING = 5;          
literal QSRV$_SET_SERVER = 6;           
literal QSRV$_SET_SERVICE = 7;          
literal QSRV$_SHOW_CLIENT = 8;          
literal QSRV$_SHOW_DEVICE = 9;          
literal QSRV$_SHOW_LOGGING = 10;        
literal QSRV$_SHOW_SERVER = 11;         
literal QSRV$_SHOW_SERVICE = 12;        
literal QSRV$K_MIN_FUNC = 1;            
literal QSRV$K_MAX_FUNC = 12;           

literal QSRV$_ADD_FILTER = 1;           
literal QSRV$_ADD_POOL = 2;             
literal QSRV$_AUTO_ADD_NPP = 3;         
literal QSRV$_CLEAR_FILTERS = 4;        
literal QSRV$_CLIENT_NAME = 5;          
literal QSRV$_CLIENT_SCSSYSTEMID = 6;   
literal QSRV$_DEFAULT_PRIORITY = 7;     
literal QSRV$_DELETE_POOL_BLOCK = 8;    
literal QSRV$_DEVICE_NAME = 9;          
literal QSRV$_FLAGS = 10;               
literal QSRV$_KCC_COUNTERS = 11;        
literal QSRV$_KCD_COUNTERS = 12;        
literal QSRV$_KCR_COUNTERS = 13;        
literal QSRV$_KSC_COUNTERS = 14;        
literal QSRV$_KSD_COUNTERS = 15;        
literal QSRV$_KSR_COUNTERS = 16;        
literal QSRV$_KSR_FUNCTION_HISTOGRAM = 17; 
literal QSRV$_KSR_IO_BUFFER_HISTOGRAM = 18; 
literal QSRV$_LIST_FILTERS = 19;        
literal QSRV$_LIST_POOL_BLOCKS = 20;    
literal QSRV$_LIST_POOL_STATS = 21;     
literal QSRV$_LOG_MODE = 22;            
literal QSRV$_LOG_NODE = 23;            
literal QSRV$_LOG_RESTART = 24;         
literal QSRV$_NBR_ALTERNATE_PATHS = 25; 
literal QSRV$_NBR_CLIENTS = 26;         
literal QSRV$_NBR_CLIENT_THREADS = 27;  
literal QSRV$_NBR_CREDITS = 28;         
literal QSRV$_NBR_DEVICES = 29;         
literal QSRV$_NBR_FILTERS = 30;         
literal QSRV$_NBR_IO_FRAGMENTS = 31;    
literal QSRV$_NBR_SERVERS = 32;         
literal QSRV$_NBR_SERVER_THREADS = 33;  
literal QSRV$_PATH_STATE = 34;          
literal QSRV$_POOL_WAIT_TMO = 35;       
literal QSRV$_QSLUN_AUTO = 36;          
literal QSRV$_QSRV_COMPONENT = 37;      
literal QSRV$_REMOVE_FILTER = 38;       
literal QSRV$_SEARCH_NAME = 39;         
literal QSRV$_SEQUENTIAL_ORDER = 40;    
literal QSRV$_SERVER_NAME = 41;         
literal QSRV$_SERVER_SCSSYSTEMID = 42;  
literal QSRV$_SERVICE_STATE = 43;       
literal QSRV$_UCC_COUNTERS = 44;        
literal QSRV$_UCR_COUNTERS = 45;        
literal QSRV$_USC_COUNTERS = 46;        
literal QSRV$_USR_COUNTERS = 47;        
literal QSRV$K_MIN_ITEM = 1;            
literal QSRV$K_MAX_ITEM = 47;           

literal QSRV$M_PERMANENT = %X'1';
literal QSRV$M_VOLATILE = %X'2';
literal QSRV$M_ADD = %X'4';
literal QSRV$M_CLIENT_CONFIG = %X'10000';
literal QSRV$M_SERVER_CONFIG = %X'20000';
literal QSRV$M_CLIENT_SEARCH = %X'40000';
literal QSRV$M_DEVICE_SEARCH = %X'80000';
literal QSRV$M_SERVER_SEARCH = %X'100000';
literal QSRV$M_SEARCH_DONE = %X'200000';
literal QSRV$M_CTX_ALLOCATED = %X'400000';
literal QSRV$S_QSRV_FLAGS = 4;
macro QSRV$L_FLAGS = 0,0,32,0 %;
macro QSRV$V_PERMANENT = 0,0,1,0 %;     
macro QSRV$V_VOLATILE = 0,1,1,0 %;      
macro QSRV$V_ADD = 0,2,1,0 %;           
macro QSRV$V_CLIENT_CONFIG = 0,16,1,0 %; 
macro QSRV$V_SERVER_CONFIG = 0,17,1,0 %; 
macro QSRV$V_CLIENT_SEARCH = 0,18,1,0 %; 
macro QSRV$V_DEVICE_SEARCH = 0,19,1,0 %; 
macro QSRV$V_SERVER_SEARCH = 0,20,1,0 %; 
macro QSRV$V_SEARCH_DONE = 0,21,1,0 %;  
macro QSRV$V_CTX_ALLOCATED = 0,22,1,0 %; 
literal QSRV_FLAGS$C_LENGTH = 4;
literal QSRV_FLAGS$K_LENGTH = 4;

literal QSRV_LOG$M_ACTIV_UCLOG = %X'10000';
literal QSRV_LOG$M_ACTIV_USLOG = %X'20000';
literal QSRV_LOG$M_ACTIV_KCLOG = %X'40000';
literal QSRV_LOG$M_ACTIV_KSLOG = %X'80000';
literal QSRV_LOG$M_ACTIV_MSG = %X'100000';
literal QSRV_LOG$M_ACTIV_EVT = %X'200000';
literal QSRV_LOG$M_ACTIV_CNT = %X'400000';
literal QSRV_LOG$M_ACTIV_HST = %X'800000';
literal QSRV_LOG$M_ACTIV_VBS = %X'1000000';
literal QSRV_LOG$S_QSRV_LOG = 4;
macro QSRV_LOG$L_FLAGS = 0,0,32,0 %;
macro QSRV_LOG$v_filler1 = 0,0,16,0 %;
literal QSRV_LOG$s_filler1 = 16;        
macro QSRV_LOG$V_ACTIV_UCLOG = 0,16,1,0 %; 
macro QSRV_LOG$V_ACTIV_USLOG = 0,17,1,0 %; 
macro QSRV_LOG$V_ACTIV_KCLOG = 0,18,1,0 %; 
macro QSRV_LOG$V_ACTIV_KSLOG = 0,19,1,0 %; 
macro QSRV_LOG$V_ACTIV_MSG = 0,20,1,0 %; 
macro QSRV_LOG$V_ACTIV_EVT = 0,21,1,0 %; 
macro QSRV_LOG$V_ACTIV_CNT = 0,22,1,0 %; 
macro QSRV_LOG$V_ACTIV_HST = 0,23,1,0 %; 
macro QSRV_LOG$V_ACTIV_VBS = 0,24,1,0 %; 
macro QSRV_LOG$v_filler2 = 0,25,7,0 %;
literal QSRV_LOG$s_filler2 = 7;         
literal QSRV_LOG$C_LENGTH = 4;
literal QSRV_LOG$K_LENGTH = 4;

literal QSRV$K_MSG_SCS = 1;             
literal QSRV$K_MSG_QSP = 2;             
literal QSRV$K_MSG_ICC_CONN = 3;        
literal QSRV$K_MSG_ICC_DATA = 4;        
literal QSRV$K_MIN_MSG = 1;             
literal QSRV$K_MAX_MSG = 4;             

literal QSRV_FILTER$S_QSRV_FILTER = 84;
macro QSRV_FILTER$t_node = 0,0,0,0 %;
literal QSRV_FILTER$s_node = 16;        
macro QSRV_FILTER$l_type = 16,0,32,0 %; 
macro QSRV_FILTER$t_device = 20,0,0,0 %;
literal QSRV_FILTER$s_device = 64;      
literal QSRV_FILTER$C_LENGTH = 84;
literal QSRV_FILTER$K_LENGTH = 84;

literal QSRV_HISTOGRAM$S_QSRV_HISTOGRAM = 552;
macro QSRV_HISTOGRAM$L_BUCKET_COUNT = 0,0,32,0 %; 
macro QSRV_HISTOGRAM$Q_BUCKET_BASE = 8,0,0,0 %;
literal QSRV_HISTOGRAM$S_BUCKET_BASE = 8; 
macro QSRV_HISTOGRAM$Q_BUCKET_RANGE = 16,0,0,0 %;
literal QSRV_HISTOGRAM$S_BUCKET_RANGE = 8; 
macro QSRV_HISTOGRAM$Q_DATA = 24,0,0,0 %;
literal QSRV_HISTOGRAM$S_DATA = 528;    
literal QSRV_HISTOGRAM$C_UNDERFLOW = 0;
literal QSRV_HISTOGRAM$C_OVERFLOW = 65;
literal QSRV_HISTOGRAM$C_LENGTH = 552;
literal QSRV_HISTOGRAM$K_LENGTH = 552;

literal QSRV_IOSB$S_QSRV_IOSB = 8;
macro QSRV_IOSB$l_pri_status = 0,0,32,0 %; 
macro QSRV_IOSB$l_sec_status = 4,0,32,0 %; 
literal QSRV_IOSB$C_LENGTH = 8;
literal QSRV_IOSB$K_LENGTH = 8;

literal QSRV_PATH$M_PRIORITY = %X'FF';
literal QSRV_PATH$M_LOCAL2SERVER = %X'4000000';
literal QSRV_PATH$M_QVALID = %X'8000000';
literal QSRV_PATH$M_VALID = %X'10000000';
literal QSRV_PATH$M_SERVED = %X'20000000';
literal QSRV_PATH$M_EXCLUSIVE = %X'40000000';
literal QSRV_PATH$M_CURRENT = %X'80000000';
literal QSRV_PATH$m_filler2 = %X'3FFFFFF';
literal QSRV_PATH$M_USEABLE_PATH = %X'3C000000';
literal QSRV_PATH$m_filler3 = %X'C0000000';
literal QSRV_PATH$S_QSRV_PATH = 4;
macro QSRV_PATH$L_PATH_STATE = 0,0,32,0 %; 
macro QSRV_PATH$V_PRIORITY = 0,0,8,0 %;
literal QSRV_PATH$S_PRIORITY = 8;       
macro QSRV_PATH$V_LOCAL2SERVER = 0,26,1,0 %; 
macro QSRV_PATH$V_QVALID = 0,27,1,0 %;  
macro QSRV_PATH$V_VALID = 0,28,1,0 %;   
macro QSRV_PATH$V_SERVED = 0,29,1,0 %;  
macro QSRV_PATH$V_EXCLUSIVE = 0,30,1,0 %; 
macro QSRV_PATH$V_CURRENT = 0,31,1,0 %; 
macro QSRV_PATH$v_filler2 = 0,0,26,0 %;
literal QSRV_PATH$s_filler2 = 26;
macro QSRV_PATH$V_USEABLE_PATH = 0,26,4,0 %;
literal QSRV_PATH$S_USEABLE_PATH = 4;   
macro QSRV_PATH$v_filler3 = 0,30,2,0 %;
literal QSRV_PATH$s_filler3 = 2;
literal QSRV_PATH$C_LENGTH = 4;
literal QSRV_PATH$K_LENGTH = 4;

literal QSRV_POOL$M_SIZE = %X'7FFFFFFF';
literal QSRV_POOL$M_NPP = %X'80000000';
literal QSRV_POOL$S_QSRV_POOL = 4;
macro QSRV_POOL$L_BLOCK_ID = 0,0,32,0 %; 
macro QSRV_POOL$V_SIZE = 0,0,31,0 %;
literal QSRV_POOL$S_SIZE = 31;          
macro QSRV_POOL$V_NPP = 0,31,1,0 %;     
macro QSRV_POOL$L_MODIFY = 0,0,32,0 %;  
literal QSRV_POOL$C_LENGTH = 4;
literal QSRV_POOL$K_LENGTH = 4;

literal QSRV_PLST$S_QSRV_PLST = 56;
macro QSRV_PLST$R_POOL_STAT = 0,0,0,0 %;
literal QSRV_PLST$S_POOL_STAT = 56;
macro QSRV_PLST$L_TOT_SIZE = 0,0,32,0 %; 
macro QSRV_PLST$L_FREE_SIZE = 4,0,32,0 %; 
macro QSRV_PLST$L_NBR_BLOCKs = 8,0,32,0 %; 
macro QSRV_PLST$L_NBR_FRAGMENTS = 12,0,32,0 %; 
macro QSRV_PLST$L_MAX_FRAG_SIZE = 16,0,32,0 %; 
macro QSRV_PLST$L_NPP_ADD_REQS = 20,0,32,0 %; 
macro QSRV_PLST$L_MAX_NPP_ADD_REQ = 24,0,32,0 %; 

literal QSRV_PLST$K_S2 = 0;             
literal QSRV_PLST$K_NPP = 1;            
literal QSRV_PLST$C_LENGTH = 56;
literal QSRV_PLST$K_LENGTH = 56;

literal QSRV_PLBLK$M_SIZE = %X'7FFFFFFF';
literal QSRV_PLBLK$M_NPP = %X'80000000';
literal QSRV_PLBLK$S_QSRV_PLBLK = 20;
macro QSRV_PLBLK$L_BLOCK_ID = 0,0,32,0 %; 
macro QSRV_PLBLK$L_BLOCK_SIZE_TYPE = 4,0,32,0 %;
macro QSRV_PLBLK$V_SIZE = 4,0,31,0 %;
literal QSRV_PLBLK$S_SIZE = 31;         
macro QSRV_PLBLK$V_NPP = 4,31,1,0 %;    
macro QSRV_PLBLK$L_FREE_SIZE = 8,0,32,0 %; 
macro QSRV_PLBLK$L_NBR_FRAGMENTS = 12,0,32,0 %; 
macro QSRV_PLBLK$L_MAX_FRAG_SIZE = 16,0,32,0 %; 
literal QSRV_PLBLK$C_LENGTH = 20;
literal QSRV_PLBLK$K_LENGTH = 20;

literal QSRV_KCRC$S_QSRV_KCRC = 40;
macro QSRV_KCRC$L_DRIVERS = 0,0,32,0 %; 
macro QSRV_KCRC$L_DEVICES = 4,0,32,0 %; 
macro QSRV_KCRC$L_ACT_SERVER_CONNS = 8,0,32,0 %; 
macro QSRV_KCRC$L_TOT_SERVERS_SEEN = 12,0,32,0 %; 
macro QSRV_KCRC$Q_CYCLES_PER_SEC = 16,0,0,0 %;
literal QSRV_KCRC$S_CYCLES_PER_SEC = 8; 
macro QSRV_KCRC$Q_TOT_SIO_TICS = 24,0,0,0 %;
literal QSRV_KCRC$S_TOT_SIO_TICS = 8;   
macro QSRV_KCRC$Q_TOT_SIO = 32,0,0,0 %;
literal QSRV_KCRC$S_TOT_SIO = 8;        
literal QSRV_KCRC$C_LENGTH = 40;
literal QSRV_KCRC$K_LENGTH = 40;

literal QSRV_KCCC$S_QSRV_KCCC = 64;
macro QSRV_KCCC$Q_SCSSYSTEMID = 0,0,0,0 %;
literal QSRV_KCCC$S_SCSSYSTEMID = 8;    
macro QSRV_KCCC$Q_IO_COUNT = 8,0,0,0 %;
literal QSRV_KCCC$S_IO_COUNT = 8;       
macro QSRV_KCCC$Q_COMPLEX_COUNT = 16,0,0,0 %;
literal QSRV_KCCC$S_COMPLEX_COUNT = 8;  
macro QSRV_KCCC$Q_CONTROL_COUNT = 24,0,0,0 %;
literal QSRV_KCCC$S_CONTROL_COUNT = 8;  
macro QSRV_KCCC$Q_NBR_CONN = 32,0,0,0 %;
literal QSRV_KCCC$S_NBR_CONN = 8;       
macro QSRV_KCCC$Q_CONN_TIME = 40,0,0,0 %;
literal QSRV_KCCC$S_CONN_TIME = 8;      
macro QSRV_KCCC$Q_NBR_DEVICES = 48,0,0,0 %;
literal QSRV_KCCC$S_NBR_DEVICES = 8;    
macro QSRV_KCCC$L_OPS_STALLED = 56,0,32,0 %; 
macro QSRV_KCCC$W_CREDIT_WAIT = 60,0,16,0 %; 
macro QSRV_KCCC$w_reserved_1 = 62,0,16,0 %; 
literal QSRV_KCCC$C_LENGTH = 64;
literal QSRV_KCCC$K_LENGTH = 64;

literal QSRV_KCDC$S_QSRV_KCDC = 64;
macro QSRV_KCDC$T_NAME = 0,0,0,0 %;
literal QSRV_KCDC$S_NAME = 16;          
macro QSRV_KCDC$B_NAME_LEN = 0,0,8,0 %;
macro QSRV_KCDC$IB_NAME_LEN = 0,0,8,0 %; 
macro QSRV_KCDC$T_NAME_STR = 1,0,0,0 %;
literal QSRV_KCDC$S_NAME_STR = 15;      
macro QSRV_KCDC$Q_IO_COUNT = 16,0,0,0 %;
literal QSRV_KCDC$S_IO_COUNT = 8;       
macro QSRV_KCDC$Q_COMPLEX_COUNT = 24,0,0,0 %;
literal QSRV_KCDC$S_COMPLEX_COUNT = 8;  
macro QSRV_KCDC$Q_CONTROL_COUNT = 32,0,0,0 %;
literal QSRV_KCDC$S_CONTROL_COUNT = 8;  
macro QSRV_KCDC$Q_RT_TIME = 40,0,0,0 %;
literal QSRV_KCDC$S_RT_TIME = 8;        
macro QSRV_KCDC$L_OPS_IN_SERVER = 48,0,32,0 %; 
macro QSRV_KCDC$L_OPS_STALLED = 52,0,32,0 %; 
macro QSRV_KCDC$L_PATHS = 56,0,32,0 %;  
macro QSRV_KCDC$l_reserved = 60,0,32,0 %;
literal QSRV_KCDC$C_LENGTH = 64;
literal QSRV_KCDC$K_LENGTH = 64;

literal QSRV_KSRC$S_QSRV_KSRC = 88;
macro QSRV_KSRC$L_DEVICES = 0,0,32,0 %; 
macro QSRV_KSRC$L_ACT_CLIENT_CONNS = 4,0,32,0 %; 
macro QSRV_KSRC$L_TOT_CLIENTS_SEEN = 8,0,32,0 %; 
macro QSRV_KSRC$Q_CYCLES_PER_SEC = 16,0,0,0 %;
literal QSRV_KSRC$S_CYCLES_PER_SEC = 8; 
macro QSRV_KSRC$Q_PEAK_BUFFER = 24,0,0,0 %;
literal QSRV_KSRC$S_PEAK_BUFFER = 8;    
macro QSRV_KSRC$Q_BUFFER_WAIT = 32,0,0,0 %;
literal QSRV_KSRC$S_BUFFER_WAIT = 8;    
macro QSRV_KSRC$Q_FRAGMENTS = 40,0,0,0 %;
literal QSRV_KSRC$S_FRAGMENTS = 8;      
macro QSRV_KSRC$Q_FRAG_IO = 48,0,0,0 %;
literal QSRV_KSRC$S_FRAG_IO = 8;        
macro QSRV_KSRC$Q_QSMQE_EXP = 56,0,0,0 %;
literal QSRV_KSRC$S_QSMQE_EXP = 8;      
macro QSRV_KSRC$Q_PEAK_QSMQE = 64,0,0,0 %;
literal QSRV_KSRC$S_PEAK_QSMQE = 8;     
macro QSRV_KSRC$Q_TOT_SIO_TICS = 72,0,0,0 %;
literal QSRV_KSRC$S_TOT_SIO_TICS = 8;   
macro QSRV_KSRC$Q_TOT_SIO = 80,0,0,0 %;
literal QSRV_KSRC$S_TOT_SIO = 8;        
literal QSRV_KSRC$C_LENGTH = 88;
literal QSRV_KSRC$K_LENGTH = 88;

literal QSRV_KSCC$S_QSRV_KSCC = 64;
macro QSRV_KSCC$Q_SCSSYSTEMID = 0,0,0,0 %;
literal QSRV_KSCC$S_SCSSYSTEMID = 8;    
macro QSRV_KSCC$Q_IO_COUNT = 8,0,0,0 %;
literal QSRV_KSCC$S_IO_COUNT = 8;       
macro QSRV_KSCC$Q_COMPLEX_COUNT = 16,0,0,0 %;
literal QSRV_KSCC$S_COMPLEX_COUNT = 8;  
macro QSRV_KSCC$Q_CONTROL_COUNT = 24,0,0,0 %;
literal QSRV_KSCC$S_CONTROL_COUNT = 8;  
macro QSRV_KSCC$Q_NBR_CONN = 32,0,0,0 %;
literal QSRV_KSCC$S_NBR_CONN = 8;       
macro QSRV_KSCC$Q_CONN_TIME = 40,0,0,0 %;
literal QSRV_KSCC$S_CONN_TIME = 8;      
macro QSRV_KSCC$Q_BAD_MSGS = 48,0,0,0 %;
literal QSRV_KSCC$S_BAD_MSGS = 8;       
macro QSRV_KSCC$W_CREDIT_WAIT = 56,0,16,0 %; 
macro QSRV_KSCC$W_BDLT_WAIT = 58,0,16,0 %; 
macro QSRV_KSCC$l_reserved = 60,0,32,0 %;
literal QSRV_KSCC$C_LENGTH = 64;
literal QSRV_KSCC$K_LENGTH = 64;

literal QSRV_KSDC$S_QSRV_KSDC = 56;
macro QSRV_KSDC$T_NAME = 0,0,0,0 %;
literal QSRV_KSDC$S_NAME = 16;          
macro QSRV_KSDC$B_NAME_LEN = 0,0,8,0 %;
macro QSRV_KSDC$IB_NAME_LEN = 0,0,8,0 %; 
macro QSRV_KSDC$T_NAME_STR = 1,0,0,0 %;
literal QSRV_KSDC$S_NAME_STR = 15;      
macro QSRV_KSDC$Q_IO_COUNT = 16,0,0,0 %;
literal QSRV_KSDC$S_IO_COUNT = 8;       
macro QSRV_KSDC$Q_COMPLEX_COUNT = 24,0,0,0 %;
literal QSRV_KSDC$S_COMPLEX_COUNT = 8;  
macro QSRV_KSDC$Q_CONTROL_COUNT = 32,0,0,0 %;
literal QSRV_KSDC$S_CONTROL_COUNT = 8;  
macro QSRV_KSDC$Q_SIO_DEV_TIME = 40,0,0,0 %;
literal QSRV_KSDC$S_SIO_DEV_TIME = 8;   
macro QSRV_KSDC$L_QUEUE_LENGTH = 48,0,32,0 %; 
macro QSRV_KSDC$L_OPS_STALLED = 52,0,32,0 %; 
literal QSRV_KSDC$C_LENGTH = 56;
literal QSRV_KSDC$K_LENGTH = 56;

literal QSRV_UCRC$S_QSRV_UCRC = 40;
macro QSRV_UCRC$L_DEVICES = 0,0,32,0 %; 
macro QSRV_UCRC$L_PATHS = 4,0,32,0 %;   
macro QSRV_UCRC$L_SERVERS = 8,0,32,0 %; 
macro QSRV_UCRC$L_PK_DC_THREADS = 12,0,32,0 %; 
macro QSRV_UCRC$L_PK_SRV_THREAD = 16,0,32,0 %; 
macro QSRV_UCRC$Q_SYSMGT_RQSTS = 24,0,0,0 %;
literal QSRV_UCRC$S_SYSMGT_RQSTS = 8;   
macro QSRV_UCRC$Q_UBUF_WAITS = 32,0,0,0 %;
literal QSRV_UCRC$S_UBUF_WAITS = 8;     
literal QSRV_UCRC$C_LENGTH = 40;
literal QSRV_UCRC$K_LENGTH = 40;

literal QSRV_UCCC$S_QSRV_UCCC = 40;
macro QSRV_UCCC$Q_SCSSYSTEMID = 0,0,0,0 %;
literal QSRV_UCCC$S_SCSSYSTEMID = 8;    
macro QSRV_UCCC$Q_CONNECTIONS = 8,0,0,0 %;
literal QSRV_UCCC$S_CONNECTIONS = 8;    
macro QSRV_UCCC$Q_CONN_TIME = 16,0,0,0 %;
literal QSRV_UCCC$S_CONN_TIME = 8;      
macro QSRV_UCCC$Q_DC_MSGS = 24,0,0,0 %;
literal QSRV_UCCC$S_DC_MSGS = 8;        
macro QSRV_UCCC$Q_CM_MSGS = 32,0,0,0 %;
literal QSRV_UCCC$S_CM_MSGS = 8;        
literal QSRV_UCCC$C_LENGTH = 40;
literal QSRV_UCCC$K_LENGTH = 40;

literal QSRV_USRC$S_QSRV_USRC = 32;
macro QSRV_USRC$L_DEVICES = 0,0,32,0 %; 
macro QSRV_USRC$L_CLIENTS = 4,0,32,0 %; 
macro QSRV_USRC$L_PK_DC_THREADS = 8,0,32,0 %; 
macro QSRV_USRC$L_PK_CLT_THREAD = 12,0,32,0 %; 
macro QSRV_USRC$Q_SYSMGT_RQSTS = 16,0,0,0 %;
literal QSRV_USRC$S_SYSMGT_RQSTS = 8;   
macro QSRV_USRC$Q_UBUF_WAITS = 24,0,0,0 %;
literal QSRV_USRC$S_UBUF_WAITS = 8;     
literal QSRV_USRC$C_LENGTH = 32;
literal QSRV_USRC$K_LENGTH = 32;

literal QSRV_USCC$S_QSRV_USCC = 40;
macro QSRV_USCC$Q_SCSSYSTEMID = 0,0,0,0 %;
literal QSRV_USCC$S_SCSSYSTEMID = 8;    
macro QSRV_USCC$Q_CONNECTIONS = 8,0,0,0 %;
literal QSRV_USCC$S_CONNECTIONS = 8;    
macro QSRV_USCC$Q_CONN_TIME = 16,0,0,0 %;
literal QSRV_USCC$S_CONN_TIME = 8;      
macro QSRV_USCC$Q_DC_MSGS = 24,0,0,0 %;
literal QSRV_USCC$S_DC_MSGS = 8;        
macro QSRV_USCC$Q_CM_MSGS = 32,0,0,0 %;
literal QSRV_USCC$S_CM_MSGS = 8;        
literal QSRV_USCC$C_LENGTH = 40;
literal QSRV_USCC$K_LENGTH = 40;

literal QSRV_COUNTERS$M_RESERVED_FLAGS = %X'FFFF';
literal QSRV_COUNTERS$S_QSRV_CNTR_ROOT = 24;
macro QSRV_COUNTERS$L_KC_VERS = 0,0,32,0 %; 
macro QSRV_COUNTERS$L_KS_VERS = 4,0,32,0 %; 
macro QSRV_COUNTERS$W_COUNTERS_TYPE = 8,0,16,0 %; 
macro QSRV_COUNTERS$W_FLAGS = 10,0,16,0 %;
macro QSRV_COUNTERS$V_RESERVED_FLAGS = 10,0,16,0 %;
literal QSRV_COUNTERS$S_RESERVED_FLAGS = 16; 
macro QSRV_COUNTERS$L_SIZE = 12,0,32,0 %; 
macro QSRV_COUNTERS$Q_TIME = 16,0,0,0 %;
literal QSRV_COUNTERS$S_TIME = 8;       
literal QSRV_CNTR_ROOT$C_LENGTH = 24;
literal QSRV_CNTR_ROOT$K_LENGTH = 24;

literal QSRV_COUNTERS$K_KCROOT_LENGTH = 64;
literal QSRV_COUNTERS$K_KCCONN_LENGTH = 88;
literal QSRV_COUNTERS$K_KCDEV_LENGTH = 88;
literal QSRV_COUNTERS$K_KSROOT_LENGTH = 112;
literal QSRV_COUNTERS$K_KSCONN_LENGTH = 88;
literal QSRV_COUNTERS$K_KSDEV_LENGTH = 80;
literal QSRV_COUNTERS$K_UCROOT_LENGTH = 64;
literal QSRV_COUNTERS$K_UCCONN_LENGTH = 64;
literal QSRV_COUNTERS$K_USROOT_LENGTH = 56;
literal QSRV_COUNTERS$K_USCONN_LENGTH = 64;
literal QSRV_COUNTERS$S_QSRV_COUNTERS = 112;
macro QSRV_COUNTERS$R_KCROOT = 24,0,0,0 %;
literal QSRV_COUNTERS$S_KCROOT = 40;    
macro QSRV_COUNTERS$R_KCCONN = 24,0,0,0 %;
literal QSRV_COUNTERS$S_KCCONN = 64;    
macro QSRV_COUNTERS$R_KCDEV = 24,0,0,0 %;
literal QSRV_COUNTERS$S_KCDEV = 64;     
macro QSRV_COUNTERS$R_KSROOT = 24,0,0,0 %;
literal QSRV_COUNTERS$S_KSROOT = 88;    
macro QSRV_COUNTERS$R_KSCONN = 24,0,0,0 %;
literal QSRV_COUNTERS$S_KSCONN = 64;    
macro QSRV_COUNTERS$R_KSDEV = 24,0,0,0 %;
literal QSRV_COUNTERS$S_KSDEV = 56;     
macro QSRV_COUNTERS$R_UCROOT = 24,0,0,0 %;
literal QSRV_COUNTERS$S_UCROOT = 40;    
macro QSRV_COUNTERS$R_UCCONN = 24,0,0,0 %;
literal QSRV_COUNTERS$S_UCCONN = 40;    
macro QSRV_COUNTERS$R_USROOT = 24,0,0,0 %;
literal QSRV_COUNTERS$S_USROOT = 32;    
macro QSRV_COUNTERS$R_USCONN = 24,0,0,0 %;
literal QSRV_COUNTERS$S_USCONN = 40;    
literal QSRV_COUNTERS$C_LENGTH = 112;
literal QSRV_COUNTERS$K_LENGTH = 112;
 

literal RMI$C_EXETYPE = 1;              
literal RMI$C_EWSTYPE = 2;              
literal RMI$C_MONTYPE = 3;              
literal RMI$C_RMSTYPE = 4;              
literal RMI$C_EX2TYPE = 5;              
literal RMI$C_LISTEND = 0;              

literal RMI$_initial = -1;              
literal RMI$_data_collection = -2;      
literal RMI$_sysinfo = -3;              
literal RMI$_version_number = -4;       
literal RMI$_rms_file = -5;             
literal RMI$_rms_gs = -6;               
literal RMI$_last_type = -7;
literal RMI$_server_version = 5;

literal RMI$S_rmi$pms_flags = 4;
macro RMI$l_flags = 0,0,32,0 %;
literal RMI$s_flags = 4;                
macro RMI$v_disk_enable = 0,0,1,0 %;    

macro RMI$v_filler1 = 0,1,7,0 %;
literal RMI$s_filler1 = 7;              
macro RMI$v_disk_sync = 0,8,1,0 %;      

macro RMI$v_filler2 = 0,9,23,0 %;
literal RMI$s_filler2 = 23;             

literal RMI$k_max_packet = 500;
literal RMI$k_pool_ovf = -2147483647;

literal RMI$_MODES = 4096;              
literal RMI$_INTERRUPT = 4097;          
literal RMI$_KERNEL = 4098;             
literal RMI$_EXEC = 4099;               
literal RMI$_SUPER = 4100;              
literal RMI$_USER = 4101;               
literal RMI$_COMPAT = 4102;             
literal RMI$_INTERRUPT_BUSY = 4103;     
literal RMI$_KERNEL_BUSY = 4104;        
literal RMI$_IDLE = 4105;               
literal RMI$_CPUBUSY = 4106;            
literal RMI$_COLPG = 4107;              
literal RMI$_MWAIT = 4108;              
literal RMI$_CEF = 4109;                
literal RMI$_PFW = 4110;                
literal RMI$_LEF = 4111;                
literal RMI$_LEFO = 4112;               
literal RMI$_HIB = 4113;                
literal RMI$_HIBO = 4114;               
literal RMI$_SUSP = 4115;               
literal RMI$_SUSPO = 4116;              
literal RMI$_FPG = 4117;                
literal RMI$_COM = 4118;                
literal RMI$_COMO = 4119;               
literal RMI$_CUR = 4120;                
literal RMI$_OTHSTAT = 4121;            
literal RMI$_PROCS = 4122;              
literal RMI$_PROC = 4123;               
literal RMI$_FRLIST = 4124;             
literal RMI$_MODLIST = 4125;            
literal RMI$_FAULTS = 4126;             
literal RMI$_PREADS = 4127;             
literal RMI$_PWRITES = 4128;            
literal RMI$_PWRITIO = 4129;            
literal RMI$_PREADIO = 4130;            
literal RMI$_GVALFLTS = 4131;           
literal RMI$_WRTINPROG = 4132;          
literal RMI$_FREFLTS = 4133;            
literal RMI$_MFYFLTS = 4134;            
literal RMI$_DZROFLTS = 4135;           
literal RMI$_SYSFAULTS = 4136;          
literal RMI$_LRPCNT = 4137;             
literal RMI$_LRPINUSE = 4138;           
literal RMI$_IRPCNT = 4139;             
literal RMI$_IRPINUSE = 4140;           
literal RMI$_SRPCNT = 4141;             
literal RMI$_SRPINUSE = 4142;           
literal RMI$_HOLECNT = 4143;            
literal RMI$_BIGHOLE = 4144;            
literal RMI$_SMALLHOLE = 4145;          
literal RMI$_HOLESUM = 4146;            
literal RMI$_DYNINUSE = 4147;           
literal RMI$_SMALLCNT = 4148;           
literal RMI$_ISWPCNT = 4149;            
literal RMI$_DIRIO = 4150;              
literal RMI$_BUFIO = 4151;              
literal RMI$_MBREADS = 4152;            
literal RMI$_MBWRITES = 4153;           
literal RMI$_LOGNAM = 4154;             
literal RMI$_FCPCALLS = 4155;           
literal RMI$_FCPREAD = 4156;            
literal RMI$_FCPWRITE = 4157;           
literal RMI$_FCPCACHE = 4158;           
literal RMI$_FCPCPU = 4159;             
literal RMI$_FCPHIT = 4160;             
literal RMI$_FCPSPLIT = 4161;           
literal RMI$_FCPFAULT = 4162;           
literal RMI$_ENQNEW = 4163;             
literal RMI$_ENQCVT = 4164;             
literal RMI$_DEQ = 4165;                
literal RMI$_BLKAST = 4166;             
literal RMI$_ENQWAIT = 4167;            
literal RMI$_ENQNOTQD = 4168;           
literal RMI$_DLCKSRCH = 4169;           
literal RMI$_DLCKFND = 4170;            
literal RMI$_NUMLOCKS = 4171;           
literal RMI$_NUMRES = 4172;             
literal RMI$_ARRLOCPK = 4173;           
literal RMI$_DEPLOCPK = 4174;           
literal RMI$_ARRTRAPK = 4175;           
literal RMI$_TRCNGLOS = 4176;           
literal RMI$_RCVBUFFL = 4177;           
literal RMI$_RESERVED1 = 4178;          
literal RMI$_RESERVED2 = 4179;          
literal RMI$_RESERVED3 = 4180;          
literal RMI$_RESERVED4 = 4181;          
literal RMI$_RESERVED5 = 4182;          
literal RMI$_RESERVED6 = 4183;          
literal RMI$_RESERVED7 = 4184;          
literal RMI$_RESERVED8 = 4185;          
literal RMI$_RESERVED9 = 4186;          
literal RMI$_RESERVED10 = 4187;         
literal RMI$_RESERVED11 = 4188;         
literal RMI$_RESERVED12 = 4189;         
literal RMI$_RESERVED13 = 4190;         
literal RMI$_RESERVED14 = 4191;         
literal RMI$_RESERVED15 = 4192;         
literal RMI$_RESERVED16 = 4193;         
literal RMI$_RESERVED17 = 4194;         
literal RMI$_RESERVED18 = 4195;         
literal RMI$_FID_TRIES = 4196;          
literal RMI$_FILHDR_TRIES = 4197;       
literal RMI$_DIRFCB_TRIES = 4198;       
literal RMI$_DIRDATA_TRIES = 4199;      
literal RMI$_EXT_TRIES = 4200;          
literal RMI$_QUO_TRIES = 4201;          
literal RMI$_STORAGMAP_TRIES = 4202;    
literal RMI$_DISKS = 4203;              
literal RMI$_TOTAL_LOCKS = 4204;        
literal RMI$_ENQNEWLOC = 4205;          
literal RMI$_ENQNEWIN = 4206;           
literal RMI$_ENQNEWOUT = 4207;          
literal RMI$_ENQCVTLOC = 4208;          
literal RMI$_ENQCVTIN = 4209;           
literal RMI$_ENQCVTOUT = 4210;          
literal RMI$_DEQLOC = 4211;             
literal RMI$_DEQIN = 4212;              
literal RMI$_DEQOUT = 4213;             
literal RMI$_BLKLOC = 4214;             
literal RMI$_BLKIN = 4215;              
literal RMI$_BLKOUT = 4216;             
literal RMI$_DIRIN = 4217;              
literal RMI$_DIROUT = 4218;             
literal RMI$_DLCKMSGS = 4219;           
literal RMI$_SCS = 4220;                
literal RMI$_SYSTIME = 4221;            
literal RMI$_MSCP_REQUEST = 4222;       
literal RMI$_MSCP_READ = 4223;          
literal RMI$_MSCP_WRITE = 4224;         
literal RMI$_MSCP_FRAGMENT = 4225;      
literal RMI$_MSCP_SPLIT = 4226;         
literal RMI$_MSCP_BUFWAIT = 4227;       
literal RMI$_MSCP_SIZE1 = 4228;         
literal RMI$_MSCP_SIZE2 = 4229;         
literal RMI$_MSCP_SIZE3 = 4230;         
literal RMI$_MSCP_SIZE4 = 4231;         
literal RMI$_MSCP_SIZE5 = 4232;         
literal RMI$_MSCP_SIZE6 = 4233;         
literal RMI$_MSCP_SIZE7 = 4234;         
literal RMI$_MSCP_ALL = 4235;           
literal RMI$_DDTM_STARTS = 4236;        
literal RMI$_DDTM_PREPARES = 4237;      
literal RMI$_DDTM_ONE_PHASE = 4238;     
literal RMI$_DDTM_COMMITS = 4239;       
literal RMI$_DDTM_ABORTS = 4240;        
literal RMI$_DDTM_ENDS = 4241;          
literal RMI$_DDTM_BRANCHS = 4242;       
literal RMI$_DDTM_ADDS = 4243;          
literal RMI$_DDTM_BUCKETS1 = 4244;      
literal RMI$_DDTM_BUCKETS2 = 4245;      
literal RMI$_DDTM_BUCKETS3 = 4246;      
literal RMI$_DDTM_BUCKETS4 = 4247;      
literal RMI$_DDTM_BUCKETS5 = 4248;      
literal RMI$_DDTM_BUCKETS6 = 4249;      
literal RMI$_DDTM_ALL = 4250;           
literal RMI$_VECTORP = 4251;            
literal RMI$_VBYTE_READ = 4252;         
literal RMI$_VBYTE_WRITE = 4253;        
literal RMI$_VVBS_TRAN = 4254;
literal RMI$_VRBS_TRAN = 4255;
literal RMI$_VDIO_SEL = 4256;
literal RMI$_VDIOMAP_ALLOC = 4257;
literal RMI$_VRBS_AVAIL = 4258;
literal RMI$_VSEL_FAIL = 4259;
literal RMI$_VVBSM_HIT = 4260;
literal RMI$_VVBSM_CACHE = 4261;
literal RMI$_VFLUIDBAL = 4262;
literal RMI$_VRECOPY = 4263;
literal RMI$_VCPUTICKS = 4264;
literal RMI$_MSCP_EVERYTHING = 4265;    
literal RMI$_TMSCP_EVERYTHING = 4266;   
literal RMI$_DDTM_TWOPHASE_ACKRCV = 4267; 
literal RMI$_DDTM_TWOPHASE_ACKSNT = 4268; 
literal RMI$_DDTM_TWOPHASE_CANRCV = 4269; 
literal RMI$_DDTM_TWOPHASE_CANSNT = 4270; 
literal RMI$_DDTM_TWOPHASE_RDYRCV = 4271; 
literal RMI$_DDTM_TWOPHASE_RDYSNT = 4272; 
literal RMI$_DDTM_TWOPHASE_REQRCV = 4273; 
literal RMI$_DDTM_TWOPHASE_REQSNT = 4274; 
literal RMI$_DDTM_TWOPHASE_COMMITS = 4275; 
literal RMI$_DDTM_DECLARES = 4276;      
literal RMI$_DDTM_JOINS = 4277;         
literal RMI$_DDTM_FORGETS = 4278;       
literal RMI$_DDTM_SEQNO = 4279;         
literal RMI$_DDTM_LOG_COMMITS = 4280;   
literal RMI$_DDTM_LOG_PREPARES = 4281;  
literal RMI$_DDTM_LOG_FORGETS = 4282;   
literal RMI$_DDTM_WRITES_STARTED = 4283; 
literal RMI$_DDTM_WRITES_FORKED = 4284; 
literal RMI$_DDTM_BAD_TYPECODE = 4285;  
literal RMI$_DDTM_BAD_LINKS = 4286;     
literal RMI$_DDTM_FOR_UNLINKS = 4287;   
literal RMI$_DDTM_VOL_UNLINKS = 4288;   
literal RMI$_DDTM_DISC_COMP = 4289;     
literal RMI$_DDTM_BAD_PARTS = 4290;     
literal RMI$_LCKMGR_CPU = 4291;         
literal RMI$_LCKMGR_PID = 4292;         
literal RMI$_LCKMGR_REQCNT = 4293;      
literal RMI$_LCKMGR_REQTIME = 4294;     
literal RMI$_LCKMGR_SPINCNT = 4295;     
literal RMI$_LCKMGR_SPINTIME = 4296;    
literal RMI$_LOCK_MAX = 4297;           
literal RMI$_LPZ_PAKSIZ = 4298;         
literal RMI$_LPZ_PAGCNT = 4299;         
literal RMI$_LPZ_MAXPAG = 4300;         
literal RMI$_LPZ_FREEPGCNT = 4301;      
literal RMI$_LPZ_HITS = 4302;           
literal RMI$_LPZ_MISSES = 4303;         
literal RMI$_LPZ_EXPCNT = 4304;         
literal RMI$_LPZ_ALLOCF = 4305;         
literal RMI$_LPZ_ALLOC2 = 4306;         
literal RMI$_LPZ_EMPTY = 4307;          
literal RMI$_RML_ACQUIRE = 4308;        
literal RMI$_RML_BETTER = 4309;         
literal RMI$_RML_MORE_ACT = 4310;       
literal RMI$_RML_MSGRCV = 4311;         
literal RMI$_RML_MSGSENT = 4312;        
literal RMI$_RML_NOQUOTA = 4313;        
literal RMI$_RML_NOTAKER = 4314;        
literal RMI$_RML_OPCNT = 4315;          
literal RMI$_RML_RBLDMSGRCV = 4316;     
literal RMI$_RML_RBLDMSGSENT = 4317;    
literal RMI$_RML_SINGLE = 4318;         
literal RMI$_RML_UNLOAD = 4319;         
literal RMI$_RESERVEDEXE1 = 4320;       
literal RMI$_RESERVEDEXE2 = 4321;       
literal RMI$_RESERVEDEXE3 = 4322;       
literal RMI$_RESERVEDEXE4 = 4323;       
literal RMI$_RESERVEDEXE5 = 4324;       
literal RMI$_RESERVEDEXE6 = 4325;       
literal RMI$_RESERVEDEXE7 = 4326;       
literal RMI$_RESERVEDEXE8 = 4327;       
literal RMI$_RESERVEDEXE9 = 4328;       
literal RMI$_RESERVEDEXE10 = 4329;      
literal RMI$_RESERVEDEXE11 = 4330;      
literal RMI$_RESERVEDEXE12 = 4331;      
literal RMI$_RESERVEDEXE13 = 4332;      
literal RMI$_RESERVEDEXE14 = 4333;      
literal RMI$_RESERVEDEXE15 = 4334;      
literal RMI$_RESERVEDEXE16 = 4335;      
literal RMI$_LASTEXE = 4336;            

literal RMI$_ACCESS = 8432;             
literal RMI$_ALLOC = 8433;              
literal RMI$_FCPCREATE = 8434;          
literal RMI$_VOLWAIT = 8435;            
literal RMI$_FCPTURN = 8436;            
literal RMI$_FCPERASE = 8437;           
literal RMI$_OPENS = 8438;              
literal RMI$_FIDHIT = 8439;             
literal RMI$_FIDMISS = 8440;            
literal RMI$_FILHDR_HIT = 8441;         
literal RMI$_DIRFCB_HIT = 8442;         
literal RMI$_DIRFCB_MISS = 8443;        
literal RMI$_DIRDATA_HIT = 8444;        
literal RMI$_EXTHIT = 8445;             
literal RMI$_EXTMISS = 8446;            
literal RMI$_QUOHIT = 8447;             
literal RMI$_QUOMISS = 8448;            
literal RMI$_STORAGMAP_HIT = 8449;      
literal RMI$_VOLLCK = 8450;             
literal RMI$_SYNCHLCK = 8451;           
literal RMI$_SYNCHWAIT = 8452;          
literal RMI$_ACCLCK = 8453;             
literal RMI$_XQPCACHEWAIT = 8454;       
literal RMI$_DIRDATA_MISS = 8455;       
literal RMI$_FILHDR_MISS = 8456;        
literal RMI$_STORAGMAP_MISS = 8457;     
literal RMI$_RESERVEDEWS1 = 8458;       
literal RMI$_RESERVEDEWS2 = 8459;       
literal RMI$_RESERVEDEWS3 = 8460;       
literal RMI$_RESERVEDEWS4 = 8461;       
literal RMI$_RESERVEDEWS5 = 8462;       
literal RMI$_RESERVEDEWS6 = 8463;       
literal RMI$_RESERVEDEWS7 = 8464;       
literal RMI$_RESERVEDEWS8 = 8465;       
literal RMI$_RESERVEDEWS9 = 8466;       
literal RMI$_RESERVEDEWS10 = 8467;      
literal RMI$_RESERVEDEWS11 = 8468;      
literal RMI$_RESERVEDEWS12 = 8469;      
literal RMI$_RESERVEDEWS13 = 8470;      
literal RMI$_RESERVEDEWS14 = 8471;      
literal RMI$_RESERVEDEWS15 = 8472;      
literal RMI$_RESERVEDEWS16 = 8473;      
literal RMI$_RESERVEDEWS17 = 8474;      
literal RMI$_RESERVEDEWS18 = 8475;      
literal RMI$_RESERVEDEWS19 = 8476;      
literal RMI$_RESERVEDEWS20 = 8477;      
literal RMI$_RESERVEDEWS21 = 8478;      
literal RMI$_RESERVEDEWS22 = 8479;      
literal RMI$_RESERVEDEWS23 = 8480;      
literal RMI$_RESERVEDEWS24 = 8481;      
literal RMI$_RESERVEDEWS25 = 8482;      
literal RMI$_RESERVEDEWS26 = 8483;      
literal RMI$_RESERVEDEWS27 = 8484;      
literal RMI$_RESERVEDEWS28 = 8485;      
literal RMI$_RESERVEDEWS29 = 8486;      
literal RMI$_RESERVEDEWS30 = 8487;      
literal RMI$_RESERVEDEWS31 = 8488;      
literal RMI$_RESERVEDEWS32 = 8489;      
literal RMI$_RESERVEDEWS33 = 8490;      
literal RMI$_RESERVEDEWS34 = 8491;      
literal RMI$_RESERVEDEWS35 = 8492;      
literal RMI$_RESERVEDEWS36 = 8493;      
literal RMI$_RESERVEDEWS37 = 8494;      
literal RMI$_RESERVEDEWS38 = 8495;      
literal RMI$_RESERVEDEWS39 = 8496;      
literal RMI$_RESERVEDEWS40 = 8497;      
literal RMI$_RESERVEDEWS41 = 8498;      
literal RMI$_RESERVEDEWS42 = 8499;      
literal RMI$_RESERVEDEWS43 = 8500;      
literal RMI$_RESERVEDEWS44 = 8501;      
literal RMI$_RESERVEDEWS45 = 8502;      
literal RMI$_RESERVEDEWS46 = 8503;      
literal RMI$_RESERVEDEWS47 = 8504;      
literal RMI$_RESERVEDEWS48 = 8505;      
literal RMI$_RESERVEDEWS49 = 8506;      
literal RMI$_RESERVEDEWS50 = 8507;      
literal RMI$_RESERVEDEWS51 = 8508;      
literal RMI$_RESERVEDEWS52 = 8509;      
literal RMI$_RESERVEDEWS53 = 8510;      
literal RMI$_RESERVEDEWS54 = 8511;      
literal RMI$_RESERVEDEWS55 = 8512;      
literal RMI$_RESERVEDEWS56 = 8513;      
literal RMI$_RESERVEDEWS57 = 8514;      
literal RMI$_RESERVEDEWS58 = 8515;      
literal RMI$_RESERVEDEWS59 = 8516;      
literal RMI$_RESERVEDEWS60 = 8517;      
literal RMI$_RESERVEDEWS61 = 8518;      
literal RMI$_RESERVEDEWS62 = 8519;      
literal RMI$_RESERVEDEWS63 = 8520;      
literal RMI$_RESERVEDEWS64 = 8521;      
literal RMI$_RESERVEDEWS65 = 8522;      
literal RMI$_RESERVEDEWS66 = 8523;      
literal RMI$_RESERVEDEWS67 = 8524;      
literal RMI$_RESERVEDEWS68 = 8525;      
literal RMI$_RESERVEDEWS69 = 8526;      
literal RMI$_RESERVEDEWS70 = 8527;      
literal RMI$_RESERVEDEWS71 = 8528;      
literal RMI$_RESERVEDEWS72 = 8529;      
literal RMI$_RESERVEDEWS73 = 8530;      
literal RMI$_RESERVEDEWS74 = 8531;      
literal RMI$_RESERVEDEWS75 = 8532;      
literal RMI$_RESERVEDEWS76 = 8533;      
literal RMI$_RESERVEDEWS77 = 8534;      
literal RMI$_RESERVEDEWS78 = 8535;      
literal RMI$_RESERVEDEWS79 = 8536;      
literal RMI$_RESERVEDEWS80 = 8537;      
literal RMI$_RESERVEDEWS81 = 8538;      
literal RMI$_RESERVEDEWS82 = 8539;      
literal RMI$_RESERVEDEWS83 = 8540;      
literal RMI$_RESERVEDEWS84 = 8541;      
literal RMI$_RESERVEDEWS85 = 8542;      
literal RMI$_RESERVEDEWS86 = 8543;      
literal RMI$_RESERVEDEWS87 = 8544;      
literal RMI$_RESERVEDEWS88 = 8545;      
literal RMI$_RESERVEDEWS89 = 8546;      
literal RMI$_RESERVEDEWS90 = 8547;      
literal RMI$_RESERVEDEWS91 = 8548;      
literal RMI$_RESERVEDEWS92 = 8549;      
literal RMI$_RESERVEDEWS93 = 8550;      
literal RMI$_RESERVEDEWS94 = 8551;      
literal RMI$_RESERVEDEWS95 = 8552;      
literal RMI$_RESERVEDEWS96 = 8553;      
literal RMI$_RESERVEDEWS97 = 8554;      
literal RMI$_LASTEWS = 8555;            

literal RMI$_FIDHITPCNT = 12651;        
literal RMI$_FILHDR_HITPCNT = 12652;    
literal RMI$_DIRFCB_HITPCNT = 12653;    
literal RMI$_DIRDATA_HITPCNT = 12654;   
literal RMI$_EXTHITPCNT = 12655;        
literal RMI$_QUOHITPCNT = 12656;        
literal RMI$_STORAGMAP_HITPCNT = 12657; 
literal RMI$_OPCNT = 12658;             
literal RMI$_IOQUELEN = 12659;          
literal RMI$_IOAQUELEN = 12660;         
literal RMI$_DISKRESPTIM = 12661;       
literal RMI$_JNLIOCNT = 12662;          
literal RMI$_JDNQLEN = 12663;           
literal RMI$_JDWQLEN = 12664;           
literal RMI$_JDFQLEN = 12665;           
literal RMI$_JDEXCNT = 12666;           
literal RMI$_JNLWRTSS = 12667;          
literal RMI$_JNLBUFWR = 12668;          
literal RMI$_DGSENT = 12669;            
literal RMI$_DGRCVD = 12670;            
literal RMI$_DGDISCARD = 12671;         
literal RMI$_MSGSENT = 12672;           
literal RMI$_MSGRCVD = 12673;           
literal RMI$_SNDATS = 12674;            
literal RMI$_KBYTSENT = 12675;          
literal RMI$_REQDATS = 12676;           
literal RMI$_KBYTREQD = 12677;          
literal RMI$_KBYTMAPD = 12678;          
literal RMI$_QCR_CNT = 12679;           
literal RMI$_QBDT_CNT = 12680;          
literal RMI$_DIRLOOK = 12681;           
literal RMI$_DIRINS = 12682;            
literal RMI$_DIRDEL = 12683;            
literal RMI$_PACKETS = 12684;           
literal RMI$_KBYTES = 12685;            
literal RMI$_PACKETSIZE = 12686;        
literal RMI$_MPACKETS = 12687;          
literal RMI$_MKBYTES = 12688;           
literal RMI$_MPACKETSIZE = 12689;       
literal RMI$_SINGLECOLL = 12690;        
literal RMI$_MULTICOLL = 12691;         
literal RMI$_INITDEFER = 12692;         
literal RMI$_INTERNALBUFERR = 12693;    
literal RMI$_LOCBUFERR = 12694;         
literal RMI$_BUFFUNAVAIL = 12695;       
literal RMI$_FILLER = 12696;            
literal RMI$_RESERVEDMON1 = 12697;      
literal RMI$_RESERVEDMON2 = 12698;      
literal RMI$_RESERVEDMON3 = 12699;      
literal RMI$_RESERVEDMON4 = 12700;      
literal RMI$_RESERVEDMON5 = 12701;      
literal RMI$_RESERVEDMON6 = 12702;      
literal RMI$_RESERVEDMON7 = 12703;      
literal RMI$_RESERVEDMON8 = 12704;      
literal RMI$_RESERVEDMON9 = 12705;      
literal RMI$_RESERVEDMON10 = 12706;     
literal RMI$_RESERVEDMON11 = 12707;     
literal RMI$_RESERVEDMON12 = 12708;     
literal RMI$_RESERVEDMON13 = 12709;     
literal RMI$_RESERVEDMON14 = 12710;     
literal RMI$_RESERVEDMON15 = 12711;     
literal RMI$_RESERVEDMON16 = 12712;     
literal RMI$_RESERVEDMON17 = 12713;     
literal RMI$_RESERVEDMON18 = 12714;     
literal RMI$_RESERVEDMON19 = 12715;     
literal RMI$_RESERVEDMON20 = 12716;     
literal RMI$_RESERVEDMON21 = 12717;     
literal RMI$_RESERVEDMON22 = 12718;     
literal RMI$_RESERVEDMON23 = 12719;     
literal RMI$_RESERVEDMON24 = 12720;     
literal RMI$_RESERVEDMON25 = 12721;     
literal RMI$_RESERVEDMON26 = 12722;     
literal RMI$_RESERVEDMON27 = 12723;     
literal RMI$_RESERVEDMON28 = 12724;     
literal RMI$_RESERVEDMON29 = 12725;     
literal RMI$_RESERVEDMON30 = 12726;     
literal RMI$_RESERVEDMON31 = 12727;     
literal RMI$_RESERVEDMON32 = 12728;     
literal RMI$_RESERVEDMON33 = 12729;     
literal RMI$_RESERVEDMON34 = 12730;     
literal RMI$_RESERVEDMON35 = 12731;     
literal RMI$_RESERVEDMON36 = 12732;     
literal RMI$_RESERVEDMON37 = 12733;     
literal RMI$_RESERVEDMON38 = 12734;     
literal RMI$_RESERVEDMON39 = 12735;     
literal RMI$_RESERVEDMON40 = 12736;     
literal RMI$_RESERVEDMON41 = 12737;     
literal RMI$_RESERVEDMON42 = 12738;     
literal RMI$_RESERVEDMON43 = 12739;     
literal RMI$_RESERVEDMON44 = 12740;     
literal RMI$_RESERVEDMON45 = 12741;     
literal RMI$_RESERVEDMON46 = 12742;     
literal RMI$_RESERVEDMON47 = 12743;     
literal RMI$_RESERVEDMON48 = 12744;     
literal RMI$_RESERVEDMON49 = 12745;     
literal RMI$_RESERVEDMON50 = 12746;     
literal RMI$_RESERVEDMON51 = 12747;     
literal RMI$_RESERVEDMON52 = 12748;     
literal RMI$_RESERVEDMON53 = 12749;     
literal RMI$_RESERVEDMON54 = 12750;     
literal RMI$_RESERVEDMON55 = 12751;     
literal RMI$_RESERVEDMON56 = 12752;     
literal RMI$_RESERVEDMON57 = 12753;     
literal RMI$_RESERVEDMON58 = 12754;     
literal RMI$_RESERVEDMON59 = 12755;     
literal RMI$_RESERVEDMON60 = 12756;     
literal RMI$_RESERVEDMON61 = 12757;     
literal RMI$_RESERVEDMON62 = 12758;     
literal RMI$_RESERVEDMON63 = 12759;     
literal RMI$_RESERVEDMON64 = 12760;     
literal RMI$_RESERVEDMON65 = 12761;     
literal RMI$_RESERVEDMON66 = 12762;     
literal RMI$_RESERVEDMON67 = 12763;     
literal RMI$_RESERVEDMON68 = 12764;     
literal RMI$_RESERVEDMON69 = 12765;     
literal RMI$_RESERVEDMON70 = 12766;     
literal RMI$_RESERVEDMON71 = 12767;     
literal RMI$_RESERVEDMON72 = 12768;     
literal RMI$_RESERVEDMON73 = 12769;     
literal RMI$_RESERVEDMON74 = 12770;     
literal RMI$_RESERVEDMON75 = 12771;     
literal RMI$_RESERVEDMON76 = 12772;     
literal RMI$_RESERVEDMON77 = 12773;     
literal RMI$_RESERVEDMON78 = 12774;     
literal RMI$_RESERVEDMON79 = 12775;     
literal RMI$_RESERVEDMON80 = 12776;     
literal RMI$_RESERVEDMON81 = 12777;     
literal RMI$_RESERVEDMON82 = 12778;     
literal RMI$_RESERVEDMON83 = 12779;     
literal RMI$_RESERVEDMON84 = 12780;     
literal RMI$_RESERVEDMON85 = 12781;     
literal RMI$_RESERVEDMON86 = 12782;     
literal RMI$_RESERVEDMON87 = 12783;     
literal RMI$_RESERVEDMON88 = 12784;     
literal RMI$_RESERVEDMON89 = 12785;     
literal RMI$_RESERVEDMON90 = 12786;     
literal RMI$_RESERVEDMON91 = 12787;     
literal RMI$_RESERVEDMON92 = 12788;     
literal RMI$_RESERVEDMON93 = 12789;     
literal RMI$_RESERVEDMON94 = 12790;     
literal RMI$_RESERVEDMON95 = 12791;     
literal RMI$_RESERVEDMON96 = 12792;     
literal RMI$_RESERVEDMON97 = 12793;     
literal RMI$_RESERVEDMON98 = 12794;     
literal RMI$_RESERVEDMON99 = 12795;     
literal RMI$_RESERVEDMON100 = 12796;    
literal RMI$_LASTMON = 12797;           

literal RMI$_RMS_STATS = 16893;         
literal RMI$_SEQGETS = 16894;           
literal RMI$_KEYGETS = 16895;           
literal RMI$_RFAGETS = 16896;           
literal RMI$_GETBYTES = 16897;          
literal RMI$_SEQPUTS = 16898;           
literal RMI$_KEYPUTS = 16899;           
literal RMI$_PUTBYTES = 16900;          
literal RMI$_UPDATES = 16901;           
literal RMI$_UPDATEBYTES = 16902;       
literal RMI$_DELETES = 16903;           
literal RMI$_TRUNCATES = 16904;         
literal RMI$_TRUNCBLKS = 16905;         
literal RMI$_SEQFINDS = 16906;          
literal RMI$_KEYFINDS = 16907;          
literal RMI$_RFAFINDS = 16908;          
literal RMI$_READS = 16909;             
literal RMI$_READBYTES = 16910;         
literal RMI$_CONNECTS = 16911;          
literal RMI$_DISCONNECTS = 16912;       
literal RMI$_EXTENDS = 16913;           
literal RMI$_EXTBLOCKS = 16914;         
literal RMI$_FLUSHES = 16915;           
literal RMI$_REWINDS = 16916;           
literal RMI$_WRITES = 16917;            
literal RMI$_WRITEBYTES = 16918;        
literal RMI$_FLCKENQS = 16919;          
literal RMI$_FLCKDEQS = 16920;          
literal RMI$_FLCKCNVS = 16921;          
literal RMI$_LBLCKENQS = 16922;         
literal RMI$_LBLCKDEQS = 16923;         
literal RMI$_LBLCKCNVS = 16924;         
literal RMI$_GBLCKENQS = 16925;         
literal RMI$_GBLCKDEQS = 16926;         
literal RMI$_GBLCKCNVS = 16927;         
literal RMI$_GSLCKENQS = 16928;         
literal RMI$_GSLCKDEQS = 16929;         
literal RMI$_GSLCKCNVS = 16930;         
literal RMI$_RLCKENQS = 16931;          
literal RMI$_RLCKDEQS = 16932;          
literal RMI$_RLCKCNVS = 16933;          
literal RMI$_APPLCKENQS = 16934;        
literal RMI$_APPLCKDEQS = 16935;        
literal RMI$_APPLCKCNVS = 16936;        
literal RMI$_FLBLKASTS = 16937;         
literal RMI$_LBLBLKASTS = 16938;        
literal RMI$_GBLBLKASTS = 16939;        
literal RMI$_APPBLKASTS = 16940;        
literal RMI$_LCACHEHITS = 16941;        
literal RMI$_LCACHETRIES = 16942;       
literal RMI$_GCACHEHITS = 16943;        
literal RMI$_GCACHETRIES = 16944;       
literal RMI$_GBRDIRIOS = 16945;         
literal RMI$_GBWDIRIOS = 16946;         
literal RMI$_LBRDIRIOS = 16947;         
literal RMI$_LBWDIRIOS = 16948;         
literal RMI$_BKTSPLT = 16949;           
literal RMI$_MBKTSPLT = 16950;          
literal RMI$_RMSOPENS = 16951;          
literal RMI$_CLOSES = 16952;            
literal RMI$_GSBLKASTS = 16953;         
literal RMI$_FLWAITS = 16954;           
literal RMI$_LBWAITS = 16955;           
literal RMI$_GBWAITS = 16956;           
literal RMI$_GSWAITS = 16957;           
literal RMI$_RLWAITS = 16958;           
literal RMI$_APWAITS = 16959;           
literal RMI$_TOTWAITS = 16960;          
literal RMI$_OUTBUFQUO = 16961;         
literal RMI$_RMSDEV1 = 16962;           
literal RMI$_RMSDEV2 = 16963;           
literal RMI$_RMSDEV3 = 16964;           
literal RMI$_RMSDEV4 = 16965;           
literal RMI$_RMSDEV5 = 16966;           
literal RMI$_RMSDEV6 = 16967;           
literal RMI$_RMSDEV7 = 16968;           
literal RMI$_RMSDEV8 = 16969;           
literal RMI$_RMSDEV9 = 16970;           
literal RMI$_RMSDEV10 = 16971;          
literal RMI$_RMSDEV11 = 16972;          
literal RMI$_RMSDEV12 = 16973;          
literal RMI$_RMSDEV13 = 16974;          
literal RMI$_RMSDEV14 = 16975;          
literal RMI$_RMSDEV15 = 16976;          
literal RMI$_XQPQIOS = 16977;           
literal RMI$_LCACHEHITPCNT = 16978;     
literal RMI$_GCACHEHITPCNT = 16979;     
literal RMI$_TOTALGET = 16980;          
literal RMI$_TOTALPUT = 16981;          
literal RMI$_TOTALFIND = 16982;         
literal RMI$_BYTESGET = 16983;          
literal RMI$_BYTESPUT = 16984;          
literal RMI$_BYTESUPDATE = 16985;       
literal RMI$_BYTESREAD = 16986;         
literal RMI$_BYTESWRITE = 16987;        
literal RMI$_BLOCKSTRUNCATE = 16988;    
literal RMI$_BLOCKSEXTEND = 16989;      
literal RMI$_ACTIVE_STREAMS = 16990;    
literal RMI$_TOTAL_ENQS = 16991;        
literal RMI$_TOTAL_DEQS = 16992;        
literal RMI$_TOTAL_CNVS = 16993;        
literal RMI$_TOTAL_BLKAST = 16994;      
literal RMI$_RMS_ORG = 16995;           
literal RMI$_INTCOL_GBHSH = 16996;      
literal RMI$_INTCOL_GBH = 16997;        
literal RMI$_INTRNDWN_GBHSH = 16998;    
literal RMI$_INTRNDWN_GBH = 16999;      
literal RMI$_RESERVEDRMS5 = 17000;      
literal RMI$_RESERVEDRMS6 = 17001;      
literal RMI$_RESERVEDRMS7 = 17002;      
literal RMI$_RESERVEDRMS8 = 17003;      
literal RMI$_RESERVEDRMS9 = 17004;      
literal RMI$_RESERVEDRMS10 = 17005;     
literal RMI$_RESERVEDRMS11 = 17006;     
literal RMI$_RESERVEDRMS12 = 17007;     
literal RMI$_RESERVEDRMS13 = 17008;     
literal RMI$_RESERVEDRMS14 = 17009;     
literal RMI$_RESERVEDRMS15 = 17010;     
literal RMI$_RESERVEDRMS16 = 17011;     
literal RMI$_RESERVEDRMS17 = 17012;     
literal RMI$_RESERVEDRMS18 = 17013;     
literal RMI$_RESERVEDRMS19 = 17014;     
literal RMI$_RESERVEDRMS20 = 17015;     
literal RMI$_RESERVEDRMS21 = 17016;     
literal RMI$_RESERVEDRMS22 = 17017;     
literal RMI$_RESERVEDRMS23 = 17018;     
literal RMI$_RESERVEDRMS24 = 17019;     
literal RMI$_RESERVEDRMS25 = 17020;     
literal RMI$_RESERVEDRMS26 = 17021;     
literal RMI$_RESERVEDRMS27 = 17022;     
literal RMI$_RESERVEDRMS28 = 17023;     
literal RMI$_RESERVEDRMS29 = 17024;     
literal RMI$_RESERVEDRMS30 = 17025;     
literal RMI$_RESERVEDRMS31 = 17026;     
literal RMI$_RESERVEDRMS32 = 17027;     
literal RMI$_RESERVEDRMS33 = 17028;     
literal RMI$_RESERVEDRMS34 = 17029;     
literal RMI$_RESERVEDRMS35 = 17030;     
literal RMI$_RESERVEDRMS36 = 17031;     
literal RMI$_RESERVEDRMS37 = 17032;     
literal RMI$_RESERVEDRMS38 = 17033;     
literal RMI$_RESERVEDRMS39 = 17034;     
literal RMI$_RESERVEDRMS40 = 17035;     
literal RMI$_RESERVEDRMS41 = 17036;     
literal RMI$_RESERVEDRMS42 = 17037;     
literal RMI$_RESERVEDRMS43 = 17038;     
literal RMI$_RESERVEDRMS44 = 17039;     
literal RMI$_RESERVEDRMS45 = 17040;     
literal RMI$_RESERVEDRMS46 = 17041;     
literal RMI$_RESERVEDRMS47 = 17042;     
literal RMI$_RESERVEDRMS48 = 17043;     
literal RMI$_RESERVEDRMS49 = 17044;     
literal RMI$_RESERVEDRMS50 = 17045;     
literal RMI$_RESERVEDRMS51 = 17046;     
literal RMI$_RESERVEDRMS52 = 17047;     
literal RMI$_RESERVEDRMS53 = 17048;     
literal RMI$_RESERVEDRMS54 = 17049;     
literal RMI$_RESERVEDRMS55 = 17050;     
literal RMI$_RESERVEDRMS56 = 17051;     
literal RMI$_RESERVEDRMS57 = 17052;     
literal RMI$_RESERVEDRMS58 = 17053;     
literal RMI$_RESERVEDRMS59 = 17054;     
literal RMI$_RESERVEDRMS60 = 17055;     
literal RMI$_RESERVEDRMS61 = 17056;     
literal RMI$_RESERVEDRMS62 = 17057;     
literal RMI$_RESERVEDRMS63 = 17058;     
literal RMI$_RESERVEDRMS64 = 17059;     
literal RMI$_RESERVEDRMS65 = 17060;     
literal RMI$_RESERVEDRMS66 = 17061;     
literal RMI$_RESERVEDRMS67 = 17062;     
literal RMI$_RESERVEDRMS68 = 17063;     
literal RMI$_RESERVEDRMS69 = 17064;     
literal RMI$_RESERVEDRMS70 = 17065;     
literal RMI$_RESERVEDRMS71 = 17066;     
literal RMI$_RESERVEDRMS72 = 17067;     
literal RMI$_RESERVEDRMS73 = 17068;     
literal RMI$_RESERVEDRMS74 = 17069;     
literal RMI$_RESERVEDRMS75 = 17070;     
literal RMI$_RESERVEDRMS76 = 17071;     
literal RMI$_RESERVEDRMS77 = 17072;     
literal RMI$_RESERVEDRMS78 = 17073;     
literal RMI$_RESERVEDRMS79 = 17074;     
literal RMI$_RESERVEDRMS80 = 17075;     
literal RMI$_RESERVEDRMS81 = 17076;     
literal RMI$_RESERVEDRMS82 = 17077;     
literal RMI$_RESERVEDRMS83 = 17078;     
literal RMI$_RESERVEDRMS84 = 17079;     
literal RMI$_RESERVEDRMS85 = 17080;     
literal RMI$_RESERVEDRMS86 = 17081;     
literal RMI$_RESERVEDRMS87 = 17082;     
literal RMI$_RESERVEDRMS88 = 17083;     
literal RMI$_RESERVEDRMS89 = 17084;     
literal RMI$_RESERVEDRMS90 = 17085;     
literal RMI$_RESERVEDRMS91 = 17086;     
literal RMI$_RESERVEDRMS92 = 17087;     
literal RMI$_RESERVEDRMS93 = 17088;     
literal RMI$_RESERVEDRMS94 = 17089;     
literal RMI$_RESERVEDRMS95 = 17090;     
literal RMI$_RESERVEDRMS96 = 17091;     
literal RMI$_RESERVEDRMS97 = 17092;     
literal RMI$_RESERVEDRMS98 = 17093;     
literal RMI$_RESERVEDRMS99 = 17094;     
literal RMI$_RESERVEDRMS100 = 17095;    
literal RMI$_LASTRMS = 17096;           

literal RMI$_CPUID = 21192;             
literal RMI$_CPUCOMPAT = 21193;         
literal RMI$_CPUINTSTK = 21194;         
literal RMI$_CPUMPSYNCH = 21195;        
literal RMI$_CPUKERNEL = 21196;         
literal RMI$_CPUEXEC = 21197;           
literal RMI$_CPUSUPER = 21198;          
literal RMI$_CPUUSER = 21199;           
literal RMI$_CPUIDLE = 21200;           
literal RMI$_PROCCNTMAX = 21201;        
literal RMI$_PROCBATCNT = 21202;        
literal RMI$_PROCINTCNT = 21203;        
literal RMI$_PROCNETCNT = 21204;        
literal RMI$_PROCSWITCHCNT = 21205;     
literal RMI$_PROCBALSETCNT = 21206;     
literal RMI$_PROCLOADCNT = 21207;       
literal RMI$_BADFLTS = 21208;           
literal RMI$_EXEFAULTS = 21209;         
literal RMI$_HDRINSWAPS = 21210;        
literal RMI$_HDROUTSWAPS = 21211;       
literal RMI$_IOPAGCNT = 21212;          
literal RMI$_ISWPCNTPG = 21213;         
literal RMI$_OSWPCNT = 21214;           
literal RMI$_OSWPCNTPG = 21215;         
literal RMI$_RDFAULTS = 21216;          
literal RMI$_TRANSFLTS = 21217;         
literal RMI$_WRTFAULTS = 21218;         
literal RMI$_USERPAGES = 21219;         
literal RMI$_VMSPAGES = 21220;          
literal RMI$_LOGNAMCRE = 21221;         
literal RMI$_LOGNAMDEL = 21222;         
literal RMI$_LOGNAMFAIL = 21223;        
literal RMI$_LOGNAMTBLCRE = 21224;      
literal RMI$_TTREADCNT = 21225;         
literal RMI$_TTREADS = 21226;           
literal RMI$_TTWRITECNT = 21227;        
literal RMI$_TTWRITES = 21228;          
literal RMI$_BUFOBJPAG = 21229;         
literal RMI$_BUFOBJPAGPEAK = 21230;     
literal RMI$_BUFOBJPAGS01 = 21231;      
literal RMI$_BUFOBJPAGS2 = 21232;       
literal RMI$_BUFOBJPAGMAXS01 = 21233;   
literal RMI$_BUFOBJPAGMAXS2 = 21234;    
literal RMI$_BUFOBJPAGPEAKS01 = 21235;  
literal RMI$_BUFOBJPAGPEAKS2 = 21236;   
literal RMI$_BUFOBJPGLTMAXS01 = 21237;  
literal RMI$_BUFOBJPGLTMAXS2 = 21238;   
literal RMI$_DLCK_INCMPLT = 21239;      
literal RMI$_DLCKMSGS_IN = 21240;       
literal RMI$_DLCKMSGS_OUT = 21241;      
literal RMI$_TQETOTAL = 21242;          
literal RMI$_TQESYSUB = 21243;          
literal RMI$_TQEUSRTIMR = 21244;        
literal RMI$_TQEUSRWAKE = 21245;        
literal RMI$_CWPSBYTESIN = 21246;       
literal RMI$_CWPSBYTESOUT = 21247;      
literal RMI$_CWPSJPISIN = 21248;        
literal RMI$_CWPSJPISOUT = 21249;       
literal RMI$_CWPSMSGSIN = 21250;        
literal RMI$_CWPSMSGSOUT = 21251;       
literal RMI$_CWPSPCNTRLIN = 21252;      
literal RMI$_CWPSPCNTRLOUT = 21253;     
literal RMI$_CWPSRSRCIN = 21254;        
literal RMI$_CWPSRSRCOUT = 21255;       
literal RMI$_CHME = 21256;              
literal RMI$_CHMK = 21257;              
literal RMI$_MCHKERRS = 21258;          
literal RMI$_MEMERRS = 21259;           
literal RMI$_RESMASK = 21260;           
literal RMI$_CACHE_STATE = 21261;       
literal RMI$_CACHE_MEMORY = 21262;      
literal RMI$_CACHE_FREE = 21263;        
literal RMI$_CACHE_READ_HITS = 21264;   
literal RMI$_CACHE_VIRT_READS = 21265;  
literal RMI$_CACHE_VIRT_WRITES = 21266; 
literal RMI$_CACHE_R_ARND_MOD = 21267;  
literal RMI$_CACHE_R_ARND_SIZ = 21268;  
literal RMI$_CACHE_W_ARND_MOD = 21269;  
literal RMI$_CACHE_W_ARND_SIZ = 21270;  
literal RMI$_CACHE_LIMBO_LEN = 21271;   
literal RMI$_CACHE_MIN_SIZE = 21272;    
literal RMI$_CACHE_MAX_SIZE = 21273;    
literal RMI$_CACHE_MAX_LIMIT = 21274;   
literal RMI$_CACHE_MAX_IO_SIZE = 21275; 
literal RMI$_CACHE_MAX_LOCKS = 21276;   
literal RMI$_CACHE_READAHEAD = 21277;   
literal RMI$_CACHE_WRITEBEHIND = 21278; 
literal RMI$_CACHE_WRITEDELAY = 21279;  
literal RMI$_CACHE_VOLS_FXFC_MODE = 21280; 
literal RMI$_CACHE_VOLS_RXFC_MODE = 21281; 
literal RMI$_CACHE_VOLS_NC_MODE = 21282; 
literal RMI$_CACHE_VOLS_PNC_MODE = 21283; 
literal RMI$_CACHE_OPEN_FILES = 21284;  
literal RMI$_CACHE_UNSYNCHED_IOS = 21285; 
literal RMI$_CACHE_DELAYED_WRITES = 21286; 
literal RMI$_CACHE_LOST_WRITES = 21287; 
literal RMI$_CACHE_FULL_BARRIERS = 21288; 
literal RMI$_CACHE_PARTIAL_BARRIERS = 21289; 
literal RMI$_CACHE_READS_AROUND = 21290; 
literal RMI$_CACHE_WRITES_AROUND = 21291; 
literal RMI$_CACHE_CURRENT_LOCKS = 21292; 
literal RMI$_CACHE_BARRIER_COUNT = 21293; 
literal RMI$_CACHE_SUPER_WRITES = 21294; 
literal RMI$_CACHE_NON_PAGED_POOL = 21295; 
literal RMI$_CACHE_EVERYTHING = 21296;  
literal RMI$_GBP_CURMAP = 21297;        
literal RMI$_GBP_CURMAP_GRP = 21298;    
literal RMI$_GBP_CURMAP_GRPWRT = 21299; 
literal RMI$_GBP_CURMAP_SYS = 21300;    
literal RMI$_GBP_CURMAP_SYSWRT = 21301; 
literal RMI$_GBP_MAXMAP = 21302;        
literal RMI$_GBS_CURMAP = 21303;        
literal RMI$_GBS_CURMAP_GRP = 21304;    
literal RMI$_GBS_CURMAP_GRPWRT = 21305; 
literal RMI$_GBS_CURMAP_SYS = 21306;    
literal RMI$_GBS_CURMAP_SYSWRT = 21307; 
literal RMI$_GBS_MAXMAP = 21308;        
literal RMI$_GBS_NOREF = 21309;         
literal RMI$_NP_POOL_ALLOC = 21310;     
literal RMI$_NP_POOL_ALLOCF = 21311;    
literal RMI$_NP_POOL_EXP = 21312;       
literal RMI$_NP_POOL_EXPF = 21313;      
literal RMI$_PG_POOL_ALLOC = 21314;     
literal RMI$_PG_POOL_ALLOCF = 21315;    
literal RMI$_PG_POOL_EXPF = 21316;      
literal RMI$_SMP_CURMAP = 21317;        
literal RMI$_SMP_CURMAP_GRP = 21318;    
literal RMI$_SMP_CURMAP_GRPWRT = 21319; 
literal RMI$_SMP_CURMAP_SYS = 21320;    
literal RMI$_SMP_CURMAP_SYSWRT = 21321; 
literal RMI$_SMS_CURMAP = 21322;        
literal RMI$_SMS_CURMAP_GRP = 21323;    
literal RMI$_SMS_CURMAP_GRPWRT = 21324; 
literal RMI$_SMS_CURMAP_SYS = 21325;    
literal RMI$_SMS_CURMAP_SYSWRT = 21326; 
literal RMI$_SMS_NOREF = 21327;         
literal RMI$_RESERVEDEXT1 = 21328;      
literal RMI$_RESERVEDEXT2 = 21329;      
literal RMI$_RESERVEDEXT3 = 21330;      
literal RMI$_RESERVEDEXT4 = 21331;      
literal RMI$_RESERVEDEXT5 = 21332;      
literal RMI$_RESERVEDEXT6 = 21333;      
literal RMI$_RESERVEDEXT7 = 21334;      
literal RMI$_RESERVEDEXT8 = 21335;      
literal RMI$_RESERVEDEXT9 = 21336;      
literal RMI$_RESERVEDEXT10 = 21337;     
literal RMI$_RESERVEDEXT11 = 21338;     
literal RMI$_RESERVEDEXT12 = 21339;     
literal RMI$_RESERVEDEXT13 = 21340;     
literal RMI$_RESERVEDEXT14 = 21341;     
literal RMI$_RESERVEDEXT15 = 21342;     
literal RMI$_RESERVEDEXT16 = 21343;     
literal RMI$_RESERVEDEXT17 = 21344;     
literal RMI$_RESERVEDEXT18 = 21345;     
literal RMI$_RESERVEDEXT19 = 21346;     
literal RMI$_RESERVEDEXT20 = 21347;     
literal RMI$_RESERVEDEXT21 = 21348;     
literal RMI$_RESERVEDEXT22 = 21349;     
literal RMI$_RESERVEDEXT23 = 21350;     
literal RMI$_RESERVEDEXT24 = 21351;     
literal RMI$_RESERVEDEXT25 = 21352;     
literal RMI$_RESERVEDEXT26 = 21353;     
literal RMI$_RESERVEDEXT27 = 21354;     
literal RMI$_RESERVEDEXT28 = 21355;     
literal RMI$_RESERVEDEXT29 = 21356;     
literal RMI$_RESERVEDEXT30 = 21357;     
literal RMI$_RESERVEDEXT31 = 21358;     
literal RMI$_RESERVEDEXT32 = 21359;     
literal RMI$_RESERVEDEXT33 = 21360;     
literal RMI$_RESERVEDEXT34 = 21361;     
literal RMI$_RESERVEDEXT35 = 21362;     
literal RMI$_RESERVEDEXT36 = 21363;     
literal RMI$_RESERVEDEXT37 = 21364;     
literal RMI$_RESERVEDEXT38 = 21365;     
literal RMI$_RESERVEDEXT39 = 21366;     
literal RMI$_RESERVEDEXT40 = 21367;     
literal RMI$_RESERVEDEXT41 = 21368;     
literal RMI$_RESERVEDEXT42 = 21369;     
literal RMI$_RESERVEDEXT43 = 21370;     
literal RMI$_RESERVEDEXT44 = 21371;     
literal RMI$_RESERVEDEXT45 = 21372;     
literal RMI$_RESERVEDEXT46 = 21373;     
literal RMI$_RESERVEDEXT47 = 21374;     
literal RMI$_RESERVEDEXT48 = 21375;     
literal RMI$_RESERVEDEXT49 = 21376;     
literal RMI$_RESERVEDEXT50 = 21377;     
literal RMI$_RESERVEDEXT51 = 21378;     
literal RMI$_RESERVEDEXT52 = 21379;     
literal RMI$_RESERVEDEXT53 = 21380;     
literal RMI$_RESERVEDEXT54 = 21381;     
literal RMI$_RESERVEDEXT55 = 21382;     
literal RMI$_RESERVEDEXT56 = 21383;     
literal RMI$_RESERVEDEXT57 = 21384;     
literal RMI$_RESERVEDEXT58 = 21385;     
literal RMI$_RESERVEDEXT59 = 21386;     
literal RMI$_RESERVEDEXT60 = 21387;     
literal RMI$_RESERVEDEXT61 = 21388;     
literal RMI$_RESERVEDEXT62 = 21389;     
literal RMI$_RESERVEDEXT63 = 21390;     
literal RMI$_RESERVEDEXT64 = 21391;     
literal RMI$_RESERVEDEXT65 = 21392;     
literal RMI$_RESERVEDEXT66 = 21393;     
literal RMI$_RESERVEDEXT67 = 21394;     
literal RMI$_RESERVEDEXT68 = 21395;     
literal RMI$_RESERVEDEXT69 = 21396;     
literal RMI$_RESERVEDEXT70 = 21397;     
literal RMI$_RESERVEDEXT71 = 21398;     
literal RMI$_RESERVEDEXT72 = 21399;     
literal RMI$_RESERVEDEXT73 = 21400;     
literal RMI$_RESERVEDEXT74 = 21401;     
literal RMI$_RESERVEDEXT75 = 21402;     
literal RMI$_RESERVEDEXT76 = 21403;     
literal RMI$_RESERVEDEXT77 = 21404;     
literal RMI$_RESERVEDEXT78 = 21405;     
literal RMI$_RESERVEDEXT79 = 21406;     
literal RMI$_RESERVEDEXT80 = 21407;     
literal RMI$_RESERVEDEXT81 = 21408;     
literal RMI$_RESERVEDEXT82 = 21409;     
literal RMI$_RESERVEDEXT83 = 21410;     
literal RMI$_RESERVEDEXT84 = 21411;     
literal RMI$_RESERVEDEXT85 = 21412;     
literal RMI$_RESERVEDEXT86 = 21413;     
literal RMI$_RESERVEDEXT87 = 21414;     
literal RMI$_RESERVEDEXT88 = 21415;     
literal RMI$_RESERVEDEXT89 = 21416;     
literal RMI$_RESERVEDEXT90 = 21417;     
literal RMI$_RESERVEDEXT91 = 21418;     
literal RMI$_RESERVEDEXT92 = 21419;     
literal RMI$_RESERVEDEXT93 = 21420;     
literal RMI$_RESERVEDEXT94 = 21421;     
literal RMI$_RESERVEDEXT95 = 21422;     
literal RMI$_RESERVEDEXT96 = 21423;     
literal RMI$_RESERVEDEXT97 = 21424;     
literal RMI$_RESERVEDEXT98 = 21425;     
literal RMI$_RESERVEDEXT99 = 21426;     
literal RMI$_RESERVEDEXT100 = 21427;    
literal RMI$_RESERVEDEXT101 = 21428;    
literal RMI$_RESERVEDEXT102 = 21429;    
literal RMI$_RESERVEDEXT103 = 21430;    
literal RMI$_RESERVEDEXT104 = 21431;    
literal RMI$_RESERVEDEXT105 = 21432;    
literal RMI$_RESERVEDEXT106 = 21433;    
literal RMI$_RESERVEDEXT107 = 21434;    
literal RMI$_RESERVEDEXT108 = 21435;    
literal RMI$_RESERVEDEXT109 = 21436;    
literal RMI$_RESERVEDEXT110 = 21437;    
literal RMI$_RESERVEDEXT111 = 21438;    
literal RMI$_RESERVEDEXT112 = 21439;    
literal RMI$_RESERVEDEXT113 = 21440;    
literal RMI$_RESERVEDEXT114 = 21441;    
literal RMI$_RESERVEDEXT115 = 21442;    
literal RMI$_RESERVEDEXT116 = 21443;    
literal RMI$_RESERVEDEXT117 = 21444;    
literal RMI$_RESERVEDEXT118 = 21445;    
literal RMI$_RESERVEDEXT119 = 21446;    
literal RMI$_RESERVEDEXT120 = 21447;    
literal RMI$_RESERVEDEXT121 = 21448;    
literal RMI$_RESERVEDEXT122 = 21449;    
literal RMI$_RESERVEDEXT123 = 21450;    
literal RMI$_RESERVEDEXT124 = 21451;    
literal RMI$_RESERVEDEXT125 = 21452;    
literal RMI$_RESERVEDEXT126 = 21453;    
literal RMI$_RESERVEDEXT127 = 21454;    
literal RMI$_RESERVEDEXT128 = 21455;    
literal RMI$_RESERVEDEXT129 = 21456;    
literal RMI$_RESERVEDEXT130 = 21457;    
literal RMI$_RESERVEDEXT131 = 21458;    
literal RMI$_RESERVEDEXT132 = 21459;    
literal RMI$_RESERVEDEXT133 = 21460;    
literal RMI$_RESERVEDEXT134 = 21461;    
literal RMI$_RESERVEDEXT135 = 21462;    
literal RMI$_RESERVEDEXT136 = 21463;    
literal RMI$_RESERVEDEXT137 = 21464;    
literal RMI$_RESERVEDEXT138 = 21465;    
literal RMI$_RESERVEDEXT139 = 21466;    
literal RMI$_RESERVEDEXT140 = 21467;    
literal RMI$_RESERVEDEXT141 = 21468;    
literal RMI$_RESERVEDEXT142 = 21469;    
literal RMI$_RESERVEDEXT143 = 21470;    
literal RMI$_RESERVEDEXT144 = 21471;    
literal RMI$_RESERVEDEXT145 = 21472;    
literal RMI$_RESERVEDEXT146 = 21473;    
literal RMI$_RESERVEDEXT147 = 21474;    
literal RMI$_RESERVEDEXT148 = 21475;    
literal RMI$_RESERVEDEXT149 = 21476;    
literal RMI$_RESERVEDEXT150 = 21477;    
literal RMI$_RESERVEDEXT151 = 21478;    
literal RMI$_RESERVEDEXT152 = 21479;    
literal RMI$_RESERVEDEXT153 = 21480;    
literal RMI$_RESERVEDEXT154 = 21481;    
literal RMI$_RESERVEDEXT155 = 21482;    
literal RMI$_RESERVEDEXT156 = 21483;    
literal RMI$_RESERVEDEXT157 = 21484;    
literal RMI$_RESERVEDEXT158 = 21485;    
literal RMI$_RESERVEDEXT159 = 21486;    
literal RMI$_RESERVEDEXT160 = 21487;    
literal RMI$_RESERVEDEXT161 = 21488;    
literal RMI$_RESERVEDEXT162 = 21489;    
literal RMI$_RESERVEDEXT163 = 21490;    
literal RMI$_RESERVEDEXT164 = 21491;    
literal RMI$_RESERVEDEXT165 = 21492;    
literal RMI$_RESERVEDEXT166 = 21493;    
literal RMI$_RESERVEDEXT167 = 21494;    
literal RMI$_RESERVEDEXT168 = 21495;    
literal RMI$_RESERVEDEXT169 = 21496;    
literal RMI$_RESERVEDEXT170 = 21497;    
literal RMI$_RESERVEDEXT171 = 21498;    
literal RMI$_RESERVEDEXT172 = 21499;    
literal RMI$_RESERVEDEXT173 = 21500;    
literal RMI$_RESERVEDEXT174 = 21501;    
literal RMI$_RESERVEDEXT175 = 21502;    
literal RMI$_RESERVEDEXT176 = 21503;    
literal RMI$_RESERVEDEXT177 = 21504;    
literal RMI$_RESERVEDEXT178 = 21505;    
literal RMI$_RESERVEDEXT179 = 21506;    
literal RMI$_RESERVEDEXT180 = 21507;    
literal RMI$_RESERVEDEXT181 = 21508;    
literal RMI$_RESERVEDEXT182 = 21509;    
literal RMI$_RESERVEDEXT183 = 21510;    
literal RMI$_RESERVEDEXT184 = 21511;    
literal RMI$_RESERVEDEXT185 = 21512;    
literal RMI$_RESERVEDEXT186 = 21513;    
literal RMI$_RESERVEDEXT187 = 21514;    
literal RMI$_RESERVEDEXT188 = 21515;    
literal RMI$_RESERVEDEXT189 = 21516;    
literal RMI$_RESERVEDEXT190 = 21517;    
literal RMI$_RESERVEDEXT191 = 21518;    
literal RMI$_RESERVEDEXT192 = 21519;    
literal RMI$_RESERVEDEXT193 = 21520;    
literal RMI$_RESERVEDEXT194 = 21521;    
literal RMI$_RESERVEDEXT195 = 21522;    
literal RMI$_RESERVEDEXT196 = 21523;    
literal RMI$_RESERVEDEXT197 = 21524;    
literal RMI$_RESERVEDEXT198 = 21525;    
literal RMI$_RESERVEDEXT199 = 21526;    
literal RMI$_RESERVEDEXT200 = 21527;    
literal RMI$_RESERVEDEXT201 = 21528;    
literal RMI$_RESERVEDEXT202 = 21529;    
literal RMI$_RESERVEDEXT203 = 21530;    
literal RMI$_RESERVEDEXT204 = 21531;    
literal RMI$_RESERVEDEXT205 = 21532;    
literal RMI$_RESERVEDEXT206 = 21533;    
literal RMI$_RESERVEDEXT207 = 21534;    
literal RMI$_RESERVEDEXT208 = 21535;    
literal RMI$_RESERVEDEXT209 = 21536;    
literal RMI$_RESERVEDEXT210 = 21537;    
literal RMI$_RESERVEDEXT211 = 21538;    
literal RMI$_RESERVEDEXT212 = 21539;    
literal RMI$_RESERVEDEXT213 = 21540;    
literal RMI$_RESERVEDEXT214 = 21541;    
literal RMI$_RESERVEDEXT215 = 21542;    
literal RMI$_RESERVEDEXT216 = 21543;    
literal RMI$_RESERVEDEXT217 = 21544;    
literal RMI$_RESERVEDEXT218 = 21545;    
literal RMI$_RESERVEDEXT219 = 21546;    
literal RMI$_RESERVEDEXT220 = 21547;    
literal RMI$_RESERVEDEXT221 = 21548;    
literal RMI$_RESERVEDEXT222 = 21549;    
literal RMI$_RESERVEDEXT223 = 21550;    
literal RMI$_RESERVEDEXT224 = 21551;    
literal RMI$_RESERVEDEXT225 = 21552;    
literal RMI$_RESERVEDEXT226 = 21553;    
literal RMI$_RESERVEDEXT227 = 21554;    
literal RMI$_RESERVEDEXT228 = 21555;    
literal RMI$_RESERVEDEXT229 = 21556;    
literal RMI$_RESERVEDEXT230 = 21557;    
literal RMI$_RESERVEDEXT231 = 21558;    
literal RMI$_RESERVEDEXT232 = 21559;    
literal RMI$_RESERVEDEXT233 = 21560;    
literal RMI$_RESERVEDEXT234 = 21561;    
literal RMI$_RESERVEDEXT235 = 21562;    
literal RMI$_RESERVEDEXT236 = 21563;    
literal RMI$_RESERVEDEXT237 = 21564;    
literal RMI$_RESERVEDEXT238 = 21565;    
literal RMI$_RESERVEDEXT239 = 21566;    
literal RMI$_RESERVEDEXT240 = 21567;    
literal RMI$_RESERVEDEXT241 = 21568;    
literal RMI$_RESERVEDEXT242 = 21569;    
literal RMI$_RESERVEDEXT243 = 21570;    
literal RMI$_RESERVEDEXT244 = 21571;    
literal RMI$_RESERVEDEXT245 = 21572;    
literal RMI$_RESERVEDEXT246 = 21573;    
literal RMI$_RESERVEDEXT247 = 21574;    
literal RMI$_RESERVEDEXT248 = 21575;    
literal RMI$_RESERVEDEXT249 = 21576;    
literal RMI$_RESERVEDEXT250 = 21577;    
literal RMI$_RESERVEDEXT251 = 21578;    
literal RMI$_RESERVEDEXT252 = 21579;    
literal RMI$_RESERVEDEXT253 = 21580;    
literal RMI$_RESERVEDEXT254 = 21581;    
literal RMI$_RESERVEDEXT255 = 21582;    
literal RMI$_RESERVEDEXT256 = 21583;    
literal RMI$_RESERVEDEXT257 = 21584;    
literal RMI$_RESERVEDEXT258 = 21585;    
literal RMI$_RESERVEDEXT259 = 21586;    
literal RMI$_RESERVEDEXT260 = 21587;    
literal RMI$_RESERVEDEXT261 = 21588;    
literal RMI$_RESERVEDEXT262 = 21589;    
literal RMI$_RESERVEDEXT263 = 21590;    
literal RMI$_RESERVEDEXT264 = 21591;    
literal RMI$_RESERVEDEXT265 = 21592;    
literal RMI$_RESERVEDEXT266 = 21593;    
literal RMI$_RESERVEDEXT267 = 21594;    
literal RMI$_RESERVEDEXT268 = 21595;    
literal RMI$_RESERVEDEXT269 = 21596;    
literal RMI$_RESERVEDEXT270 = 21597;    
literal RMI$_RESERVEDEXT271 = 21598;    
literal RMI$_RESERVEDEXT272 = 21599;    
literal RMI$_RESERVEDEXT273 = 21600;    
literal RMI$_RESERVEDEXT274 = 21601;    
literal RMI$_RESERVEDEXT275 = 21602;    
literal RMI$_RESERVEDEXT276 = 21603;    
literal RMI$_RESERVEDEXT277 = 21604;    
literal RMI$_RESERVEDEXT278 = 21605;    
literal RMI$_RESERVEDEXT279 = 21606;    
literal RMI$_RESERVEDEXT280 = 21607;    
literal RMI$_RESERVEDEXT281 = 21608;    
literal RMI$_RESERVEDEXT282 = 21609;    
literal RMI$_RESERVEDEXT283 = 21610;    
literal RMI$_RESERVEDEXT284 = 21611;    
literal RMI$_RESERVEDEXT285 = 21612;    
literal RMI$_RESERVEDEXT286 = 21613;    
literal RMI$_RESERVEDEXT287 = 21614;    
literal RMI$_RESERVEDEXT288 = 21615;    
literal RMI$_RESERVEDEXT289 = 21616;    
literal RMI$_RESERVEDEXT290 = 21617;    
literal RMI$_RESERVEDEXT291 = 21618;    
literal RMI$_RESERVEDEXT292 = 21619;    
literal RMI$_RESERVEDEXT293 = 21620;    
literal RMI$_RESERVEDEXT294 = 21621;    
literal RMI$_RESERVEDEXT295 = 21622;    
literal RMI$_RESERVEDEXT296 = 21623;    
literal RMI$_RESERVEDEXT297 = 21624;    
literal RMI$_RESERVEDEXT298 = 21625;    
literal RMI$_RESERVEDEXT299 = 21626;    
literal RMI$_RESERVEDEXT300 = 21627;    
literal RMI$_LASTEX2 = 21628;           

literal RMI$_tablesize = 1148;

literal RMI$S_rmi$scs_offsets = 56;     
macro RMI$q_scs_nodename = 0,0,0,1 %;
literal RMI$s_scs_nodename = 8;         
macro RMI$l_scs_dgsent = 8,0,32,1 %;    
macro RMI$l_scs_dgrcvd = 12,0,32,1 %;   
macro RMI$l_scs_dgdiscard = 16,0,32,1 %; 
macro RMI$l_scs_msgsent = 20,0,32,1 %;  
macro RMI$l_scs_msgrcvd = 24,0,32,1 %;  
macro RMI$l_scs_snddats = 28,0,32,1 %;  
macro RMI$l_scs_kbytsent = 32,0,32,1 %; 
macro RMI$l_scs_reqdats = 36,0,32,1 %;  
macro RMI$l_scs_kbytreqd = 40,0,32,1 %; 
macro RMI$l_scs_kbytmapd = 44,0,32,1 %; 
macro RMI$l_scs_qcr_cnt = 48,0,32,1 %;  
macro RMI$l_scs_qbdt_cnt = 52,0,32,1 %; 
literal RMI$c_scs_minsize = 56;         
literal RMI$S_rmi$disk_offsets = 37;    
macro RMI$w_disk_alloclass = 0,0,16,1 %; 
macro RMI$l_disk_devname = 2,0,32,1 %;  
macro RMI$w_disk_unitnum = 6,0,16,1 %;  
macro RMI$b_disk_flags = 8,0,8,1 %;     
macro RMI$q_disk_nodename = 9,0,0,1 %;
literal RMI$s_disk_nodename = 8;        
macro RMI$q_disk_volnamel = 17,0,0,1 %;
literal RMI$s_disk_volnamel = 8;        
macro RMI$l_disk_volnameh = 25,0,32,1 %; 
macro RMI$l_disk_optcnt = 29,0,32,1 %;  
macro RMI$l_disk_qcount = 33,0,32,1 %;  
literal RMI$c_disk_minsize = 37;        
literal RMI$S_rmi$disk_offsets_rev4 = 36; 
macro RMI$b_disk_alloclass_rev4 = 0,0,8,1 %; 
macro RMI$l_disk_devname_rev4 = 1,0,32,1 %; 
macro RMI$w_disk_unitnum_rev4 = 5,0,16,1 %; 
macro RMI$b_disk_flags_rev4 = 7,0,8,1 %; 
macro RMI$q_disk_nodename_rev4 = 8,0,0,1 %;
literal RMI$s_disk_nodename_rev4 = 8;   
macro RMI$q_disk_volnamel_rev4 = 16,0,0,1 %;
literal RMI$s_disk_volnamel_rev4 = 8;   
macro RMI$l_disk_volnameh_rev4 = 24,0,32,1 %; 
macro RMI$l_disk_optcnt_rev4 = 28,0,32,1 %; 
macro RMI$l_disk_qcount_rev4 = 32,0,32,1 %; 
literal RMI$c_disk_minsize_rev4 = 36;   
literal RMI$S_rmi$proc_class = 67;      
macro RMI$l_proc_ipid = 0,0,32,1 %;     
macro RMI$l_proc_uic = 4,0,32,1 %;      
macro RMI$w_proc_state = 8,0,16,1 %;    
macro RMI$b_proc_pri = 10,0,8,1 %;      
macro RMI$o_proc_lname = 11,0,0,1 %;
literal RMI$s_proc_lname = 16;          
macro RMI$l_proc_gpgcnt = 27,0,32,1 %;  
macro RMI$l_proc_ppgcnt = 31,0,32,1 %;  
macro RMI$l_proc_sts = 35,0,32,1 %;     
macro RMI$l_proc_diocnt = 39,0,32,1 %;  
macro RMI$l_proc_pageflts = 43,0,32,1 %; 
macro RMI$l_proc_cputim = 47,0,32,1 %;  
macro RMI$l_proc_biocnt = 51,0,32,1 %;  
macro RMI$l_proc_epid = 55,0,32,1 %;    
macro RMI$l_proc_efwm = 59,0,32,1 %;    
macro RMI$l_proc_rbstran = 63,0,32,1 %; 
literal RMI$c_proc_minsize = 67;
 

literal REG$FC_CLOSE_KEY = 1;           
literal REG$FC_CREATE_KEY = 2;          
literal REG$FC_DELETE_KEY = 3;          
literal REG$FC_DELETE_VALUE = 4;        
literal REG$FC_ENUM_KEY = 5;            
literal REG$FC_ENUM_VALUE = 6;          
literal REG$FC_FLUSH_KEY = 7;           
literal REG$FC_LOAD_KEY = 8;            
literal REG$FC_MODIFY_KEY = 9;          
literal REG$FC_MODIFY_TREE_KEY = 10;    
literal REG$FC_NOTIFY_CHANGE_KEY_VALUE = 11; 
literal REG$FC_OPEN_KEY = 12;           
literal REG$FC_QUERY_KEY = 13;          
literal REG$FC_QUERY_VALUE = 14;        
literal REG$FC_REPLACE_KEY = 15;        
literal REG$FC_RESTORE_KEY = 16;        
literal REG$FC_SAVE_KEY = 17;           
literal REG$FC_SEARCH_TREE_DATA = 18;   
literal REG$FC_SEARCH_TREE_KEY = 19;    
literal REG$FC_SEARCH_TREE_VALUE = 20;  
literal REG$FC_SET_VALUE = 21;          
literal REG$FC_UNLOAD_KEY = 22;         
literal REG$FC_GET_KEY_SECURITY = 23;   
literal REG$FC_SET_KEY_SECURITY = 24;   
literal REG$FC_GET_PERFORMANCE = 25;    
literal REG$FC_GET_FILE_INFO = 26;      
literal REG$FC_GET_FILE_UPDATE = 27;    
literal REG$FC_CREATE_DATABASE = 28;    
literal REG$FC_MAKE_SNAPSHOT = 29;      
literal REG$FC_ARCHIVE = 30;            
literal REG$FC_LAST = 31;               

literal REG$M_UNICODE_STRING = 8192;    

literal REG$_TERMINATOR = 0;            
literal REG$_SEPARATOR = 1;             
literal REG$_SECPROFILE = 514;          
literal REG$_REQUEST = 515;             
literal REG$_ACMODE = 1284;             
literal REG$_ACTIONCODE = 1285;         
literal REG$_CACHEACTION = 1286;        
literal REG$_CANCELNOTIFICATION = 519;  
literal REG$_CLASSNAME = 264;           
literal REG$_CLASSNAMEMAX = 1289;       
literal REG$_CLASSNAMESIZE = 1290;      
literal REG$_DATAFLAGS = 1547;          
literal REG$_DATATYPE = 1292;           
literal REG$_DISPOSITION = 1293;        
literal REG$_FILEINFODATA = 526;        
literal REG$_FILELOAD = 1807;           
literal REG$_FILESAVE = 1808;           
literal REG$_FILEUPDATEDATA = 529;      
literal REG$_FLAGOPCODE = 1298;         
literal REG$_FLAGSUBKEY = 1299;         
literal REG$_KEYID = 1300;              
literal REG$_KEYID_INTERNAL = 533;      
literal REG$_KEYFLAGS = 1302;           
literal REG$_KEYPATH = 279;             
literal REG$_KEYRESULT = 1304;          
literal REG$_KEYRESULT_INTERNAL = 537;  
literal REG$_LASTWRITE = 1562;          
literal REG$_LINKCOUNT = 1307;          
literal REG$_LINKPATH = 284;            
literal REG$_LINKPATHSIZE = 1309;       
literal REG$_LINKTYPE = 1310;           
literal REG$_LOCK = 1311;               
literal REG$_NEWNAME = 288;             
literal REG$_NOTIFYFILTER = 1313;       
literal REG$_PATHBUFFER = 546;          
literal REG$_PERFORMANCEDATA = 547;     
literal REG$_REQLENGTH = 1316;          
literal REG$_RETURNSTATUS = 1317;       
literal REG$_SECACCESS = 1318;          
literal REG$_SECONDSTATUS = 1319;       
literal REG$_SECURITYPOLICY = 1320;     
literal REG$_SEGMENTNUMBER = 1321;      
literal REG$_SNAPSHOTDESTINATION = 1834; 
literal REG$_SNAPSHOTVERSIONS = 1323;   
literal REG$_SUBKEYINDEX = 1324;        
literal REG$_SUBKEYNAME = 301;          
literal REG$_SUBKEYNAMEMAX = 1326;      
literal REG$_SUBKEYNAMESIZE = 1327;     
literal REG$_SUBKEYSNUMBER = 1328;      
literal REG$_SECURITYINFORMATION = 1329; 
literal REG$_SECURITYDESCRIPTOR = 562;  
literal REG$_VALUEINDEX = 1331;         
literal REG$_VALUEDATA = 564;           
literal REG$_VALUEDATAMAX = 1333;       
literal REG$_VALUEDATASIZE = 1334;      
literal REG$_VALUENAME = 311;           
literal REG$_VALUENAMEMAX = 1336;       
literal REG$_VALUENAMESIZE = 1337;      
literal REG$_VALUENUMBER = 1338;        
literal REG$_VOLATILE = 1339;           
literal REG$_WILDASTERISK = 316;        
literal REG$_WILDPERCENT = 317;         
literal REG$_WILDPERIODS = 318;         
literal REG$_INSTRUMENTFILE = 575;      
literal REG$_INSTRUMENTKEY = 576;       
literal REG$_INSTRUMENTDATA = 577;      
literal REG$_FILENAME = 1858;           
literal REG$_COUNTER = 1347;            
literal REG$_SECDESCRIPTORLEN = 1348;   
literal REG$_SECDESCLEN_INTERNAL = 1349; 
literal REG$_VALUEDATASIZE_INTERNAL = 1350; 
literal REG$_SAMDESIRED = 1351;         
literal REG$_DATABASE_VERSION = 1352;   
literal REG$_LAST = 73;                 

literal REG$K_NONE = 0;                 
literal REG$K_CLUSTER = 1;              
literal REG$K_SYSTEM = 2;               
literal REG$K_PROCESS = 3;              
literal REG$K_IMAGE = 4;                
literal REG$K_WRITEBEHIND = 5;          
literal REG$K_WRITETHRU = 6;            
literal REG$K_CREATENEWKEY = 7;         
literal REG$K_OPENEXISTINGKEY = 8;      
literal REG$K_POLICY_OPENVMS = 9;       
literal REG$K_POLICY_NT_40 = 10;        
literal REG$K_INTERNAL = 11;            
literal REG$K_HARDLINK = 12;            
literal REG$K_SYMBOLICLINK = 13;        
literal REG$K_BINARY = 14;              
literal REG$K_DWORD = 15;               
literal REG$K_DWLITTLEENDIAN = 16;      
literal REG$K_DWBIGENDIAN = 17;         
literal REG$K_EXPAND_SZ = 18;           
literal REG$K_LINK = 19;                
literal REG$K_MULTI_SZ = 20;            
literal REG$K_QWORD = 21;               
literal REG$K_RESOURCELIST = 22;        
literal REG$K_SZ = 23;                  
literal REG$K_START_FILE = 24;          
literal REG$K_START_PERF = 25;          
literal REG$K_STOP_FILE = 26;           
literal REG$K_STOP_PERF = 27;           
literal REG$K_ZERO_FILE = 28;           
literal REG$K_ZERO_PERF = 29;           
literal REG$K_SHOW_CTR_FILE = 30;       
literal REG$K_SHOW_CTR_PERF = 31;       
literal REG$K_SHOW_FILE = 32;           
literal REG$K_NORMAL = 33;              
literal REG$K_LARGE = 34;               
literal REG$K_EXACTMATCH = 35;          
literal REG$K_INCLUDE = 36;             
literal REG$K_EXCLUDE = 37;             
literal REG$K_ANY = 38;                 
literal REG$K_NOTANY = 39;              

literal REG$M_FC = %X'3FF';
literal REG$M_CASE_SENSITIVE = %X'400';
literal REG$M_DISABLE_WILDCARDS = %X'800';
literal REG$M_IGNORE_LINKS = %X'1000';
literal REG$M_NOW = %X'2000';
literal REG$M_NOWAIT = %X'4000';
literal REG$M_UNICODE_VALUES = %X'8000';
literal REG$M_BYPASS = %X'10000';
literal REG$M_INTERNAL = %X'20000';
literal REG$S_REGDEF = 3;
macro REG$V_FC = 0,0,10,0 %;
literal REG$S_FC = 10;
macro REG$V_CASE_SENSITIVE = 0,10,1,0 %; 
macro REG$V_DISABLE_WILDCARDS = 0,11,1,0 %; 
macro REG$V_IGNORE_LINKS = 0,12,1,0 %;  
macro REG$V_NOW = 0,13,1,0 %;           
macro REG$V_NOWAIT = 0,14,1,0 %;        
macro REG$V_UNICODE_VALUES = 0,15,1,0 %; 
macro REG$V_BYPASS = 0,16,1,0 %;        
macro REG$V_INTERNAL = 0,17,1,0 %;      

literal REG$M_CHANGENAME = %X'1';
literal REG$M_CHANGEATTRIBUTES = %X'2';
literal REG$M_CHANGELASTSET = %X'4';
literal REG$M_CHANGESECURITY = %X'8';
literal REG$S_KEYCHANGEDEF = 1;
macro REG$V_CHANGENAME = 0,0,1,0 %;     
macro REG$V_CHANGEATTRIBUTES = 0,1,1,0 %; 
macro REG$V_CHANGELASTSET = 0,2,1,0 %;  
macro REG$V_CHANGESECURITY = 0,3,1,0 %; 

literal REG$M_ALLACCESS = %X'1';
literal REG$M_CREATELINK = %X'2';
literal REG$M_CREATESUBKEY = %X'4';
literal REG$M_ENUMSUBKEYS = %X'8';
literal REG$M_EXECUTE = %X'10';
literal REG$M_NOTIFY = %X'20';
literal REG$M_QUERYVALUE = %X'40';
literal REG$M_READ = %X'80';
literal REG$M_SETVALUE = %X'100';
literal REG$M_WRITE = %X'200';
literal REG$M_DELETEACCESS = %X'400';
literal REG$M_READCONTROL = %X'800';
literal REG$M_WRITEDAC = %X'1000';
literal REG$M_WRITEOWNER = %X'2000';
literal REG$M_SYNCHRONIZE = %X'4000';
literal REG$M_ACCESSSYSTEMSECURITY = %X'8000';
literal REG$M_MAXIMUMALLOWED = %X'10000';
literal REG$M_GENERICALL = %X'20000';
literal REG$M_GENERICEXECUTE = %X'40000';
literal REG$M_GENERICWRITE = %X'80000';
literal REG$M_GENERICREAD = %X'100000';
literal REG$S_SECACCESSDEF = 3;
macro REG$V_ALLACCESS = 0,0,1,0 %;      
macro REG$V_CREATELINK = 0,1,1,0 %;     
macro REG$V_CREATESUBKEY = 0,2,1,0 %;   
macro REG$V_ENUMSUBKEYS = 0,3,1,0 %;    
macro REG$V_EXECUTE = 0,4,1,0 %;        
macro REG$V_NOTIFY = 0,5,1,0 %;         
macro REG$V_QUERYVALUE = 0,6,1,0 %;     
macro REG$V_READ = 0,7,1,0 %;           
macro REG$V_SETVALUE = 0,8,1,0 %;       
macro REG$V_WRITE = 0,9,1,0 %;          
macro REG$V_DELETEACCESS = 0,10,1,0 %;  
macro REG$V_READCONTROL = 0,11,1,0 %;   
macro REG$V_WRITEDAC = 0,12,1,0 %;      
macro REG$V_WRITEOWNER = 0,13,1,0 %;    
macro REG$V_SYNCHRONIZE = 0,14,1,0 %;   
macro REG$V_ACCESSSYSTEMSECURITY = 0,15,1,0 %; 
macro REG$V_MAXIMUMALLOWED = 0,16,1,0 %; 
macro REG$V_GENERICALL = 0,17,1,0 %;    
macro REG$V_GENERICEXECUTE = 0,18,1,0 %; 
macro REG$V_GENERICWRITE = 0,19,1,0 %;  
macro REG$V_GENERICREAD = 0,20,1,0 %;   

literal REG$_HKEY_NONE = 0;             
literal REG$_HKEY_CLASSES_ROOT = -2147483648; 
literal REG$_HKEY_CURRENT_USER = -2147483647; 
literal REG$_HKEY_LOCAL_MACHINE = -2147483646; 
literal REG$_HKEY_USERS = -2147483645;  
literal REG$_HKEY_PERFORMANCE_DATA = -2147483644; 
literal REG$_HKEY_LAST_ROOT_KEY = 5;    
 
literal rnhblk$k_LENGTH = 20;           
literal rnhblk$c_LENGTH = 20;           
literal RNHBLK$S_RNHBLKDEF = 20;
macro RNHBLK$L_FLNK = 0,0,32,0 %;       
macro RNHBLK$L_HANDLER = 4,0,32,0 %;    
macro RNHBLK$L_ARGCNT = 12,0,32,0 %;    
macro RNHBLK$L_EVENT = 16,0,32,0 %;     
 
literal RSDM$_JOIN_SYSTEM = 1;          
literal RSDM$_JOIN_DEFAULT = 2;         
literal RSDM$_JOIN_DOMAIN = 3;          
literal RSDM$_LEAVE = 4;                
literal RSDM$K_SYSTEM_RSDM_ID = 1;
literal RSDM$K_PROCESS_RSDM_ID = 2;

literal RSDM$M_READ = %X'1';
literal RSDM$M_WRITE = %X'2';
literal RSDM$M_LOCK = %X'4';
literal RSDM$S_RSDMBITS = 4;
macro RSDM$V_READ = 0,0,1,0 %;          
macro RSDM$V_WRITE = 0,1,1,0 %;         
macro RSDM$V_LOCK = 0,2,1,0 %;          
 

literal SBK$K_LENGTH = 32;
literal SBK$C_LENGTH = 32;
literal SBK$S_SBKDEF = 32;
macro SBK$L_STLBN = 0,0,32,0 %;         
macro SBK$W_STLBNH = 0,0,16,0 %;        
macro SBK$W_STLBNL = 2,0,16,0 %;        
macro SBK$L_FILESIZE = 4,0,32,0 %;      
macro SBK$W_FILESIZH = 4,0,16,0 %;      
macro SBK$W_FILESIZL = 6,0,16,0 %;      

macro SBK$B_ACNT = 8,0,8,0 %;           
macro SBK$B_LCNT = 9,0,8,0 %;           
macro SBK$L_FCB = 10,0,32,0 %;          
macro SBK$W_ACNT = 16,0,16,0 %;         
macro SBK$W_LCNT = 18,0,16,0 %;         
macro SBK$W_WCNT = 20,0,16,0 %;         
macro SBK$W_TCNT = 22,0,16,0 %;         
macro SBK$L_READS = 24,0,32,0 %;        
macro SBK$L_WRITES = 28,0,32,0 %;       
 
literal S2DGB$K_OP_XCDB32 = 1;          
literal S2DGB$K_OP_XCDB64 = 2;          
literal S2DGB$M_READ = %X'1';
literal S2DGB$M_DISCPRIV = %X'2';
literal S2DGB$M_SYNCHRONOUS = %X'4';
literal S2DGB$M_OBSOLETE1 = %X'8';
literal S2DGB$M_TAGGED_REQ = %X'10';
literal S2DGB$M_TAG = %X'E0';
literal S2DGB$K_TAG_POSITION = 5;       
literal S2DGB$K_SIMPLE = 0;             
literal S2DGB$K_ORDERED = 1;            
literal S2DGB$K_EXPRESS = 2;            
literal S2DGB$M_AUTOSENSE = %X'100';
literal S2DGB$M_EXT_LUN = %X'200';
literal S2DGB$K_XCDB32_LENGTH = 60;     
literal S2DGB$K_XCDB64_LENGTH = 60;     
literal S2DGB$K_XCDB_MIN_LENGTH = 60;   
literal S2DGB$K_EXT_XCDB_MIN_LENGTH = 68; 
literal S2DGB$S_S2DGB = 72;
macro S2DGB$L_OPCODE = 0,0,32,0 %;      
macro S2DGB$L_FLAGS = 4,0,32,0 %;
macro S2DGB$V_READ = 4,0,1,0 %;         
macro S2DGB$V_DISCPRIV = 4,1,1,0 %;     
macro S2DGB$V_SYNCHRONOUS = 4,2,1,0 %;  
macro S2DGB$V_OBSOLETE1 = 4,3,1,0 %;    
macro S2DGB$V_TAGGED_REQ = 4,4,1,0 %;   
macro S2DGB$V_TAG = 4,5,3,0 %;
literal S2DGB$S_TAG = 3;                
macro S2DGB$V_AUTOSENSE = 4,8,1,0 %;    
macro S2DGB$V_EXT_LUN = 4,9,1,0 %;      

macro S2DGB$L_32CDBADDR = 8,0,32,1 %;   
macro S2DGB$L_32CDBLEN = 12,0,32,0 %;   
macro S2DGB$L_32DATADDR = 16,0,32,1 %;  
macro S2DGB$L_32DATLEN = 20,0,32,0 %;   
macro S2DGB$L_32PADCNT = 24,0,32,0 %;   
macro S2DGB$L_32PHSTMO = 28,0,32,0 %;   
macro S2DGB$L_32DSCTMO = 32,0,32,0 %;   
macro S2DGB$L_32SENSEADDR = 36,0,32,1 %; 
macro S2DGB$L_32SENSELEN = 40,0,32,0 %; 
macro S2DGB$L_RESERVED1 = 44,0,32,0 %;  
macro S2DGB$L_RESERVED2 = 48,0,32,0 %;  
macro S2DGB$L_RESERVED3 = 52,0,32,0 %;  
macro S2DGB$L_RESERVED4 = 56,0,32,0 %;  

macro S2DGB$PQ_64CDBADDR = 8,0,0,1 %;
literal S2DGB$S_64CDBADDR = 8;          
macro S2DGB$PQ_64DATADDR = 16,0,0,1 %;
literal S2DGB$S_64DATADDR = 8;          
macro S2DGB$PQ_64SENSEADDR = 24,0,0,1 %;
literal S2DGB$S_64SENSEADDR = 8;        
macro S2DGB$L_64CDBLEN = 32,0,32,0 %;   
macro S2DGB$L_64DATLEN = 36,0,32,0 %;   
macro S2DGB$L_64SENSELEN = 40,0,32,0 %; 
macro S2DGB$L_64PADCNT = 44,0,32,0 %;   
macro S2DGB$L_64PHSTMO = 48,0,32,0 %;   
macro S2DGB$L_64DSCTMO = 52,0,32,0 %;   
macro S2DGB$L_RESERVED_1 = 56,0,32,0 %; 
macro S2DGB$Q_EXT_LUN = 60,0,0,0 %;
literal S2DGB$S_EXT_LUN = 8;            
 

literal SD$_MAJOR_ID = 1;               
literal SD$_MINOR_ID = 2;               
literal SD$_POOL_ID = 3;                
literal SD$_CREATION_DATE = 4;          
literal SD$_MODIFIED_DATE = 5;          
literal SD$_SEGMENT_SIZE = 6;           
literal SD$_MAX_UNITS = 7;              
literal SD$_UNIT_COUNT = 8;             
literal SD$_POOL_OPTIONS = 9;           
literal SD$_UNIT_ID = 10;               
literal SD$_UNIT_NUMBER = 11;           
literal SD$_UNIT_OPTIONS = 12;          
literal SD$_SEQUENCE_NUMBER = 13;       
literal SD$_HIGHEST_UNIT = 14;          
literal SD$_LOWEST_UNIT = 15;           
literal SD$_TOTAL_SEGMENTS = 16;        
literal SD$_FREE_SEGMENTS = 17;         
literal SD$_MAX_FAMILY = 18;            
literal SD$_MAX_DISK = 19;              
literal SD$_META_LBN = 20;              
literal SD$_META_SIZE = 21;             
literal SD$_DATA_LBN = 22;              
literal SD$_DATA_SIZE = 23;             
literal SD$_POOL_DEVICE = 24;           
literal SD$_FAMILY_NUMBER = 25;         
literal SD$_MEMBER_NUMBER = 26;         
literal SD$_DISK_NAME = 27;             
literal SD$_DISK_CAPACITY = 28;         
literal SD$_DELSPACE = 29;              
literal SD$_DISK_DEVICE = 30;           
literal SD$_BACKUP_DATE = 31;           
literal SD$_READS = 32;                 
literal SD$_WRITES = 33;                
literal SD$_SPLIT_READS = 34;           
literal SD$_SPLIT_WRITES = 35;          
literal SD$_DISK_READS = 36;            
literal SD$_DISK_WRITES = 37;           
literal SD$_COPY_OUTS = 38;             
literal SD$_CONVERT_CANCELS = 39;       
literal SD$_POOL_FULL_STALLS = 40;      
literal SD$_SPARE1 = 41;                
literal SD$_SPARE2 = 42;                
literal SD$_SPARE3 = 43;                
literal SD$_SPARE4 = 44;                
literal SD$_SPARE5 = 45;                
literal SD$_SPARE6 = 46;                
literal SD$_SPARE7 = 47;                
literal SD$_SPARE8 = 48;                
literal SD$_COPY_STATS = 49;            
literal SD$_DEV_LOCKID = 50;            
literal SD$_UID_LOCKID = 51;            
literal SD$K_COPYCOUNTERS = 24;

literal SD$M_CONTAINER_DISK = 1;
literal SD$M_CONVERTED_DISK = 2;

literal SD$K_CLU_BIND_POOL = 1;
literal SD$K_CLU_BIND_DISK = 2;
literal SD$K_CLU_UNBIND = 3;

literal sd$S_SDDEVLIST = 88;
macro sd$l_start_lbn = 0,0,32,0 %;      
macro sd$l_lbn_count = 4,0,32,0 %;      
macro sd$l_meta_lbn = 8,0,32,0 %;       
macro sd$l_meta_count = 12,0,32,0 %;    
macro sd$ps_ucb = 16,0,32,0 %;          
macro sd$l_name_length = 20,0,32,0 %;   
macro sd$t_name = 24,0,0,0 %;
literal sd$s_name = 64;                 

literal sd$m_stall = %X'1';
literal sd$m_redundant = %X'2';
literal sd$m_record = %X'4';
literal sd$m_cluster = %X'8';
literal sd$m_partial = %X'10';
literal sd$S_SDPARAMLIST = 8;
macro sd$l_segment_size = 0,0,32,0 %;   
macro sd$l_disk_size = 0,0,32,0 %;      
macro sd$l_flags = 4,0,32,0 %;          
macro sd$v_stall = 4,0,1,0 %;           
macro sd$v_redundant = 4,1,1,0 %;       
macro sd$v_record = 4,2,1,0 %;          
macro sd$v_cluster = 4,3,1,0 %;         
macro sd$v_partial = 4,4,1,0 %;         

literal SD$K_GET_DISK = 1;
literal SD$K_GET_STATS = 2;
literal SD$K_GET_UNIT = 3;
literal SD$K_POOL_DISK = 4;
literal SD$K_POOL_INFO = 5;
literal SD$K_POOL_UNIT = 6;
literal SD$K_CLU_TEST = 7;
literal SD$K_STORE_LOCKIDS = 8;
literal SD$K_RETRIEVE_LOCKIDS = 9;
literal SD$K_RETRIEVE_MEMBERLIST = 10;
literal SD$K_SET_TRACE_LEVEL = 11;
literal SD$K_GET_TRACE_LEVEL = 12;

%if not %declared(%quote SDL$$SDDEF_REQ) %then

macro
SDL$$SDDEF_REQ(ARG1, arg2) =
    %IF not %NULL(ARG1) %THEN ARG1
    %else
	%warn(%string('REQUIRED ARGUMENT ', %NAME(ARG2), ' MISSING')) 0
    %FI %;
%fi
 
%if not %declared(%quote SDL$$SDDEF_OPT) %then

macro
SDL$$SDDEF_OPT[ARG] =
    %IF %NULL(ARG)
    %THEN
	%IF NOT %NULL(%REMAINING)
	%THEN
	    0
	%FI
    %ELSE
	ARG
    %FI %;
%fi
 
%if not %declared(%quote SDL$$SDDEF_LIST_0_REQ) %then

macro
SDL$$SDDEF_LIST_0_REQ(ARG) =
    %IF NOT %NULL(ARG) %THEN %REMOVE(ARG) %FI %;
%fi
 
%if not %declared(%quote SDL$$SDDEF_LIST_1_REQ) %then

macro
SDL$$SDDEF_LIST_1_REQ(ARG, ARG2) =
    %IF %NULL(ARG) %THEN
	 %warn(%string('REQUIRED ARGUMENT ', %NAME(ARG2), ' MISSING')) 0
    %ELSE
        SDL$$SDDEF_LIST_0_REQ(ARG) %FI %;
%fi
 
%if not %declared(%quote SDL$$SDDEF_CONCAT) %then

macro
SDL$$SDDEF_CONCAT[ARG] =
    %IF NOT %NULL(ARG) %THEN ARG %FI %;
%fi
 
 
KEYWORDMACRO $sd_add_units (POOL_DEVICE,UNIT_LIST,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE sd$add_units : BLISS ADDRESSING_MODE (GENERAL);
	   sd$add_units (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , 
	   SDL$$SDDEF_REQ(UNIT_LIST, %QUOTE UNIT_LIST) , SDL$$SDDEF_REQ(FLAGS, %QUOTE FLAGS) ))
   END %;
 

KEYWORDMACRO $sd_bind_disk (DISK_DEVICE,POOL_DEVICE,DISK_NAME
		,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE sd$bind_disk : BLISS ADDRESSING_MODE (GENERAL);
	   sd$bind_disk (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(DISK_DEVICE, %QUOTE DISK_DEVICE) , 
	   SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , SDL$$SDDEF_REQ(DISK_NAME, %QUOTE DISK_NAME) , 
	   SDL$$SDDEF_REQ(FLAGS, %QUOTE FLAGS) ))
   END %;
 

KEYWORDMACRO $sd_bind_pool (POOL_DEVICE,UNIT_LIST,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE sd$bind_pool : BLISS ADDRESSING_MODE (GENERAL);
	   sd$bind_pool (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , 
	   SDL$$SDDEF_REQ(UNIT_LIST, %QUOTE UNIT_LIST) , SDL$$SDDEF_REQ(FLAGS, %QUOTE FLAGS) ))
   END %;
 

KEYWORDMACRO $sd_create_disk (POOL_DEVICE,DISK_NAME,DISK_CAPACITY) =
   BEGIN
   EXTERNAL ROUTINE sd$create_disk : BLISS ADDRESSING_MODE (GENERAL);
	   sd$create_disk (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , 
	   SDL$$SDDEF_REQ(DISK_NAME, %QUOTE DISK_NAME) , SDL$$SDDEF_REQ(DISK_CAPACITY, %QUOTE DISK_CAPACITY) ))
   END %;
 

KEYWORDMACRO $sd_create_pool (UNIT_LIST,SEGMENT_SIZE,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE sd$create_pool : BLISS ADDRESSING_MODE (GENERAL);
	   sd$create_pool (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(UNIT_LIST, %QUOTE UNIT_LIST) , 
	   SDL$$SDDEF_REQ(SEGMENT_SIZE, %QUOTE SEGMENT_SIZE) , SDL$$SDDEF_REQ(FLAGS, %QUOTE FLAGS) ))
   END %;
 

KEYWORDMACRO $sd_create_snap (POOL_DEVICE,DISK_DEVICE,DISK_NAME
		,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE sd$create_snap : BLISS ADDRESSING_MODE (GENERAL);
	   sd$create_snap (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , 
	   SDL$$SDDEF_REQ(DISK_DEVICE, %QUOTE DISK_DEVICE) , SDL$$SDDEF_REQ(DISK_NAME, %QUOTE DISK_NAME) , 
	   SDL$$SDDEF_REQ(FLAGS, %QUOTE FLAGS) ))
   END %;
 

KEYWORDMACRO $sd_delete_disk (POOL_DEVICE,DISK_NAME) =
   BEGIN
   EXTERNAL ROUTINE sd$delete_disk : BLISS ADDRESSING_MODE (GENERAL);
	   sd$delete_disk (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , 
	   SDL$$SDDEF_REQ(DISK_NAME, %QUOTE DISK_NAME) ))
   END %;
 

KEYWORDMACRO $sd_remove_units (POOL_DEVICE,UNIT_LIST) =
   BEGIN
   EXTERNAL ROUTINE sd$remove_units : BLISS ADDRESSING_MODE (GENERAL);
	   sd$remove_units (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , 
	   SDL$$SDDEF_REQ(UNIT_LIST, %QUOTE UNIT_LIST) ))
   END %;
 

KEYWORDMACRO $sd_unbind (VIRTUAL_DEVICE,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE sd$unbind : BLISS ADDRESSING_MODE (GENERAL);
	   sd$unbind (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(VIRTUAL_DEVICE, %QUOTE VIRTUAL_DEVICE) , 
	   SDL$$SDDEF_REQ(FLAGS, %QUOTE FLAGS) ))
   END %;
 

KEYWORDMACRO $sd_get_disk (DISK_DEVICE,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE sd$get_disk : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_disk (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(DISK_DEVICE, %QUOTE DISK_DEVICE) , 
	   SDL$$SDDEF_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $sd_get_pool (POOL_DEVICE,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE sd$get_pool : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_pool (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , 
	   SDL$$SDDEF_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $sd_get_pool_begin (POOL_DEVICE,POOL_CONTEXT) =
   BEGIN
   EXTERNAL ROUTINE sd$get_pool_begin : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_pool_begin (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , 
	   SDL$$SDDEF_REQ(POOL_CONTEXT, %QUOTE POOL_CONTEXT) ))
   END %;
 

KEYWORDMACRO $sd_get_pool_disk (POOL_CONTEXT,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE sd$get_pool_disk : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_pool_disk (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_CONTEXT, %QUOTE POOL_CONTEXT) , 
	   SDL$$SDDEF_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $sd_get_pool_end (POOL_CONTEXT) =
   BEGIN
   EXTERNAL ROUTINE sd$get_pool_end : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_pool_end (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_CONTEXT, %QUOTE POOL_CONTEXT) ))
   END %;
 

KEYWORDMACRO $sd_get_pool_unit (POOL_CONTEXT,NEXT_UNIT) =
   BEGIN
   EXTERNAL ROUTINE sd$get_pool_unit : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_pool_unit (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_CONTEXT, %QUOTE POOL_CONTEXT) , 
	   SDL$$SDDEF_REQ(NEXT_UNIT, %QUOTE NEXT_UNIT) ))
   END %;
 

KEYWORDMACRO $sd_get_raw_begin (UNIT_DEVICE,UNIT_CONTEXT) =
   BEGIN
   EXTERNAL ROUTINE sd$get_raw_begin : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_raw_begin (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(UNIT_DEVICE, %QUOTE UNIT_DEVICE) , 
	   SDL$$SDDEF_REQ(UNIT_CONTEXT, %QUOTE UNIT_CONTEXT) ))
   END %;
 

KEYWORDMACRO $sd_get_raw_end (UNIT_CONTEXT) =
   BEGIN
   EXTERNAL ROUTINE sd$get_raw_end : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_raw_end (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(UNIT_CONTEXT, %QUOTE UNIT_CONTEXT) ))
   END %;
 

KEYWORDMACRO $sd_get_raw_next (UNIT_CONTEXT,NEXT_UNIT) =
   BEGIN
   EXTERNAL ROUTINE sd$get_raw_next : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_raw_next (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(UNIT_CONTEXT, %QUOTE UNIT_CONTEXT) , 
	   SDL$$SDDEF_REQ(NEXT_UNIT, %QUOTE NEXT_UNIT) ))
   END %;
 

KEYWORDMACRO $sd_get_raw_info (UNIT_CONTEXT,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE sd$get_raw_info : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_raw_info (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(UNIT_CONTEXT, %QUOTE UNIT_CONTEXT) , 
	   SDL$$SDDEF_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $sd_get_stats (POOL_DEVICE,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE sd$get_stats : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_stats (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(POOL_DEVICE, %QUOTE POOL_DEVICE) , 
	   SDL$$SDDEF_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $sd_get_unit (UNIT_DEVICE,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE sd$get_unit : BLISS ADDRESSING_MODE (GENERAL);
	   sd$get_unit (SDL$$SDDEF_CONCAT( SDL$$SDDEF_REQ(UNIT_DEVICE, %QUOTE UNIT_DEVICE) , 
	   SDL$$SDDEF_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 
 

literal SEC$M_GBL = %X'1';
literal SEC$M_CRF = %X'2';
literal SEC$M_DZRO = %X'4';
literal SEC$M_WRT = %X'8';
literal SEC$M_SHMGS = %X'10';
literal SEC$M_WRTMOD = %X'C0';
literal SEC$M_AMOD = %X'300';
literal SEC$M_READ_ONLY_SHPT = %X'800';
literal SEC$M_SHARED_PTS = %X'1000';
literal SEC$M_MRES = %X'2000';
literal SEC$M_PERM = %X'4000';
literal SEC$M_SYSGBL = %X'8000';
literal SEC$M_PFNMAP = %X'10000';
literal SEC$M_EXPREG = %X'20000';
literal SEC$M_PROTECT = %X'40000';
literal SEC$M_PAGFIL = %X'80000';
literal SEC$M_EXECUTE = %X'100000';
literal SEC$M_NOPROTCHK = %X'200000';
literal SEC$M_NO_OVERMAP = %X'400000';
literal SEC$M_INPROG = %X'800000';
literal SEC$M_PARANOID = %X'1000000';
literal SEC$M_GRANHINT = %X'2000000';
literal SEC$M_MRES_ALLOC = %X'4000000';
literal SEC$M_RAD_HINT = %X'8000000';
literal SEC$S_SECDEF = 40;
macro SEC$L_GSD = 0,0,32,1 %;           
macro SEC$L_CCB = 0,0,32,1 %;           
macro SEC$L_SECXFL = 4,0,32,0 %;        
macro SEC$L_SECXBL = 8,0,32,0 %;        
macro SEC$L_PFC = 12,0,32,0 %;          
macro SEC$R_MRES_FILE_OVERLAY = 16,0,0,0 %;
macro SEC$Q_MRES_REFCNT = 16,0,0,1 %;
literal SEC$S_MRES_REFCNT = 8;          
macro SEC$R_FILE_FIELDS = 16,0,0,0 %;
macro SEC$L_WINDOW = 16,0,32,1 %;       
macro SEC$L_VBN = 20,0,32,0 %;          

macro SEC$L_FLAGS = 24,0,32,0 %;        
macro SEC$V_GBL = 24,0,1,0 %;           
macro SEC$V_CRF = 24,1,1,0 %;           
macro SEC$V_DZRO = 24,2,1,0 %;          
macro SEC$V_WRT = 24,3,1,0 %;           
macro SEC$V_SHMGS = 24,4,1,0 %;         
macro SEC$V_WRTMOD = 24,6,2,0 %;
literal SEC$S_WRTMOD = 2;               
macro SEC$V_AMOD = 24,8,2,0 %;
literal SEC$S_AMOD = 2;                 
macro SEC$V_READ_ONLY_SHPT = 24,11,1,0 %; 
macro SEC$V_SHARED_PTS = 24,12,1,0 %;   
macro SEC$V_MRES = 24,13,1,0 %;         
macro SEC$V_PERM = 24,14,1,0 %;         
macro SEC$V_SYSGBL = 24,15,1,0 %;       

macro SEC$V_PFNMAP = 24,16,1,0 %;       
macro SEC$V_EXPREG = 24,17,1,0 %;       
macro SEC$V_PROTECT = 24,18,1,0 %;      
macro SEC$V_PAGFIL = 24,19,1,0 %;       
macro SEC$V_EXECUTE = 24,20,1,0 %;      
macro SEC$V_NOPROTCHK = 24,21,1,0 %;    
macro SEC$V_NO_OVERMAP = 24,22,1,0 %;   
macro SEC$V_INPROG = 24,23,1,0 %;       
macro SEC$V_PARANOID = 24,24,1,0 %;     
macro SEC$V_GRANHINT = 24,25,1,0 %;     
macro SEC$V_MRES_ALLOC = 24,26,1,0 %;   
macro SEC$V_RAD_HINT = 24,27,1,0 %;     
macro SEC$L_REFCNT = 28,0,32,1 %;       

macro SEC$L_UNIT_CNT = 32,0,32,0 %;     
macro SEC$L_VPX = 36,0,32,0 %;          

literal SEC$K_LENGTH = 40;              
literal SEC$C_LENGTH = 40;              

literal SECFLG$M_GBL = %X'1';
literal SECFLG$M_CRF = %X'2';
literal SECFLG$M_DZRO = %X'4';
literal SECFLG$M_WRT = %X'8';
literal SECFLG$M_SHMGS = %X'10';
literal SECFLG$M_WRTMOD = %X'C0';
literal SECFLG$M_AMOD = %X'300';
literal SECFLG$M_READ_ONLY_SHPT = %X'800';
literal SECFLG$M_SHARED_PTS = %X'1000';
literal SECFLG$M_MRES = %X'2000';
literal SECFLG$M_PERM = %X'4000';
literal SECFLG$M_SYSGBL = %X'8000';
literal SECFLG$M_PFNMAP = %X'10000';
literal SECFLG$M_EXPREG = %X'20000';
literal SECFLG$M_PROTECT = %X'40000';
literal SECFLG$M_PAGFIL = %X'80000';
literal SECFLG$M_EXECUTE = %X'100000';
literal SECFLG$M_NOPROTCHK = %X'200000';
literal SECFLG$M_NO_OVERMAP = %X'400000';
literal SECFLG$M_INPROG = %X'800000';
literal SECFLG$M_PARANOID = %X'1000000';
literal SECFLG$M_GRANHINT = %X'2000000';
literal SECFLG$M_MRES_ALLOC = %X'4000000';
literal SECFLG$M_RAD_HINT = %X'8000000';
literal SECFLG$S_SECDEF_FLAGS = 4;
macro SECFLG$W_SAVED_FLAGS = 0,0,16,0 %; 
macro SECFLG$L_FLAGS = 0,0,32,0 %;      
macro SECFLG$V_GBL = 0,0,1,0 %;         
macro SECFLG$V_CRF = 0,1,1,0 %;         
macro SECFLG$V_DZRO = 0,2,1,0 %;        
macro SECFLG$V_WRT = 0,3,1,0 %;         
macro SECFLG$V_SHMGS = 0,4,1,0 %;       
macro SECFLG$V_WRTMOD = 0,6,2,0 %;
literal SECFLG$S_WRTMOD = 2;            
macro SECFLG$V_AMOD = 0,8,2,0 %;
literal SECFLG$S_AMOD = 2;              
macro SECFLG$V_READ_ONLY_SHPT = 0,11,1,0 %; 
macro SECFLG$V_SHARED_PTS = 0,12,1,0 %; 
macro SECFLG$V_MRES = 0,13,1,0 %;       
macro SECFLG$V_PERM = 0,14,1,0 %;       
macro SECFLG$V_SYSGBL = 0,15,1,0 %;     

macro SECFLG$V_PFNMAP = 0,16,1,0 %;     
macro SECFLG$V_EXPREG = 0,17,1,0 %;     
macro SECFLG$V_PROTECT = 0,18,1,0 %;    
macro SECFLG$V_PAGFIL = 0,19,1,0 %;     
macro SECFLG$V_EXECUTE = 0,20,1,0 %;    
macro SECFLG$V_NOPROTCHK = 0,21,1,0 %;  
macro SECFLG$V_NO_OVERMAP = 0,22,1,0 %; 
macro SECFLG$V_INPROG = 0,23,1,0 %;     
macro SECFLG$V_PARANOID = 0,24,1,0 %;   
macro SECFLG$V_GRANHINT = 0,25,1,0 %;   
macro SECFLG$V_MRES_ALLOC = 0,26,1,0 %; 
macro SECFLG$V_RAD_HINT = 0,27,1,0 %;   
literal SEC$K_MATALL = 0;               
literal SEC$K_MATEQU = 1;               
literal SEC$K_MATLEQ = 2;               
literal SEC$S_SECDEF1 = 26;
macro SEC$B_AMOD = 25,0,8,0 %;          

literal SECI$_CHAIN = 1;                
literal SECI$_GSMODE = 2;               
literal SECI$_GSFLAGS = 3;              
literal SECI$_GSNAME = 4;               
literal SECI$_GSIDENT = 5;              
literal SECI$_GSRELPAG = 6;             

literal UPDFLG$M_WRT_MODIFIED = %X'1';
literal UPDFLG$S_UPDSEC_FLAGS = 4;
macro UPDFLG$L_FLAGS = 0,0,32,0 %;      
macro UPDFLG$V_WRT_MODIFIED = 0,0,1,0 %; 
 

literal SECID$M_MINOR_ID = %X'FFFFFF';
literal SECID$M_MAJOR_ID = %X'FF000000';
literal SECID$S_SECID = 8;
macro SECID$L_MATCH = 0,0,32,0 %;       
macro SECID$L_VERSION = 4,0,32,0 %;     
macro SECID$V_MINOR_ID = 4,0,24,0 %;
literal SECID$S_MINOR_ID = 24;          
macro SECID$V_MAJOR_ID = 4,24,8,0 %;
literal SECID$S_MAJOR_ID = 8;           
literal SECID$K_LENGTH = 8;             
literal SECID$C_LENGTH = 8;             
 
literal SECSRV$K_SERVER = 1;
literal SECSRV$K_CIA = 2;
literal SECSRV$K_PROXY = 3;
literal SECSRV$K_MAPPING = 4;
literal SECSRV$K_SHUTDOWN = 1;
literal SECSRV$K_PERFORMANCE = 2;
literal SECSRV$K_ZERO_PERFORMANCE = 3;
literal SECSRV$K_RESTART = 4;
literal SECSRV$K_ADD_PROXY = 0;
literal SECSRV$K_DELETE_PROXY = 1;
literal SECSRV$K_SHOW_PROXY = 2;
literal SECSRV$K_VERIFY_PROXY = 3;
literal SECSRV$K_CREATE_PROXY = 4;
literal SECSRV$K_SCAN_INTRUSION = 5;
literal SECSRV$K_DELETE_INTRUSION = 6;
literal SECSRV$K_SHOW_INTRUSION = 7;
literal SECSRV$K_STOP_SERVER = 8;
literal SECSRV$K_RESTART_SERVER = 9;
literal SECSRV$K_ADD_MAPPING = 10;
literal SECSRV$K_CREATE_MAPPING = 11;
literal SECSRV$K_DEFINE_MAPPING = 12;
literal SECSRV$K_DELETE_MAPPING = 13;
literal SECSRV$K_MODIFY_MAPPING = 14;
literal SECSRV$K_SCAN_MAPPING = 15;
literal SECSRV$K_LOOKUP_MAPPING = 16;
literal SECSRV$K_MAX_SERVICE = 17;
literal SECSRV$K_MAXMSG = 8192;
literal SECSRV$K_MAX_MESSAGE = 8192;
literal SECSRV$K_REPLY_CONTEXT_LENGTH = 4;
literal SECSRV$M_IGNORE_RETURN = %X'1';
literal SECSRV$M_FILL_1 = %X'FFFFFFFE';
literal SECSRV$K_HEADER_LENGTH = 84;
literal SECSRV$S_HEADER = 84;
macro SECSRV$L_MESSAGE_TYPE = 0,0,32,0 %;
macro SECSRV$L_MESSAGE_SUBTYPE = 4,0,32,0 %;
macro SECSRV$L_CALLERS_PID = 8,0,32,0 %;
macro SECSRV$L_RETURN_MAILBOX = 12,0,32,0 %;
macro SECSRV$L_FLAGS = 16,0,32,0 %;
macro SECSRV$V_IGNORE_RETURN = 16,0,1,0 %;
macro SECSRV$R_USERNAME = 20,0,0,0 %;
literal SECSRV$S_USERNAME = 36;
macro SECSRV$W_USERNAME_SIZE = 20,0,16,0 %;
macro SECSRV$T_USERNAME_STRING = 24,0,0,0 %;
literal SECSRV$S_USERNAME_STRING = 32;
macro SECSRV$R_TERMINAL = 56,0,0,0 %;
literal SECSRV$S_TERMINAL = 8;
macro SECSRV$B_TERMINAL_SIZE = 56,0,8,0 %;
macro SECSRV$T_TERMINAL_NAME = 57,0,0,0 %;
literal SECSRV$S_TERMINAL_NAME = 7;
macro SECSRV$R_PROCESS_NAME = 64,0,0,0 %;
literal SECSRV$S_PROCESS_NAME = 16;
macro SECSRV$B_PRCNAM_SIZE = 64,0,8,0 %;
macro SECSRV$T_PRCNAM_NAME = 65,0,0,0 %;
literal SECSRV$S_PRCNAM_NAME = 15;
macro SECSRV$L_MESSAGE_CONTEXT = 80,0,32,0 %;
literal SECSRV$CLIENT = -1762787327;
literal SECSRV$OBJECT = -1762787326;
literal SECSRV$COMMUNICATION = -1762787325;
 

literal SJC$_ABORT_JOB = 1;             
literal SJC$_ADD_FILE = 2;              
literal SJC$_ALTER_JOB = 3;             
literal SJC$_ALTER_QUEUE = 4;           
literal SJC$_ASSIGN_QUEUE = 5;          
literal SJC$_BATCH_CHECKPOINT = 6;      
literal SJC$_BATCH_SERVICE = 7;         
literal SJC$_CLOSE_DELETE = 8;          
literal SJC$_CLOSE_JOB = 9;             
literal SJC$_CREATE_JOB = 10;           
literal SJC$_CREATE_QUEUE = 11;         
literal SJC$_DEASSIGN_QUEUE = 12;       
literal SJC$_DEFINE_CHARACTERISTIC = 13; 
literal SJC$_DEFINE_FORM = 14;          
literal SJC$_DELETE_CHARACTERISTIC = 15; 
literal SJC$_DELETE_FORM = 16;          
literal SJC$_DELETE_JOB = 17;           
literal SJC$_DELETE_QUEUE = 18;         
literal SJC$_ENTER_FILE = 19;           
literal SJC$_MERGE_QUEUE = 20;          
literal SJC$_PAUSE_QUEUE = 21;          
literal SJC$_RESET_QUEUE = 22;          
literal SJC$_START_ACCOUNTING = 23;     
literal SJC$_START_QUEUE = 24;          
literal SJC$_START_QUEUE_MANAGER = 25;  
literal SJC$_STOP_ACCOUNTING = 26;      
literal SJC$_STOP_QUEUE = 27;           
literal SJC$_STOP_QUEUE_MANAGER = 28;   
literal SJC$_SYNCHRONIZE_JOB = 29;      
literal SJC$_WRITE_ACCOUNTING = 30;     
literal SJC$_CONTROL_DIAGNOSTICS = 31;  
literal SJC$_DELETE_QUEUE_MANAGER = 32; 
literal SJC$_ALTER_FILE = 33;           
literal SJC$_STOP_ALL_QUEUES_ON_NODE = 34; 
literal SJC$_DISABLE_QUEUE = 35;        
literal SJC$_ENABLE_QUEUE = 36;         
literal SJC$_SYMBIONT_SERVICE = 37;     
literal SJC$_JOBCTL_SERVICE = 38;       
literal SJC$_ENABLE_AUTOSTART = 39;     
literal SJC$_DISABLE_AUTOSTART = 40;    
literal SJC$_SHUTDOWN_NODE = 41;        
literal SJC$_RESERVED_FUNC_42 = 42;     
literal SJC$_RESERVED_FUNC_43 = 43;     
literal SJC$_RESERVED_FUNC_44 = 44;     
literal SJC$_RESERVED_FUNC_45 = 45;     
literal SJC$_RESERVED_FUNC_46 = 46;     
literal SJC$_RESERVED_FUNC_47 = 47;     
literal SJC$_RESERVED_FUNC_48 = 48;     
literal SJC$_RESERVED_FUNC_49 = 49;     
literal SJC$_RESERVED_FUNC_50 = 50;     
literal SJC$K_MIN_FUNC = 1;             
literal SJC$K_MAX_FUNC = 50;            

literal SJC$_ACCOUNTING_MESSAGE = 1;    
literal SJC$_ACCOUNTING_TYPES = 2;      
literal SJC$_AFTER_TIME = 3;            
literal SJC$_NO_AFTER_TIME = 4;
literal SJC$_ALIGNMENT_MASK = 5;        
literal SJC$_ALIGNMENT_PAGES = 6;       
literal SJC$_BASE_PRIORITY = 7;         
literal SJC$_BATCH = 8;                 
literal SJC$_NO_BATCH = 9;
literal SJC$_BATCH_INPUT = 10;          
literal SJC$_BATCH_OUTPUT = 11;         
literal SJC$_CHARACTERISTIC_NAME = 12;  
literal SJC$_CHARACTERISTIC_NUMBER = 13;
literal SJC$_NO_CHARACTERISTICS = 14;
literal SJC$_CHECKPOINT_DATA = 15;      
literal SJC$_NO_CHECKPOINT_DATA = 16;
literal SJC$_CLI = 17;                  
literal SJC$_NO_CLI = 18;
literal SJC$_CPU_DEFAULT = 19;          
literal SJC$_NO_CPU_DEFAULT = 20;
literal SJC$_CPU_LIMIT = 21;            
literal SJC$_NO_CPU_LIMIT = 22;
literal SJC$_CREATE_START = 23;         
literal SJC$_DELETE_FILE = 24;          
literal SJC$_NO_DELETE_FILE = 25;
literal SJC$_DESTINATION_QUEUE = 26;    
literal SJC$_DEVICE_NAME = 27;          
literal SJC$_DOUBLE_SPACE = 28;         
literal SJC$_NO_DOUBLE_SPACE = 29;
literal SJC$_ENTRY_NUMBER = 30;         
literal SJC$_ENTRY_NUMBER_OUTPUT = 31;
literal SJC$_FILE_BURST = 32;           
literal SJC$_FILE_BURST_ONE = 33;
literal SJC$_NO_FILE_BURST = 34;
literal SJC$_FILE_COPIES = 35;          
literal SJC$_FILE_FLAG = 36;            
literal SJC$_FILE_FLAG_ONE = 37;
literal SJC$_NO_FILE_FLAG = 38;
literal SJC$_FILE_IDENTIFICATION = 39;  
literal SJC$_FILE_SETUP_MODULES = 40;   
literal SJC$_NO_FILE_SETUP_MODULES = 41;
literal SJC$_FILE_SPECIFICATION = 42;   
literal SJC$_FILE_TRAILER = 43;         
literal SJC$_FILE_TRAILER_ONE = 44;
literal SJC$_NO_FILE_TRAILER = 45;
literal SJC$_FIRST_PAGE = 46;           
literal SJC$_NO_FIRST_PAGE = 47;
literal SJC$_FORM_DESCRIPTION = 48;     
literal SJC$_FORM_LENGTH = 49;          
literal SJC$_FORM_MARGIN_BOTTOM = 50;   
literal SJC$_FORM_MARGIN_LEFT = 51;     
literal SJC$_FORM_MARGIN_RIGHT = 52;    
literal SJC$_FORM_MARGIN_TOP = 53;      
literal SJC$_FORM_NAME = 54;            
literal SJC$_FORM_NUMBER = 55;
literal SJC$_FORM_SETUP_MODULES = 56;   
literal SJC$_NO_FORM_SETUP_MODULES = 57;
literal SJC$_FORM_SHEET_FEED = 58;      
literal SJC$_NO_FORM_SHEET_FEED = 59;
literal SJC$_FORM_STOCK = 60;           
literal SJC$_FORM_TRUNCATE = 61;        
literal SJC$_NO_FORM_TRUNCATE = 62;
literal SJC$_FORM_WIDTH = 63;           
literal SJC$_FORM_WRAP = 64;            
literal SJC$_NO_FORM_WRAP = 65;
literal SJC$_GENERIC_QUEUE = 66;        
literal SJC$_NO_GENERIC_QUEUE = 67;
literal SJC$_GENERIC_SELECTION = 68;    
literal SJC$_NO_GENERIC_SELECTION = 69;
literal SJC$_GENERIC_TARGET = 70;       
literal SJC$_HOLD = 71;                 
literal SJC$_NO_HOLD = 72;
literal SJC$_JOB_BURST = 73;            
literal SJC$_NO_JOB_BURST = 74;
literal SJC$_JOB_COPIES = 75;           
literal SJC$_JOB_FLAG = 76;             
literal SJC$_NO_JOB_FLAG = 77;
literal SJC$_JOB_LIMIT = 78;            
literal SJC$_JOB_NAME = 79;             
literal SJC$_JOB_RESET_MODULES = 80;    
literal SJC$_NO_JOB_RESET_MODULES = 81;
literal SJC$_JOB_SIZE_MAXIMUM = 82;     
literal SJC$_NO_JOB_SIZE_MAXIMUM = 83;
literal SJC$_JOB_SIZE_MINIMUM = 84;     
literal SJC$_NO_JOB_SIZE_MINIMUM = 85;
literal SJC$_JOB_SIZE_SCHEDULING = 86;  
literal SJC$_NO_JOB_SIZE_SCHEDULING = 87;
literal SJC$_JOB_STATUS_OUTPUT = 88;    
literal SJC$_JOB_TRAILER = 89;          
literal SJC$_NO_JOB_TRAILER = 90;
literal SJC$_LAST_PAGE = 91;            
literal SJC$_NO_LAST_PAGE = 92;
literal SJC$_LIBRARY_SPECIFICATION = 93; 
literal SJC$_NO_LIBRARY_SPECIFICATION = 94;
literal SJC$_LOG_DELETE = 95;           
literal SJC$_NO_LOG_DELETE = 96;
literal SJC$_LOG_QUEUE = 97;            
literal SJC$_LOG_SPECIFICATION = 98;    
literal SJC$_NO_LOG_SPECIFICATION = 99;
literal SJC$_LOG_SPOOL = 100;           
literal SJC$_NO_LOG_SPOOL = 101;
literal SJC$_LOWERCASE = 102;           
literal SJC$_NO_LOWERCASE = 103;
literal SJC$_NEW_VERSION = 104;         
literal SJC$_NEXT_JOB = 105;            
literal SJC$_NOTE = 106;                
literal SJC$_NO_NOTE = 107;
literal SJC$_NOTIFY = 108;              
literal SJC$_NO_NOTIFY = 109;           
literal SJC$_OPERATOR_REQUEST = 110;    
literal SJC$_NO_OPERATOR_REQUEST = 111;
literal SJC$_OWNER_UIC = 112;           
literal SJC$_PAGE_HEADER = 113;         
literal SJC$_NO_PAGE_HEADER = 114;
literal SJC$_PAGE_SETUP_MODULES = 115;  
literal SJC$_NO_PAGE_SETUP_MODULES = 116;
literal SJC$_PAGINATE = 117;            
literal SJC$_NO_PAGINATE = 118;
literal SJC$_PARAMETER_1 = 119;         
literal SJC$_PARAMETER_2 = 120;
literal SJC$_PARAMETER_3 = 121;
literal SJC$_PARAMETER_4 = 122;
literal SJC$_PARAMETER_5 = 123;
literal SJC$_PARAMETER_6 = 124;
literal SJC$_PARAMETER_7 = 125;
literal SJC$_PARAMETER_8 = 126;
literal SJC$_NO_PARAMETERS = 127;
literal SJC$_PASSALL = 128;             
literal SJC$_NO_PASSALL = 129;
literal SJC$_PRIORITY = 130;            
literal SJC$_PROCESSOR = 131;           
literal SJC$_NO_PROCESSOR = 132;
literal SJC$_PROTECTION = 133;          
literal SJC$_QUEUE = 134;               
literal SJC$_QUEUE_FILE_SPECIFICATION = 135; 
literal SJC$_RELATIVE_PAGE = 136;       
literal SJC$_REQUEUE = 137;             
literal SJC$_RESTART = 138;             
literal SJC$_NO_RESTART = 139;
literal SJC$_RETAIN_ALL_JOBS = 140;     
literal SJC$_RETAIN_ERROR_JOBS = 141;
literal SJC$_NO_RETAIN_JOBS = 142;
literal SJC$_SCSNODE_NAME = 143;        
literal SJC$_SEARCH_STRING = 144;       
literal SJC$_SWAP = 145;                
literal SJC$_NO_SWAP = 146;
literal SJC$_TERMINAL = 147;            
literal SJC$_NO_TERMINAL = 148;
literal SJC$_TOP_OF_FILE = 149;         
literal SJC$_USER_IDENTIFICATION = 150; 
literal SJC$_WSDEFAULT = 151;           
literal SJC$_NO_WSDEFAULT = 152;
literal SJC$_WSEXTENT = 153;            
literal SJC$_NO_WSEXTENT = 154;
literal SJC$_WSQUOTA = 155;             
literal SJC$_NO_WSQUOTA = 156;
literal SJC$_ACCOUNT_NAME = 157;        
literal SJC$_UIC = 158;                 
literal SJC$_USERNAME = 159;            
literal SJC$_BUFFER_COUNT = 160;        
literal SJC$_EXTEND_QUANTITY = 161;     
literal SJC$_RECORD_BLOCKING = 162;     
literal SJC$_NO_RECORD_BLOCKING = 163;
literal SJC$_QUEMAN_RESTART = 164;      
literal SJC$_NO_QUEMAN_RESTART = 165;
literal SJC$_DEFAULT_FORM_NAME = 166;   
literal SJC$_DEFAULT_FORM_NUMBER = 167; 
literal SJC$_SECURITY_CLASSIFICATION = 168; 
literal SJC$_QUEUE_SUPPORT = 169;       
literal SJC$_JOB_COMPLETION_STATUS = 170; 
literal SJC$_DIAGNOSTIC_BUFFER_OUTPUT = 171; 
literal SJC$_OPEN_QUEUE = 172;          
literal SJC$_CLOSE_QUEUE = 173;         
literal SJC$_SERVER = 174;              
literal SJC$_PRINTER = 175;             
literal SJC$_UPDATE_ORB = 176;          
literal SJC$_NO_QUEUE_DESCRIPTION = 177; 
literal SJC$_JOB_RETAIN = 178;          
literal SJC$_JOB_ERROR_RETAIN = 179;    
literal SJC$_JOB_DEFAULT_RETAIN = 180;  
literal SJC$_NOTIFY_ON_INTERRUPT = 181; 
literal SJC$_NO_RAD = 182;              
literal SJC$_ACCEPT_ALL_ATTRIBUTES = 183; 
literal SJC$_DIAGNOSTIC_FLAGS = 184;    
literal SJC$_QUEUE_DESCRIPTION = 185;   
literal SJC$_CHECKPOINT_FREQUENCY = 186; 
literal SJC$_DISPLAY_USERNAME = 187;    
literal SJC$_FILE_NUMBER = 188;         
literal SJC$_FILE_ATTRIBUTE = 189;      
literal SJC$_JOB_ATTRIBUTE = 190;       
literal SJC$_QUEUE_ATTRIBUTE = 191;     
literal SJC$_REMOVE_ATTRIBUTE = 192;    
literal SJC$_QUEUE_MANAGER_NAME = 193;  
literal SJC$_QUEUE_MANAGER_NODES = 194; 
literal SJC$_AUTOSTART_ON = 195;        
literal SJC$_RESERVED_OUTPUT_196 = 196; 
literal SJC$_RESERVED_OUTPUT_197 = 197; 
literal SJC$_RESERVED_OUTPUT_198 = 198; 
literal SJC$_RESERVED_OUTPUT_199 = 199; 
literal SJC$_SET_CONDITION_VECTOR = 200; 
literal SJC$_NOTIFY_MESSAGE = 201;      
literal SJC$_DEFINE_FILE_ATTRIBUTES = 202; 
literal SJC$_DEFINE_JOB_ATTRIBUTES = 203; 
literal SJC$_DEFINE_QUEUE_ATTRIBUTES = 204; 
literal SJC$_AGENT_PROFILE = 205;       
literal SJC$_ADD_QUEUE_MANAGER = 206;   
literal SJC$_OUTSTANDING_JOBS = 207;    
literal SJC$_NO_INITIAL_FF = 208;       
literal SJC$_NO_NO_INITIAL_FF = 209;
literal SJC$_DELETE_FILE_ALWAYS = 210;  
literal SJC$_NO_DELETE_FILE_ALWAYS = 211;
literal SJC$_RESERVED_BOOLEAN_212 = 212; 
literal SJC$_RESERVED_BOOLEAN_213 = 213; 
literal SJC$_RESERVED_BOOLEAN_214 = 214; 
literal SJC$_RESERVED_BOOLEAN_215 = 215; 
literal SJC$_RESERVED_BOOLEAN_216 = 216; 
literal SJC$_RESERVED_BOOLEAN_217 = 217; 
literal SJC$_RESERVED_BOOLEAN_218 = 218; 
literal SJC$_RESERVED_BOOLEAN_219 = 219; 
literal SJC$_RESERVED_BOOLEAN_220 = 220; 
literal SJC$_RESERVED_BOOLEAN_221 = 221; 
literal SJC$_RESERVED_BOOLEAN_222 = 222; 
literal SJC$_RESERVED_BOOLEAN_223 = 223; 
literal SJC$_RESERVED_BOOLEAN_224 = 224; 
literal SJC$_RESERVED_BOOLEAN_225 = 225; 
literal SJC$_RESERVED_BOOLEAN_226 = 226; 
literal SJC$_RESERVED_BOOLEAN_227 = 227; 
literal SJC$_RESERVED_BOOLEAN_228 = 228; 
literal SJC$_RESERVED_BOOLEAN_229 = 229; 
literal SJC$_RESERVED_BOOLEAN_230 = 230; 
literal SJC$_RESERVED_BOOLEAN_231 = 231; 
literal SJC$_RESERVED_BOOLEAN_232 = 232; 
literal SJC$_RESERVED_BOOLEAN_233 = 233; 
literal SJC$_RESERVED_BOOLEAN_234 = 234; 
literal SJC$_JOB_RETAIN_TIME = 235;     
literal SJC$_MANAGER_ATTRIBUTE = 236;   
literal SJC$_RAD = 237;                 
literal SJC$_RESERVED_INPUT_238 = 238;  
literal SJC$_RESERVED_INPUT_239 = 239;  
literal SJC$_RESERVED_INPUT_240 = 240;  
literal SJC$_RESERVED_INPUT_241 = 241;  
literal SJC$_RESERVED_INPUT_242 = 242;  
literal SJC$_RESERVED_INPUT_243 = 243;  
literal SJC$_RESERVED_INPUT_244 = 244;  
literal SJC$_RESERVED_INPUT_245 = 245;  
literal SJC$_RESERVED_INPUT_246 = 246;  
literal SJC$_RESERVED_INPUT_247 = 247;  
literal SJC$_RESERVED_INPUT_248 = 248;  
literal SJC$_RESERVED_INPUT_249 = 249;  
literal SJC$_RESERVED_INPUT_250 = 250;  
literal SJC$_RESERVED_OUTPUT_251 = 251; 
literal SJC$_RESERVED_OUTPUT_252 = 252; 
literal SJC$_RESERVED_OUTPUT_253 = 253; 
literal SJC$_RESERVED_OUTPUT_254 = 254; 
literal SJC$_RESERVED_OUTPUT_255 = 255; 
literal SJC$K_MIN_ITEM = 1;             
literal SJC$K_MAX_ITEM = 255;           
literal SJC$_CHARGE_CODE = 157;         
literal SJC$_RESERVED_INPUT_187 = 187;  
literal SJC$_QUEUE_DIRECTORY = 135;
literal SJC$_SERVICE_INPUT = 10;
literal SJC$_SERVICE_OUTPUT = 11;

literal SJC$M_ACCT_PROCESS = %X'1';
literal SJC$M_ACCT_IMAGE = %X'2';
literal SJC$M_ACCT_INTERACTIVE = %X'4';
literal SJC$M_ACCT_LOGIN_FAILURE = %X'8';
literal SJC$M_ACCT_SUBPROCESS = %X'10';
literal SJC$M_ACCT_DETACHED = %X'20';
literal SJC$M_ACCT_BATCH = %X'40';
literal SJC$M_ACCT_NETWORK = %X'80';
literal SJC$M_ACCT_PRINT = %X'100';
literal SJC$M_ACCT_MESSAGE = %X'200';
literal SJC$M_ACCT_ACM_FUNC = %X'400';
literal SJC$M_ACCT_ACM_SYS = %X'800';
literal SJC$M_ACCT_CCAENAB = %X'1000';
literal SJC$M_ACCT_CCVENAB = %X'2000';
literal SJC$S_ACCOUNTING_TYPES = 4;
macro SJC$V_ACCT_PROCESS = 0,0,1,0 %;   
macro SJC$V_ACCT_IMAGE = 0,1,1,0 %;     
macro SJC$V_ACCT_INTERACTIVE = 0,2,1,0 %; 
macro SJC$V_ACCT_LOGIN_FAILURE = 0,3,1,0 %; 
macro SJC$V_ACCT_SUBPROCESS = 0,4,1,0 %; 
macro SJC$V_ACCT_DETACHED = 0,5,1,0 %;  
macro SJC$V_ACCT_BATCH = 0,6,1,0 %;     
macro SJC$V_ACCT_NETWORK = 0,7,1,0 %;   
macro SJC$V_ACCT_PRINT = 0,8,1,0 %;     
macro SJC$V_ACCT_MESSAGE = 0,9,1,0 %;   
macro SJC$V_ACCT_ACM_FUNC = 0,10,1,0 %; 
macro SJC$V_ACCT_ACM_SYS = 0,11,1,0 %;  
macro SJC$V_ACCT_CCAENAB = 0,12,1,0 %;  
macro SJC$V_ACCT_CCVENAB = 0,13,1,0 %;  
macro SJC$V_ACCT_UNUSED = 0,14,18,0 %;
literal SJC$S_ACCT_UNUSED = 18;

literal SJC$M_DIAG_COPY_QF = %X'1';
literal SJC$M_DIAG_CREATE_MF = %X'2';
literal SJC$M_DIAG_CLOSE_MF = %X'4';
literal SJC$M_DIAG_OPEN_MF = %X'8';
literal SJC$M_DIAG_CLEAR_FLAGS = %X'10';
literal SJC$M_DIAG_LOG_ALL_TRANS = %X'20';
literal SJC$M_DIAG_JOURNAL_PUTS = %X'40';
literal SJC$M_DIAG_DUMP_DIAG_BUFFER = %X'80';
literal SJC$M_DIAG_INIT_DIAG_BUFFER = %X'100';
literal SJC$S_DIAGNOSTIC_FLAGS = 4;
macro SJC$V_DIAG_COPY_QF = 0,0,1,0 %;   
macro SJC$V_DIAG_CREATE_MF = 0,1,1,0 %; 
macro SJC$V_DIAG_CLOSE_MF = 0,2,1,0 %;  
macro SJC$V_DIAG_OPEN_MF = 0,3,1,0 %;   
macro SJC$V_DIAG_CLEAR_FLAGS = 0,4,1,0 %; 
macro SJC$V_DIAG_LOG_ALL_TRANS = 0,5,1,0 %; 
macro SJC$V_DIAG_JOURNAL_PUTS = 0,6,1,0 %; 
macro SJC$V_DIAG_DUMP_DIAG_BUFFER = 0,7,1,0 %; 
macro SJC$V_DIAG_INIT_DIAG_BUFFER = 0,8,1,0 %; 
macro SJC$V_DIAG_UNUSED = 0,9,23,0 %;
literal SJC$S_DIAG_UNUSED = 23;
 

literal SMR$K_INITIAL = 0;              
literal SMR$K_DELETE = 1;               
literal SMR$K_START = 2;                
literal SMR$K_PAUSE = 3;                
literal SMR$K_MERGE = 4;                
literal SMR$K_REDIRECT = 5;             
literal SMR$K_JUSTIFY = 6;              
literal SMR$K_STOP = 7;                 
literal SMR$K_ENTER = 8;                
literal SMR$K_CREJOB = 9;               
literal SMR$K_ADDFIL = 10;              
literal SMR$K_CLSJOB = 11;              
literal SMR$K_RMVJOB = 12;              
literal SMR$K_ALTER = 13;               
literal SMR$K_ABORT = 14;               
literal SMR$K_RELEASE = 15;             
literal SMR$K_DETINIT = 16;             
literal SMR$K_SYNCJOB = 17;             
literal SMR$K_ASKQNAM = 18;             

literal SMO$K_DELETE = 1;               
literal SMO$K_BRSTPAG = 2;              
literal SMO$K_NOBRSTPAG = 3;            
literal SMO$K_FLAGPAG = 4;              
literal SMO$K_NOFLAGPAG = 5;            
literal SMO$K_PAGHDR = 6;               
literal SMO$K_DOUBLE = 7;               
literal SMO$K_NOFEED = 8;               
literal SMO$K_PAGCNT = 9;               
literal SMO$K_COPIES = 10;              
literal SMO$K_FILESIZ = 11;             
literal SMO$K_DESTQUE = 12;             
literal SMO$K_RLSTIM = 32;              
literal SMO$K_HOLD = 33;                
literal SMO$K_JOBPRI = 34;              
literal SMO$K_JOBCOPY = 35;             
literal SMO$K_FORMTYPE = 36;            
literal SMO$K_LOWER = 37;               
literal SMO$K_PARAMS = 38;              
literal SMO$K_JOBNAME = 39;             
literal SMO$K_NOLOWER = 40;             
literal SMO$K_CPULIM = 41;              
literal SMO$K_NOCPULM = 42;             
literal SMO$K_WSQUOTA = 43;             
literal SMO$K_NOWSQUO = 44;             
literal SMO$K_WSDEFLT = 45;             
literal SMO$K_NOWSDFT = 46;             
literal SMO$K_DQCHAR = 47;              
literal SMO$K_LOGFNAM = 48;             
literal SMO$K_LOGQNAM = 49;             
literal SMO$K_KEEPLOG = 50;             
literal SMO$K_NOSPOOL = 51;             
literal SMO$K_NOKEEPLOG = 52;           
literal SMO$K_NOLOG = 53;               
literal SMO$K_NOTIFY = 54;              
literal SMO$K_NONOTFY = 55;             
literal SMO$K_WSEXTNT = 56;             
literal SMO$K_NOWSEXTNT = 57;           
literal SMO$K_CURFORM = 64;             
literal SMO$K_GENPRT = 65;              
literal SMO$K_NOGENPRT = 66;            
literal SMO$K_DETJOB = 67;              
literal SMO$K_GENDEV = 68;              
literal SMO$K_NOGENDEV = 69;            
literal SMO$K_DEFBRST = 70;             
literal SMO$K_NODEFBRST = 71;           
literal SMO$K_DEFFLAG = 72;             
literal SMO$K_NODEFFLAG = 73;           
literal SMO$K_TRMDEV = 74;              
literal SMO$K_NOTRMDEV = 75;            
literal SMO$K_JOBLIM = 76;              
literal SMO$K_INIPRI = 77;              
literal SMO$K_DISWAP = 78;              
literal SMO$K_MCPULM = 79;              
literal SMO$K_NOMCPULM = 80;            
literal SMO$K_DCPULM = 81;              
literal SMO$K_NODCPULM = 82;            
literal SMO$K_WSQUTA = 83;              
literal SMO$K_NOWSQUTA = 84;            
literal SMO$K_WSDFLT = 85;              
literal SMO$K_NOWSDFLT = 86;            
literal SMO$K_CURDQCHAR = 87;           
literal SMO$K_SMBNAME = 88;             
literal SMO$K_WSXTANT = 89;             
literal SMO$K_NOWSXTNT = 90;            
literal SMO$K_NODISWAP = 91;            
literal SMO$K_NEXTJOB = 96;             
literal SMO$K_TOPOFILE = 97;            
literal SMO$K_SPCCNT = 98;              
literal SMO$K_REQUEUE = 112;            
literal SMO$K_REQDEST = 113;            
literal SMO$K_REQPRIO = 114;            
 

literal SNAPEVT$_SNAPSHOT = 1;          
literal SNAPEVT$_CLUPEND = 2;           
literal SNAPEVT$_RESTART = 3;           
literal SNAPEVT$_CLU_RESTART = 4;       
literal SNAPEVT$_ABORT = 5;             
literal SNAPEVT$_CLUEXIT = 6;           
literal SNAPEVT$_ROLLOUT = 7;           
literal SNAPEVT$_ROLLIN = 8;            
literal SNAPEVT$C_SNAPSHOT = 1;
literal SNAPEVT$C_RESTART = 3;
literal SNAPEVT$C_ABORT = 5;
literal SNAPEVT$S_SNAPEVTCODE = 2;
macro SNAPEVT$W_EVENT = 0,0,16,0 %;
 
literal STENV$K_AUTO_ACTION = 1;
literal STENV$K_BOOT_DEV = 2;
literal STENV$K_BOOTDEF_DEV = 3;
literal STENV$K_BOOTED_DEV = 4;
literal STENV$K_BOOT_FILE = 5;
literal STENV$K_BOOTED_FILE = 6;
literal STENV$K_BOOT_OSFLAGS = 7;
literal STENV$K_BOOTED_OSFLAGS = 8;
literal STENV$K_BOOT_RESET = 9;
literal STENV$K_DUMP_DEV = 10;
literal STENV$K_ENABLE_AUDIT = 11;
literal STENV$K_LICENSE = 12;
literal STENV$K_CHAR_SET = 13;
literal STENV$K_LANGUAGE = 14;
literal STENV$K_TTY_DEV = 15;
literal STENV$K_SYSROOT = 16;
literal STENV$K_BTFLAGS = 17;
literal STENV$K_FRU_EEROM = 18;
literal STENVDEF$S_ItemType = 24;
macro STENVDEF$L_ITEM_CODE = 0,0,32,0 %;
macro STENVDEF$L_BUF_LEN = 4,0,32,0 %;
macro STENVDEF$Q_BUF_ADDR = 8,0,0,1 %;
literal STENVDEF$S_BUF_ADDR = 8;
macro STENVDEF$Q_RET_ADDR = 16,0,0,1 %;
literal STENVDEF$S_RET_ADDR = 8;

literal STENVDEF$_K_FREE_FORM = 0;
literal STENVDEF$_K_SDD_LOG = 25;
 

literal STS$M_SEVERITY = %X'7';
literal STS$M_COND_ID = %X'FFFFFF8';
literal STS$M_CONTROL = %X'F0000000';
literal STS$M_SUCCESS = %X'1';
literal STS$M_MSG_NO = %X'FFF8';
literal STS$M_CODE = %X'7FF8';
literal STS$M_FAC_SP = %X'8000';
literal STS$M_CUST_DEF = %X'8000000';
literal STS$M_INHIB_MSG = %X'10000000';
literal STS$M_FAC_NO = %X'FFF0000';
literal STS$K_WARNING = 0;              
literal STS$K_SUCCESS = 1;              
literal STS$K_ERROR = 2;                
literal STS$K_INFO = 3;                 
literal STS$K_SEVERE = 4;               
literal STS$S_STSDEF = 4;
macro STS$V_SEVERITY = 0,0,3,0 %;
literal STS$S_SEVERITY = 3;             
macro STS$V_COND_ID = 0,3,25,0 %;
literal STS$S_COND_ID = 25;             
macro STS$V_CONTROL = 0,28,4,0 %;
literal STS$S_CONTROL = 4;              
macro STS$V_SUCCESS = 0,0,1,0 %;        
macro STS$V_MSG_NO = 0,3,13,0 %;
literal STS$S_MSG_NO = 13;              
macro STS$V_CODE = 0,3,12,0 %;
literal STS$S_CODE = 12;                
macro STS$V_FAC_SP = 0,15,1,0 %;        
macro STS$V_CUST_DEF = 0,27,1,0 %;      
macro STS$V_INHIB_MSG = 0,28,1,0 %;     
macro STS$V_FAC_NO = 0,16,12,0 %;
literal STS$S_FAC_NO = 12;              

 

literal SYI$C_EXETYPE = 1;              
literal SYI$C_FLDTYPE = 2;              
literal SYI$C_RSDTYPE = 3;              

literal SYI$_VERSION = 4096;            
literal SYI$_SID = 4097;                
literal SYI$_PFCDEFAULT = 4098;         
literal SYI$_PAGTBLPFC = 4099;          
literal SYI$_SYSPFC = 4100;             
literal SYI$_KFILSTCNT = 4101;          
literal SYI$_GBLSECTIONS = 4102;        
literal SYI$_GBLPAGES = 4103;           
literal SYI$_GBLPAGFIL = 4104;          
literal SYI$_MAXPROCESSCNT = 4105;      
literal SYI$_PIXSCAN = 4106;            
literal SYI$_PROCSECTCNT = 4107;        
literal SYI$_MINWSCNT = 4108;           
literal SYI$_PAGFILCNT = 4109;          
literal SYI$_SWPFILCNT = 4110;          
literal SYI$_SYSMWCNT = 4111;           
literal SYI$_INTSTKPAGES = 4112;        
literal SYI$_DLCKEXTRASTK = 4113;       
literal SYI$_BALSETCNT = 4114;          
literal SYI$_IRPCOUNT = 4115;           
literal SYI$_IRPCOUNTV = 4116;          
literal SYI$_WSMAX = 4117;              
literal SYI$_NPAGEDYN = 4118;           
literal SYI$_NPAGEVIR = 4119;           
literal SYI$_PAGEDYN = 4120;            
literal SYI$_VIRTUALPAGECNT = 4121;     
literal SYI$_SPTREQ = 4122;             
literal SYI$_EXUSRSTK = 4123;           
literal SYI$_LRPCOUNT = 4124;           
literal SYI$_LRPCOUNTV = 4125;          
literal SYI$_LRPSIZE = 4126;            
literal SYI$_LRPMIN = 4127;             
literal SYI$_SRPCOUNT = 4128;           
literal SYI$_SRPCOUNTV = 4129;          
literal SYI$_SRPSIZE = 4130;            
literal SYI$_SRPMIN = 4131;             
literal SYI$_CHANNELCNT = 4132;         
literal SYI$_PIOPAGES = 4133;           
literal SYI$_CTLPAGES = 4134;           
literal SYI$_CTLIMGLIM = 4135;          
literal SYI$_IMGIOCNT = 4136;           
literal SYI$_QUANTUM = 4137;            
literal SYI$_MPW_WRTCLUSTER = 4138;     
literal SYI$_MPW_HILIMIT = 4139;        
literal SYI$_MPW_LOLIMIT = 4140;        
literal SYI$_MPW_PRIO = 4141;           
literal SYI$_SWP_PRIO = 4142;           
literal SYI$_MPW_THRESH = 4143;         
literal SYI$_MPW_WAITLIMIT = 4144;      
literal SYI$_TBSKIPWSL = 4145;          
literal SYI$_PHYSICALPAGES = 4146;      
literal SYI$_PFRATL = 4147;             
literal SYI$_PFRATH = 4148;             
literal SYI$_PFRATL_SYS = 4149;         
literal SYI$_WSINC = 4150;              
literal SYI$_WSDEC = 4151;              
literal SYI$_AWSMIN = 4152;             
literal SYI$_AWSTIME = 4153;            
literal SYI$_SWPRATE = 4154;            
literal SYI$_SWPOUTPGCNT = 4155;        
literal SYI$_SWPALLOCINC = 4156;        
literal SYI$_IOTA = 4157;               
literal SYI$_LONGWAIT = 4158;           
literal SYI$_SWPFAIL = 4159;            
literal SYI$_VMSD1 = 4160;              
literal SYI$_VMSD2 = 4161;              
literal SYI$_VMSD3 = 4162;              
literal SYI$_VMSD4 = 4163;              
literal SYI$_VMS5 = 4164;               
literal SYI$_VMS6 = 4165;               
literal SYI$_VMS7 = 4166;               
literal SYI$_VMS8 = 4167;               
literal SYI$_USERD1 = 4168;             
literal SYI$_USERD2 = 4169;             
literal SYI$_USER3 = 4170;              
literal SYI$_USER4 = 4171;              
literal SYI$_EXTRACPU = 4172;           
literal SYI$_MAXSYSGROUP = 4173;        
literal SYI$_MVTIMEOUT = 4174;          
literal SYI$_MAXBUF = 4175;             
literal SYI$_DEFMBXBUFQUO = 4176;       
literal SYI$_DEFMBXMXMSG = 4177;        
literal SYI$_DEFMBXNUMMSG = 4178;       
literal SYI$_FREELIM = 4179;            
literal SYI$_FREEGOAL = 4180;           
literal SYI$_GROWLIM = 4181;            
literal SYI$_BORROWLIM = 4182;          
literal SYI$_LOCKRETRY = 4183;          
literal SYI$_XFMAXRATE = 4184;          
literal SYI$_LAMAPREGS = 4185;          
literal SYI$_REALTIME_SPTS = 4186;      
literal SYI$_CLISYMTBL = 4187;          
literal SYI$_LOCKIDTBL = 4188;          
literal SYI$_RESHASHTBL = 4189;         
literal SYI$_DEADLOCK_WAIT = 4190;      
literal SYI$_SCSBUFFCNT = 4191;         
literal SYI$_SCSCONNCNT = 4192;         
literal SYI$_SCSRESPCNT = 4193;         
literal SYI$_SCSMAXDG = 4194;           
literal SYI$_SCSMAXMSG = 4195;          
literal SYI$_SCSFLOWCUSH = 4196;        
literal SYI$_SCSSYSTEMID = 4197;        
literal SYI$_SCSSYSTEMIDH = 4198;       
literal SYI$_SCSNODE = 4199;            
literal SYI$_PRCPOLINTERVAL = 4201;     
literal SYI$_PASTIMOUT = 4202;          
literal SYI$_PASTDGBUF = 4203;          
literal SYI$_PANUMPOLL = 4204;          
literal SYI$_PAPOLLINTERVAL = 4205;     
literal SYI$_PAPOOLINTERVAL = 4206;     
literal SYI$_TIMEPROMPTWAIT = 4207;     
literal SYI$_UDABURSTRATE = 4208;       
literal SYI$_LNMSHASHTBL = 4209;        
literal SYI$_LNMPHASHTBL = 4210;        
literal SYI$_TTY_SCANDELTA = 4211;      
literal SYI$_TTY_DIALTYPE = 4212;       
literal SYI$_TTY_SPEED = 4213;          
literal SYI$_TTY_RSPEED = 4214;         
literal SYI$_TTY_PARITY = 4215;         
literal SYI$_TTY_BUF = 4216;            
literal SYI$_TTY_DEFCHAR = 4217;        
literal SYI$_TTY_DEFCHAR2 = 4218;       
literal SYI$_TTY_TYPAHDSZ = 4219;       
literal SYI$_TTY_ALTYPAHD = 4220;       
literal SYI$_TTY_ALTALARM = 4221;       
literal SYI$_TTY_DMASIZE = 4222;        
literal SYI$_TTY_PROT = 4223;           
literal SYI$_TTY_OWNER = 4224;          
literal SYI$_TTY_CLASSNAME = 4225;      
literal SYI$_TTY_SILOTIME = 4226;       
literal SYI$_TTY_DEFPORT = 4227;        
literal SYI$_RMS_DFMBC = 4228;          
literal SYI$_RMS_DFMBFSDK = 4229;       
literal SYI$_RMS_DFMBFSMT = 4230;       
literal SYI$_RMS_DFMBFSUR = 4231;       
literal SYI$_RMS_DFMBFREL = 4232;       
literal SYI$_RMS_DFMBFIDX = 4233;       
literal SYI$_RMS_CONPOLICY = 4234;      
literal SYI$_RMS_PROLOGUE = 4235;       
literal SYI$_RMS_EXTEND_SIZE = 4236;    
literal SYI$_RMS_FILEPROT = 4237;       
literal SYI$_PQL_DASTLM = 4238;         
literal SYI$_PQL_MASTLM = 4239;         
literal SYI$_PQL_DBIOLM = 4240;         
literal SYI$_PQL_MBIOLM = 4241;         
literal SYI$_PQL_DBYTLM = 4242;         
literal SYI$_PQL_MBYTLM = 4243;         
literal SYI$_PQL_DCPULM = 4244;         
literal SYI$_PQL_MCPULM = 4245;         
literal SYI$_PQL_DDIOLM = 4246;         
literal SYI$_PQL_MDIOLM = 4247;         
literal SYI$_PQL_DFILLM = 4248;         
literal SYI$_PQL_MFILLM = 4249;         
literal SYI$_PQL_DPGFLQUOTA = 4250;     
literal SYI$_PQL_MPGFLQUOTA = 4251;     
literal SYI$_PQL_DPRCLM = 4252;         
literal SYI$_PQL_MPRCLM = 4253;         
literal SYI$_PQL_DTQELM = 4254;         
literal SYI$_PQL_MTQELM = 4255;         
literal SYI$_PQL_DWSDEFAULT = 4256;     
literal SYI$_PQL_MWSDEFAULT = 4257;     
literal SYI$_PQL_DWSQUOTA = 4258;       
literal SYI$_PQL_MWSQUOTA = 4259;       
literal SYI$_PQL_DWSEXTENT = 4260;      
literal SYI$_PQL_MWSEXTENT = 4261;      
literal SYI$_PQL_DENQLM = 4262;         
literal SYI$_PQL_MENQLM = 4263;         
literal SYI$_ACP_MAPCACHE = 4264;       
literal SYI$_ACP_HDRCACHE = 4265;       
literal SYI$_ACP_DIRCACHE = 4266;       
literal SYI$_ACP_WORKSET = 4267;        
literal SYI$_ACP_FIDCACHE = 4268;       
literal SYI$_ACP_EXTCACHE = 4269;       
literal SYI$_ACP_EXTLIMIT = 4270;       
literal SYI$_ACP_QUOCACHE = 4271;       
literal SYI$_ACP_SYSACC = 4272;         
literal SYI$_ACP_MAXREAD = 4273;        
literal SYI$_ACP_WINDOW = 4274;         
literal SYI$_ACP_WRITEBACK = 4275;      
literal SYI$_ACP_DATACHECK = 4276;      
literal SYI$_ACP_BASEPRIO = 4277;       
literal SYI$_ACP_SWAPFLGS = 4278;       
literal SYI$_DEFPRI = 4279;             
literal SYI$_IJOBLIM = 4280;            
literal SYI$_BJOBLIM = 4281;            
literal SYI$_NJOBLIM = 4282;            
literal SYI$_RJOBLIM = 4283;            
literal SYI$_QUORUM = 4284;             
literal SYI$_VOTES = 4285;              
literal SYI$_RECNXINTERVAL = 4286;      
literal SYI$_BOOTTIME = 4287;           
literal SYI$_LOCKIDTBL_MAX = 4288;      
literal SYI$_TAILORED = 4289;           
literal SYI$_STARTUP_P1 = 4290;         
literal SYI$_STARTUP_P2 = 4291;         
literal SYI$_STARTUP_P3 = 4292;
literal SYI$_STARTUP_P4 = 4293;
literal SYI$_STARTUP_P5 = 4294;
literal SYI$_STARTUP_P6 = 4295;
literal SYI$_STARTUP_P7 = 4296;
literal SYI$_STARTUP_P8 = 4297;
literal SYI$_CLUSTER_NODES = 4298;      
literal SYI$_CLUSTER_VOTES = 4299;      
literal SYI$_CLUSTER_QUORUM = 4300;     
literal SYI$_CLUSTER_FSYSID = 4301;     
literal SYI$_CLUSTER_FTIME = 4302;      
literal SYI$_CLUSTER_MEMBER = 4303;     
literal SYI$_NODE_CSID = 4304;          
literal SYI$_NODE_VOTES = 4305;         
literal SYI$_NODE_QUORUM = 4306;        
literal SYI$_NODE_SYSTEMID = 4307;      
literal SYI$_NODE_SWINCARN = 4308;      
literal SYI$_NODE_SWTYPE = 4309;        
literal SYI$_NODE_SWVERS = 4310;        
literal SYI$_NODE_HWTYPE = 4311;        
literal SYI$_NODE_HWVERS = 4312;        
literal SYI$_NODENAME = 4313;           
literal SYI$_ARCHFLAG = 4314;           
literal SYI$_SCS_EXISTS = 4315;         
literal SYI$_DISK_QUORUM = 4316;        
literal SYI$_XSID = 4317;               
literal SYI$_PAMAXPORT = 4320;          
literal SYI$_PASANITY = 4321;           
literal SYI$_DEFQUEPRI = 4322;          
literal SYI$_MAXQUEPRI = 4323;          
literal SYI$_QDSKINTERVAL = 4324;       
literal SYI$_ALLOCLASS = 4325;          
literal SYI$_LGI_RETRY_LIM = 4326;      
literal SYI$_LGI_RETRY_TMO = 4327;      
literal SYI$_LGI_BRK_LIM = 4328;        
literal SYI$_LGI_BRK_TMO = 4329;        
literal SYI$_LGI_HID_TIM = 4330;        
literal SYI$_LGI_PWD_TMO = 4331;        
literal SYI$_PQL_DJTQUOTA = 4332;       
literal SYI$_PQL_MJTQUOTA = 4333;       
literal SYI$_VAXCLUSTER = 4334;         
literal SYI$_LOCKDIRWT = 4335;          
literal SYI$_QDSKVOTES = 4336;          
literal SYI$_DORMANTWAIT = 4337;        
literal SYI$_PAGEFILE_PAGE = 4338;      
literal SYI$_SWAPFILE_PAGE = 4339;      
literal SYI$_PAGEFILE_FREE = 4340;      
literal SYI$_SWAPFILE_FREE = 4341;      
literal SYI$_TTY_TIMEOUT = 4342;        
literal SYI$_TTY_AUTOCHAR = 4343;       
literal SYI$_PANOPOLL = 4344;           
literal SYI$_PE1 = 4345;                
literal SYI$_PE2 = 4346;                
literal SYI$_PE3 = 4347;                
literal SYI$_PE4 = 4348;                
literal SYI$_PE5 = 4349;                
literal SYI$_PE6 = 4350;                
literal SYI$_RMS_GBLBUFQUO = 4351;      
literal SYI$_RMS_DFNBC = 4352;          
literal SYI$_ACP_DINDXCACHE = 4353;     
literal SYI$_MAXATTACHPRI = 4354;       
literal SYI$_SMP_CPUS = 4355;           
literal SYI$_SMP_CPUSH = 4356;          
literal SYI$_FALLBACK_MODE = 4357;      
literal SYI$_MPW_LOWAITLIMIT = 4358;    
literal SYI$_MPW_IOLIMIT = 4359;        
literal SYI$_S0_PAGING = 4360;          
literal SYI$_HW_MODEL = 4361;           
literal SYI$_HW_NAME = 4362;            
literal SYI$_SCH_CTLFLAGS = 4363;       
literal SYI$_NODE_EVOTES = 4364;        
literal SYI$_CLUSTER_EVOTES = 4365;     
literal SYI$_MULTIPROCESSING = 4366;    
literal SYI$_FREE_GBLPAGES = 4367;      
literal SYI$_CONTIG_GBLPAGES = 4368;    
literal SYI$_FREE_GBLSECTS = 4369;      
literal SYI$_EXPECTED_VOTES = 4370;     
literal SYI$_PU_OPTIONS = 4371;         
literal SYI$_WPTTE_SIZE = 4372;         
literal SYI$_WPRE_SIZE = 4373;          
literal SYI$_SMP_SANITY_CNT = 4374;     
literal SYI$_SMP_TICK_CNT = 4375;       
literal SYI$_QBUS_MULT_INTR = 4376;     
literal SYI$_SYSTEM_RIGHTS = 4377;      
literal SYI$_SMP_SPINWAIT = 4378;       
literal SYI$_SMP_LNGSPINWAIT = 4379;    
literal SYI$_TIME_CONTROL = 4380;       
literal SYI$_AVAILCPU_CNT = 4381;       
literal SYI$_ACTIVECPU_CNT = 4382;      
literal SYI$_MSCP_LOAD = 4386;          
literal SYI$_MSCP_SERVE_ALL = 4387;     
literal SYI$_POOLCHECK = 4388;          
literal SYI$_TAPE_MVTIMEOUT = 4389;     
literal SYI$_PSEUDOLOA = 4390;          
literal SYI$_MINCLASSPRI = 4391;        
literal SYI$_MAXCLASSPRI = 4392;        
literal SYI$_MINPRPRI = 4393;           
literal SYI$_AUTOCONFIG_ALGO = 4394;    
literal SYI$_ERRORLOGBUFFERS = 4395;    
literal SYI$_JOBCTLD = 4396;            
literal SYI$_WINDOW_SYSTEM = 4397;      
literal SYI$_MSCP_BUFFER = 4398;        
literal SYI$_MSCP_CREDITS = 4399;       
literal SYI$_BREAKPOINTS = 4400;        
literal SYI$_CLOCK_INTERVAL = 4401;     
literal SYI$_DUMPSTYLE = 4402;          
literal SYI$_NISCS_PORT_SERV = 4403;    
literal SYI$_RSRVPAGCNT = 4404;         
literal SYI$_VECTOR_PROC = 4405;        
literal SYI$_VECTOR_MARGIN = 4406;      
literal SYI$_AFFINITY_SKIP = 4407;      
literal SYI$_AFFINITY_TIME = 4408;      
literal SYI$_VECTOR_EMULATOR = 4409;    
literal SYI$_VP_MASK = 4410;            
literal SYI$_VP_NUMBER = 4411;          
literal SYI$_USED_GBLPAGCNT = 4412;     
literal SYI$_USED_GBLPAGMAX = 4413;     
literal SYI$_USED_GBLSECTCNT = 4414;    
literal SYI$_USED_GBLSECTMAX = 4415;    
literal SYI$_ERLBUFFERPAGES = 4416;     
literal SYI$_TAPE_ALLOCLASS = 4417;     
literal SYI$_PFRATH_SYS = 4418;         
literal SYI$_WSINC_SYS = 4419;          
literal SYI$_WSDEC_SYS = 4420;          
literal SYI$_AWSMIN_SYS = 4421;         
literal SYI$_AWSTIME_SYS = 4422;        
literal SYI$_BOOT_STYLE = 4423;         
literal SYI$_FT_FLAGS = 4424;           
literal SYI$_SHADOWING = 4425;          
literal SYI$_SHADOW_SYS_DISK = 4426;    
literal SYI$_SHADOW_SYS_UNIT = 4427;    
literal SYI$_SHADOW_MAX_COPY = 4428;    
literal SYI$_TIMVCFAIL = 4429;          
literal SYI$_PRIORITY_OFFSET = 4431;    
literal SYI$_VCC_FLAGS = 4432;          
literal SYI$_VCC_MAXSIZE = 4437;        
literal SYI$_MMG_CTLFLAGS = 4441;       
literal SYI$_NISCS_MAX_PKTSZ = 4443;    
literal SYI$_NISCS_LAN_OVRHD = 4444;    
literal SYI$_DECNET_VERSION = 4445;     
literal SYI$_TMSCP_LOAD = 4446;         
literal SYI$_LGI_CALLOUTS = 4447;       
literal SYI$_NET_CALLOUTS = 4448;       
literal SYI$_IEEE_ADDRESS = 4449;       
literal SYI$_IEEE_ADDRESSH = 4450;      
literal SYI$_SHADOW_MBR_TMO = 4451;     
literal SYI$_PAGE_SIZE = 4452;          
literal SYI$_ARCH_TYPE = 4453;          
literal SYI$_ARCH_NAME = 4454;          
literal SYI$_CRD_CONTROL = 4455;        
literal SYI$_SECURITY_POLICY = 4456;    
literal SYI$_DNVOSI1 = 4457;            
literal SYI$_MEMSIZE = 4459;            
literal SYI$_KSTACKPAGES = 4460;        
literal SYI$_PHYSICAL_MEMORY = 4461;    
literal SYI$_XQP_ALLOC_BLKS = 4462;     
literal SYI$_ZERO_LIST_HI = 4463;       
literal SYI$_CPUTYPE = 4464;            
literal SYI$_SYSTYPE = 4465;            
literal SYI$_ITB_ENTRIES = 4466;        
literal SYI$_GH_RSRVPGCNT = 4467;       
literal SYI$_DEF_PRIO_MIN = 4468;       
literal SYI$_DEF_PRIO_MAX = 4469;       
literal SYI$_PSXFIFO_PRIO_MIN = 4470;   
literal SYI$_PSXFIFO_PRIO_MAX = 4471;   
literal SYI$_PSXRR_PRIO_MIN = 4472;     
literal SYI$_PSXRR_PRIO_MAX = 4473;     
literal SYI$_XQPCTLD1 = 4474;           
literal SYI$_XQPCTL2 = 4475;            
literal SYI$_CPUCONF = 4477;            
literal SYI$_DECNET_FULLNAME = 4478;    
literal SYI$_XQPCTLD3 = 4479;           
literal SYI$_XQPCTL4 = 4480;            
literal SYI$_XQPCTLD5 = 4481;           
literal SYI$_XQPCTL6 = 4482;            
literal SYI$_XQPCTLD7 = 4483;           
literal SYI$_XQPCTL8 = 4484;            
literal SYI$_DBGTK_SCRATCH = 4485;      
literal SYI$_PALCODE_VERSION = 4486;    
literal SYI$_CONSOLE_VERSION = 4487;    
literal SYI$_GH_EXEC_CODE = 4488;       
literal SYI$_GH_EXEC_DATA = 4489;       
literal SYI$_GH_RES_CODE = 4490;        
literal SYI$_GH_RES_DATA = 4491;        
literal SYI$_IMGREG_PAGES = 4492;       
literal SYI$_SHADOW_SYS_TMO = 4493;     
literal SYI$_SHADOW_SYS_WAIT = 4494;    
literal SYI$_SHADOW_ENABLE = 4495;      
literal SYI$_SHADOW_SITE_O = 4496;      
literal SYI$_SYSTEM_CHECK = 4497;       
literal SYI$_PFN_COLOR_COUNT = 4498;    
literal SYI$_REAL_CPUTYPE = 4499;       
literal SYI$_SCSICLUSTER_P1 = 4500;     
literal SYI$_SCSICLUSTER_P2 = 4501;     
literal SYI$_SCSICLUSTER_P3 = 4502;     
literal SYI$_SCSICLUSTER_P4 = 4503;     
literal SYI$_FILE_CACHE = 4504;         
literal SYI$_TMSCP_SERVE_ALL = 4505;    
literal SYI$_DR_UNIT_BASE = 4506;       
literal SYI$_MC_SERVICES_P0 = 4507;     
literal SYI$_MC_SERVICES_P1 = 4508;     
literal SYI$_MC_SERVICES_P2 = 4509;     
literal SYI$_MC_SERVICES_P3 = 4510;     
literal SYI$_MC_SERVICES_P4 = 4511;     
literal SYI$_MC_SERVICES_P5 = 4512;     
literal SYI$_MC_SERVICES_P6 = 4513;     
literal SYI$_MC_SERVICES_P7 = 4514;     
literal SYI$_MC_SERVICES_P8 = 4515;     
literal SYI$_MC_SERVICES_P9 = 4516;     
literal SYI$_S2_SIZE = 4517;            
literal SYI$_PROCESS_SPACE_LIMIT = 4518; 
literal SYI$_PT_BASE = 4519;            
literal SYI$_SHARED_VA_PTES = 4520;     
literal SYI$_MULTITHREAD = 4521;        
literal SYI$_CWCREPRC_ENABLE = 4522;    
literal SYI$_MAXBOBMEM = 4523;          
literal SYI$_FAST_PATH = 4524;          
literal SYI$_IO_PREFER_CPUS = 4525;     
literal SYI$_ACTIVE_CPU_MASK = 4526;    
literal SYI$_AVAIL_CPU_MASK = 4527;     
literal SYI$_PRIMARY_CPUID = 4528;      
literal SYI$_MAX_CPUS = 4529;           
literal SYI$_CPUCAP_MASK = 4530;        
literal SYI$_FILE_CACHE_MIN = 4531;     
literal SYI$_FILE_CACHE_MAX = 4532;     
literal SYI$_F64CTL1 = 4533;            
literal SYI$_F64CTL2 = 4534;            
literal SYI$_F64CTLD3 = 4535;           
literal SYI$_F64CTLD4 = 4536;           
literal SYI$_DISABLE_UPCALLS = 4537;    
literal SYI$_DEVICE_NAMING = 4538;      
literal SYI$_AVAIL_PAGES = 4539;        
literal SYI$_PROC_SLOTS = 4540;         
literal SYI$_BAL_SLOTS = 4541;          
literal SYI$_NPAGED_POOL = 4542;        
literal SYI$_PAGED_POOL = 4543;         
literal SYI$_MAIN_MEMORY = 4544;        
literal SYI$_ARB_SUPPORT = 4545;        
literal SYI$_MAX_PFN = 4546;            
literal SYI$_PFN_MEMORY_MAP = 4547;     
literal SYI$_PMD_COUNT = 4548;          
literal SYI$_MSCP_CMD_TMO = 4549;       
literal SYI$_LAN_FLAGS = 4550;          
literal SYI$_RMS_DFLRL = 4551;          
literal SYI$_RMS_HEURISTIC = 4552;      
literal SYI$_NPAG_INTERVAL = 4553;      
literal SYI$_NPAG_GENTLE = 4554;        
literal SYI$_NPAG_AGGRESSIVE = 4555;    
literal SYI$_NPAG_BAP_MIN = 4556;       
literal SYI$_NPAG_BAP_MAX = 4557;       
literal SYI$_NPAG_BAP_MAX_PA = 4558;    
literal SYI$_NPAG_RING_SIZE = 4559;     
literal SYI$_CLUSTER_CREDITS = 4560;    
literal SYI$_PTES_PER_PAGE = 4561;      
literal SYI$_TEMPERATURE_VECTOR = 4562; 
literal SYI$_POWER_VECTOR = 4563;       
literal SYI$_FAN_VECTOR = 4564;         
literal SYI$_THERMAL_VECTOR = 4565;     
literal SYI$_MAXBOBS0S1 = 4566;         
literal SYI$_MAXBOBS2 = 4567;           
literal SYI$_VCC_MAX_CACHE = 4568;      
literal SYI$_VCC_MAX_IO_SIZE = 4569;    
literal SYI$_VCC_MAX_LOCKS = 4570;      
literal SYI$_VCC_READAHEAD = 4571;      
literal SYI$_VCC_WRITEBEHIND = 4572;    
literal SYI$_VCC_WRITE_DELAY = 4573;    
literal SYI$_SD_ALLOCLASS = 4574;       
literal SYI$_GALAXY = 4575;             
literal SYI$_NPAG_BAP_MIN_PA = 4576;    
literal SYI$_BAP_MIN_REQ_SZ = 4577;     
literal SYI$_BAP_MAX_REQ_SZ = 4578;     
literal SYI$_BAP_MIN_PA_REG = 4579;     
literal SYI$_BAP_MAX_PA_REG = 4580;     
literal SYI$_GALAXY_ID = 4581;          
literal SYI$_RMSD6 = 4582;              
literal SYI$_MPDEV_ENABLE_O = 4583;     
literal SYI$_MPDEV_REMOTE_O = 4584;     
literal SYI$_RMSD1 = 4585;              
literal SYI$_GALAXY_MEMBER = 4586;      
literal SYI$_GALAXY_PLATFORM = 4587;    
literal SYI$_PARTITION_ID = 4588;       
literal SYI$_COMMUNITY_ID = 4589;       
literal SYI$_GLX_INST_TMO = 4590;       
literal SYI$_SMCI_FLAGS = 4591;         
literal SYI$_SMCI_PORTS = 4592;         
literal SYI$_SERVED_IO = 4593;          
literal SYI$_GLX_SW_VERSION = 4594;     
literal SYI$_GLX_MAX_MEMBERS = 4595;    
literal SYI$_GLX_INCARNATION = 4596;    
literal SYI$_GLX_FORMATION = 4597;      
literal SYI$_GLX_TERMINATION = 4598;    
literal SYI$_GLX_MBR_NAME = 4599;       
literal SYI$_GLX_MBR_MEMBER = 4600;     
literal SYI$_GLX_MBR_INCARNATION = 4601; 
literal SYI$_GLX_MBR_JOINED = 4602;     
literal SYI$_MPDEV_LCRETRIES = 4603;    
literal SYI$_MPDEV_D1 = 4604;           
literal SYI$_CLUSTER_NTIME = 4605;      
literal SYI$_CLUSTER_NTIME_REF = 4606;  
literal SYI$_MPDEV_POLLER_O = 4607;     
literal SYI$_CPU_FAILOVER = 4608;       
literal SYI$_POTENTIAL_CPU_MASK = 4609; 
literal SYI$_POTENTIALCPU_CNT = 4610;   
literal SYI$_CPU_AUTOSTART = 4611;      
literal SYI$_FAST_PATH_PORTS = 4614;    
literal SYI$_GLX_SHM_REG = 4615;        
literal SYI$_RAD_SUPPORT = 4616;        
literal SYI$_NPAGECALC = 4617;          
literal SYI$_WBM_MSG_INT = 4618;        
literal SYI$_WBM_MSG_UPPER = 4619;      
literal SYI$_WBM_MSG_LOWER = 4620;      
literal SYI$_HP_ACTIVE_CPU_CNT = 4621;  
literal SYI$_HP_ACTIVE_SP_CNT = 4622;   
literal SYI$_HP_CONFIG_SP_CNT = 4623;   
literal SYI$_HP_CONFIG_SBB_CNT = 4624;  
literal SYI$_SHADOW_MAX_UNIT = 4625;    
literal SYI$_WBM_OPCOM_LVL = 4626;      
literal SYI$_AUTO_DLIGHT_SAV = 4627;    
literal SYI$_RAD_MAX_RADS = 4628;       
literal SYI$_RAD_CPUS = 4629;           
literal SYI$_RAD_MEMSIZE = 4630;        
literal SYI$_RAD_SHMEMSIZE = 4631;      
literal SYI$_GALAXY_SHMEMSIZE = 4632;   
literal SYI$_NPAGERAD = 4633;           
literal SYI$_SERIAL_NUMBER = 4634;      
literal SYI$_MPDEV_D2 = 4636;           
literal SYI$_MPDEV_D3 = 4637;           
literal SYI$_MPDEV_D4 = 4638;           
literal SYI$_MPDEV_AFB_INTVL = 4639;    
literal SYI$_MPW_STACKPAGES = 4640;     
literal SYI$_PRESENT_CPU_MASK = 4641;   
literal SYI$_PRESENTCPU_CNT = 4642;     
literal SYI$_POWERED_CPU_MASK = 4643;   
literal SYI$_POWEREDCPU_CNT = 4644;     
literal SYI$_RMSD7 = 4645;              
literal SYI$_RMS_SEQFILE_WBH = 4646;    
literal SYI$_DCL_CTLFLAGS = 4647;       
literal SYI$_DELPRC_EXIT = 4648;        
literal SYI$_PHYMEM_CONFIG = 4649;      
literal SYI$_KTK_D1 = 4650;             
literal SYI$_KTK_D2 = 4651;             
literal SYI$_KTK_D3 = 4652;             
literal SYI$_KTK_D4 = 4653;             
literal SYI$_KTK_D5 = 4654;             
literal SYI$_KTK_D6 = 4655;             
literal SYI$_KTK_D7 = 4656;             
literal SYI$_KTK_D8 = 4657;             
literal SYI$_KTK_D9 = 4658;             
literal SYI$_KTK_D10 = 4659;            
literal SYI$_KTK_D11 = 4660;            
literal SYI$_KTK_D12 = 4661;            
literal SYI$_MIN_CPU_FEATURE_MASK = 4662; 
literal SYI$_FIBRE_SCSI_RSV1 = 4663;    
literal SYI$_DEFUID = 4664;             
literal SYI$_DEFGID = 4665;             
literal SYI$_MVSUPMSG_INTVL = 4666;     
literal SYI$_MVSUPMSG_NUM = 4667;       
literal SYI$_SHADOW_SITE_ID = 4668;     
literal SYI$_RMSD2 = 4669;              
literal SYI$_RMSD3 = 4670;              
literal SYI$_RMSD4 = 4671;              
literal SYI$_RMSD5 = 4672;              
literal SYI$_TESTING123 = 4673;         
literal SYI$_VCC_PAGESIZE = 4674;       
literal SYI$_VCC_RSVD = 4675;           
literal SYI$_RSVD_IO_1 = 4676;          
literal SYI$_RSVD_IO_2 = 4677;          
literal SYI$_RSVD_CLU_1 = 4678;         
literal SYI$_RSVD_CLU_2 = 4679;         
literal SYI$_RSVD_EXEC_1 = 4680;        
literal SYI$_RSVD_EXEC_2 = 4681;        
literal SYI$_RSVD_SECUR_1 = 4682;       
literal SYI$_RSVD_SECUR_2 = 4683;       
literal SYI$_RSVD_LAN_1 = 4684;         
literal SYI$_RSVD_LAN_2 = 4685;         
literal SYI$_SHADOW_REC_DLY = 4686;     
literal SYI$_SHADOW_D1 = 4687;          
literal SYI$_SHADOW_D2 = 4688;          
literal SYI$_SHADOW_D3 = 4689;          
literal SYI$_SHADOW_D4 = 4690;          
literal SYI$_SHADOW_D5 = 4691;          
literal SYI$_WBM_D1 = 4692;             

literal SYI$_LASTEXE = 4693;            

literal SYI$_CPU = 8192;                
literal SYI$_BUGREBOOT = 8193;          
literal SYI$_CRDENABLE = 8194;          
literal SYI$_DUMPBUG = 8195;            
literal SYI$_BUGCHECKFATAL = 8196;      
literal SYI$_ACP_MULTIPLE = 8197;       
literal SYI$_NOAUTOCONFIG = 8198;       
literal SYI$_NOCLOCK = 8199;            
literal SYI$_NOCLUSTER = 8200;          
literal SYI$_POOLPAGING = 8201;         
literal SYI$_SBIERRENABLE = 8202;       
literal SYI$_SETTIME = 8203;            
literal SYI$_ACP_SHARE = 8204;          
literal SYI$_SYSPAGING = 8205;          
literal SYI$_UAFALTERNATE = 8206;       
literal SYI$_WRITABLESYS = 8207;        
literal SYI$_RESALLOC = 8208;           
literal SYI$_SSINHIBIT = 8209;          
literal SYI$_CONCEAL_DEVICES = 8210;    
literal SYI$_SAVEDUMP = 8211;           
literal SYI$_MOUNTMSG = 8212;           
literal SYI$_DISMOUMSG = 8213;          
literal SYI$_LOADERAPT = 8214;          
literal SYI$_LOADCHKPRT = 8215;         
literal SYI$_XCPU = 8216;               
literal SYI$_CJFLOAD = 8217;            
literal SYI$_CJFSYSRUJ = 8218;          
literal SYI$_NODE_AREA = 8219;          
literal SYI$_NODE_NUMBER = 8220;        
literal SYI$_CLASS_PROT = 8221;         
literal SYI$_CHARACTER_EMULATED = 8222; 
literal SYI$_DECIMAL_EMULATED = 8223;   
literal SYI$_D_FLOAT_EMULATED = 8224;   
literal SYI$_F_FLOAT_EMULATED = 8225;   
literal SYI$_G_FLOAT_EMULATED = 8226;   
literal SYI$_H_FLOAT_EMULATED = 8227;   
literal SYI$_LOADMTACCESS = 8228;       
literal SYI$_ACP_XQP_RES = 8229;        
literal SYI$_WRITESYSPARAMS = 8230;     
literal SYI$_LGI_BRK_TERM = 8231;       
literal SYI$_LGI_BRK_DISUSER = 8232;    
literal SYI$_ACP_REBLDSYSD = 8233;      
literal SYI$_WS_OPA0 = 8234;            
literal SYI$_NOPGFLSWP = 8235;          
literal SYI$_LOAD_SYS_IMAGES = 8237;    
literal SYI$_NISCS_CONV_BOOT = 8238;    
literal SYI$_NISCS_LOAD_PEA0 = 8239;    
literal SYI$_SA_APP = 8240;             
literal SYI$_LOAD_PWD_POLICY = 8241;    
literal SYI$_FT_ACTIVE = 8242;          
literal SYI$_WLKSYSDSK = 8244;          
literal SYI$_DBGTK_LOADED = 8245;       
literal SYI$_DAY_OVERRIDE = 8246;       
literal SYI$_DAY_SECONDARY = 8247;      
literal SYI$_CWLOGICALS = 8248;         
literal SYI$_POWEROFF = 8249;           
literal SYI$_MPDEV_ENABLE = 8250;       
literal SYI$_MPDEV_REMOTE = 8251;       
literal SYI$_MPDEV_POLLER = 8252;       
literal SYI$_LCKMGR_MODE = 8253;        
literal SYI$_LCKMGR_RSVD = 8254;        
literal SYI$_LCKMGR_CPUID = 8255;       
literal SYI$_PERSISTENT_RES = 8256;     
literal SYI$_SYSSER_LOGGING = 8257;     

literal SYI$_LASTFLD = 8258;            

literal SYI$C_SFWTYPE = 1;              
literal SYI$C_HDWTYPE = 2;              
literal SYI$C_LISTEND = 0;              
literal SYI$_OLDVERSION = 256;          
literal SYI$_LASTSFW = 257;             

literal SYI$_OLDCPU = 512;              
literal SYI$_OLDSID = 513;              
literal SYI$_LASTHDW = 514;             

literal SYI$K_ENV_VECTOR_LENGTH = 16;
literal SYI$K_ENV_STATUS_FAILED = 0;
literal SYI$K_ENV_STATUS_OK = 1;
literal SYI$K_ENV_STATUS_NOT_PRESENT = 255;
literal SYI$K_ENV_STATUS_UNKNOWN = 254;
literal SYI$K_ARCH_OTHER = 0;           
literal SYI$K_ARCH_VAX = 1;             
literal SYI$K_ARCH_ALPHA = 2;           
literal SYI$K_ARCH_IA64 = 3;            
 
literal SYSEVT$C_ALL_EVENTS = 1;        
literal SYSEVT$C_ADD_GALAXY_MEMBER = 2; 
literal SYSEVT$C_DEL_GALAXY_MEMBER = 3; 
literal SYSEVT$C_ADD_ACTIVE_CPU = 4;    
literal SYSEVT$C_DEL_ACTIVE_CPU = 5;    
literal SYSEVT$C_ADD_CONFIG_CPU = 6;    
literal SYSEVT$C_DEL_CONFIG_CPU = 7;    
literal SYSEVT$C_CONFIG_TREE = 8;       
literal SYSEVT$C_FASTPATH_CPUS = 9;     
literal SYSEVT$C_TDF_CHANGE = 10;       
literal SYSEVT$C_CPU_POWER = 11;        
literal SYSEVT$C_INDICTMENT = 12;       
literal SYSEVT$C_MAX_EVENT = 13;        
literal SYSEVT$C_NUM_EVENTS = 12;       
literal SYSEVT$K_NUM_EVENTS = 12;
literal SYSEVT$M_NOTIFY_ONCE = 0;       
literal SYSEVT$M_REPEAT_NOTIFY = 1;     
literal SYSEVT$V_REPEAT_NOTIFY = 0;     
 

literal TEB$M_ASTACT = %X'1';
literal TEB$M_ASTEN = %X'2';
literal TEB$S_TEB = 120;
macro TEB$PQ_FLINK = 0,0,0,1 %;
literal TEB$S_FLINK = 8;                
macro TEB$PQ_BLINK = 8,0,0,1 %;
literal TEB$S_BLINK = 8;                
macro TEB$W_SIZE = 16,0,16,0 %;         
macro TEB$B_TYPE = 18,0,8,0 %;          
macro TEB$b_reserved_1 = 19,0,8,0 %;    
macro TEB$b_reserved_2 = 20,0,32,0 %;
literal TEB$s_reserved_2 = 4;           
macro TEB$Q_SEQUENCE = 24,0,0,0 %;
literal TEB$S_SEQUENCE = 8;             
macro TEB$q_reserved_3 = 32,0,0,0 %;
literal TEB$s_reserved_3 = 16;          
macro TEB$PQ_PER_KT_AREA = 48,0,0,1 %;
literal TEB$S_PER_KT_AREA = 8;          
macro TEB$PQ_STACK_BASE = 56,0,0,1 %;
literal TEB$S_STACK_BASE = 8;           
macro TEB$PQ_STACK_RESERVE = 64,0,0,1 %;
literal TEB$S_STACK_RESERVE = 8;        
macro TEB$PQ_STACK_YELLOW = 72,0,0,1 %;
literal TEB$S_STACK_YELLOW = 8;         
macro TEB$PQ_STACK_GUARD = 80,0,0,1 %;
literal TEB$S_STACK_GUARD = 8;          
macro TEB$Q_STACK_SIZE = 88,0,0,0 %;
literal TEB$S_STACK_SIZE = 8;           
macro TEB$PQ_TSD_VALUES = 96,0,0,1 %;
literal TEB$S_TSD_VALUES = 8;           
macro TEB$L_TSD_COUNT = 104,0,32,0 %;   
macro TEB$L_CANCEL_FLAGS = 108,0,32,0 %; 
macro TEB$L_CANCEL_COUNT = 112,0,32,0 %; 
macro TEB$L_THREAD_FLAGS = 116,0,32,0 %; 
macro TEB$V_ASTACT = 116,0,1,0 %;       
macro TEB$V_ASTEN = 116,1,1,0 %;        
literal TEB$K_LENGTH = 120;             
literal TEB$C_LENGTH = 120;             
literal TEB$C_TSD_KEY_SSPI = 1;         
 

literal TPA$K_COUNT0 = 8;               
literal TPA$M_BLANKS = %X'1';
literal TPA$M_ABBREV = %X'2';
literal TPA$M_ABBRFM = %X'4';
literal TPA$M_AMBIG = %X'10000';
literal TPA$K_LENGTH0 = 56;             
literal TPA$C_LENGTH0 = 56;             
literal TPA$S_TPADEF = 56;
macro TPA$L_COUNT = 0,0,32,0 %;         
macro TPA$L_OPTIONS = 4,0,32,0 %;       
macro TPA$V_BLANKS = 4,0,1,0 %;         
macro TPA$V_ABBREV = 4,1,1,0 %;         
macro TPA$V_ABBRFM = 4,2,1,0 %;         
macro TPA$V_AMBIG = 4,16,1,0 %;         
macro TPA$B_MCOUNT = 7,0,8,0 %;         
macro TPA$L_STRINGCNT = 8,0,32,0 %;     
macro TPA$L_STRINGPTR = 16,0,64,1 %;    
macro TPA$L_TOKENCNT = 24,0,32,0 %;     
macro TPA$L_TOKENPTR = 32,0,64,1 %;     
macro TPA$R_NUMBER_OVERLAY = 24,0,0,0 %;
macro TPA$R_NUMBER_STRUCT = 24,0,0,0 %;
literal TPA$S_NUMBER_STRUCT = 8;
macro TPA$L_CHAR = 40,0,32,0 %;         
macro TPA$B_CHAR = 40,0,8,0 %;          
macro TPA$L_NUMBER = 44,0,32,0 %;       
macro TPA$Q_NUMBER = 40,0,64,0 %;
literal TPA$S_NUMBER = 8;               
macro TPA$L_PARAM = 48,0,32,0 %;        

literal TPA64$K_COUNT0 = -1;            
literal TPA64$M_BLANKS = %X'1';
literal TPA64$M_ABBREV = %X'2';
literal TPA64$M_ABBRFM = %X'4';
literal TPA64$M_AMBIG = %X'10000';
literal TPA64$K_LENGTH0 = 80;           
literal TPA64$C_LENGTH0 = 80;           
literal TPA64$S_TPA64DEF = 80;
macro TPA64$L_COUNT = 0,0,32,0 %;       
macro TPA64$L_OPTIONS = 4,0,32,0 %;     
macro TPA64$V_BLANKS = 4,0,1,0 %;       
macro TPA64$V_ABBREV = 4,1,1,0 %;       
macro TPA64$V_ABBRFM = 4,2,1,0 %;       
macro TPA64$V_AMBIG = 4,16,1,0 %;       
macro TPA64$B_MCOUNT = 7,0,8,0 %;       
macro TPA64$Q_STRINGDESC = 8,0,0,0 %;
literal TPA64$S_STRINGDESC = 8;         
macro TPA64$Q_STRINGCNT = 16,0,0,0 %;
literal TPA64$S_STRINGCNT = 8;          
macro TPA64$Q_STRINGPTR = 24,0,0,1 %;
literal TPA64S_STRINGPTR = 8;           
macro TPA64$Q_TOKENDESC = 32,0,0,0 %;
literal TPA64$S_TOKENDESC = 8;          
macro TPA64$Q_TOKENCNT = 40,0,0,0 %;
literal TPA64$S_TOKENCNT = 8;           
macro TPA64$Q_TOKENPTR = 48,0,0,1 %;
literal TPA64S_TOKENPTR = 8;            
macro TPA64$Q_CHAR = 56,0,0,0 %;
literal TPA64$S_CHAR = 8;               
macro TPA64$B_CHAR = 56,0,8,0 %;        
macro TPA64$Q_NUMBER = 64,0,0,0 %;
literal TPA64$S_NUMBER = 8;             
macro TPA64$Q_PARAM = 72,0,0,0 %;
literal TPA64$S_PARAM = 8;              
 

literal TPU$_CHAIN = -1;                
literal TPU$_ENDLIST = 0;               
literal TPU$_OPTIONS = 1;               
literal TPU$_FILENAME = 6;              
literal TPU$_OTHER_FILENAMES = 7;       
literal TPU$_FILEIO = 14;               
literal TPU$_CALLUSER = 15;             
literal TPU$_JOURNALFILE = 16;          
literal TPU$_SECTIONFILE = 19;          
literal TPU$_OUTPUTFILE = 20;           
literal TPU$_COMMANDFILE = 21;          
literal TPU$_DISPLAYFILE = 22;          
literal TPU$_CTRL_C_ROUTINE = 23;       
literal TPU$_FREEITEMLIST = 24;         
literal TPU$_DEBUGFILE = 25;            
literal TPU$_FILE_PARSE = 26;           
literal TPU$_FILE_SEARCH = 27;          
literal TPU$_TERMINAL_INPUT = 28;       
literal TPU$_KANJI_DICFILE = 29;        
literal TPU$_TEXT_LANGUAGE = 30;        
literal TPU$_DEFAULTSFILE = 31;         
literal TPU$_PARENT_WIDGET = 32;        
literal TPU$_EXTENSION = 33;            
literal TPU$_GET_DEFAULT = 34;          
literal TPU$_SET_DEFAULT = 35;          
literal TPU$_WORKFILE = 36;             
literal TPU$_APPLICATION_CONTEXT = 37;  
literal TPU$_CHARACTERSET = 38;         
literal TPU$_LANGUAGE = 257;            
literal TPU$_ENVFILE = 258;             
literal TPU$_INIT_FILE = 259;           
literal TPU$_START_LINE = 260;          
literal TPU$_START_CHAR = 261;          
literal TPU$_SYSTEM_ENVFILE = 262;      
literal TPU$_ACCESS = 4;                
literal TPU$_FLUSH = 5;                 
literal TPU$_FILESIZE = 7;              
literal TPU$_RECORD_ATTR = 8;           
literal TPU$_RECORD_FORM = 9;           
literal TPU$_MAXIMIZE_VER = 10;         
literal TPU$_DEFAULTFILE = 17;          
literal TPU$_RELATEDFILE = 18;          
literal TPU$_FILE_RECOVERABLE = 19;     
literal TPU$_TRN_TPT = 20;              
literal TPU$_CREATE_TIME = 257;         
literal TPU$_EOF_BLOCK = 258;           
literal TPU$_EOF_FFB = 259;             
literal TPU$M_RECOVER = %X'1';
literal TPU$M_JOURNAL = %X'2';
literal TPU$M_READ = %X'4';
literal TPU$M_SECTION = %X'8';
literal TPU$M_OUTPUT = %X'10';
literal TPU$M_COMMAND = %X'20';
literal TPU$M_DISPLAY = %X'40';
literal TPU$M_CREATE = %X'80';
literal TPU$M_STARTPOS = %X'100';
literal TPU$M_COMMAND_DFLTED = %X'200';
literal TPU$M_DEBUG = %X'400';
literal TPU$M_NOKANJI_DIC = %X'800';
literal TPU$M_TEXT_LANGUAGE = %X'1000';
literal TPU$M_DEFAULTS = %X'2000';
literal TPU$M_NODEFAULTS = %X'4000';
literal TPU$M_ENVIRONMENT = %X'10000';
literal TPU$M_INIT = %X'20000';
literal TPU$M_SYSTEM_ENV = %X'40000';
literal TPU$M_CURRENT_FILE = %X'80000';
literal TPU$M_WRITE = %X'100000';
literal TPU$M_MODIFY = %X'200000';
literal TPU$M_NOMODIFY = %X'400000';
literal TPU$M_NOMAP = %X'800000';
literal TPU$M_WORK = %X'1000000';
literal TPU$M_SEC_LNM_MODE = %X'2000000';
literal TPU$M_CHARSET = %X'4000000';
literal TPU$S_FILL_327_ = 4;
macro TPU$L_OPTIONS = 0,0,32,0 %;
macro TPU$V_RECOVER = 0,0,1,0 %;        
macro TPU$V_JOURNAL = 0,1,1,0 %;        
macro TPU$V_READ = 0,2,1,0 %;           
macro TPU$V_SECTION = 0,3,1,0 %;        
macro TPU$V_OUTPUT = 0,4,1,0 %;         
macro TPU$V_COMMAND = 0,5,1,0 %;        
macro TPU$V_DISPLAY = 0,6,1,0 %;        
macro TPU$V_CREATE = 0,7,1,0 %;         
macro TPU$V_STARTPOS = 0,8,1,0 %;       
macro TPU$V_COMMAND_DFLTED = 0,9,1,0 %; 
macro TPU$V_DEBUG = 0,10,1,0 %;         
macro TPU$V_NOKANJI_DIC = 0,11,1,0 %;   
macro TPU$V_TEXT_LANGUAGE = 0,12,1,0 %; 
macro TPU$V_DEFAULTS = 0,13,1,0 %;      
macro TPU$V_NODEFAULTS = 0,14,1,0 %;    
macro TPU$V_ENVIRONMENT = 0,16,1,0 %;   
macro TPU$V_INIT = 0,17,1,0 %;          
macro TPU$V_SYSTEM_ENV = 0,18,1,0 %;    
macro TPU$V_CURRENT_FILE = 0,19,1,0 %;  
macro TPU$V_WRITE = 0,20,1,0 %;         
macro TPU$V_MODIFY = 0,21,1,0 %;        
macro TPU$V_NOMODIFY = 0,22,1,0 %;      
macro TPU$V_NOMAP = 0,23,1,0 %;         
macro TPU$V_WORK = 0,24,1,0 %;          
macro TPU$V_SEC_LNM_MODE = 0,25,1,0 %;  
macro TPU$V_CHARSET = 0,26,1,0 %;       
literal TPU$K_INPUT = 0;                
literal TPU$K_OUTPUT = 1;               
literal TPU$K_IO = 2;                   
literal TPU$K_OUTPUT_DDIF = 3;          
literal TPU$K_OPEN = 0;                 
literal TPU$K_CLOSE = 1;                
literal TPU$K_CLOSE_DELETE = 2;         
literal TPU$K_PUT = 3;                  
literal TPU$K_GET = 4;                  
literal TPU$K_REWIND = 5;               
literal TPU$M_NODE = %X'1';
literal TPU$M_DEV = %X'2';
literal TPU$M_DIR = %X'4';
literal TPU$M_NAME = %X'8';
literal TPU$M_TYPE = %X'10';
literal TPU$M_VER = %X'20';
literal TPU$M_HEAD = %X'40';
literal TPU$M_TAIL = %X'80';
literal TPU$M_REPARSE = %X'10000';
literal TPU$S_FILL_329_ = 4;
macro TPU$L_ITEM_FLAGS = 0,0,32,0 %;
macro TPU$V_NODE = 0,0,1,0 %;           
macro TPU$V_DEV = 0,1,1,0 %;            
macro TPU$V_DIR = 0,2,1,0 %;            
macro TPU$V_NAME = 0,3,1,0 %;           
macro TPU$V_TYPE = 0,4,1,0 %;           
macro TPU$V_VER = 0,5,1,0 %;            
macro TPU$V_HEAD = 0,6,1,0 %;           
macro TPU$V_TAIL = 0,7,1,0 %;           
macro TPU$V_REPARSE = 0,16,1,0 %;       
literal TPU$K_INITIALIZE_INPUT = 0;     
literal TPU$K_TYPEAHEAD_COUNT = 1;      
literal TPU$K_CANCEL_INPUT = 2;         
literal TPU$K_READ_CHARACTER = 3;       
literal TPU$K_READ_STRING = 4;          
literal TPU$K_READ_LINE = 5;            
literal TPU$K_TERMINATE_INPUT = 6;      
literal TPU$K_READ_TYPEAHEAD_NOECHO = 7; 
literal TPU$M_DELETE_JOURNAL = %X'1';
literal TPU$M_DELETE_EXITH = %X'2';
literal TPU$M_DELETE_BUFFERS = %X'4';
literal TPU$M_DELETE_WINDOWS = %X'8';
literal TPU$M_DELETE_CACHE = %X'10';
literal TPU$M_PRUNE_CACHE = %X'20';
literal TPU$M_EXECUTE_FILE = %X'40';
literal TPU$M_EXECUTE_PROC = %X'80';
literal TPU$M_DELETE_CONTEXT = %X'100';
literal TPU$M_RESET_TERMINAL = %X'200';
literal TPU$M_KILL_PROCESSES = %X'400';
literal TPU$M_CLOSE_SECTION = %X'800';
literal TPU$M_DELETE_OTHERS = %X'1000';
literal TPU$M_LAST_TIME = %X'2000';
literal TPU$M_CLOSE_KANJI_DIC = %X'4000';
literal TPU$S_FILL_332_ = 4;
macro TPU$L_CLEANUP = 0,0,32,0 %;
macro TPU$V_DELETE_JOURNAL = 0,0,1,0 %; 
macro TPU$V_DELETE_EXITH = 0,1,1,0 %;   
macro TPU$V_DELETE_BUFFERS = 0,2,1,0 %; 
macro TPU$V_DELETE_WINDOWS = 0,3,1,0 %; 
macro TPU$V_DELETE_CACHE = 0,4,1,0 %;   
macro TPU$V_PRUNE_CACHE = 0,5,1,0 %;    
macro TPU$V_EXECUTE_FILE = 0,6,1,0 %;   
macro TPU$V_EXECUTE_PROC = 0,7,1,0 %;   
macro TPU$V_DELETE_CONTEXT = 0,8,1,0 %; 
macro TPU$V_RESET_TERMINAL = 0,9,1,0 %; 
macro TPU$V_KILL_PROCESSES = 0,10,1,0 %; 
macro TPU$V_CLOSE_SECTION = 0,11,1,0 %; 
macro TPU$V_DELETE_OTHERS = 0,12,1,0 %; 
macro TPU$V_LAST_TIME = 0,13,1,0 %;     
macro TPU$V_CLOSE_KANJI_DIC = 0,14,1,0 %; 
 

literal TRM$_MODIFIERS = 0;
literal TRM$_EDITMODE = 1;
literal TRM$_TIMEOUT = 2;
literal TRM$_TERM = 3;
literal TRM$_PROMPT = 4;
literal TRM$_INISTRNG = 5;
literal TRM$_PICSTRNG = 6;
literal TRM$_FILLCHR = 7;
literal TRM$_INIOFFSET = 8;
literal TRM$_ALTECHSTR = 9;
literal TRM$_ESCTRMOVR = 10;
literal TRM$_LASTITM = 11;              
literal TRM$_RESERVE12 = 12;
literal TRM$_RESERVE13 = 13;
literal TRM$_RESERVE14 = 14;
literal TRM$_RESERVE15 = 15;
literal TRM$_RESERVE16 = 16;
literal TRM$_RESERVE17 = 17;
literal TRM$_RESERVE18 = 18;
literal TRM$_RESERVE19 = 19;
literal TRM$_RESERVE20 = 20;
literal TRM$_RESERVE21 = 21;
literal TRM$_RESERVE22 = 22;
literal TRM$_RESERVE23 = 23;
literal TRM$_RESERVE24 = 24;
literal TRM$_RESERVE25 = 25;
literal TRM$_RESERVE26 = 26;
literal TRM$_RESERVE27 = 27;
literal TRM$_RESERVE28 = 28;
literal TRM$_RESERVE29 = 29;
literal TRM$_RESERVE30 = 30;
literal TRM$_RECLINE = 31;              

literal TRM$K_EM_DEFAULT = 0;
literal TRM$K_EM_RDVERIFY = 1;
literal TRM$M_TM_NOECHO = %X'40';
literal TRM$M_TM_TIMED = %X'80';
literal TRM$M_TM_CVTLOW = %X'100';
literal TRM$M_TM_NOFILTR = %X'200';
literal TRM$M_TM_DSABLMBX = %X'400';
literal TRM$M_TM_PURGE = %X'800';
literal TRM$M_TM_TRMNOECHO = %X'1000';
literal TRM$M_TM_REFRESH = %X'2000';
literal TRM$M_TM_ESCAPE = %X'4000';
literal TRM$M_TM_NOEDIT = %X'8000';
literal TRM$M_TM_NORECALL = %X'10000';
literal TRM$M_TM_R_JUST = %X'20000';
literal TRM$M_TM_AUTO_TAB = %X'40000';
literal TRM$M_TM_ARROWS = %X'80000';
literal TRM$M_TM_TERM_ARROW = %X'100000';
literal TRM$M_TM_TERM_DEL = %X'200000';
literal TRM$M_TM_TOGGLE = %X'400000';
literal TRM$M_TM_OTHERWAY = %X'800000';
literal TRM$M_TM_NOCLEAR = %X'1000000';
literal TRM$M_CV_UPPER = %X'1';
literal TRM$M_CV_LOWER = %X'2';
literal TRM$M_CV_NUMERIC = %X'4';
literal TRM$M_CV_NUMPUNC = %X'8';
literal TRM$M_CV_PRINTABLE = %X'10';
literal TRM$M_CV_ANY = %X'20';
literal TRM$M_ST_FIELD_FULL = %X'1';
literal TRM$M_ST_OTHERWAY = %X'2';
literal TRM$S_TRMDEF = 4;
macro TRM$V_TM_NOECHO = 0,6,1,0 %;      
macro TRM$V_TM_TIMED = 0,7,1,0 %;       
macro TRM$V_TM_CVTLOW = 0,8,1,0 %;      
macro TRM$V_TM_NOFILTR = 0,9,1,0 %;     
macro TRM$V_TM_DSABLMBX = 0,10,1,0 %;   
macro TRM$V_TM_PURGE = 0,11,1,0 %;      
macro TRM$V_TM_TRMNOECHO = 0,12,1,0 %;  
macro TRM$V_TM_REFRESH = 0,13,1,0 %;    
macro TRM$V_TM_ESCAPE = 0,14,1,0 %;     
macro TRM$V_TM_NOEDIT = 0,15,1,0 %;     
macro TRM$V_TM_NORECALL = 0,16,1,0 %;   
macro TRM$V_TM_R_JUST = 0,17,1,0 %;     
macro TRM$V_TM_AUTO_TAB = 0,18,1,0 %;   
macro TRM$V_TM_ARROWS = 0,19,1,0 %;     
macro TRM$V_TM_TERM_ARROW = 0,20,1,0 %; 
macro TRM$V_TM_TERM_DEL = 0,21,1,0 %;   
macro TRM$V_TM_TOGGLE = 0,22,1,0 %;     
macro TRM$V_TM_OTHERWAY = 0,23,1,0 %;   
macro TRM$V_TM_NOCLEAR = 0,24,1,0 %;    
macro TRM$V_CV_UPPER = 0,0,1,0 %;       
macro TRM$V_CV_LOWER = 0,1,1,0 %;       
macro TRM$V_CV_NUMERIC = 0,2,1,0 %;     
macro TRM$V_CV_NUMPUNC = 0,3,1,0 %;     
macro TRM$V_CV_PRINTABLE = 0,4,1,0 %;   
macro TRM$V_CV_ANY = 0,5,1,0 %;         
macro TRM$V_ST_FIELD_FULL = 0,0,1,0 %;  
macro TRM$V_ST_OTHERWAY = 0,1,1,0 %;    
 

literal TT$C_BAUD_50 = 1;
literal TT$C_BAUD_75 = 2;
literal TT$C_BAUD_110 = 3;
literal TT$C_BAUD_134 = 4;
literal TT$C_BAUD_150 = 5;
literal TT$C_BAUD_300 = 6;
literal TT$C_BAUD_600 = 7;
literal TT$C_BAUD_1200 = 8;
literal TT$C_BAUD_1800 = 9;
literal TT$C_BAUD_2000 = 10;
literal TT$C_BAUD_2400 = 11;
literal TT$C_BAUD_3600 = 12;
literal TT$C_BAUD_4800 = 13;
literal TT$C_BAUD_7200 = 14;
literal TT$C_BAUD_9600 = 15;
literal TT$C_BAUD_19200 = 16;
literal TT$C_BAUD_38400 = 17;
literal TT$C_BAUD_57600 = 18;
literal TT$C_BAUD_76800 = 19;
literal TT$C_BAUD_115200 = 20;
literal TT$_UNKNOWN = 0;
literal TT$_VT05 = 1;                   
literal TT$_VK100 = 2;                  
literal TT$_VT173 = 3;
literal TT$_TQ_BTS = 4;
literal TT$_TEK401X = 10;
literal TT$_FT1 = 16;                   
literal TT$_FT2 = 17;                   
literal TT$_FT3 = 18;                   
literal TT$_FT4 = 19;
literal TT$_FT5 = 20;
literal TT$_FT6 = 21;
literal TT$_FT7 = 22;
literal TT$_FT8 = 23;                   
literal TT$_LAX = 32;
literal TT$_LA36 = 32;
literal TT$_LA120 = 33;
literal TT$_LA34 = 34;
literal TT$_LA38 = 35;
literal TT$_LA12 = 36;
literal TT$_LA100 = 37;
literal TT$_LA24 = 37;
literal TT$_LQP02 = 38;
literal TT$_LA84 = 39;
literal TT$_LA210 = 40;
literal TT$_LN03 = 41;
literal TT$_LN01K = 42;
literal TT$_LA80 = 43;
literal TT$_VT5X = 64;
literal TT$_VT52 = 64;
literal TT$_VT55 = 65;
literal TT$_VT100 = 96;                 
literal TT$_VT101 = 97;
literal TT$_VT102 = 98;
literal TT$_VT105 = 99;
literal TT$_VT125 = 100;
literal TT$_VT131 = 101;
literal TT$_VT132 = 102;
literal TT$_VT80 = 103;
literal TT$_VT200_Series = 110;
literal TT$_Pro_Series = 111;
literal TT$_VT300_Series = 112;
literal TT$_VT400_Series = 113;
literal TT$_VT500_Series = 114;

literal TT$M_PASSALL = %X'1';
literal TT$M_NOECHO = %X'2';
literal TT$M_NOTYPEAHD = %X'4';
literal TT$M_ESCAPE = %X'8';
literal TT$M_HOSTSYNC = %X'10';
literal TT$M_TTSYNC = %X'20';
literal TT$M_SCRIPT = %X'40';
literal TT$M_LOWER = %X'80';
literal TT$M_MECHTAB = %X'100';
literal TT$M_WRAP = %X'200';
literal TT$M_CRFILL = %X'400';
literal TT$M_LFFILL = %X'800';
literal TT$M_SCOPE = %X'1000';
literal TT$M_REMOTE = %X'2000';
literal TT$M_RESERVED = %X'4000';
literal TT$M_EIGHTBIT = %X'8000';
literal TT$M_MBXDSABL = %X'10000';
literal TT$M_NOBRDCST = %X'20000';
literal TT$M_READSYNC = %X'40000';
literal TT$M_MECHFORM = %X'80000';
literal TT$M_HALFDUP = %X'100000';
literal TT$M_MODEM = %X'200000';
literal TT$M_OPER = %X'400000';
literal TT$M_PAGE = %X'FF000000';
literal TT$M_ALTFRAME = %X'10';
literal TT$M_ALTRPAR = %X'20';
literal TT$M_PARITY = %X'40';
literal TT$M_ODD = %X'80';
literal TT$M_TWOSTOP = %X'100';
literal TT$M_DISPARERR = %X'200';
literal TT$M_ALTDISPAR = %X'400';
literal TT$M_BREAK = %X'800';
literal TT$M_DS_DTR = %X'2';
literal TT$M_DS_SECTX = %X'8';
literal TT$M_DS_RTS = %X'10';
literal TT$M_DS_SECREC = %X'8';
literal TT$M_DS_CTS = %X'10';
literal TT$M_DS_CARRIER = %X'20';
literal TT$M_DS_RING = %X'40';
literal TT$M_DS_DSR = %X'80';
literal TT$S_TTDEF = 4;
macro TT$V_PASSALL = 0,0,1,0 %;
macro TT$V_NOECHO = 0,1,1,0 %;
macro TT$V_NOTYPEAHD = 0,2,1,0 %;
macro TT$V_ESCAPE = 0,3,1,0 %;
macro TT$V_HOSTSYNC = 0,4,1,0 %;
macro TT$V_TTSYNC = 0,5,1,0 %;
macro TT$V_SCRIPT = 0,6,1,0 %;
macro TT$V_LOWER = 0,7,1,0 %;
macro TT$V_MECHTAB = 0,8,1,0 %;
macro TT$V_WRAP = 0,9,1,0 %;
macro TT$V_CRFILL = 0,10,1,0 %;
macro TT$V_LFFILL = 0,11,1,0 %;
macro TT$V_SCOPE = 0,12,1,0 %;
macro TT$V_REMOTE = 0,13,1,0 %;
macro TT$V_RESERVED = 0,14,1,0 %;
macro TT$V_EIGHTBIT = 0,15,1,0 %;
macro TT$V_MBXDSABL = 0,16,1,0 %;
macro TT$V_NOBRDCST = 0,17,1,0 %;
macro TT$V_READSYNC = 0,18,1,0 %;
macro TT$V_MECHFORM = 0,19,1,0 %;
macro TT$V_HALFDUP = 0,20,1,0 %;
macro TT$V_MODEM = 0,21,1,0 %;
macro TT$V_OPER = 0,22,1,0 %;
macro TT$V_PAGE = 0,24,8,0 %;
literal TT$S_PAGE = 8;
macro TT$V_ALTFRAME = 0,4,1,0 %;
macro TT$V_ALTRPAR = 0,5,1,0 %;
macro TT$V_PARITY = 0,6,1,0 %;
macro TT$V_ODD = 0,7,1,0 %;
macro TT$V_TWOSTOP = 0,8,1,0 %;
macro TT$V_DISPARERR = 0,9,1,0 %;
macro TT$V_ALTDISPAR = 0,10,1,0 %;
macro TT$V_BREAK = 0,11,1,0 %;
macro TT$V_DS_DTR = 0,1,1,0 %;          
macro TT$V_DS_SECTX = 0,3,1,0 %;
macro TT$V_DS_RTS = 0,4,1,0 %;
macro TT$V_DS_SECREC = 0,3,1,0 %;
macro TT$V_DS_CTS = 0,4,1,0 %;
macro TT$V_DS_CARRIER = 0,5,1,0 %;
macro TT$V_DS_RING = 0,6,1,0 %;
macro TT$V_DS_DSR = 0,7,1,0 %;
 
literal TT2$M_LOCALECHO = %X'1';
literal TT2$M_AUTOBAUD = %X'2';
literal TT2$M_HANGUP = %X'4';
literal TT2$M_MODHANGUP = %X'8';
literal TT2$M_BRDCSTMBX = %X'10';
literal TT2$M_XON = %X'20';
literal TT2$M_DMA = %X'40';
literal TT2$M_ALTYPEAHD = %X'80';
literal TT2$M_SETSPEED = %X'100';
literal TT2$M_DCL_MAILBX = %X'200';
literal TT2$M_DECCRT4 = %X'400';
literal TT2$M_COMMSYNC = %X'800';
literal TT2$M_EDITING = %X'1000';
literal TT2$M_INSERT = %X'2000';
literal TT2$M_FALLBACK = %X'4000';
literal TT2$M_DIALUP = %X'8000';
literal TT2$M_SECURE = %X'10000';
literal TT2$M_DISCONNECT = %X'20000';
literal TT2$M_PASTHRU = %X'40000';
literal TT2$M_SYSPWD = %X'80000';
literal TT2$M_SIXEL = %X'100000';
literal TT2$M_DRCS = %X'200000';
literal TT2$M_PRINTER = %X'400000';
literal TT2$M_APP_KEYPAD = %X'800000';
literal TT2$M_ANSICRT = %X'1000000';
literal TT2$M_REGIS = %X'2000000';
literal TT2$M_BLOCK = %X'4000000';
literal TT2$M_AVO = %X'8000000';
literal TT2$M_EDIT = %X'10000000';
literal TT2$M_DECCRT = %X'20000000';
literal TT2$M_DECCRT2 = %X'40000000';
literal TT2$M_DECCRT3 = %X'80000000';
literal TT2$S_TT2DEF = 4;
macro TT2$V_LOCALECHO = 0,0,1,0 %;
macro TT2$V_AUTOBAUD = 0,1,1,0 %;
macro TT2$V_HANGUP = 0,2,1,0 %;
macro TT2$V_MODHANGUP = 0,3,1,0 %;
macro TT2$V_BRDCSTMBX = 0,4,1,0 %;
macro TT2$V_XON = 0,5,1,0 %;
macro TT2$V_DMA = 0,6,1,0 %;
macro TT2$V_ALTYPEAHD = 0,7,1,0 %;
macro TT2$V_SETSPEED = 0,8,1,0 %;
macro TT2$V_DCL_MAILBX = 0,9,1,0 %;     
macro TT2$V_DECCRT4 = 0,10,1,0 %;       
macro TT2$V_COMMSYNC = 0,11,1,0 %;      
macro TT2$V_EDITING = 0,12,1,0 %;       
macro TT2$V_INSERT = 0,13,1,0 %;        
macro TT2$V_FALLBACK = 0,14,1,0 %;      
macro TT2$V_DIALUP = 0,15,1,0 %;        
macro TT2$V_SECURE = 0,16,1,0 %;        
macro TT2$V_DISCONNECT = 0,17,1,0 %;    
macro TT2$V_PASTHRU = 0,18,1,0 %;       
macro TT2$V_SYSPWD = 0,19,1,0 %;        
macro TT2$V_SIXEL = 0,20,1,0 %;         
macro TT2$V_DRCS = 0,21,1,0 %;          
macro TT2$V_PRINTER = 0,22,1,0 %;       
macro TT2$V_APP_KEYPAD = 0,23,1,0 %;    
macro TT2$V_ANSICRT = 0,24,1,0 %;       
macro TT2$V_REGIS = 0,25,1,0 %;         
macro TT2$V_BLOCK = 0,26,1,0 %;
macro TT2$V_AVO = 0,27,1,0 %;
macro TT2$V_EDIT = 0,28,1,0 %;
macro TT2$V_DECCRT = 0,29,1,0 %;
macro TT2$V_DECCRT2 = 0,30,1,0 %;       
macro TT2$V_DECCRT3 = 0,31,1,0 %;       
 
literal TT3$M_POSIX = %X'1';
literal TT3$M_ANSI_COLOR = %X'2';
literal TT3$M_DECCRT5 = %X'4';
literal TT3$M_RTS_FLOW = %X'8';
literal TT3$S_TT3DEF = 4;
macro TT3$V_POSIX = 0,0,1,0 %;
macro TT3$V_ANSI_COLOR = 0,1,1,0 %;
macro TT3$V_DECCRT5 = 0,2,1,0 %;
macro TT3$V_RTS_FLOW = 0,3,1,0 %;
macro TT3$v_tt_spare = 0,4,12,0 %;
literal TT3$s_tt_spare = 12;
macro TT3$V_AS_RESERVED = 0,16,16,0 %;
literal TT3$S_AS_RESERVED = 16;
 
literal TTC$M_RESERVED = %X'FF';
literal TTC$M_KANA = %X'100';
literal TTC$M_KANJI = %X'200';
literal TTC$M_HANZI = %X'400';
literal TTC$M_HANGUL = %X'800';
literal TTC$M_HANYU = %X'1000';
literal TTC$M_THAI = %X'2000';
literal TTC$S_TTCDEF = 2;
macro TTC$V_RESERVED = 0,0,8,0 %;
literal TTC$S_RESERVED = 8;             
macro TTC$V_KANA = 0,8,1,0 %;           
macro TTC$V_KANJI = 0,9,1,0 %;          
macro TTC$V_HANZI = 0,10,1,0 %;         
macro TTC$V_HANGUL = 0,11,1,0 %;        
macro TTC$V_HANYU = 0,12,1,0 %;         
macro TTC$V_THAI = 0,13,1,0 %;          
 
literal TTY$M_NO_AUTO_XON = %X'1';
literal TTY$M_RESERVED = %X'FE';
literal TTY$M_PARITY_ERROR = %X'100';
literal TTY$M_USE_WINDOW_CONSOLE = %X'200';
literal TTY$M_LOAD_INPUT_EXTENSION = %X'400';
literal TTY$S_TTYDPORTDEF = 2;
macro TTY$V_NO_AUTO_XON = 0,0,1,0 %;    
macro TTY$V_RESERVED = 0,1,7,0 %;
literal TTY$S_RESERVED = 7;             
macro TTY$V_PARITY_ERROR = 0,8,1,0 %;   
macro TTY$V_USE_WINDOW_CONSOLE = 0,9,1,0 %; 
macro TTY$V_LOAD_INPUT_EXTENSION = 0,10,1,0 %; 
 

literal UAF070$C_USER_ID = 1;           
literal UAF070$C_VERSION1 = 1;          
literal UAF070$C_KEYED_PART = 52;       
literal UAF070$C_MAX_PWD_LENGTH = 32;   
literal UAF070$K_MAX_PWD_LENGTH = 32;   
literal UAF070$C_AD_II = 0;             
literal UAF070$C_PURDY = 1;             
literal UAF070$C_PURDY_V = 2;           
literal UAF070$C_PURDY_S = 3;           
literal UAF070$K_CURRENT_ALGORITHM = 3; 
literal UAF070$C_CURRENT_ALGORITHM = 3; 
literal UAF070$C_PREFERED_ALGORITHM = 127;
literal UAF070$K_PREFERED_ALGORITHM = 127;
literal UAF070$C_PREFERRED_ALGORITHM = 127; 
literal UAF070$K_PREFERRED_ALGORITHM = 127; 
literal UAF070$C_CUST_ALGORITHM = 128;  
literal UAF070$K_CUST_ALGORITHM = 128;  
literal UAF070$K_FIXED = 644;           
literal UAF070$C_FIXED = 644;           
literal UAF070$K_LENGTH = 1412;
literal UAF070$C_LENGTH = 1412;
literal UAF070$S_UAF070DEF = 1412;      
literal UAF070$S_UAF070 = 1412;
macro UAF070$B_RTYPE = 0,0,8,0 %;       
macro UAF070$B_VERSION = 1,0,8,0 %;     
macro UAF070$W_USRDATOFF = 2,0,16,0 %;  
macro UAF070$T_USERNAME = 4,0,0,0 %;
literal UAF070$S_USERNAME = 32;         
macro UAF070$T_USERNAME_TAG = 35,0,8,0 %; 
macro UAF070$L_UIC = 36,0,32,0 %;       
macro UAF070$W_MEM = 36,0,16,0 %;       
macro UAF070$W_GRP = 38,0,16,0 %;       
macro UAF070$L_SUB_ID = 40,0,32,0 %;    
macro UAF070$Q_PARENT_ID = 44,0,0,0 %;
literal UAF070$S_PARENT_ID = 8;         
macro UAF070$T_ACCOUNT = 52,0,0,0 %;
literal UAF070$S_ACCOUNT = 32;          
macro UAF070$T_OWNER = 84,0,0,0 %;
literal UAF070$S_OWNER = 32;            
macro UAF070$T_DEFDEV = 116,0,0,0 %;
literal UAF070$S_DEFDEV = 32;           
macro UAF070$T_DEFDIR = 148,0,0,0 %;
literal UAF070$S_DEFDIR = 64;           
macro UAF070$T_LGICMD = 212,0,0,0 %;
literal UAF070$S_LGICMD = 64;           
macro UAF070$T_DEFCLI = 276,0,0,0 %;
literal UAF070$S_DEFCLI = 32;           
macro UAF070$T_CLITABLES = 308,0,0,0 %;
literal UAF070$S_CLITABLES = 32;        
macro UAF070$Q_PWD = 340,0,0,0 %;
literal UAF070$S_PWD = 8;               
macro UAF070$L_PWD = 340,0,32,0 %;      
macro UAF070$Q_PWD2 = 348,0,0,0 %;
literal UAF070$S_PWD2 = 8;              
macro UAF070$W_LOGFAILS = 356,0,16,0 %; 
macro UAF070$W_SALT = 358,0,16,0 %;     
macro UAF070$B_ENCRYPT = 360,0,8,0 %;   
macro UAF070$B_ENCRYPT2 = 361,0,8,0 %;  
macro UAF070$B_PWD_LENGTH = 362,0,8,0 %; 
macro UAF070$Q_EXPIRATION = 364,0,0,0 %;
literal UAF070$S_EXPIRATION = 8;        
macro UAF070$Q_PWD_LIFETIME = 372,0,0,0 %;
literal UAF070$S_PWD_LIFETIME = 8;      
macro UAF070$Q_PWD_DATE = 380,0,0,0 %;
literal UAF070$S_PWD_DATE = 8;          
macro UAF070$Q_PWD2_DATE = 388,0,0,0 %;
literal UAF070$S_PWD2_DATE = 8;         
macro UAF070$Q_LASTLOGIN_I = 396,0,0,0 %;
literal UAF070$S_LASTLOGIN_I = 8;       
macro UAF070$Q_LASTLOGIN_N = 404,0,0,0 %;
literal UAF070$S_LASTLOGIN_N = 8;       
macro UAF070$Q_PRIV = 412,0,0,0 %;
literal UAF070$S_PRIV = 8;              
macro UAF070$Q_DEF_PRIV = 420,0,0,0 %;
literal UAF070$S_DEF_PRIV = 8;          
macro UAF070$R_MIN_CLASS = 428,0,0,0 %;
literal UAF070$S_MIN_CLASS = 20;        
macro UAF070$R_MAX_CLASS = 448,0,0,0 %;
literal UAF070$S_MAX_CLASS = 20;        
macro UAF070$L_FLAGS = 468,0,32,0 %;    
macro UAF070$V_DISCTLY = 468,0,1,0 %;   
macro UAF070$V_DEFCLI = 468,1,1,0 %;    
macro UAF070$V_LOCKPWD = 468,2,1,0 %;   
macro UAF070$V_RESTRICTED = 468,3,1,0 %; 
macro UAF070$V_DISACNT = 468,4,1,0 %;   
macro UAF070$V_DISWELCOM = 468,5,1,0 %; 
macro UAF070$V_DISMAIL = 468,6,1,0 %;   
macro UAF070$V_NOMAIL = 468,7,1,0 %;    
macro UAF070$V_GENPWD = 468,8,1,0 %;    
macro UAF070$V_PWD_EXPIRED = 468,9,1,0 %; 
macro UAF070$V_PWD2_EXPIRED = 468,10,1,0 %; 
macro UAF070$V_AUDIT = 468,11,1,0 %;    
macro UAF070$V_DISREPORT = 468,12,1,0 %; 
macro UAF070$V_DISRECONNECT = 468,13,1,0 %; 
macro UAF070$V_AUTOLOGIN = 468,14,1,0 %; 
macro UAF070$V_DISFORCE_PWD_CHANGE = 468,15,1,0 %; 
macro UAF070$V_CAPTIVE = 468,16,1,0 %;  
macro UAF070$V_DISIMAGE = 468,17,1,0 %; 
macro UAF070$V_DISPWDDIC = 468,18,1,0 %; 
macro UAF070$V_DISPWDHIS = 468,19,1,0 %; 
macro UAF070$V_DEFCLSVAL = 468,20,1,0 %; 
macro UAF070$B_NETWORK_ACCESS_P = 472,0,24,0 %;
literal UAF070$S_NETWORK_ACCESS_P = 3;  
macro UAF070$B_NETWORK_ACCESS_S = 475,0,24,0 %;
literal UAF070$S_NETWORK_ACCESS_S = 3;  
macro UAF070$B_BATCH_ACCESS_P = 478,0,24,0 %;
literal UAF070$S_BATCH_ACCESS_P = 3;    
macro UAF070$B_BATCH_ACCESS_S = 481,0,24,0 %;
literal UAF070$S_BATCH_ACCESS_S = 3;    
macro UAF070$B_LOCAL_ACCESS_P = 484,0,24,0 %;
literal UAF070$S_LOCAL_ACCESS_P = 3;    
macro UAF070$B_LOCAL_ACCESS_S = 487,0,24,0 %;
literal UAF070$S_LOCAL_ACCESS_S = 3;    
macro UAF070$B_DIALUP_ACCESS_P = 490,0,24,0 %;
literal UAF070$S_DIALUP_ACCESS_P = 3;   
macro UAF070$B_DIALUP_ACCESS_S = 493,0,24,0 %;
literal UAF070$S_DIALUP_ACCESS_S = 3;   
macro UAF070$B_REMOTE_ACCESS_P = 496,0,24,0 %;
literal UAF070$S_REMOTE_ACCESS_P = 3;   
macro UAF070$B_REMOTE_ACCESS_S = 499,0,24,0 %;
literal UAF070$S_REMOTE_ACCESS_S = 3;   
macro UAF070$B_PRIMEDAYS = 514,0,8,0 %; 
macro UAF070$V_MONDAY = 514,0,1,0 %;    
macro UAF070$V_TUESDAY = 514,1,1,0 %;   
macro UAF070$V_WEDNESDAY = 514,2,1,0 %;
macro UAF070$V_THURSDAY = 514,3,1,0 %;
macro UAF070$V_FRIDAY = 514,4,1,0 %;
macro UAF070$V_SATURDAY = 514,5,1,0 %;
macro UAF070$V_SUNDAY = 514,6,1,0 %;
macro UAF070$B_PRI = 516,0,8,0 %;       
macro UAF070$B_QUEPRI = 517,0,8,0 %;    
macro UAF070$W_MAXJOBS = 518,0,16,0 %;  
macro UAF070$W_MAXACCTJOBS = 520,0,16,0 %; 
macro UAF070$W_MAXDETACH = 522,0,16,0 %; 
macro UAF070$W_PRCCNT = 524,0,16,0 %;   
macro UAF070$W_BIOLM = 526,0,16,0 %;    
macro UAF070$W_DIOLM = 528,0,16,0 %;    
macro UAF070$W_TQCNT = 530,0,16,0 %;    
macro UAF070$W_ASTLM = 532,0,16,0 %;    
macro UAF070$W_ENQLM = 534,0,16,0 %;    
macro UAF070$W_FILLM = 536,0,16,0 %;    
macro UAF070$W_SHRFILLM = 538,0,16,0 %; 
macro UAF070$L_WSQUOTA = 540,0,32,0 %;  
macro UAF070$L_DFWSCNT = 544,0,32,0 %;  
macro UAF070$L_WSEXTENT = 548,0,32,0 %; 
macro UAF070$L_PGFLQUOTA = 552,0,32,0 %; 
macro UAF070$L_CPUTIM = 556,0,32,0 %;   
macro UAF070$L_BYTLM = 560,0,32,0 %;    
macro UAF070$L_PBYTLM = 564,0,32,0 %;   
macro UAF070$L_JTQUOTA = 568,0,32,0 %;  
macro UAF070$W_PROXY_LIM = 572,0,16,0 %; 
macro UAF070$W_PROXIES = 574,0,16,0 %;  
macro UAF070$W_ACCOUNT_LIM = 576,0,16,0 %; 
macro UAF070$W_ACCOUNTS = 578,0,16,0 %; 
macro UAF070$R_DEF_CLASS = 580,0,0,0 %;
literal UAF070$S_DEF_CLASS = 20;        
 

literal UAI$_RTYPE = 1;                 
literal UAI$_VERSION = 2;               
literal UAI$_USRDATOFF = 3;             
literal UAI$_USERNAME = 4;              
literal UAI$_USERNAME_TAG = 5;          
literal UAI$_UIC = 6;                   
literal UAI$_MEM = 7;                   
literal UAI$_GRP = 8;                   
literal UAI$_SUB_ID = 9;                
literal UAI$_PARENT_ID = 10;            
literal UAI$_ACCOUNT = 11;              
literal UAI$_OWNER = 12;                
literal UAI$_DEFDEV = 13;               
literal UAI$_DEFDIR = 14;               
literal UAI$_LGICMD = 15;               
literal UAI$_DEFCLI = 16;               
literal UAI$_CLITABLES = 17;            
literal UAI$_PWD = 18;                  
literal UAI$_PWD2 = 19;                 
literal UAI$_LOGFAILS = 20;             
literal UAI$_SALT = 21;                 
literal UAI$_ENCRYPT = 22;              
literal UAI$_ENCRYPT2 = 23;             
literal UAI$_PWD_LENGTH = 24;           
literal UAI$_EXPIRATION = 25;           
literal UAI$_PWD_LIFETIME = 26;         
literal UAI$_PWD_DATE = 27;             
literal UAI$_PWD2_DATE = 28;            
literal UAI$_LASTLOGIN_I = 29;          
literal UAI$_LASTLOGIN_N = 30;          
literal UAI$_PRIV = 31;                 
literal UAI$_DEF_PRIV = 32;             
literal UAI$_MIN_CLASS = 33;            
literal UAI$_MAX_CLASS = 34;            
literal UAI$_FLAGS = 35;                
literal UAI$_NETWORK_ACCESS_P = 36;     
literal UAI$_NETWORK_ACCESS_S = 37;     
literal UAI$_BATCH_ACCESS_P = 38;       
literal UAI$_BATCH_ACCESS_S = 39;       
literal UAI$_LOCAL_ACCESS_P = 40;       
literal UAI$_LOCAL_ACCESS_S = 41;       
literal UAI$_DIALUP_ACCESS_P = 42;      
literal UAI$_DIALUP_ACCESS_S = 43;      
literal UAI$_REMOTE_ACCESS_P = 44;      
literal UAI$_REMOTE_ACCESS_S = 45;      
literal UAI$_PRIMEDAYS = 46;            
literal UAI$_PRI = 47;                  
literal UAI$_QUEPRI = 48;               
literal UAI$_MAXJOBS = 49;              
literal UAI$_MAXACCTJOBS = 50;          
literal UAI$_MAXDETACH = 51;            
literal UAI$_PRCCNT = 52;               
literal UAI$_BIOLM = 53;                
literal UAI$_DIOLM = 54;                
literal UAI$_TQCNT = 55;                
literal UAI$_ASTLM = 56;                
literal UAI$_ENQLM = 57;                
literal UAI$_FILLM = 58;                
literal UAI$_SHRFILLM = 59;             
literal UAI$_WSQUOTA = 60;              
literal UAI$_DFWSCNT = 61;              
literal UAI$_WSEXTENT = 62;             
literal UAI$_PGFLQUOTA = 63;            
literal UAI$_CPUTIM = 64;               
literal UAI$_BYTLM = 65;                
literal UAI$_PBYTLM = 66;               
literal UAI$_JTQUOTA = 67;              
literal UAI$_PROXY_LIM = 68;            
literal UAI$_PROXIES = 69;              
literal UAI$_ACCOUNT_LIM = 70;          
literal UAI$_ACCOUNTS = 71;             
literal UAI$_USER_DATA = 72;            
literal UAI$_PASSWORD = 73;             
literal UAI$_PASSWORD2 = 74;            
literal UAI$_DEF_CLASS = 75;            
literal UAI$_AUDIT_FLAGS = 76;          
literal UAI$_MAX_ITEM_CODE = 77;        
literal UAI$_DEFCHARGE_CODE = 11;       
literal UAI$C_AD_II = 0;                
literal UAI$C_PURDY = 1;                
literal UAI$C_PURDY_V = 2;              
literal UAI$C_PURDY_S = 3;              
literal UAI$C_PREFERED_ALGORITHM = 127;
literal UAI$C_PREFERRED_ALGORITHM = 127; 
literal UAI$C_CUST_ALGORITHM = 128;     
literal UAI$C_MAX_PWD_LENGTH = 32;      
literal UAI$M_DISCTLY = %X'1';
literal UAI$M_DEFCLI = %X'2';
literal UAI$M_LOCKPWD = %X'4';
literal UAI$M_RESTRICTED = %X'8';
literal UAI$M_DISACNT = %X'10';
literal UAI$M_DISWELCOM = %X'20';
literal UAI$M_DISMAIL = %X'40';
literal UAI$M_NOMAIL = %X'80';
literal UAI$M_GENPWD = %X'100';
literal UAI$M_PWD_EXPIRED = %X'200';
literal UAI$M_PWD2_EXPIRED = %X'400';
literal UAI$M_AUDIT = %X'800';
literal UAI$M_DISREPORT = %X'1000';
literal UAI$M_DISRECONNECT = %X'2000';
literal UAI$M_AUTOLOGIN = %X'4000';
literal UAI$M_DISFORCE_PWD_CHANGE = %X'8000';
literal UAI$M_CAPTIVE = %X'10000';
literal UAI$M_DISIMAGE = %X'20000';
literal UAI$M_DISPWDDIC = %X'40000';
literal UAI$M_DISPWDHIS = %X'80000';
literal UAI$M_DEFCLSVAL = %X'100000';
literal UAI$M_EXTAUTH = %X'200000';
literal UAI$M_MIGRATEPWD = %X'400000';
literal UAI$M_VMSAUTH = %X'800000';
literal UAI$M_DISPWDSYNCH = %X'1000000';
literal UAI$M_PWDMIX = %X'2000000';
literal UAI$S_FLAGS = 4;                
macro UAI$V_DISCTLY = 0,0,1,0 %;        
macro UAI$V_DEFCLI = 0,1,1,0 %;         
macro UAI$V_LOCKPWD = 0,2,1,0 %;        
macro UAI$V_RESTRICTED = 0,3,1,0 %;     
macro UAI$V_DISACNT = 0,4,1,0 %;        
macro UAI$V_DISWELCOM = 0,5,1,0 %;      
macro UAI$V_DISMAIL = 0,6,1,0 %;        
macro UAI$V_NOMAIL = 0,7,1,0 %;         
macro UAI$V_GENPWD = 0,8,1,0 %;         
macro UAI$V_PWD_EXPIRED = 0,9,1,0 %;    
macro UAI$V_PWD2_EXPIRED = 0,10,1,0 %;  
macro UAI$V_AUDIT = 0,11,1,0 %;         
macro UAI$V_DISREPORT = 0,12,1,0 %;     
macro UAI$V_DISRECONNECT = 0,13,1,0 %;  
macro UAI$V_AUTOLOGIN = 0,14,1,0 %;     
macro UAI$V_DISFORCE_PWD_CHANGE = 0,15,1,0 %; 
macro UAI$V_CAPTIVE = 0,16,1,0 %;       
macro UAI$V_DISIMAGE = 0,17,1,0 %;      
macro UAI$V_DISPWDDIC = 0,18,1,0 %;     
macro UAI$V_DISPWDHIS = 0,19,1,0 %;     
macro UAI$V_DEFCLSVAL = 0,20,1,0 %;     
macro UAI$V_EXTAUTH = 0,21,1,0 %;       
macro UAI$V_MIGRATEPWD = 0,22,1,0 %;    
macro UAI$V_VMSAUTH = 0,23,1,0 %;       
macro UAI$V_DISPWDSYNCH = 0,24,1,0 %;   
macro UAI$V_PWDMIX = 0,25,1,0 %;        
literal UAI$S_PRIMEDAYS = 1;            
macro UAI$V_MONDAY = 0,0,1,0 %;         
macro UAI$V_TUESDAY = 0,1,1,0 %;        
macro UAI$V_WEDNESDAY = 0,2,1,0 %;
macro UAI$V_THURSDAY = 0,3,1,0 %;
macro UAI$V_FRIDAY = 0,4,1,0 %;
macro UAI$V_SATURDAY = 0,5,1,0 %;
macro UAI$V_SUNDAY = 0,6,1,0 %;
 

literal UIC$K_MAX_UIC = 1073741823;     
literal UIC$K_WILD_MEMBER = 65535;      
literal UIC$K_WILD_GROUP = 16383;       
literal UIC$K_UIC_FORMAT = 0;           
literal UIC$K_ID_FORMAT = 2;            
literal UIC$K_TYPE_SYSTEM = 8;          
literal UIC$K_TYPE_FACILITY = 9;        
literal UIC$K_TYPE_ARBITRARY = 10;      
literal UIC$K_FIRST_ID = -2147418112;   
literal UIC$K_LAST_ID = -1879048193;    
literal UIC$K_MATCH_ALL = -1;           
literal UIC$K_ASSIGN_SEVMS = 0;         
literal UIC$S_UICDEF = 4;
macro UIC$L_UIC = 0,0,32,0 %;           
macro UIC$W_MEM = 0,0,16,0 %;           
macro UIC$W_GRP = 2,0,16,0 %;           
macro UIC$V_MEMBER = 0,0,16,0 %;
literal UIC$S_MEMBER = 16;              
macro UIC$V_GROUP = 0,16,14,0 %;
literal UIC$S_GROUP = 14;               
macro UIC$V_FORMAT = 0,30,2,0 %;
literal UIC$S_FORMAT = 2;               
macro UIC$V_ID_CODE = 0,0,28,0 %;
literal UIC$S_ID_CODE = 28;             
macro UIC$V_ID_TYPE = 0,28,4,0 %;
literal UIC$S_ID_TYPE = 4;              
macro UIC$V_FAC_ID_CODE = 0,0,16,0 %;
literal UIC$S_FAC_ID_CODE = 16;         
macro UIC$V_FACILITY = 0,16,12,0 %;
literal UIC$S_FACILITY = 12;            
macro UIC$V_ARB_ID_CODE = 0,0,26,0 %;
literal UIC$S_ARB_ID_CODE = 26;         
macro UIC$V_ASSIGN_CODE = 0,26,2,0 %;
literal UIC$S_ASSIGN_CODE = 2;          
 
literal UID$K_ArchVersion = 1;          
literal UID$K_Apollo1 = 0;              
literal UID$K_Apollo2 = 1;
literal UID$K_Digital = 2;
literal UID$K_Microsoft = 3;
literal UID$K_LENGTH = 16;              
literal UID$S_UIDDEF = 16;
macro UID$q_timeAndVersion = 0,0,0,0 %;
literal UID$s_timeAndVersion = 8;       
macro UID$l_timeLow = 0,0,32,0 %;       
macro UID$w_timeMid = 4,0,16,0 %;       
macro UID$w_timeHiAndVersion = 6,0,16,0 %; 
macro UID$v_timeHi = 6,0,12,0 %;
literal UID$s_timeHi = 12;              
macro UID$V_Version = 6,12,4,0 %;
literal UID$S_Version = 4;              
macro UID$w_clockSeqAndReserved = 8,0,16,0 %; 
macro UID$b_clockSeqHiAndReserved = 8,0,8,0 %; 
macro UID$v_clockSeqHi = 8,0,6,0 %;
literal UID$s_clockSeqHi = 6;           
macro UID$V_Reserved = 8,6,2,0 %;
literal UID$S_Reserved = 2;             
macro UID$b_clockSeqLow = 9,0,8,0 %;    
macro UID$b_node = 10,0,0,0 %;
literal UID$s_node = 6;
macro UID$w_nodeHi = 10,0,16,0 %;       
macro UID$l_nodeLow = 12,0,32,0 %;      
 

literal USG$K_IDENT = 1;                
literal USG$K_FILE = 2;                 
literal USG$K_IDENT_LEN = 61;           
literal USG$C_IDENT_LEN = 61;           
literal USG$S_USGDEF = 61;
macro USG$B_TYPE = 0,0,8,0 %;           
macro USG$L_SERIALNUM = 1,0,32,0 %;     
macro USG$T_STRUCNAME = 5,0,0,0 %;
literal USG$S_STRUCNAME = 12;           
macro USG$T_VOLNAME = 17,0,0,0 %;
literal USG$S_VOLNAME = 12;             
macro USG$T_OWNERNAME = 29,0,0,0 %;
literal USG$S_OWNERNAME = 12;           
macro USG$T_FORMAT = 41,0,0,0 %;
literal USG$S_FORMAT = 12;              
macro USG$Q_TIME = 53,0,0,0 %;
literal USG$S_TIME = 8;                 
literal USG$K_FILE_LEN = 423;           
literal USG$C_FILE_LEN = 423;           
literal USG$S_USGDEF1 = 423;
macro USG$L_FILEOWNER = 1,0,32,0 %;     
macro USG$W_UICMEMBER = 1,0,16,0 %;     
macro USG$W_UICGROUP = 3,0,16,0 %;      
macro USG$L_ALLOCATED = 5,0,32,0 %;     
macro USG$L_USED = 9,0,32,0 %;          
macro USG$W_DIR_LEN = 13,0,16,0 %;      
macro USG$W_SPEC_LEN = 15,0,16,0 %;     
macro USG$T_FILESPEC = 17,0,0,0 %;
literal USG$S_FILESPEC = 406;           
 

literal USRI$M_DBG_MAPPED = %X'1';
literal USRI$S_USRIDEF = 1;
macro USRI$V_DBG_MAPPED = 0,0,1,0 %;    
%IF 0 %THEN 

literal VA$M_P1 = %X'40000000';
literal VA$M_SYSTEM = %X'80000000';
literal VA$M_BYTES_PER_PAGELET = %X'1FF';
literal VA$M_BYTE_IN_PAGELET = %X'1FF';
literal VA$M_VRN = %X'E000000000000000';
literal VA$C_VRN_SYSTEM = 7;            
literal VA$C_REGION_COUNT = 8;          
literal VA$M_VRNX = %X'F000000000000000';
literal VA$C_VRNX_SYSTEM = 15;          
literal VA$C_VRNX_COUNT = 16;           
literal VA$S_VADEF = 8;
literal VA$C_PAGELET_SIZE = 512;
literal VA$C_PAGELET_SHIFT_SIZE = 9;
literal VA$S_VA = 8;
macro VA$Q_QUAD = 0,0,0,0 %;
literal VA$S_QUAD = 8;
macro VA$V_P1 = 0,30,1,0 %;             
macro VA$V_SYSTEM = 0,31,1,0 %;         
macro VA$V_BYTES_PER_PAGELET = 0,0,9,0 %;
literal VA$S_BYTES_PER_PAGELET = 9;     
macro VA$V_BYTE_IN_PAGELET = 0,0,9,0 %;
literal VA$S_BYTE_IN_PAGELET = 9;       
macro VA$V_VRN = 4,29,3,0 %;
literal VA$S_VRN = 3;                   
macro VA$V_VRNX = 4,28,4,0 %;
literal VA$S_VRNX = 4;                  

literal VA$C_P0 = 0;                    
literal VA$C_P1 = 1;                    
literal VA$C_P2 = 2;                    
literal VA$M_DESCEND = %X'1';
literal VA$M_P0_SPACE = %X'2';
literal VA$M_P1_SPACE = %X'4';
literal VA$M_PERMANENT = %X'8';
literal VA$M_EXPAND_ON_ACCVIO = %X'10';
literal VA$M_SHARED_PTS = %X'40';
literal VA$M_OWNER_MODE = %X'F';
literal VA$M_CREATE_MODE = %X'F0';
literal VA$C_REGSUM_LENGTH = 40;
literal VA$_REGSUM_BY_ID = 0;
literal VA$_REGSUM_BY_VA = 1;
literal VA$_NEXT_REGSUM_BY_VA = 2;
literal VA$C_REGION_UCREATE_UOWN = 51;
literal VA$C_REGION_UCREATE_SOWN = 50;
literal VA$C_REGION_UCREATE_EOWN = 49;
literal VA$C_REGION_UCREATE_KOWN = 48;
literal VA$C_REGION_SCREATE_SOWN = 34;
literal VA$C_REGION_SCREATE_EOWN = 33;
literal VA$C_REGION_SCREATE_KOWN = 32;
literal VA$C_REGION_ECREATE_EOWN = 17;
literal VA$C_REGION_ECREATE_KOWN = 16;
literal VA$C_REGION_KCREATE_KOWN = 0;
literal VA$S_REGSUM = 40;
macro VA$Q_REGION_ID = 0,0,0,0 %;
literal VA$S_REGION_ID = 8;             
macro VA$L_FLAGS = 8,0,32,0 %;          
macro VA$V_DESCEND = 8,0,1,0 %;         
macro VA$V_P0_SPACE = 8,1,1,0 %;        
macro VA$V_P1_SPACE = 8,2,1,0 %;        
macro VA$V_PERMANENT = 8,3,1,0 %;       
macro VA$V_EXPAND_ON_ACCVIO = 8,4,1,0 %; 
macro VA$V_SHARED_PTS = 8,6,1,0 %;      
macro VA$L_REGION_PROTECTION = 12,0,32,1 %;
macro VA$V_OWNER_MODE = 12,0,4,0 %;
literal VA$S_OWNER_MODE = 4;            
macro VA$V_CREATE_MODE = 12,4,4,0 %;
literal VA$S_CREATE_MODE = 4;           
macro VA$PQ_START_VA = 16,0,0,1 %;
literal VA$S_START_VA = 8;              
macro VA$PS_START_VA = 16,0,32,1 %;     
macro VA$Q_REGION_SIZE = 24,0,0,0 %;
literal VA$S_REGION_SIZE = 8;           
macro VA$L_REGION_SIZE = 24,0,32,0 %;   
macro VA$PQ_FIRST_FREE_VA = 32,0,0,1 %;
literal VA$S_FIRST_FREE_VA = 8;         
macro VA$PS_FIRST_FREE_VA = 32,0,32,1 %; 

literal VA$M_NO_OVERMAP = %X'1';
literal VA$S_VA_FLAGS = 1;
macro VA$V_NO_OVERMAP = 0,0,1,0 %;      
%FI
 

literal VA_RANGE$S_VA_RANGE = 8;
macro VA_RANGE$PS_START_VA = 0,0,32,1 %; 
macro VA_RANGE$PS_END_VA = 4,0,32,1 %;  
literal VA_RANGE$K_LENGTH = 8;          
literal VA_RANGE$C_LENGTH = 8;          
 
literal VAX$C_V780 = 1;
literal VAX$K_V780 = 1;
literal VAX$C_V782 = 2;
literal VAX$K_V782 = 2;
literal VAX$C_V750 = 3;
literal VAX$K_V750 = 3;
literal VAX$C_V730 = 4;
literal VAX$K_V730 = 4;
literal VAX$C_V785 = 5;
literal VAX$K_V785 = 5;
literal VAX$C_VUV1 = 6;
literal VAX$K_VUV1 = 6;
literal VAX$C_VWS1 = 7;
literal VAX$K_VWS1 = 7;
literal VAX$C_VUV2 = 8;
literal VAX$K_VUV2 = 8;
literal VAX$C_VWS2 = 9;
literal VAX$K_VWS2 = 9;
literal VAX$C_VWSD = 10;
literal VAX$K_VWSD = 10;
literal VAX$C_V8600 = 11;
literal VAX$K_V8600 = 11;
literal VAX$C_V8650 = 12;
literal VAX$K_V8650 = 12;
literal VAX$C_V8200 = 13;
literal VAX$K_V8200 = 13;
literal VAX$C_V8300 = 14;
literal VAX$K_V8300 = 14;
literal VAX$C_V8530 = 15;
literal VAX$K_V8530 = 15;
literal VAX$C_V8550 = 16;
literal VAX$K_V8550 = 16;
literal VAX$C_V8700 = 17;
literal VAX$K_V8700 = 17;
literal VAX$C_V8800 = 18;
literal VAX$K_V8800 = 18;
literal VAX$C_VWS2000 = 19;
literal VAX$K_VWS2000 = 19;
literal VAX$C_VUV2000 = 20;
literal VAX$K_VUV2000 = 20;
literal VAX$C_VWSD2000 = 21;
literal VAX$K_VWSD2000 = 21;
literal VAX$C_V009 = 22;
literal VAX$K_V009 = 22;
literal VAX$C_V8250 = 23;
literal VAX$K_V8250 = 23;
literal VAX$C_V8350 = 24;
literal VAX$K_V8350 = 24;
literal VAX$C_V3600 = 25;
literal VAX$K_V3600 = 25;
literal VAX$C_V3600W = 26;
literal VAX$K_V3600W = 26;
literal VAX$C_V3600D = 27;
literal VAX$K_V3600D = 27;
literal VAX$K_V9CC = 28;
literal VAX$C_V9CC = 28;
literal VAX$K_V6210_T = 28;
literal VAX$C_V6210_T = 28;
literal VAX$K_V6210 = 28;
literal VAX$C_V6210 = 28;
literal VAX$C_V3520 = 29;
literal VAX$K_V3520 = 29;
literal VAX$C_V3520L = 30;
literal VAX$K_V3520L = 30;
literal VAX$K_V8PS = 31;
literal VAX$C_V8PS = 31;
literal VAX$K_V8840 = 31;
literal VAX$C_V8840 = 31;
literal VAX$K_V9RR = 32;
literal VAX$C_V9RR = 32;
literal VAX$K_VUV2_S = 33;
literal VAX$C_VUV2_S = 33;
literal VAX$K_VUV2_J = 34;
literal VAX$C_VUV2_J = 34;
literal VAX$K_VWS2_T = 35;
literal VAX$C_VWS2_T = 35;
literal VAX$K_VWS2_J = 36;
literal VAX$C_VWS2_J = 36;
literal VAX$K_VWSD_T = 37;
literal VAX$C_VWSD_T = 37;
literal VAX$K_VWSD_J = 38;
literal VAX$C_VWSD_J = 38;
literal VAX$K_VUV2000_S = 39;
literal VAX$C_VUV2000_S = 39;
literal VAX$K_VUV2000_J = 40;
literal VAX$C_VUV2000_J = 40;
literal VAX$K_VWS2000_T = 41;
literal VAX$C_VWS2000_T = 41;
literal VAX$K_VWS2000_J = 42;
literal VAX$C_VWS2000_J = 42;
literal VAX$K_VWSD2000_T = 43;
literal VAX$C_VWSD2000_T = 43;
literal VAX$K_VWSD2000_J = 44;
literal VAX$C_VWSD2000_J = 44;
literal VAX$K_V3600_S = 45;
literal VAX$C_V3600_S = 45;
literal VAX$K_V3600_J = 46;
literal VAX$C_V3600_J = 46;
literal VAX$K_V3600W_T = 47;
literal VAX$C_V3600W_T = 47;
literal VAX$K_V3600W_J = 48;
literal VAX$C_V3600W_J = 48;
literal VAX$K_V3600D_T = 49;
literal VAX$C_V3600D_T = 49;
literal VAX$K_V3600D_J = 50;
literal VAX$C_V3600D_J = 50;
literal VAX$K_V3520_S = 51;
literal VAX$C_V3520_S = 51;
literal VAX$K_V3520_J = 52;
literal VAX$C_V3520_J = 52;
literal VAX$K_V3520L_T = 53;
literal VAX$C_V3520L_T = 53;
literal VAX$K_V3520L_J = 54;
literal VAX$C_V3520L_J = 54;
literal VAX$K_V8250L = 55;
literal VAX$C_V8250L = 55;
literal VAX$K_V8250L_J = 56;
literal VAX$C_V8250L_J = 56;
literal VAX$K_VCV = 57;
literal VAX$C_VCV = 57;
literal VAX$K_VCVWS = 58;
literal VAX$C_VCVWS = 58;
literal VAX$K_VCVWSD = 59;
literal VAX$C_VCVWSD = 59;
literal VAX$K_VCV_S = 60;
literal VAX$C_VCV_S = 60;
literal VAX$K_VCV_J = 61;
literal VAX$C_VCV_J = 61;
literal VAX$K_VCVWS_T = 62;
literal VAX$C_VCVWS_T = 62;
literal VAX$K_VCVWS_J = 63;
literal VAX$C_VCVWS_J = 63;
literal VAX$K_VCVWSD_T = 64;
literal VAX$C_VCVWSD_T = 64;
literal VAX$K_VCVWSD_J = 65;
literal VAX$C_VCVWSD_J = 65;
literal VAX$C_V8500 = 66;
literal VAX$K_V8500 = 66;
literal VAX$K_V8370 = 67;
literal VAX$C_V8370 = 67;
literal VAX$K_V8650P = 68;
literal VAX$C_V8650P = 68;
literal VAX$K_V6220_T = 69;
literal VAX$C_V6220_T = 69;
literal VAX$K_V6220 = 69;
literal VAX$C_V6220 = 69;
literal VAX$K_V6230_T = 70;
literal VAX$C_V6230_T = 70;
literal VAX$K_V6230 = 70;
literal VAX$C_V6230 = 70;
literal VAX$K_V6240_T = 71;
literal VAX$C_V6240_T = 71;
literal VAX$K_V6240 = 71;
literal VAX$C_V6240 = 71;
literal VAX$K_V6250_T = 72;
literal VAX$C_V6250_T = 72;
literal VAX$K_V6250 = 72;
literal VAX$C_V6250 = 72;
literal VAX$K_V6260_T = 73;
literal VAX$C_V6260_T = 73;
literal VAX$K_V6260 = 73;
literal VAX$C_V6260 = 73;
literal VAX$K_V6270_T = 74;
literal VAX$C_V6270_T = 74;
literal VAX$K_V6270 = 74;
literal VAX$C_V6270 = 74;
literal VAX$K_V6280_T = 75;
literal VAX$C_V6280_T = 75;
literal VAX$K_V6280 = 75;
literal VAX$C_V6280 = 75;
literal VAX$K_V6310_T = 76;
literal VAX$C_V6310_T = 76;
literal VAX$K_V6215 = 76;
literal VAX$C_V6215 = 76;
literal VAX$K_V6320_T = 77;
literal VAX$C_V6320_T = 77;
literal VAX$K_V6225 = 77;
literal VAX$C_V6225 = 77;
literal VAX$K_V6330_T = 78;
literal VAX$C_V6330_T = 78;
literal VAX$K_V6235 = 78;
literal VAX$C_V6235 = 78;
literal VAX$K_V6340_T = 79;
literal VAX$C_V6340_T = 79;
literal VAX$K_V6245 = 79;
literal VAX$C_V6245 = 79;
literal VAX$K_V6350_T = 80;
literal VAX$C_V6350_T = 80;
literal VAX$K_V6255 = 80;
literal VAX$C_V6255 = 80;
literal VAX$K_V6360_T = 81;
literal VAX$C_V6360_T = 81;
literal VAX$K_V6265 = 81;
literal VAX$C_V6265 = 81;
literal VAX$K_V6370_T = 82;
literal VAX$C_V6370_T = 82;
literal VAX$K_V6275 = 82;
literal VAX$C_V6275 = 82;
literal VAX$K_V6380_T = 83;
literal VAX$C_V6380_T = 83;
literal VAX$K_V6285 = 83;
literal VAX$C_V6285 = 83;
literal VAX$K_V8810 = 84;
literal VAX$C_V8810 = 84;
literal VAX$K_V8820 = 85;
literal VAX$C_V8820 = 85;
literal VAX$K_V8830 = 86;
literal VAX$C_V8830 = 86;
literal VAX$C_V3400 = 87;
literal VAX$K_V3400 = 87;
literal VAX$C_V3400W = 88;
literal VAX$K_V3400W = 88;
literal VAX$C_V3400D = 89;
literal VAX$K_V3400D = 89;
literal VAX$K_V3400_S = 90;
literal VAX$C_V3400_S = 90;
literal VAX$K_V3400_J = 91;
literal VAX$C_V3400_J = 91;
literal VAX$K_V3400W_T = 92;
literal VAX$C_V3400W_T = 92;
literal VAX$K_V3400W_J = 93;
literal VAX$C_V3400W_J = 93;
literal VAX$K_V3400D_T = 94;
literal VAX$C_V3400D_T = 94;
literal VAX$K_V3400D_J = 95;
literal VAX$C_V3400D_J = 95;
literal VAX$K_VUV2000_O = 96;
literal VAX$C_VUV2000_O = 96;
literal VAX$K_VWS2000_O = 97;
literal VAX$C_VWS2000_O = 97;
literal VAX$K_VWSD2000_O = 98;
literal VAX$C_VWSD2000_O = 98;
literal VAX$C_VWSK2000 = 99;
literal VAX$K_VWSK2000 = 99;
literal VAX$K_V6210_S = 100;
literal VAX$C_V6210_S = 100;
literal VAX$K_V6220_S = 101;
literal VAX$C_V6220_S = 101;
literal VAX$K_V6230_S = 102;
literal VAX$C_V6230_S = 102;
literal VAX$K_V6240_S = 103;
literal VAX$C_V6240_S = 103;
literal VAX$K_V6250_S = 104;
literal VAX$C_V6250_S = 104;
literal VAX$K_V6260_S = 105;
literal VAX$C_V6260_S = 105;
literal VAX$K_V6270_S = 106;
literal VAX$C_V6270_S = 106;
literal VAX$K_V6280_S = 107;
literal VAX$C_V6280_S = 107;
literal VAX$K_V6310_S = 108;
literal VAX$C_V6310_S = 108;
literal VAX$K_V6215_S = 108;
literal VAX$C_V6215_S = 108;
literal VAX$K_V6320_S = 109;
literal VAX$C_V6320_S = 109;
literal VAX$K_V6225_S = 109;
literal VAX$C_V6225_S = 109;
literal VAX$K_V6330_S = 110;
literal VAX$C_V6330_S = 110;
literal VAX$K_V6235_S = 110;
literal VAX$C_V6235_S = 110;
literal VAX$K_V6340_S = 111;
literal VAX$C_V6340_S = 111;
literal VAX$K_V6245_S = 111;
literal VAX$C_V6245_S = 111;
literal VAX$K_V6350_S = 112;
literal VAX$C_V6350_S = 112;
literal VAX$K_V6255_S = 112;
literal VAX$C_V6255_S = 112;
literal VAX$K_V6360_S = 113;
literal VAX$C_V6360_S = 113;
literal VAX$K_V6265_S = 113;
literal VAX$C_V6265_S = 113;
literal VAX$K_V6370_S = 114;
literal VAX$C_V6370_S = 114;
literal VAX$K_V6275_S = 114;
literal VAX$C_V6275_S = 114;
literal VAX$K_V6380_S = 115;
literal VAX$C_V6380_S = 115;
literal VAX$K_V6285_S = 115;
literal VAX$C_V6285_S = 115;
literal VAX$K_V6200_J = 116;
literal VAX$C_V6200_J = 116;
literal VAX$K_V6300_J = 117;
literal VAX$C_V6300_J = 117;
literal VAX$K_V6205_J = 117;
literal VAX$C_V6205_J = 117;
literal VAX$C_V3900 = 118;
literal VAX$K_V3900 = 118;
literal VAX$K_V3900_S = 119;
literal VAX$C_V3900_S = 119;
literal VAX$C_V3900D = 120;
literal VAX$K_V3900D = 120;
literal VAX$K_V3900D_T = 121;
literal VAX$C_V3900D_T = 121;
literal VAX$K_V3900_J = 122;
literal VAX$C_V3900_J = 122;
literal VAX$K_V3900D_J = 123;
literal VAX$C_V3900D_J = 123;
literal VAX$C_V2000A = 124;
literal VAX$K_V2000A = 124;
literal VAX$K_V2000A_S = 125;
literal VAX$C_V2000A_S = 125;
literal VAX$C_V2000AW = 126;
literal VAX$K_V2000AW = 126;
literal VAX$C_V2000AD = 127;
literal VAX$K_V2000AD = 127;
literal VAX$K_V2000AW_T = 128;
literal VAX$C_V2000AW_T = 128;
literal VAX$K_V2000AD_T = 129;
literal VAX$C_V2000AD_T = 129;
literal VAX$K_V2000A_J = 130;
literal VAX$C_V2000A_J = 130;
literal VAX$K_V2000AW_J = 131;
literal VAX$C_V2000AW_J = 131;
literal VAX$K_V2000AD_J = 132;
literal VAX$C_V2000AD_J = 132;
literal VAX$C_V3540 = 133;
literal VAX$K_V3540 = 133;
literal VAX$K_V3540_S = 134;
literal VAX$C_V3540_S = 134;
literal VAX$C_V3540L = 135;
literal VAX$K_V3540L = 135;
literal VAX$K_V3540L_T = 136;
literal VAX$C_V3540L_T = 136;
literal VAX$C_V3560 = 137;
literal VAX$K_V3560 = 137;
literal VAX$K_V3560_S = 138;
literal VAX$C_V3560_S = 138;
literal VAX$C_V3560L = 139;
literal VAX$K_V3560L = 139;
literal VAX$K_V3560L_T = 140;
literal VAX$C_V3560L_T = 140;
literal VAX$C_V3580 = 141;
literal VAX$K_V3580 = 141;
literal VAX$K_V3580_S = 142;
literal VAX$C_V3580_S = 142;
literal VAX$C_V3580L = 143;
literal VAX$K_V3580L = 143;
literal VAX$K_V3580L_T = 144;
literal VAX$C_V3580L_T = 144;
literal VAX$C_V35A0 = 145;
literal VAX$K_V35A0 = 145;
literal VAX$K_V35A0_S = 146;
literal VAX$C_V35A0_S = 146;
literal VAX$K_VPV = 147;
literal VAX$C_VPV = 147;
literal VAX$K_VPVWS = 148;
literal VAX$C_VPVWS = 148;
literal VAX$K_VPVWSD = 149;
literal VAX$C_VPVWSD = 149;
literal VAX$K_VPV_S = 150;
literal VAX$C_VPV_S = 150;
literal VAX$K_VPV_J = 151;
literal VAX$C_VPV_J = 151;
literal VAX$K_VPVWS_T = 152;
literal VAX$C_VPVWS_T = 152;
literal VAX$K_VPVWS_J = 153;
literal VAX$C_VPVWS_J = 153;
literal VAX$K_VPVWSD_T = 154;
literal VAX$C_VPVWSD_T = 154;
literal VAX$K_VPVWSD_J = 155;
literal VAX$C_VPVWSD_J = 155;
literal VAX$K_VTM = 156;
literal VAX$C_VTM = 156;
literal VAX$K_VTM_S = 157;
literal VAX$C_VTM_S = 157;
literal VAX$K_VTM_J = 158;
literal VAX$C_VTM_J = 158;
literal VAX$K_V9RR10_T = 159;
literal VAX$C_V9RR10_T = 159;
literal VAX$K_V9RR20_T = 160;
literal VAX$C_V9RR20_T = 160;
literal VAX$K_V9RR30_T = 161;
literal VAX$C_V9RR30_T = 161;
literal VAX$K_V9RR40_T = 162;
literal VAX$C_V9RR40_T = 162;
literal VAX$K_V9RR50_T = 163;
literal VAX$C_V9RR50_T = 163;
literal VAX$K_V9RR60_T = 164;
literal VAX$C_V9RR60_T = 164;
literal VAX$K_V9RR70_T = 165;
literal VAX$C_V9RR70_T = 165;
literal VAX$K_V9RR80_T = 166;
literal VAX$C_V9RR80_T = 166;
literal VAX$K_V9RR10_S = 167;
literal VAX$C_V9RR10_S = 167;
literal VAX$K_V9RR20_S = 168;
literal VAX$C_V9RR20_S = 168;
literal VAX$K_V9RR30_S = 169;
literal VAX$C_V9RR30_S = 169;
literal VAX$K_V9RR40_S = 170;
literal VAX$C_V9RR40_S = 170;
literal VAX$K_V9RR50_S = 171;
literal VAX$C_V9RR50_S = 171;
literal VAX$K_V9RR60_S = 172;
literal VAX$C_V9RR60_S = 172;
literal VAX$K_V9RR70_S = 173;
literal VAX$C_V9RR70_S = 173;
literal VAX$K_V9RR80_S = 174;
literal VAX$C_V9RR80_S = 174;
literal VAX$K_V9RR10_J = 175;
literal VAX$C_V9RR10_J = 175;
literal VAX$K_V9AR10 = 176;
literal VAX$C_V9AR10 = 176;
literal VAX$K_V9AR20 = 177;
literal VAX$C_V9AR20 = 177;
literal VAX$K_V9AQ10 = 178;
literal VAX$C_V9AQ10 = 178;
literal VAX$K_V9AQ20 = 179;
literal VAX$C_V9AQ20 = 179;
literal VAX$K_V9AQ30 = 180;
literal VAX$C_V9AQ30 = 180;
literal VAX$K_V9AQ40 = 181;
literal VAX$C_V9AQ40 = 181;
literal VAX$K_V6305E_T = 182;
literal VAX$C_V6305E_T = 182;
literal VAX$K_V6305E_S = 183;
literal VAX$C_V6305E_S = 183;
literal VAX$K_V6305E_J = 184;
literal VAX$C_V6305E_J = 184;
literal VAX$K_V1202_1T = 185;
literal VAX$C_V1202_1T = 185;
literal VAX$K_V1202_2T = 186;
literal VAX$C_V1202_2T = 186;
literal VAX$K_V1202_3T = 187;
literal VAX$C_V1202_3T = 187;
literal VAX$K_V1202_4T = 188;
literal VAX$C_V1202_4T = 188;
literal VAX$K_V1202_5T = 189;
literal VAX$C_V1202_5T = 189;
literal VAX$K_V1202_6T = 190;
literal VAX$C_V1202_6T = 190;
literal VAX$K_V1202_7T = 191;
literal VAX$C_V1202_7T = 191;
literal VAX$K_V1202_8T = 192;
literal VAX$C_V1202_8T = 192;
literal VAX$K_V1202_1S = 193;
literal VAX$C_V1202_1S = 193;
literal VAX$K_V1202_2S = 194;
literal VAX$C_V1202_2S = 194;
literal VAX$K_V1202_3S = 195;
literal VAX$C_V1202_3S = 195;
literal VAX$K_V1202_4S = 196;
literal VAX$C_V1202_4S = 196;
literal VAX$K_V1202_5S = 197;
literal VAX$C_V1202_5S = 197;
literal VAX$K_V1202_6S = 198;
literal VAX$C_V1202_6S = 198;
literal VAX$K_V1202_7S = 199;
literal VAX$C_V1202_7S = 199;
literal VAX$K_V1202_8S = 200;
literal VAX$C_V1202_8S = 200;
literal VAX$K_V1202_1J = 201;
literal VAX$C_V1202_1J = 201;
literal VAX$K_VPV2M_S = 202;
literal VAX$C_VPV2M_S = 202;
literal VAX$K_VPV2M_T = 203;
literal VAX$C_VPV2M_T = 203;
literal VAX$K_VPV2M_J = 204;
literal VAX$C_VPV2M_J = 204;
literal VAX$K_VPV2C_S = 205;
literal VAX$C_VPV2C_S = 205;
literal VAX$K_VPV2C_T = 206;
literal VAX$C_VPV2C_T = 206;
literal VAX$K_VPV2C_J = 207;
literal VAX$C_VPV2C_J = 207;
literal VAX$K_VPV2_S = 208;
literal VAX$C_VPV2_S = 208;
literal VAX$K_VPV2_T = 209;
literal VAX$C_VPV2_T = 209;
literal VAX$K_VPV2_J = 210;
literal VAX$C_VPV2_J = 210;
literal VAX$K_V4500 = 211;
literal VAX$C_V4500 = 211;
literal VAX$C_V670 = 211;
literal VAX$K_V670 = 211;
literal VAX$K_V4500_S = 212;
literal VAX$C_V4500_S = 212;
literal VAX$K_V670_S = 212;
literal VAX$C_V670_S = 212;
literal VAX$K_V4500_J = 213;
literal VAX$C_V4500_J = 213;
literal VAX$K_V670_J = 213;
literal VAX$C_V670_J = 213;
literal VAX$K_V520FT = 214;
literal VAX$C_V520FT = 214;
literal VAX$K_VRMAXM_S = 215;
literal VAX$C_VRMAXM_S = 215;
literal VAX$K_VRMAXM_T = 216;
literal VAX$C_VRMAXM_T = 216;
literal VAX$K_VRMAXM_J = 217;
literal VAX$C_VRMAXM_J = 217;
literal VAX$K_VRMAXS_S = 218;
literal VAX$C_VRMAXS_S = 218;
literal VAX$K_VRMAXS_T = 219;
literal VAX$C_VRMAXS_T = 219;
literal VAX$K_VRMAXS_J = 220;
literal VAX$C_VRMAXS_J = 220;
literal VAX$K_VRMAX_S = 221;
literal VAX$C_VRMAX_S = 221;
literal VAX$K_VRMAX_T = 222;
literal VAX$C_VRMAX_T = 222;
literal VAX$K_VRMAX_J = 223;
literal VAX$C_VRMAX_J = 223;
literal VAX$K_VRMAXD_S = 224;
literal VAX$C_VRMAXD_S = 224;
literal VAX$K_VRMAXD_T = 225;
literal VAX$C_VRMAXD_T = 225;
literal VAX$K_VRMAXD_J = 226;
literal VAX$C_VRMAXD_J = 226;
literal VAX$K_VPV0S_S = 227;
literal VAX$C_VPV0S_S = 227;
literal VAX$K_VPV0S_T = 228;
literal VAX$C_VPV0S_T = 228;
literal VAX$K_VPV0S_J = 229;
literal VAX$C_VPV0S_J = 229;
literal VAX$K_VPV1S_S = 230;
literal VAX$C_VPV1S_S = 230;
literal VAX$K_VPV1S_T = 231;
literal VAX$C_VPV1S_T = 231;
literal VAX$K_VPV1S_J = 232;
literal VAX$C_VPV1S_J = 232;
literal VAX$K_VPV2S_S = 233;
literal VAX$C_VPV2S_S = 233;
literal VAX$K_VPV2S_T = 234;
literal VAX$C_VPV2S_T = 234;
literal VAX$K_VPV2S_J = 235;
literal VAX$C_VPV2S_J = 235;
literal VAX$K_VKA46M_S = 236;
literal VAX$C_VKA46M_S = 236;
literal VAX$K_VKA46M_T = 237;
literal VAX$C_VKA46M_T = 237;
literal VAX$K_VKA46M_J = 238;
literal VAX$C_VKA46M_J = 238;
literal VAX$K_VKA46C_S = 239;
literal VAX$C_VKA46C_S = 239;
literal VAX$K_VKA46C_T = 240;
literal VAX$C_VKA46C_T = 240;
literal VAX$K_VKA46C_J = 241;
literal VAX$C_VKA46C_J = 241;
literal VAX$K_VKA46S_S = 242;
literal VAX$C_VKA46S_S = 242;
literal VAX$K_VKA46S_T = 243;
literal VAX$C_VKA46S_T = 243;
literal VAX$K_VKA46S_J = 244;
literal VAX$C_VKA46S_J = 244;
literal VAX$K_VKA46_S = 245;
literal VAX$C_VKA46_S = 245;
literal VAX$K_VKA46_T = 246;
literal VAX$C_VKA46_T = 246;
literal VAX$K_VKA46_J = 247;
literal VAX$C_VKA46_J = 247;
literal VAX$C_V660 = 248;
literal VAX$K_V660 = 248;
literal VAX$K_V660_S = 249;
literal VAX$C_V660_S = 249;
literal VAX$K_V660_J = 250;
literal VAX$C_V660_J = 250;
literal VAX$C_V3820 = 251;
literal VAX$K_V3820 = 251;
literal VAX$C_V3820L = 252;
literal VAX$K_V3820L = 252;
literal VAX$K_V3820_S = 253;
literal VAX$C_V3820_S = 253;
literal VAX$K_V3820_J = 254;
literal VAX$C_V3820_J = 254;
literal VAX$K_V3820L_T = 255;
literal VAX$C_V3820L_T = 255;
literal VAX$K_V3820L_J = 256;
literal VAX$C_V3820L_J = 256;
literal VAX$C_V3840 = 257;
literal VAX$K_V3840 = 257;
literal VAX$K_V3840_S = 258;
literal VAX$C_V3840_S = 258;
literal VAX$C_V3840L = 259;
literal VAX$K_V3840L = 259;
literal VAX$K_V3840L_T = 260;
literal VAX$C_V3840L_T = 260;
literal VAX$C_V3860 = 261;
literal VAX$K_V3860 = 261;
literal VAX$K_V3860_S = 262;
literal VAX$C_V3860_S = 262;
literal VAX$C_V3860L = 263;
literal VAX$K_V3860L = 263;
literal VAX$K_V3860L_T = 264;
literal VAX$C_V3860L_T = 264;
literal VAX$C_V3880 = 265;
literal VAX$K_V3880 = 265;
literal VAX$K_V3880_S = 266;
literal VAX$C_V3880_S = 266;
literal VAX$C_V3880L = 267;
literal VAX$K_V3880L = 267;
literal VAX$K_V3880L_T = 268;
literal VAX$C_V3880L_T = 268;
literal VAX$C_V38A0 = 269;
literal VAX$K_V38A0 = 269;
literal VAX$K_V38A0_S = 270;
literal VAX$C_V38A0_S = 270;
literal VAX$C_VPV1A = 271;
literal VAX$K_VPV1A = 271;
literal VAX$C_VPV1AW = 272;
literal VAX$K_VPV1AW = 272;
literal VAX$C_VPV1AD = 273;
literal VAX$K_VPV1AD = 273;
literal VAX$C_VPV1A_S = 274;
literal VAX$K_VPV1A_S = 274;
literal VAX$K_VPV1A_J = 275;
literal VAX$C_VPV1A_J = 275;
literal VAX$K_VPV1AW_T = 276;
literal VAX$C_VPV1AW_T = 276;
literal VAX$K_VPV1AW_J = 277;
literal VAX$C_VPV1AW_J = 277;
literal VAX$K_VPV1AD_T = 278;
literal VAX$C_VPV1AD_T = 278;
literal VAX$K_VPV1AD_J = 279;
literal VAX$C_VPV1AD_J = 279;
literal VAX$K_VPV1AS = 280;
literal VAX$C_VPV1AS = 280;
literal VAX$K_VPV1AS_T = 281;
literal VAX$C_VPV1AS_T = 281;
literal VAX$K_VPV1AS_J = 282;
literal VAX$C_VPV1AS_J = 282;
literal VAX$C_V690 = 283;
literal VAX$K_V690 = 283;
literal VAX$K_V690_S = 284;
literal VAX$C_V690_S = 284;
literal VAX$K_V690_J = 285;
literal VAX$C_V690_J = 285;
literal VAX$C_V680 = 286;
literal VAX$K_V680 = 286;
literal VAX$K_V680_S = 287;
literal VAX$C_V680_S = 287;
literal VAX$K_V680_J = 288;
literal VAX$C_V680_J = 288;
literal VAX$K_V520FT_S = 289;
literal VAX$C_V520FT_S = 289;
literal VAX$K_VFT110_T = 290;
literal VAX$C_VFT110_T = 290;
literal VAX$K_VFT110_S = 291;
literal VAX$C_VFT110_S = 291;
literal VAX$K_VFT210_T = 292;
literal VAX$C_VFT210_T = 292;
literal VAX$K_VFT210_S = 293;
literal VAX$C_VFT210_S = 293;
literal VAX$K_V1302_1T = 294;
literal VAX$C_V1302_1T = 294;
literal VAX$K_V1302_2T = 295;
literal VAX$C_V1302_2T = 295;
literal VAX$K_V1302_3T = 296;
literal VAX$C_V1302_3T = 296;
literal VAX$K_V1302_4T = 297;
literal VAX$C_V1302_4T = 297;
literal VAX$K_V1302_5T = 298;
literal VAX$C_V1302_5T = 298;
literal VAX$K_V1302_6T = 299;
literal VAX$C_V1302_6T = 299;
literal VAX$K_V1302_7T = 300;
literal VAX$C_V1302_7T = 300;
literal VAX$K_V1302_8T = 301;
literal VAX$C_V1302_8T = 301;
literal VAX$K_V1302_1S = 302;
literal VAX$C_V1302_1S = 302;
literal VAX$K_V1302_2S = 303;
literal VAX$C_V1302_2S = 303;
literal VAX$K_V1302_3S = 304;
literal VAX$C_V1302_3S = 304;
literal VAX$K_V1302_4S = 305;
literal VAX$C_V1302_4S = 305;
literal VAX$K_V1302_5S = 306;
literal VAX$C_V1302_5S = 306;
literal VAX$K_V1302_6S = 307;
literal VAX$C_V1302_6S = 307;
literal VAX$K_V1302_7S = 308;
literal VAX$C_V1302_7S = 308;
literal VAX$K_V1302_8S = 309;
literal VAX$C_V1302_8S = 309;
literal VAX$K_V1302_1J = 310;
literal VAX$C_V1302_1J = 310;
literal VAX$K_V9AQII10 = 311;
literal VAX$C_V9AQII10 = 311;
literal VAX$K_V9AQII20 = 312;
literal VAX$C_V9AQII20 = 312;
literal VAX$K_V9AQII30 = 313;
literal VAX$C_V9AQII30 = 313;
literal VAX$K_V9AQII40 = 314;
literal VAX$C_V9AQII40 = 314;
literal VAX$K_V9ARII10 = 315;
literal VAX$C_V9ARII10 = 315;
literal VAX$K_V9ARII20 = 316;
literal VAX$C_V9ARII20 = 316;
literal VAX$K_V9AQIII10 = 317;
literal VAX$C_V9AQIII10 = 317;
literal VAX$K_V9AQIII20 = 318;
literal VAX$C_V9AQIII20 = 318;
literal VAX$K_V9AQIII30 = 319;
literal VAX$C_V9AQIII30 = 319;
literal VAX$K_V9AQIII40 = 320;
literal VAX$C_V9AQIII40 = 320;
literal VAX$K_V9ARIII10 = 321;
literal VAX$C_V9ARIII10 = 321;
literal VAX$K_V9ARIII20 = 322;
literal VAX$C_V9ARIII20 = 322;
literal VAX$K_VFT410_T = 323;
literal VAX$C_VFT410_T = 323;
literal VAX$K_VFT410_S = 324;
literal VAX$C_VFT410_S = 324;
literal VAX$K_VFT510_T = 325;
literal VAX$C_VFT510_T = 325;
literal VAX$K_VFT510_S = 326;
literal VAX$C_VFT510_S = 326;
literal VAX$K_VFT610_T = 327;
literal VAX$C_VFT610_T = 327;
literal VAX$K_VFT610_S = 328;
literal VAX$C_VFT610_S = 328;
literal VAX$K_VFT612_T = 329;
literal VAX$C_VFT612_T = 329;
literal VAX$K_VFT612_S = 330;
literal VAX$C_VFT612_S = 330;
literal VAX$K_VFT710_T = 331;
literal VAX$C_VFT710_T = 331;
literal VAX$K_VFT710_S = 332;
literal VAX$C_VFT710_S = 332;
literal VAX$K_VFT712_T = 333;
literal VAX$C_VFT712_T = 333;
literal VAX$K_VFT712_S = 334;
literal VAX$C_VFT712_S = 334;
literal VAX$K_VKA48_T = 335;
literal VAX$C_VKA48_T = 335;
literal VAX$K_VKA48_S = 336;
literal VAX$C_VKA48_S = 336;
literal VAX$K_VKA48_J = 337;
literal VAX$C_VKA48_J = 337;
literal VAX$K_VKA48W_T = 338;
literal VAX$C_VKA48W_T = 338;
literal VAX$K_VKA48W_S = 339;
literal VAX$C_VKA48W_S = 339;
literal VAX$K_VKA48W_J = 340;
literal VAX$C_VKA48W_J = 340;
literal VAX$K_V9AR10_S = 341;
literal VAX$C_V9AR10_S = 341;
literal VAX$K_V9AR20_S = 342;
literal VAX$C_V9AR20_S = 342;
literal VAX$K_V9AQ10_S = 343;
literal VAX$C_V9AQ10_S = 343;
literal VAX$K_V9AQ20_S = 344;
literal VAX$C_V9AQ20_S = 344;
literal VAX$K_V9AQ30_S = 345;
literal VAX$C_V9AQ30_S = 345;
literal VAX$K_V9AQ40_S = 346;
literal VAX$C_V9AQ40_S = 346;
literal VAX$K_V9ARII10_S = 347;
literal VAX$C_V9ARII10_S = 347;
literal VAX$K_V9ARII20_S = 348;
literal VAX$C_V9ARII20_S = 348;
literal VAX$K_V9AQII10_S = 349;
literal VAX$C_V9AQII10_S = 349;
literal VAX$K_V9AQII20_S = 350;
literal VAX$C_V9AQII20_S = 350;
literal VAX$K_V9AQII30_S = 351;
literal VAX$C_V9AQII30_S = 351;
literal VAX$K_V9AQII40_S = 352;
literal VAX$C_V9AQII40_S = 352;
literal VAX$K_V9ARIII10_S = 353;
literal VAX$C_V9ARIII10_S = 353;
literal VAX$K_V9ARIII20_S = 354;
literal VAX$C_V9ARIII20_S = 354;
literal VAX$K_V9AQIII10_S = 355;
literal VAX$C_V9AQIII10_S = 355;
literal VAX$K_V9AQIII20_S = 356;
literal VAX$C_V9AQIII20_S = 356;
literal VAX$K_V9AQIII30_S = 357;
literal VAX$C_V9AQIII30_S = 357;
literal VAX$K_V9AQIII40_S = 358;
literal VAX$C_V9AQIII40_S = 358;
literal VAX$K_V1701_1T = 359;
literal VAX$C_V1701_1T = 359;
literal VAX$K_V1701_2T = 360;
literal VAX$C_V1701_2T = 360;
literal VAX$K_V1701_3T = 361;
literal VAX$C_V1701_3T = 361;
literal VAX$K_V1701_4T = 362;
literal VAX$C_V1701_4T = 362;
literal VAX$K_V1701_5T = 363;
literal VAX$C_V1701_5T = 363;
literal VAX$K_V1701_6T = 364;
literal VAX$C_V1701_6T = 364;
literal VAX$K_V1701_7T = 365;
literal VAX$C_V1701_7T = 365;
literal VAX$K_V1701_8T = 366;
literal VAX$C_V1701_8T = 366;
literal VAX$K_V1701_1S = 367;
literal VAX$C_V1701_1S = 367;
literal VAX$K_V1701_2S = 368;
literal VAX$C_V1701_2S = 368;
literal VAX$K_V1701_3S = 369;
literal VAX$C_V1701_3S = 369;
literal VAX$K_V1701_4S = 370;
literal VAX$C_V1701_4S = 370;
literal VAX$K_V1701_5S = 371;
literal VAX$C_V1701_5S = 371;
literal VAX$K_V1701_6S = 372;
literal VAX$C_V1701_6S = 372;
literal VAX$K_V1701_7S = 373;
literal VAX$C_V1701_7S = 373;
literal VAX$K_V1701_8S = 374;
literal VAX$C_V1701_8S = 374;
literal VAX$K_V1701_1J = 375;
literal VAX$C_V1701_1J = 375;
literal VAX$K_VKA49C_S = 376;
literal VAX$C_VKA49C_S = 376;
literal VAX$K_VKA49C_T = 377;
literal VAX$C_VKA49C_T = 377;
literal VAX$K_VKA49C_J = 378;
literal VAX$C_VKA49C_J = 378;
literal VAX$K_VKA49S_S = 379;
literal VAX$C_VKA49S_S = 379;
literal VAX$K_VKA49S_T = 380;
literal VAX$C_VKA49S_T = 380;
literal VAX$K_VKA49S_J = 381;
literal VAX$C_VKA49S_J = 381;
literal VAX$C_VKA50 = 382;
literal VAX$K_VKA50 = 382;
literal VAX$K_VKA50_S = 383;
literal VAX$C_VKA50_S = 383;
literal VAX$K_VKA50_J = 384;
literal VAX$C_VKA50_J = 384;
literal VAX$C_VKA51 = 385;
literal VAX$K_VKA51 = 385;
literal VAX$K_VKA51_S = 386;
literal VAX$C_VKA51_S = 386;
literal VAX$K_VKA51_J = 387;
literal VAX$C_VKA51_J = 387;
literal VAX$C_VKA52 = 388;
literal VAX$K_VKA52 = 388;
literal VAX$K_VKA52_S = 389;
literal VAX$C_VKA52_S = 389;
literal VAX$K_VKA52_J = 390;
literal VAX$C_VKA52_J = 390;
literal VAX$C_VKA53 = 391;
literal VAX$K_VKA53 = 391;
literal VAX$K_VKA53_S = 392;
literal VAX$C_VKA53_S = 392;
literal VAX$K_VKA53_J = 393;
literal VAX$C_VKA53_J = 393;
literal VAX$C_VKA675 = 394;
literal VAX$K_VKA675 = 394;
literal VAX$K_VKA675_S = 395;
literal VAX$C_VKA675_S = 395;
literal VAX$K_VKA675_J = 396;
literal VAX$C_VKA675_J = 396;
literal VAX$K_V1703_1T = 397;
literal VAX$C_V1703_1T = 397;
literal VAX$K_V1703_2T = 398;
literal VAX$C_V1703_2T = 398;
literal VAX$K_V1703_3T = 399;
literal VAX$C_V1703_3T = 399;
literal VAX$K_V1703_4T = 400;
literal VAX$C_V1703_4T = 400;
literal VAX$K_V1703_5T = 401;
literal VAX$C_V1703_5T = 401;
literal VAX$K_V1703_6T = 402;
literal VAX$C_V1703_6T = 402;
literal VAX$K_V1703_7T = 403;
literal VAX$C_V1703_7T = 403;
literal VAX$K_V1703_8T = 404;
literal VAX$C_V1703_8T = 404;
literal VAX$K_V1703_1S = 405;
literal VAX$C_V1703_1S = 405;
literal VAX$K_V1703_2S = 406;
literal VAX$C_V1703_2S = 406;
literal VAX$K_V1703_3S = 407;
literal VAX$C_V1703_3S = 407;
literal VAX$K_V1703_4S = 408;
literal VAX$C_V1703_4S = 408;
literal VAX$K_V1703_5S = 409;
literal VAX$C_V1703_5S = 409;
literal VAX$K_V1703_6S = 410;
literal VAX$C_V1703_6S = 410;
literal VAX$K_V1703_7S = 411;
literal VAX$C_V1703_7S = 411;
literal VAX$K_V1703_8S = 412;
literal VAX$C_V1703_8S = 412;
literal VAX$K_V1703_1J = 413;
literal VAX$C_V1703_1J = 413;
literal VAX$K_VPCVAX_T = 414;
literal VAX$C_VPCVAX_T = 414;
literal VAX$K_VPCVAX_J = 415;
literal VAX$C_VPCVAX_J = 415;
literal VAX$K_V1704_1T = 416;
literal VAX$C_V1704_1T = 416;
literal VAX$K_V1704_2T = 417;
literal VAX$C_V1704_2T = 417;
literal VAX$K_V1704_3T = 418;
literal VAX$C_V1704_3T = 418;
literal VAX$K_V1704_4T = 419;
literal VAX$C_V1704_4T = 419;
literal VAX$K_V1704_5T = 420;
literal VAX$C_V1704_5T = 420;
literal VAX$K_V1704_6T = 421;
literal VAX$C_V1704_6T = 421;
literal VAX$K_V1704_7T = 422;
literal VAX$C_V1704_7T = 422;
literal VAX$K_V1704_8T = 423;
literal VAX$C_V1704_8T = 423;
literal VAX$K_V1704_1S = 424;
literal VAX$C_V1704_1S = 424;
literal VAX$K_V1704_2S = 425;
literal VAX$C_V1704_2S = 425;
literal VAX$K_V1704_3S = 426;
literal VAX$C_V1704_3S = 426;
literal VAX$K_V1704_4S = 427;
literal VAX$C_V1704_4S = 427;
literal VAX$K_V1704_5S = 428;
literal VAX$C_V1704_5S = 428;
literal VAX$K_V1704_6S = 429;
literal VAX$C_V1704_6S = 429;
literal VAX$K_V1704_7S = 430;
literal VAX$C_V1704_7S = 430;
literal VAX$K_V1704_8S = 431;
literal VAX$C_V1704_8S = 431;
literal VAX$K_V1704_1J = 432;
literal VAX$C_V1704_1J = 432;
literal VAX$K_V1705_1T = 433;
literal VAX$C_V1705_1T = 433;
literal VAX$K_V1705_2T = 434;
literal VAX$C_V1705_2T = 434;
literal VAX$K_V1705_3T = 435;
literal VAX$C_V1705_3T = 435;
literal VAX$K_V1705_4T = 436;
literal VAX$C_V1705_4T = 436;
literal VAX$K_V1705_5T = 437;
literal VAX$C_V1705_5T = 437;
literal VAX$K_V1705_6T = 438;
literal VAX$C_V1705_6T = 438;
literal VAX$K_V1705_7T = 439;
literal VAX$C_V1705_7T = 439;
literal VAX$K_V1705_8T = 440;
literal VAX$C_V1705_8T = 440;
literal VAX$K_V1705_1S = 441;
literal VAX$C_V1705_1S = 441;
literal VAX$K_V1705_2S = 442;
literal VAX$C_V1705_2S = 442;
literal VAX$K_V1705_3S = 443;
literal VAX$C_V1705_3S = 443;
literal VAX$K_V1705_4S = 444;
literal VAX$C_V1705_4S = 444;
literal VAX$K_V1705_5S = 445;
literal VAX$C_V1705_5S = 445;
literal VAX$K_V1705_6S = 446;
literal VAX$C_V1705_6S = 446;
literal VAX$K_V1705_7S = 447;
literal VAX$C_V1705_7S = 447;
literal VAX$K_V1705_8S = 448;
literal VAX$C_V1705_8S = 448;
literal VAX$K_V1705_1J = 449;
literal VAX$C_V1705_1J = 449;
literal VAX$C_VKA676 = 450;
literal VAX$K_VKA676 = 450;
literal VAX$K_VKA676_S = 451;
literal VAX$C_VKA676_S = 451;
literal VAX$K_VKA676_J = 452;
literal VAX$C_VKA676_J = 452;
literal VAX$C_VKA681 = 453;
literal VAX$K_VKA681 = 453;
literal VAX$K_VKA681_S = 454;
literal VAX$C_VKA681_S = 454;
literal VAX$K_VKA681_J = 455;
literal VAX$C_VKA681_J = 455;
literal VAX$C_VKA691 = 456;
literal VAX$K_VKA691 = 456;
literal VAX$K_VKA691_S = 457;
literal VAX$C_VKA691_S = 457;
literal VAX$K_VKA691_J = 458;
literal VAX$C_VKA691_J = 458;
literal VAX$C_VKA692 = 459;
literal VAX$K_VKA692 = 459;
literal VAX$K_VKA692_S = 460;
literal VAX$C_VKA692_S = 460;
literal VAX$K_VKA692_J = 461;
literal VAX$C_VKA692_J = 461;
literal VAX$C_VKA600 = 462;
literal VAX$K_VKA600 = 462;
literal VAX$K_VKA600_S = 463;
literal VAX$C_VKA600_S = 463;
literal VAX$K_VKA600_J = 464;
literal VAX$C_VKA600_J = 464;
literal VAX$C_VKA605 = 465;
literal VAX$K_VKA605 = 465;
literal VAX$K_VKA605_S = 466;
literal VAX$C_VKA605_S = 466;
literal VAX$K_VKA605_J = 467;
literal VAX$C_VKA605_J = 467;
literal VAX$C_VKA52A = 468;
literal VAX$K_VKA52A = 468;
literal VAX$K_VKA52A_S = 469;
literal VAX$C_VKA52A_S = 469;
literal VAX$K_VKA52A_J = 470;
literal VAX$C_VKA52A_J = 470;
literal VAX$K_VFT810_T = 471;
literal VAX$C_VFT810_T = 471;
literal VAX$K_VFT810_S = 472;
literal VAX$C_VFT810_S = 472;
literal VAX$K_VFT812_T = 473;
literal VAX$C_VFT812_T = 473;
literal VAX$K_VFT812_S = 474;
literal VAX$C_VFT812_S = 474;
literal VAX$K_VKA49AC_S = 475;
literal VAX$C_VKA49AC_S = 475;
literal VAX$K_VKA49AC_T = 476;
literal VAX$C_VKA49AC_T = 476;
literal VAX$K_VKA49AC_J = 477;
literal VAX$C_VKA49AC_J = 477;
literal VAX$K_VKA49AS_S = 478;
literal VAX$C_VKA49AS_S = 478;
literal VAX$K_VKA49AS_T = 479;
literal VAX$C_VKA49AS_T = 479;
literal VAX$K_VKA49AS_J = 480;
literal VAX$C_VKA49AS_J = 480;
literal VAX$K_VKA49BC_S = 481;
literal VAX$C_VKA49BC_S = 481;
literal VAX$K_VKA49BC_T = 482;
literal VAX$C_VKA49BC_T = 482;
literal VAX$K_VKA49BC_J = 483;
literal VAX$C_VKA49BC_J = 483;
literal VAX$K_VKA49BS_S = 484;
literal VAX$C_VKA49BS_S = 484;
literal VAX$K_VKA49BS_T = 485;
literal VAX$C_VKA49BS_T = 485;
literal VAX$K_VKA49BS_J = 486;
literal VAX$C_VKA49BS_J = 486;
literal VAX$C_VKA54 = 487;
literal VAX$K_VKA54 = 487;
literal VAX$K_VKA54_S = 488;
literal VAX$C_VKA54_S = 488;
literal VAX$K_VKA54_J = 489;
literal VAX$C_VKA54_J = 489;
literal VAX$C_VKA55 = 490;
literal VAX$K_VKA55 = 490;
literal VAX$K_VKA55_S = 491;
literal VAX$C_VKA55_S = 491;
literal VAX$K_VKA55_J = 492;
literal VAX$C_VKA55_J = 492;
literal VAX$C_VKA56 = 493;
literal VAX$K_VKA56 = 493;
literal VAX$K_VKA56_S = 494;
literal VAX$C_VKA56_S = 494;
literal VAX$K_VKA56_J = 495;
literal VAX$C_VKA56_J = 495;
literal VAX$C_VKA694 = 496;
literal VAX$K_VKA694 = 496;
literal VAX$K_VKA694_S = 497;
literal VAX$C_VKA694_S = 497;
literal VAX$K_VKA694_J = 498;
literal VAX$C_VKA694_J = 498;
literal VAX$K_v1706_1T = 499;
literal VAX$C_v1706_1T = 499;
literal VAX$K_v1706_2T = 500;
literal VAX$C_v1706_2T = 500;
literal VAX$K_v1706_3T = 501;
literal VAX$C_v1706_3T = 501;
literal VAX$K_v1706_4T = 502;
literal VAX$C_v1706_4T = 502;
literal VAX$K_v1706_5T = 503;
literal VAX$C_v1706_5T = 503;
literal VAX$K_v1706_6T = 504;
literal VAX$C_v1706_6T = 504;
literal VAX$K_v1706_7T = 505;
literal VAX$C_v1706_7T = 505;
literal VAX$K_v1706_8T = 506;
literal VAX$C_v1706_8T = 506;
literal VAX$K_v1706_1S = 507;
literal VAX$C_v1706_1S = 507;
literal VAX$K_v1706_2S = 508;
literal VAX$C_v1706_2S = 508;
literal VAX$K_v1706_3S = 509;
literal VAX$C_v1706_3S = 509;
literal VAX$K_v1706_4S = 510;
literal VAX$C_v1706_4S = 510;
literal VAX$K_v1706_5S = 511;
literal VAX$C_v1706_5S = 511;
literal VAX$K_v1706_6S = 512;
literal VAX$C_v1706_6S = 512;
literal VAX$K_v1706_7S = 513;
literal VAX$C_v1706_7S = 513;
literal VAX$K_v1706_8S = 514;
literal VAX$C_v1706_8S = 514;
literal VAX$K_v1706_1J = 515;
literal VAX$C_v1706_1J = 515;
literal VAX$K_v1707_1T = 516;
literal VAX$C_v1707_1T = 516;
literal VAX$K_v1707_2T = 517;
literal VAX$C_v1707_2T = 517;
literal VAX$K_v1707_3T = 518;
literal VAX$C_v1707_3T = 518;
literal VAX$K_v1707_4T = 519;
literal VAX$C_v1707_4T = 519;
literal VAX$K_v1707_5T = 520;
literal VAX$C_v1707_5T = 520;
literal VAX$K_v1707_6T = 521;
literal VAX$C_v1707_6T = 521;
literal VAX$K_v1707_7T = 522;
literal VAX$C_v1707_7T = 522;
literal VAX$K_v1707_8T = 523;
literal VAX$C_v1707_8T = 523;
literal VAX$K_v1707_1S = 524;
literal VAX$C_v1707_1S = 524;
literal VAX$K_v1707_2S = 525;
literal VAX$C_v1707_2S = 525;
literal VAX$K_v1707_3S = 526;
literal VAX$C_v1707_3S = 526;
literal VAX$K_v1707_4S = 527;
literal VAX$C_v1707_4S = 527;
literal VAX$K_v1707_5S = 528;
literal VAX$C_v1707_5S = 528;
literal VAX$K_v1707_6S = 529;
literal VAX$C_v1707_6S = 529;
literal VAX$K_v1707_7S = 530;
literal VAX$C_v1707_7S = 530;
literal VAX$K_v1707_8S = 531;
literal VAX$C_v1707_8S = 531;
literal VAX$K_v1707_1J = 532;
literal VAX$C_v1707_1J = 532;
literal VAX$C_VKA57 = 533;
literal VAX$K_VKA57 = 533;
literal VAX$K_VKA57_S = 534;
literal VAX$C_VKA57_S = 534;
literal VAX$K_VKA57_J = 535;
literal VAX$C_VKA57_J = 535;
literal VAX$C_VKA58 = 536;
literal VAX$K_VKA58 = 536;
literal VAX$K_VKA58_S = 537;
literal VAX$C_VKA58_S = 537;
literal VAX$K_VKA58_J = 538;
literal VAX$C_VKA58_J = 538;
literal VAX$C_VKA59 = 539;
literal VAX$K_VKA59 = 539;
literal VAX$K_VKA59_S = 540;
literal VAX$C_VKA59_S = 540;
literal VAX$K_VKA59_J = 541;
literal VAX$C_VKA59_J = 541;
literal VAX$C_MAX_MODEL = 541;
literal VAX$K_MAX_MODEL = 541;
 

literal WWIDHDR$M_WWID_LENGTH = %X'FFFFF';
literal WWIDHDR$M_ASCII_DATA = %X'100000';
literal WWIDHDR$M_WWID_TYPE = %X'FF000000';
literal WWIDHDR$K_IEEE_REGEXT = 1;      
literal WWIDHDR$K_IEEE_REG = 2;         
literal WWIDHDR$K_PG83TY1_VID = 3;      
literal WWIDHDR$K_PG80_SERIALNO = 4;    
literal WWIDHDR$K_INQ_SERIALNO = 5;     
literal WWIDHDR$K_TGT_IDENT = 6;        
literal WWIDHDR$K_BTL = 7;              
literal WWIDHDR$K_DEC_UNIQUE = 8;       
literal WWIDHDR$K_HSZ_THISOTHER = 9;    
literal WWIDHDR$K_IEEE48_VEXT = 10;     
literal WWIDHDR$K_IEEE48_0EXT = 11;     
literal WWIDHDR$K_IEEE_EUI64 = 12;      
literal WWIDHDR$S_WWIDHDR = 4;
macro WWIDHDR$R_HEADER_FIELDS = 0,0,32,0 %;
macro WWIDHDR$V_WWID_LENGTH = 0,0,20,0 %;
literal WWIDHDR$S_WWID_LENGTH = 20;     
macro WWIDHDR$V_ASCII_DATA = 0,20,1,0 %; 
macro WWIDHDR$V_RESERVED1 = 0,21,3,0 %;
literal WWIDHDR$S_RESERVED1 = 3;        
macro WWIDHDR$V_WWID_TYPE = 0,24,8,0 %;
literal WWIDHDR$S_WWID_TYPE = 8;        

literal WWID$S_WWID = 280;
macro WWID$R_HEADER = 0,0,32,0 %;
literal WWID$S_HEADER = 4;
macro WWID$B_DATA = 4,0,0,1 %;
literal WWID$S_DATA = 276;
literal WWID$K_LENGTH = 280;

literal SN_WWID$S_SN_WWID = 280;
macro SN_WWID$R_HEADER = 0,0,32,0 %;
literal SN_WWID$S_HEADER = 4;
macro SN_WWID$B_VENDOR_ID = 4,0,0,0 %;
literal SN_WWID$S_VENDOR_ID = 8;
macro SN_WWID$B_PRODUCT_ID = 12,0,0,0 %;
literal SN_WWID$S_PRODUCT_ID = 16;
macro SN_WWID$B_SERIAL_NO = 28,0,0,0 %;
literal SN_WWID$S_SERIAL_NO = 252;
literal SN_WWID$K_LENGTH = 280;

literal WWID$K_MAX_LENGTH = 280;

literal WWIDENT$S_WWIDENT = 128;
macro WWIDENT$L_UNIT_NO = 0,0,32,1 %;
macro WWIDENT$L_DNP = 4,0,32,1 %;
macro WWIDENT$L_WWIDLEN = 8,0,32,0 %;
macro WWIDENT$R_WWID = 12,0,0,0 %;
literal WWIDENT$S_WWID = 116;
macro WWIDENT$R_HEADER = 12,0,32,0 %;
literal WWIDENT$S_HEADER = 4;
macro WWIDENT$B_FCWWID = 16,0,0,1 %;
literal WWIDENT$S_FCWWID = 112;
literal WWIDENT$K_LENGTH = 128;
literal WWIDTBL$K_MAX_ENTRIES = 1000;   

literal FC_WWIDS_FC_WWID_64B = 8;
macro FC_WWIDB_NAME = 0,0,0,0 %;
literal FC_WWIDS_NAME = 8;
 

literal XA$M_DATAPATH = %X'1';
literal XA$M_LINK = %X'2';
literal XA$S_XADEF = 1;
macro XA$V_DATAPATH = 0,0,1,0 %;        
macro XA$V_LINK = 0,1,1,0 %;            
 

literal XKSTS$K_LSTR = 0;               
literal XKSTS$C_LSTR = 0;               
literal XKSTS$M_ACT = %X'1';
literal XKSTS$M_DGN = %X'2';
literal XKSTS$K_DSTR = 45;              
literal XKSTS$C_DSTR = 45;              
literal XKSTS$S_XKSTSDEF = 45;
macro XKSTS$B_CUAD = 0,0,8,0 %;         
macro XKSTS$W_LSTS = 1,0,16,0 %;        
macro XKSTS$V_ACT = 1,0,1,0 %;          
macro XKSTS$V_DGN = 1,1,1,0 %;          
macro XKSTS$B_PLSZ = 3,0,8,0 %;         
macro XKSTS$W_BSIZ = 4,0,16,0 %;        
macro XKSTS$B_ECNT = 6,0,8,0 %;         
macro XKSTS$W_TNAK = 7,0,16,0 %;        
macro XKSTS$W_RNAK = 9,0,16,0 %;        
macro XKSTS$W_TENQ = 11,0,16,0 %;       
macro XKSTS$W_RENQ = 13,0,16,0 %;       
macro XKSTS$W_TRVI = 15,0,16,0 %;       
macro XKSTS$W_RRVI = 17,0,16,0 %;       
macro XKSTS$W_RCNV = 19,0,16,0 %;       
macro XKSTS$W_CHAI = 21,0,16,0 %;       
macro XKSTS$W_GPOL = 23,0,16,0 %;       
macro XKSTS$W_XACK = 25,0,16,0 %;       
macro XKSTS$W_HABO = 27,0,16,0 %;       
macro XKSTS$W_DABO = 29,0,16,0 %;       
macro XKSTS$W_RTIM = 31,0,16,0 %;       
macro XKSTS$W_DISC = 33,0,16,0 %;       
macro XKSTS$W_HARD = 35,0,16,0 %;       
macro XKSTS$W_TBLK = 37,0,16,0 %;       
macro XKSTS$W_RBLK = 39,0,16,0 %;       
macro XKSTS$W_HABX = 41,0,16,0 %;       
macro XKSTS$W_IEOT = 43,0,16,0 %;       
 

literal XKDEV$K_SIZE = 15;              
literal XKDEV$C_SIZE = 15;              
literal XKDEV$S_XKDEVDEF = 15;
macro XKDEV$B_DUEB = 0,0,8,0 %;         
macro XKDEV$L_DPID = 1,0,32,0 %;        
macro XKDEV$W_TBLK = 5,0,16,0 %;        
macro XKDEV$W_RBLK = 7,0,16,0 %;        
macro XKDEV$W_SPOL = 9,0,16,0 %;        
macro XKDEV$W_ASEL = 11,0,16,0 %;       
macro XKDEV$W_CREJ = 13,0,16,0 %;       
 

literal XMDEV$S_XMDEV = 8;
macro XMDEV$B_P1_CLASS = 0,0,8,0 %;     
macro XMDEV$B_P1_TYPE = 1,0,8,0 %;      
macro XMDEV$W_P1_MMS = 2,0,16,0 %;      
macro XMDEV$B_P1_CHAR = 4,0,8,0 %;      
macro XMDEV$B_P1_STS = 5,0,8,0 %;       
macro XMDEV$B_P1_ESUM = 6,0,8,0 %;      
macro XMDEV$B_P1_TPI = 7,0,8,0 %;       
literal XM$M_CHR_MOP = %X'1';
literal XM$M_CHR_LOOPB = %X'2';
literal XM$M_CHR_HDPLX = %X'4';
literal XM$M_CHR_SLAVE = %X'8';
literal XM$M_CHR_MBX = %X'10';
literal XM$M_CHR_DMC = %X'20';
literal XM$M_CHR_CTRL = %X'40';
literal XM$M_CHR_TRIB = %X'80';
literal XM$M_STS_DCHK = %X'100';
literal XM$M_STS_TIMO = %X'200';
literal XM$M_STS_ORUN = %X'400';
literal XM$M_STS_ACTIVE = %X'800';
literal XM$M_STS_BUFFAIL = %X'1000';
literal XM$M_STS_RUNNING = %X'2000';
literal XM$M_STS_DISC = %X'4000';
literal XM$M_ERR_FATAL = %X'10000';
literal XM$M_ERR_MAINT = %X'80000';
literal XM$M_ERR_LOST = %X'100000';
literal XM$M_ERR_THRESH = %X'200000';
literal XM$M_ERR_TRIB = %X'400000';
literal XM$M_ERR_START = %X'800000';
literal XM$M_MDM_RTSHLD = %X'1';
literal XM$M_MDM_STNDBY = %X'2';
literal XM$M_MDM_MAINT2 = %X'4';
literal XM$M_MDM_MAINT1 = %X'8';
literal XM$M_MDM_FREQ = %X'20';
literal XM$M_MDM_RDY = %X'40';
literal XM$M_MDM_POLL = %X'80';
literal XM$M_MDM_SELM = %X'100';
literal XM$M_MDM_INT = %X'800';
literal XM$M_MDM_V35 = %X'1000';
literal XM$M_MDM_RS232 = %X'4000';
literal XM$M_MDM_RS422 = %X'8000';
literal XM$M_MDM_CARRDET = %X'1';
literal XM$M_MDM_MSTNDBY = %X'2';
literal XM$M_MDM_CTS = %X'4';
literal XM$M_MDM_DSR = %X'8';
literal XM$M_MDM_HDX = %X'10';
literal XM$M_MDM_RTS = %X'20';
literal XM$M_MDM_DTR = %X'40';
literal XM$M_MDM_RING = %X'80';
literal XM$M_MDM_CHRMOD = %X'100';
literal XM$M_MDM_MCLOCK = %X'200';
literal XM$M_MDM_MODTEST = %X'400';
literal XM$M_MDM_SIGQUAL = %X'4000';
literal XM$M_MDM_SIGRATE = %X'8000';
literal XM$S_XMDEF = 3;
macro XM$V_CHR_MOP = 0,0,1,0 %;         
macro XM$V_CHR_LOOPB = 0,1,1,0 %;       
macro XM$V_CHR_HDPLX = 0,2,1,0 %;       
macro XM$V_CHR_SLAVE = 0,3,1,0 %;       
macro XM$V_CHR_MBX = 0,4,1,0 %;         
macro XM$V_CHR_DMC = 0,5,1,0 %;         
macro XM$V_CHR_CTRL = 0,6,1,0 %;        
macro XM$V_CHR_TRIB = 0,7,1,0 %;        
macro XM$V_STS_DCHK = 0,8,1,0 %;        
macro XM$V_STS_TIMO = 0,9,1,0 %;        
macro XM$V_STS_ORUN = 0,10,1,0 %;       
macro XM$V_STS_ACTIVE = 0,11,1,0 %;     
macro XM$V_STS_BUFFAIL = 0,12,1,0 %;    
macro XM$V_STS_RUNNING = 0,13,1,0 %;    
macro XM$V_STS_DISC = 0,14,1,0 %;       
macro XM$V_ERR_FATAL = 0,16,1,0 %;      
macro XM$V_ERR_MAINT = 0,19,1,0 %;      
macro XM$V_ERR_LOST = 0,20,1,0 %;       
macro XM$V_ERR_THRESH = 0,21,1,0 %;     
macro XM$V_ERR_TRIB = 0,22,1,0 %;       
macro XM$V_ERR_START = 0,23,1,0 %;      
macro XM$V_MDM_RTSHLD = 0,0,1,0 %;      
macro XM$V_MDM_STNDBY = 0,1,1,0 %;      
macro XM$V_MDM_MAINT2 = 0,2,1,0 %;      
macro XM$V_MDM_MAINT1 = 0,3,1,0 %;      
macro XM$V_MDM_FREQ = 0,5,1,0 %;        
macro XM$V_MDM_RDY = 0,6,1,0 %;         
macro XM$V_MDM_POLL = 0,7,1,0 %;        
macro XM$V_MDM_SELM = 0,8,1,0 %;        
macro XM$V_MDM_INT = 0,11,1,0 %;        
macro XM$V_MDM_V35 = 0,12,1,0 %;        
macro XM$V_MDM_RS232 = 0,14,1,0 %;      
macro XM$V_MDM_RS422 = 0,15,1,0 %;      
macro XM$V_MDM_CARRDET = 0,0,1,0 %;     
macro XM$V_MDM_MSTNDBY = 0,1,1,0 %;     
macro XM$V_MDM_CTS = 0,2,1,0 %;         
macro XM$V_MDM_DSR = 0,3,1,0 %;         
macro XM$V_MDM_HDX = 0,4,1,0 %;         
macro XM$V_MDM_RTS = 0,5,1,0 %;         
macro XM$V_MDM_DTR = 0,6,1,0 %;         
macro XM$V_MDM_RING = 0,7,1,0 %;        
macro XM$V_MDM_CHRMOD = 0,8,1,0 %;      
macro XM$V_MDM_MCLOCK = 0,9,1,0 %;      
macro XM$V_MDM_MODTEST = 0,10,1,0 %;    
macro XM$V_MDM_SIGQUAL = 0,14,1,0 %;    
macro XM$V_MDM_SIGRATE = 0,15,1,0 %;    
 

literal XW$M_CHA_FDX = %X'1';
literal XW$M_CHA_XPR = %X'2';
literal XW$M_CHA_DSR = %X'4';
literal XW$M_FAT_STAT = %X'3FF';
literal XW$M_INFO_STAT = %X'FC00';
literal XW$M_EOT = %X'1';
literal XW$M_DATACK = %X'2';
literal XW$M_NODSR = %X'4';
literal XW$M_DISCON = %X'8';
literal XW$M_TRABINTMO = %X'10';
literal XW$M_PIPE_MARK = %X'20';
literal XW$M_BADCHAIN = %X'40';
literal XW$M_ILLMOD = %X'80';
literal XW$M_RVI = %X'400';
literal XW$M_CONACK = %X'800';
literal XW$M_XPR = %X'1000';
literal XW$M_ETXEND = %X'2000';
literal XW$M_PUNCH = %X'10000';
literal XW$M_HOR_FOR = %X'20000';
literal XW$M_IOMOD = %X'E000';
literal XW$S_XWDEF = 3;
macro XW$V_CHA_FDX = 0,0,1,0 %;         
macro XW$V_CHA_XPR = 0,1,1,0 %;         
macro XW$V_CHA_DSR = 0,2,1,0 %;         

macro XW$V_FAT_STAT = 0,0,10,0 %;
literal XW$S_FAT_STAT = 10;             
macro XW$V_INFO_STAT = 0,10,6,0 %;
literal XW$S_INFO_STAT = 6;             

macro XW$V_EOT = 0,0,1,0 %;             
macro XW$V_DATACK = 0,1,1,0 %;          
macro XW$V_NODSR = 0,2,1,0 %;           
macro XW$V_DISCON = 0,3,1,0 %;          
macro XW$V_TRABINTMO = 0,4,1,0 %;       
macro XW$V_PIPE_MARK = 0,5,1,0 %;       
macro XW$V_BADCHAIN = 0,6,1,0 %;        
macro XW$V_ILLMOD = 0,7,1,0 %;          
macro XW$V_RVI = 0,10,1,0 %;            
macro XW$V_CONACK = 0,11,1,0 %;         
macro XW$V_XPR = 0,12,1,0 %;            
macro XW$V_ETXEND = 0,13,1,0 %;         
macro XW$V_PUNCH = 0,16,1,0 %;          
macro XW$V_HOR_FOR = 0,17,1,0 %;        

macro XW$V_IOMOD = 0,13,3,0 %;
literal XW$S_IOMOD = 3;                 

 

%if not %declared(%quote SDL$STARLET_REQ) %then

macro
SDL$STARLET_REQ(ARG1, arg2) =
    %IF not %NULL(ARG1) %THEN ARG1
    %else
	%warn(%string('REQUIRED ARGUMENT ', %NAME(ARG2), ' MISSING')) 0
    %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_OPT) %then

macro
SDL$STARLET_OPT[ARG] =
    %IF %NULL(ARG)
    %THEN
	%IF NOT %NULL(%REMAINING)
	%THEN
	    0
	%FI
    %ELSE
	ARG
    %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_LIST_0_REQ) %then

macro
SDL$STARLET_LIST_0_REQ(ARG) =
    %IF NOT %NULL(ARG) %THEN %REMOVE(ARG) %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_LIST_1_REQ) %then

macro
SDL$STARLET_LIST_1_REQ(ARG, ARG2) =
    %IF %NULL(ARG) %THEN
	 %warn(%string('REQUIRED ARGUMENT ', %NAME(ARG2), ' MISSING')) 0
    %ELSE
        SDL$STARLET_LIST_0_REQ(ARG) %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_CONCAT) %then

macro
SDL$STARLET_CONCAT[ARG] =
    %IF NOT %NULL(ARG) %THEN ARG %FI %;
%fi
 
 
KEYWORDMACRO $ACM (EFN=0,FUNC,CONTXT=0,ITMLST,ACMSB,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ACM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ACM (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   CONTXT, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , SDL$STARLET_REQ(ACMSB, %QUOTE ACMSB) , 
	   ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $ACMW (EFN=0,FUNC,CONTXT=0,ITMLST,ACMSB,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ACMW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ACMW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   CONTXT, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , SDL$STARLET_REQ(ACMSB, %QUOTE ACMSB) , 
	   ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $ADD_HOLDER (ID,HOLDER,ATTRIB=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADD_HOLDER : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADD_HOLDER (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ID, %QUOTE ID) , 
	   SDL$STARLET_REQ(HOLDER, %QUOTE HOLDER) , ATTRIB))
   END %;
 

KEYWORDMACRO $ADD_IDENT (NAME,ID=0,ATTRIB=0,RESID=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADD_IDENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADD_IDENT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(NAME, %QUOTE NAME) , 
	   ID, ATTRIB, RESID))
   END %;
 

KEYWORDMACRO $ADD_MAPPING (INITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADD_MAPPING : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADD_MAPPING (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INITMLST, %QUOTE INITMLST) ))
   END %;
 

KEYWORDMACRO $ADD_PROXY (REM_NODE,REM_USER,LOCAL_USER,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADD_PROXY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADD_PROXY (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REM_NODE, %QUOTE REM_NODE) , 
	   SDL$STARLET_REQ(REM_USER, %QUOTE REM_USER) , SDL$STARLET_REQ(LOCAL_USER, %QUOTE LOCAL_USER) , 
	   FLAGS))
   END %;
 

KEYWORDMACRO $ADJSTK (ACMODE=0,ADJUST=0,NEWADR) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADJSTK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADJSTK (SDL$STARLET_CONCAT( ACMODE, ADJUST, SDL$STARLET_REQ(NEWADR, %QUOTE NEWADR) ))
   END %;
 

KEYWORDMACRO $ADJWSL (PAGCNT=0,WSETLM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADJWSL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADJWSL (SDL$STARLET_CONCAT( PAGCNT, WSETLM))
   END %;
 

KEYWORDMACRO $ALLOC (DEVNAM,PHYLEN=0,PHYBUF=0,ACMODE=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ALLOC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ALLOC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) , 
	   PHYLEN, PHYBUF, ACMODE, FLAGS))
   END %;
 

KEYWORDMACRO $ASCEFC (EFN,NAME,PROT=0,PERM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ASCEFC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ASCEFC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EFN, %QUOTE EFN) , 
	   SDL$STARLET_REQ(NAME, %QUOTE NAME) , PROT, PERM))
   END %;
 

KEYWORDMACRO $ASCTIM (TIMLEN=0,TIMBUF,TIMADR=0,CVTFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ASCTIM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ASCTIM (SDL$STARLET_CONCAT( TIMLEN, SDL$STARLET_REQ(TIMBUF, %QUOTE TIMBUF) , 
	   TIMADR, CVTFLG))
   END %;
 

KEYWORDMACRO $ASCTOID (NAME,ID=0,ATTRIB=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ASCTOID : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ASCTOID (SDL$STARLET_CONCAT( SDL$STARLET_REQ(NAME, %QUOTE NAME) , 
	   ID, ATTRIB))
   END %;
 

KEYWORDMACRO $ASCUTC (TIMLEN=0,TIMBUF,UTCADR=0,CVTFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ASCUTC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ASCUTC (SDL$STARLET_CONCAT( TIMLEN, SDL$STARLET_REQ(TIMBUF, %QUOTE TIMBUF) , 
	   UTCADR, CVTFLG))
   END %;
 

KEYWORDMACRO $ASSIGN (DEVNAM,CHAN,ACMODE=0,MBXNAM=0,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE SYS$ASSIGN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ASSIGN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) , 
	   SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , ACMODE, MBXNAM, 
	   SDL$STARLET_OPT( FLAGS)))
   END %;
 

KEYWORDMACRO $AUDIT_EVENT (EFN=0,FLAGS=0,ITMLST,AUDSTS=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$AUDIT_EVENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$AUDIT_EVENT (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   AUDSTS, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $AUDIT_EVENTW (EFN=0,FLAGS=0,ITMLST,AUDSTS=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$AUDIT_EVENTW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$AUDIT_EVENTW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   AUDSTS, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $BINTIM (TIMBUF,TIMADR) =
   BEGIN
   EXTERNAL ROUTINE SYS$BINTIM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$BINTIM (SDL$STARLET_CONCAT( SDL$STARLET_REQ(TIMBUF, %QUOTE TIMBUF) , 
	   SDL$STARLET_REQ(TIMADR, %QUOTE TIMADR) ))
   END %;
 

KEYWORDMACRO $BINUTC (TIMBUF,UTCADR) =
   BEGIN
   EXTERNAL ROUTINE SYS$BINUTC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$BINUTC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(TIMBUF, %QUOTE TIMBUF) , 
	   SDL$STARLET_REQ(UTCADR, %QUOTE UTCADR) ))
   END %;
 

KEYWORDMACRO $BRDCST (MSGBUF,DEVNAM=0,FLAGS=0,CARCON=32) =
   BEGIN
   EXTERNAL ROUTINE SYS$BRDCST : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$BRDCST (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MSGBUF, %QUOTE MSGBUF) , 
	   DEVNAM, FLAGS, CARCON))
   END %;
 

KEYWORDMACRO $BRKTHRU (EFN=0,MSGBUF=0,SENDTO=0,SNDTYP=0,IOSB=0
		,CARCON=32,FLAGS=0,REQID=0,TIMOUT=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$BRKTHRU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$BRKTHRU (SDL$STARLET_CONCAT( EFN, MSGBUF, SENDTO, SNDTYP, 
	   IOSB, CARCON, FLAGS, REQID, TIMOUT, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $BRKTHRUW (EFN=0,MSGBUF=0,SENDTO=0,SNDTYP=0,IOSB=0
		,CARCON=32,FLAGS=0,REQID=0,TIMOUT=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$BRKTHRUW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$BRKTHRUW (SDL$STARLET_CONCAT( EFN, MSGBUF, SENDTO, SNDTYP, 
	   IOSB, CARCON, FLAGS, REQID, TIMOUT, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $CANCEL (CHAN) =
   BEGIN
   EXTERNAL ROUTINE SYS$CANCEL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CANCEL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ))
   END %;
 

KEYWORDMACRO $CANCEL_SELECTIVE (CHAN,IOSBLST=0,LENLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CANCEL_SELECTIVE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CANCEL_SELECTIVE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   IOSBLST, LENLST))
   END %;
 

KEYWORDMACRO $CANEVTAST (EVTNAM=0,EVTADR=0,EVTFAC=0,ACMODE=0,FLAGS=0
		,REQID=0,EVTID=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CANEVTAST : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CANEVTAST (SDL$STARLET_CONCAT( EVTNAM, EVTADR, EVTFAC, 
	   ACMODE, FLAGS, REQID, EVTID))
   END %;
 

KEYWORDMACRO $CANEXH (DESBLK=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CANEXH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CANEXH (SDL$STARLET_CONCAT( DESBLK))
   END %;
 

KEYWORDMACRO $CANTIM (REQIDT=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CANTIM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CANTIM (SDL$STARLET_CONCAT( REQIDT, ACMODE))
   END %;
 

KEYWORDMACRO $CANWAK (PIDADR=0,PRCNAM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CANWAK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CANWAK (SDL$STARLET_CONCAT( PIDADR, PRCNAM))
   END %;
 

KEYWORDMACRO $CHANGE_ACL (CHAN=0,OBJTYP,OBJNAM=0,ITMLST,ACMODE=0
		,IOSB=0,CONTXT=0,ROUTIN=0,ORBADR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CHANGE_ACL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CHANGE_ACL (SDL$STARLET_CONCAT( CHAN, SDL$STARLET_REQ(OBJTYP, %QUOTE OBJTYP) , 
	   OBJNAM, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , ACMODE, 
	   IOSB, CONTXT, ROUTIN, ORBADR))
   END %;
 

KEYWORDMACRO $CHANGE_CLASS (OBJTYP,OBJNAM,ITMLST,ACMODE=0,ORBADR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CHANGE_CLASS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CHANGE_CLASS (SDL$STARLET_CONCAT( SDL$STARLET_REQ(OBJTYP, %QUOTE OBJTYP) , 
	   SDL$STARLET_REQ(OBJNAM, %QUOTE OBJNAM) , SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   ACMODE, ORBADR))
   END %;
 

KEYWORDMACRO $CHECK_ACCESS (OBJTYP=0,OBJNAM=0,USRNAM=0,ITMLST
		,CONTXT=0,CLSNAM=0,OBJPRO=0,USRPRO=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CHECK_ACCESS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CHECK_ACCESS (SDL$STARLET_CONCAT( OBJTYP, OBJNAM, USRNAM, 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , CONTXT, CLSNAM, 
	   OBJPRO, USRPRO))
   END %;
 

KEYWORDMACRO $CHECK_FEN =
   BEGIN
   EXTERNAL ROUTINE SYS$CHECK_FEN : BLISS ADDRESSING_MODE (GENERAL);
	SYS$CHECK_FEN()
   END %;

KEYWORDMACRO $CHECK_PRIVILEGE (EFN=0,PRVADR,ALTPRV=0,FLAGS=0,ITMLST=0
		,AUDSTS=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CHECK_PRIVILEGE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CHECK_PRIVILEGE (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(PRVADR, %QUOTE PRVADR) , 
	   ALTPRV, FLAGS, ITMLST, AUDSTS, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $CHECK_PRIVILEGEW (EFN=0,PRVADR,ALTPRV=0,FLAGS=0
		,ITMLST=0,AUDSTS=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CHECK_PRIVILEGEW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CHECK_PRIVILEGEW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(PRVADR, %QUOTE PRVADR) , 
	   ALTPRV, FLAGS, ITMLST, AUDSTS, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $CHKPRO (ITMLST,OBJPRO=0,USRPRO=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CHKPRO : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CHKPRO (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   OBJPRO, USRPRO))
   END %;
 

KEYWORDMACRO $CLEAR_SYSTEM_EVENT (HANDLE=0,ACMODE=0,EVENT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CLEAR_SYSTEM_EVENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CLEAR_SYSTEM_EVENT (SDL$STARLET_CONCAT( HANDLE, ACMODE, 
	   EVENT))
   END %;
 

KEYWORDMACRO $CLEAR_UNWIND_TABLE (CODE_BASE_VA=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CLEAR_UNWIND_TABLE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CLEAR_UNWIND_TABLE (SDL$STARLET_CONCAT( CODE_BASE_VA))
   END %;
 

KEYWORDMACRO $CLRCLUEVT (HANDLE=0,ACMODE=0,EVENT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CLRCLUEVT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CLRCLUEVT (SDL$STARLET_CONCAT( HANDLE, ACMODE, EVENT))
   END %;
 

KEYWORDMACRO $CLREF (EFN) =
   BEGIN
   EXTERNAL ROUTINE SYS$CLREF : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CLREF (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EFN, %QUOTE EFN) ))
   END %;
 

KEYWORDMACRO $CLOSE (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$CLOSE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CLOSE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $CMEXEC (ROUTIN,ARGLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CMEXEC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CMEXEC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ROUTIN, %QUOTE ROUTIN) , 
	   ARGLST))
   END %;
 

KEYWORDMACRO $CMEXEC_64 (ROUTIN_64,ARGLST_64=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CMEXEC_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CMEXEC_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ROUTIN_64, %QUOTE ROUTIN_64) , 
	   ARGLST_64))
   END %;
 

KEYWORDMACRO $CMKRNL (ROUTIN,ARGLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CMKRNL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CMKRNL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ROUTIN, %QUOTE ROUTIN) , 
	   ARGLST))
   END %;
 

KEYWORDMACRO $CMKRNL_64 (ROUTIN_64,ARGLST_64=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CMKRNL_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CMKRNL_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ROUTIN_64, %QUOTE ROUTIN_64) , 
	   ARGLST_64))
   END %;
 

KEYWORDMACRO $CONNECT (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$CONNECT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CONNECT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $CNTREG (PAGCNT,RETADR=0,ACMODE=0,REGION=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CNTREG : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CNTREG (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PAGCNT, %QUOTE PAGCNT) , 
	   RETADR, ACMODE, REGION))
   END %;
 

KEYWORDMACRO $CPU_CAPABILITIES (CPU_ID=0,SELECT_MASK=0,MODIFY_MASK=0
		,PREV_MASK=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CPU_CAPABILITIES : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CPU_CAPABILITIES (SDL$STARLET_CONCAT( CPU_ID, SELECT_MASK, 
	   MODIFY_MASK, PREV_MASK, FLAGS))
   END %;
 

KEYWORDMACRO $CPU_TRANSITION (TRAN_CODE=0,CPU_ID=0,NODENAME=0
		,NODE_ID=-1,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0,TIMOUT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CPU_TRANSITION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CPU_TRANSITION (SDL$STARLET_CONCAT( TRAN_CODE, CPU_ID, 
	   NODENAME, NODE_ID, FLAGS, EFN, IOSB, ASTADR, ASTPRM, TIMOUT))
   END %;
 
KEYWORDMACRO $CPU_TRANSITIONW (TRAN_CODE=0,CPU_ID=0,NODENAME=0
		,NODE_ID=-1,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0,TIMOUT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CPU_TRANSITIONW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CPU_TRANSITIONW (SDL$STARLET_CONCAT( TRAN_CODE, CPU_ID, 
	   NODENAME, NODE_ID, FLAGS, EFN, IOSB, ASTADR, ASTPRM, TIMOUT))
   END %;
 

KEYWORDMACRO $CREATE (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $CREATE_MAPPING =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_MAPPING : BLISS ADDRESSING_MODE (GENERAL);
	SYS$CREATE_MAPPING()
   END %;

KEYWORDMACRO $CREATE_PROXY =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_PROXY : BLISS ADDRESSING_MODE (GENERAL);
	SYS$CREATE_PROXY()
   END %;

KEYWORDMACRO $CREATE_UID (UID) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_UID : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_UID (SDL$STARLET_CONCAT( SDL$STARLET_REQ(UID, %QUOTE UID) ))
   END %;
 

KEYWORDMACRO $CREATE_BUFOBJ (INADR=0,RETADR=0,ACMODE=0,FLAGS=0
		,BUFFER_HANDLE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_BUFOBJ : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_BUFOBJ (SDL$STARLET_CONCAT( INADR, RETADR, ACMODE, 
	   FLAGS, BUFFER_HANDLE))
   END %;
 

KEYWORDMACRO $CREATE_BUFOBJ_64 (START_VA_64,LENGTH_64,ACMODE=0
		,FLAGS=0,RETURN_VA_64,RETURN_LENGTH_64,BUFFER_HANDLE_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_BUFOBJ_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_BUFOBJ_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, FLAGS, 
	   SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_REQ(BUFFER_HANDLE_64, %QUOTE BUFFER_HANDLE_64) ))
   END %;
 

KEYWORDMACRO $CREATE_GFILE (GSDNAM_64,IDENT_64=0,FILE_OFFSET_64=0
		,LENGTH_64=0,CHAN,ACMODE=0,FLAGS=0,RETURN_LENGTH_64,FAULT_CLUSTER) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_GFILE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_GFILE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, FILE_OFFSET_64, LENGTH_64, SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   ACMODE, FLAGS, SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( FAULT_CLUSTER)))
   END %;
 

KEYWORDMACRO $CREATE_GDZRO (GSDNAM_64,IDENT_64=0,PROT=0,LENGTH_64
		,ACMODE=0,FLAGS=0,RESERVED_LENGTH_64,RAD_MASK) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_GDZRO : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_GDZRO (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, PROT, SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , 
	   ACMODE, FLAGS, SDL$STARLET_OPT( RESERVED_LENGTH_64, RAD_MASK)))
   END %;
 

KEYWORDMACRO $CREATE_GPFILE (GSDNAM_64,IDENT_64=0,PROT=0,LENGTH_64
		,ACMODE=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_GPFILE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_GPFILE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, PROT, SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , 
	   ACMODE, FLAGS))
   END %;
 

KEYWORDMACRO $CREATE_GPFN (GSDNAM_64,IDENT_64=0,PROT=0,START_PFN
		,PAGE_COUNT,ACMODE=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_GPFN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_GPFN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, PROT, SDL$STARLET_REQ(START_PFN, %QUOTE START_PFN) , 
	   SDL$STARLET_REQ(PAGE_COUNT, %QUOTE PAGE_COUNT) , ACMODE, 
	   FLAGS))
   END %;
 

KEYWORDMACRO $CREATE_RDB (SYSID=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_RDB : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_RDB (SDL$STARLET_CONCAT( SYSID))
   END %;
 

KEYWORDMACRO $CREATE_REGION_64 (LENGTH_64=0,REGION_PROT=0,FLAGS=0
		,RETURN_REGION_ID,RETURN_VA_64,RETURN_LENGTH_64,START_VA_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_REGION_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_REGION_64 (SDL$STARLET_CONCAT( LENGTH_64, REGION_PROT, 
	   FLAGS, SDL$STARLET_REQ(RETURN_REGION_ID, %QUOTE RETURN_REGION_ID) , 
	   SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( START_VA_64)))
   END %;
 

KEYWORDMACRO $CREATE_USER_PROFILE (USRNAM=0,ITMLST=0,FLAGS=0,USRPRO
		,USRPROLEN,CONTXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_USER_PROFILE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_USER_PROFILE (SDL$STARLET_CONCAT( USRNAM, ITMLST, 
	   FLAGS, SDL$STARLET_REQ(USRPRO, %QUOTE USRPRO) , SDL$STARLET_REQ(USRPROLEN, %QUOTE USRPROLEN) , 
	   CONTXT))
   END %;
 

KEYWORDMACRO $CRELNM (ATTR=0,TABNAM,LOGNAM,ACMODE=0,ITMLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRELNM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRELNM (SDL$STARLET_CONCAT( ATTR, SDL$STARLET_REQ(TABNAM, %QUOTE TABNAM) , 
	   SDL$STARLET_REQ(LOGNAM, %QUOTE LOGNAM) , ACMODE, ITMLST))
   END %;
 

KEYWORDMACRO $CRELNT (ATTR=0,RESNAM=0,RESLEN=0,QUOTA=0,PROMSK=0
		,TABNAM=0,PARTAB,ACMODE=0,UIC) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRELNT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRELNT (SDL$STARLET_CONCAT( ATTR, RESNAM, RESLEN, QUOTA, 
	   PROMSK, TABNAM, SDL$STARLET_REQ(PARTAB, %QUOTE PARTAB) , 
	   ACMODE, SDL$STARLET_OPT( UIC)))
   END %;
 

KEYWORDMACRO $CRELOG (TBLFLG=0,LOGNAM,EQLNAM,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRELOG : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRELOG (SDL$STARLET_CONCAT( TBLFLG, SDL$STARLET_REQ(LOGNAM, %QUOTE LOGNAM) , 
	   SDL$STARLET_REQ(EQLNAM, %QUOTE EQLNAM) , ACMODE))
   END %;
 

KEYWORDMACRO $CREMBX (PRMFLG=0,CHAN,MAXMSG=0,BUFQUO=0,PROMSK=0
		,ACMODE=0,LOGNAM=0,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREMBX : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREMBX (SDL$STARLET_CONCAT( PRMFLG, SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   MAXMSG, BUFQUO, PROMSK, ACMODE, LOGNAM, SDL$STARLET_OPT( FLAGS)))
   END %;
 

KEYWORDMACRO $CREPRC (PIDADR=0,IMAGE=0,INPUT=0,OUTPUT=0,ERROR=0
		,PRVADR=0,QUOTA=0,PRCNAM=0,BASPRI=2,UIC=0,MBXUNT=0,STSFLG=0
		,ITMLST=0,NODE=0,HOME_RAD) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREPRC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREPRC (SDL$STARLET_CONCAT( PIDADR, IMAGE, INPUT, OUTPUT, 
	   ERROR, PRVADR, QUOTA, PRCNAM, BASPRI, UIC, MBXUNT, STSFLG, 
	   ITMLST, NODE, SDL$STARLET_OPT( HOME_RAD)))
   END %;
 

KEYWORDMACRO $CRETVA (INADR,RETADR=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRETVA : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRETVA (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE))
   END %;
 

KEYWORDMACRO $CRETVA_64 (REGION_ID_64,START_VA_64,LENGTH_64,ACMODE=0
		,FLAGS=0,RETURN_VA_64,RETURN_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRETVA_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRETVA_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , 
	   ACMODE, FLAGS, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) ))
   END %;
 

KEYWORDMACRO $CRMPSC (INADR=0,RETADR=0,ACMODE=0,FLAGS=0,GSDNAM=0
		,IDENT=0,RELPAG=0,CHAN=0,PAGCNT=0,VBN=0,PROT=0,PFC=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRMPSC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRMPSC (SDL$STARLET_CONCAT( INADR, RETADR, ACMODE, FLAGS, 
	   GSDNAM, IDENT, RELPAG, CHAN, PAGCNT, VBN, PROT, PFC))
   END %;
 

KEYWORDMACRO $CRMPSC_FILE_64 (REGION_ID_64,FILE_OFFSET_64=0,LENGTH_64=0
		,CHAN,ACMODE=0,FLAGS=0,RETURN_VA_64,RETURN_LENGTH_64,FAULT_CLUSTER
		,START_VA_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRMPSC_FILE_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRMPSC_FILE_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   FILE_OFFSET_64, LENGTH_64, SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   ACMODE, FLAGS, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( FAULT_CLUSTER, START_VA_64)))
   END %;
 

KEYWORDMACRO $CRMPSC_GFILE_64 (GSDNAM_64,IDENT_64=0,FILE_OFFSET_64=0
		,LENGTH_64=0,CHAN,REGION_ID_64,SECTION_OFFSET_64=0,ACMODE=0
		,FLAGS=0,RETURN_VA_64,RETURN_LENGTH_64,FAULT_CLUSTER,START_VA_64
		,MAP_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRMPSC_GFILE_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRMPSC_GFILE_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, FILE_OFFSET_64, LENGTH_64, SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , SECTION_OFFSET_64, 
	   ACMODE, FLAGS, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( FAULT_CLUSTER, START_VA_64, MAP_LENGTH_64)))
   END %;
 

KEYWORDMACRO $CRMPSC_GDZRO_64 (GSDNAM_64,IDENT_64=0,PROT=0,LENGTH_64=0
		,REGION_ID_64,SECTION_OFFSET_64=0,ACMODE=0,FLAGS=0,RETURN_VA_64
		,RETURN_LENGTH_64,START_VA_64,MAP_LENGTH_64,RESERVED_LENGTH_64
		,RAD_MASK) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRMPSC_GDZRO_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRMPSC_GDZRO_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, PROT, LENGTH_64, SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   SECTION_OFFSET_64, ACMODE, FLAGS, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( START_VA_64, MAP_LENGTH_64, RESERVED_LENGTH_64, RAD_MASK)))
   END %;
 

KEYWORDMACRO $CRMPSC_GPFILE_64 (GSDNAM_64,IDENT_64=0,PROT=0,LENGTH_64=0
		,REGION_ID_64,SECTION_OFFSET_64=0,ACMODE=0,FLAGS=0,RETURN_VA_64
		,RETURN_LENGTH_64,START_VA_64,MAP_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRMPSC_GPFILE_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRMPSC_GPFILE_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, PROT, LENGTH_64, SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   SECTION_OFFSET_64, ACMODE, FLAGS, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( START_VA_64, MAP_LENGTH_64)))
   END %;
 

KEYWORDMACRO $CRMPSC_GPFN_64 (GSDNAM_64,IDENT_64=0,PROT=0,START_PFN
		,PAGE_COUNT,REGION_ID_64,RELATIVE_PAGE,ACMODE=0,FLAGS=0,RETURN_VA_64
		,RETURN_LENGTH_64,START_VA_64,MAP_PAGE_COUNT) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRMPSC_GPFN_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRMPSC_GPFN_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, PROT, SDL$STARLET_REQ(START_PFN, %QUOTE START_PFN) , 
	   SDL$STARLET_REQ(PAGE_COUNT, %QUOTE PAGE_COUNT) , SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   SDL$STARLET_REQ(RELATIVE_PAGE, %QUOTE RELATIVE_PAGE) , ACMODE, 
	   FLAGS, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( START_VA_64, MAP_PAGE_COUNT)))
   END %;
 

KEYWORDMACRO $CRMPSC_PFN_64 (REGION_ID_64,START_PFN,PAGE_COUNT
		,ACMODE=0,FLAGS=0,RETURN_VA_64,RETURN_LENGTH_64,START_VA_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$CRMPSC_PFN_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CRMPSC_PFN_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   SDL$STARLET_REQ(START_PFN, %QUOTE START_PFN) , SDL$STARLET_REQ(PAGE_COUNT, %QUOTE PAGE_COUNT) , 
	   ACMODE, FLAGS, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( START_VA_64)))
   END %;
 

KEYWORDMACRO $DACEFC (EFN) =
   BEGIN
   EXTERNAL ROUTINE SYS$DACEFC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DACEFC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EFN, %QUOTE EFN) ))
   END %;
 

KEYWORDMACRO $DALLOC (DEVNAM=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DALLOC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DALLOC (SDL$STARLET_CONCAT( DEVNAM, ACMODE))
   END %;
 

KEYWORDMACRO $DASSGN (CHAN) =
   BEGIN
   EXTERNAL ROUTINE SYS$DASSGN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DASSGN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ))
   END %;
 

KEYWORDMACRO $DCLAST (ASTADR,ASTPRM=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DCLAST : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DCLAST (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ASTADR, %QUOTE ASTADR) , 
	   ASTPRM, ACMODE))
   END %;
 

KEYWORDMACRO $DCLCMH (ADDRES,PRVHND=0,TYPE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DCLCMH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DCLCMH (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ADDRES, %QUOTE ADDRES) , 
	   PRVHND, TYPE))
   END %;
 

KEYWORDMACRO $DCLEVT (EVTNAM,RCVACL=0,EVTFAC=0,ACMODE=0,FLAGS=0
		,EVTDATA=0,NULLARG1=0,NULLARG2=0,NULLARG3=0,NULLARG4=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DCLEVT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DCLEVT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EVTNAM, %QUOTE EVTNAM) , 
	   RCVACL, EVTFAC, ACMODE, FLAGS, EVTDATA, NULLARG1, NULLARG2, 
	   NULLARG3, NULLARG4))
   END %;
 

KEYWORDMACRO $DCLEXH (DESBLK) =
   BEGIN
   EXTERNAL ROUTINE SYS$DCLEXH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DCLEXH (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DESBLK, %QUOTE DESBLK) ))
   END %;
 

KEYWORDMACRO $DEFINE_MAPPING (INITMLST,OUTITMLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DEFINE_MAPPING : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DEFINE_MAPPING (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INITMLST, %QUOTE INITMLST) , 
	   OUTITMLST))
   END %;
 

KEYWORDMACRO $DELETE (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELETE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELETE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $DELETE_BITMAP (FLAGS=0,HANDLE=0,AST_ADDR=0,AST_PARAM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELETE_BITMAP : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELETE_BITMAP (SDL$STARLET_CONCAT( FLAGS, HANDLE, AST_ADDR, 
	   AST_PARAM))
   END %;
 

KEYWORDMACRO $DELETE_INTRUSION (USER_CRITERIA,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELETE_INTRUSION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELETE_INTRUSION (SDL$STARLET_CONCAT( SDL$STARLET_REQ(USER_CRITERIA, %QUOTE USER_CRITERIA) , 
	   FLAGS))
   END %;
 

KEYWORDMACRO $DELETE_MAPPING (INITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELETE_MAPPING : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELETE_MAPPING (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INITMLST, %QUOTE INITMLST) ))
   END %;
 

KEYWORDMACRO $DELETE_PROXY (REM_NODE,REM_USER,LOCAL_USER,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELETE_PROXY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELETE_PROXY (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REM_NODE, %QUOTE REM_NODE) , 
	   SDL$STARLET_REQ(REM_USER, %QUOTE REM_USER) , SDL$STARLET_REQ(LOCAL_USER, %QUOTE LOCAL_USER) , 
	   FLAGS))
   END %;
 

KEYWORDMACRO $DELLNM (TABNAM,LOGNAM=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELLNM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELLNM (SDL$STARLET_CONCAT( SDL$STARLET_REQ(TABNAM, %QUOTE TABNAM) , 
	   LOGNAM, ACMODE))
   END %;
 

KEYWORDMACRO $DELLOG (TBLFLG=0,LOGNAM=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELLOG : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELLOG (SDL$STARLET_CONCAT( TBLFLG, LOGNAM, ACMODE))
   END %;
 

KEYWORDMACRO $DELMBX (CHAN) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELMBX : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELMBX (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ))
   END %;
 

KEYWORDMACRO $DELPRC (PIDADR=0,PRCNAM=0,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELPRC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELPRC (SDL$STARLET_CONCAT( PIDADR, PRCNAM, SDL$STARLET_OPT( FLAGS)))
   END %;
 

KEYWORDMACRO $DELTVA (INADR,RETADR=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELTVA : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELTVA (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE))
   END %;
 

KEYWORDMACRO $DELTVA_64 (REGION_ID_64,START_VA_64,LENGTH_64,ACMODE=0
		,RETURN_VA_64,RETURN_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELTVA_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELTVA_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , 
	   ACMODE, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) ))
   END %;
 

KEYWORDMACRO $DELETE_BUFOBJ (BUFFER_HANDLE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELETE_BUFOBJ : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELETE_BUFOBJ (SDL$STARLET_CONCAT( BUFFER_HANDLE))
   END %;
 

KEYWORDMACRO $DELETE_REGION_64 (REGION_ID_64,ACMODE=0,RETURN_VA_64
		,RETURN_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELETE_REGION_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELETE_REGION_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   ACMODE, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) ))
   END %;
 

KEYWORDMACRO $DEQ (LKID=0,VALBLK=0,ACMODE=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DEQ : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DEQ (SDL$STARLET_CONCAT( LKID, VALBLK, ACMODE, FLAGS))
   END %;
 

KEYWORDMACRO $DEVICE_SCAN (RETURN_DEVNAM,RETLEN,SEARCH_DEVNAM=0
		,ITMLST=0,CONTXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DEVICE_SCAN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DEVICE_SCAN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RETURN_DEVNAM, %QUOTE RETURN_DEVNAM) , 
	   SDL$STARLET_REQ(RETLEN, %QUOTE RETLEN) , SEARCH_DEVNAM, ITMLST, 
	   CONTXT))
   END %;
 

KEYWORDMACRO $DGBLSC (FLAGS=0,GSDNAM,IDENT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DGBLSC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DGBLSC (SDL$STARLET_CONCAT( FLAGS, SDL$STARLET_REQ(GSDNAM, %QUOTE GSDNAM) , 
	   IDENT))
   END %;
 

KEYWORDMACRO $DIAGNOSE (FUNCTION=1,P2=1,CPU_ID=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DIAGNOSE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DIAGNOSE (SDL$STARLET_CONCAT( FUNCTION, P2, CPU_ID, FLAGS))
   END %;
 

KEYWORDMACRO $DISABLE_VP_USE (FLAGS=0,CURFLG=0,PRVFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DISABLE_VP_USE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DISABLE_VP_USE (SDL$STARLET_CONCAT( FLAGS, CURFLG, PRVFLG))
   END %;
 

KEYWORDMACRO $DISABLE_VP_USE_INT (FLAGS=0,CURFLG=0,PRVFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DISABLE_VP_USE_INT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DISABLE_VP_USE_INT (SDL$STARLET_CONCAT( FLAGS, CURFLG, 
	   PRVFLG))
   END %;
 

KEYWORDMACRO $DISCONNECT (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$DISCONNECT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DISCONNECT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $DISMOU (DEVNAM,FLAGS=0,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$DISMOU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DISMOU (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) , 
	   FLAGS, SDL$STARLET_OPT( ITMLST)))
   END %;
 

KEYWORDMACRO $DISPLAY (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$DISPLAY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DISPLAY (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $DISPLAY_PROXY (REM_NODE,REM_USER,BUFFER_SIZES,PROXY_NODE
		,PROXY_USER,DEFAULT_USER,LOCAL_USERS,FLAGS=0,CONTEXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DISPLAY_PROXY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DISPLAY_PROXY (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REM_NODE, %QUOTE REM_NODE) , 
	   SDL$STARLET_REQ(REM_USER, %QUOTE REM_USER) , SDL$STARLET_REQ(BUFFER_SIZES, %QUOTE BUFFER_SIZES) , 
	   SDL$STARLET_REQ(PROXY_NODE, %QUOTE PROXY_NODE) , SDL$STARLET_REQ(PROXY_USER, %QUOTE PROXY_USER) , 
	   SDL$STARLET_REQ(DEFAULT_USER, %QUOTE DEFAULT_USER) , SDL$STARLET_REQ(LOCAL_USERS, %QUOTE LOCAL_USERS) , 
	   FLAGS, CONTEXT))
   END %;
 

KEYWORDMACRO $DLCEFC (NAME) =
   BEGIN
   EXTERNAL ROUTINE SYS$DLCEFC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DLCEFC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(NAME, %QUOTE NAME) ))
   END %;
 

KEYWORDMACRO $DNS (EFN=0,FUNC,ITMLST,DNSB=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DNS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DNS (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , DNSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $DNSW (EFN=0,FUNC,ITMLST,DNSB=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DNSW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DNSW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , DNSB, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $EMAA (ARGLIST,INVOKEID) =
   BEGIN
   EXTERNAL ROUTINE SYS$EMAA : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$EMAA (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ARGLIST, %QUOTE ARGLIST) , 
	   SDL$STARLET_REQ(INVOKEID, %QUOTE INVOKEID) ))
   END %;
 

KEYWORDMACRO $ENABLE_VP_USE (FLAGS=0,CURFLG=0,PRVFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ENABLE_VP_USE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ENABLE_VP_USE (SDL$STARLET_CONCAT( FLAGS, CURFLG, PRVFLG))
   END %;
 

KEYWORDMACRO $ENABLE_VP_USE_INT (FLAGS=0,CURFLG=0,PRVFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ENABLE_VP_USE_INT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ENABLE_VP_USE_INT (SDL$STARLET_CONCAT( FLAGS, CURFLG, 
	   PRVFLG))
   END %;
 

KEYWORDMACRO $ENQ (EFN=0,LKMODE,LKSB,FLAGS=0,RESNAM=0,PARID=0
		,ASTADR=0,ASTPRM=0,BLKAST=0,ACMODE=0,RSDM_ID=0,RANGE,PRIORITY) =
   BEGIN
   EXTERNAL ROUTINE SYS$ENQ : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ENQ (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(LKMODE, %QUOTE LKMODE) , 
	   SDL$STARLET_REQ(LKSB, %QUOTE LKSB) , FLAGS, RESNAM, PARID, 
	   ASTADR, ASTPRM, BLKAST, ACMODE, RSDM_ID, SDL$STARLET_OPT( RANGE, PRIORITY)))
   END %;
 
KEYWORDMACRO $ENQW (EFN=0,LKMODE,LKSB,FLAGS=0,RESNAM=0,PARID=0
		,ASTADR=0,ASTPRM=0,BLKAST=0,ACMODE=0,RSDM_ID=0,RANGE,PRIORITY) =
   BEGIN
   EXTERNAL ROUTINE SYS$ENQW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ENQW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(LKMODE, %QUOTE LKMODE) , 
	   SDL$STARLET_REQ(LKSB, %QUOTE LKSB) , FLAGS, RESNAM, PARID, 
	   ASTADR, ASTPRM, BLKAST, ACMODE, RSDM_ID, SDL$STARLET_OPT( RANGE, PRIORITY)))
   END %;
 

KEYWORDMACRO $ENTER (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$ENTER : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ENTER (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $ERAPAT (TYPE=0,COUNT=1,PATADR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ERAPAT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ERAPAT (SDL$STARLET_CONCAT( TYPE, COUNT, PATADR))
   END %;
 

KEYWORDMACRO $ERASE (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$ERASE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ERASE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $EVDPOSTEVENT (EVENT) =
   BEGIN
   EXTERNAL ROUTINE SYS$EVDPOSTEVENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$EVDPOSTEVENT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EVENT, %QUOTE EVENT) ))
   END %;
 

KEYWORDMACRO $EXIT (CODE=1) =
   BEGIN
   EXTERNAL ROUTINE SYS$EXIT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$EXIT (SDL$STARLET_CONCAT( CODE))
   END %;
 

KEYWORDMACRO $EXPREG (PAGCNT,RETADR=0,ACMODE=0,REGION=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$EXPREG : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$EXPREG (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PAGCNT, %QUOTE PAGCNT) , 
	   RETADR, ACMODE, REGION))
   END %;
 

KEYWORDMACRO $EXPREG_64 (REGION_ID_64,LENGTH_64,ACMODE=0,FLAGS=0
		,RETURN_VA_64,RETURN_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$EXPREG_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$EXPREG_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, FLAGS, 
	   SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) ))
   END %;
 

KEYWORDMACRO $EXTEND (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$EXTEND : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$EXTEND (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

MACRO $FAO[]=
	(
	EXTERNAL ROUTINE SYS$FAO : BLISS ADDRESSING_MODE (GENERAL);
	SYS$FAO (%REMAINING)
	) %;

KEYWORDMACRO $FAOL (CTRSTR,OUTLEN=0,OUTBUF,PRMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$FAOL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FAOL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CTRSTR, %QUOTE CTRSTR) , 
	   OUTLEN, SDL$STARLET_REQ(OUTBUF, %QUOTE OUTBUF) , SDL$STARLET_REQ(PRMLST, %QUOTE PRMLST) ))
   END %;
 

KEYWORDMACRO $FAOL_64 (CTRSTR_64,OUTLEN_64=0,OUTBUF_64,PRMLST_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$FAOL_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FAOL_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CTRSTR_64, %QUOTE CTRSTR_64) , 
	   OUTLEN_64, SDL$STARLET_REQ(OUTBUF_64, %QUOTE OUTBUF_64) , 
	   SDL$STARLET_REQ(PRMLST_64, %QUOTE PRMLST_64) ))
   END %;
 

KEYWORDMACRO $FILES_64 (EFN=0,FUNC,FSB,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$FILES_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FILES_64 (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   SDL$STARLET_REQ(FSB, %QUOTE FSB) , ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $FILESCAN (SRCSTR,VALUELST=0,FLDFLAGS=0,AUXOUT=0
		,RETLEN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$FILESCAN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FILESCAN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(SRCSTR, %QUOTE SRCSTR) , 
	   VALUELST, FLDFLAGS, AUXOUT, RETLEN))
   END %;
 

KEYWORDMACRO $FIND (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$FIND : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FIND (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $FIND_HELD (HOLDER,ID=0,ATTRIB=0,CONTXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$FIND_HELD : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FIND_HELD (SDL$STARLET_CONCAT( SDL$STARLET_REQ(HOLDER, %QUOTE HOLDER) , 
	   ID, ATTRIB, CONTXT))
   END %;
 

KEYWORDMACRO $FIND_HOLDER (ID,HOLDER=0,ATTRIB=0,CONTXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$FIND_HOLDER : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FIND_HOLDER (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ID, %QUOTE ID) , 
	   HOLDER, ATTRIB, CONTXT))
   END %;
 

KEYWORDMACRO $FINISH_RDB (CONTXT) =
   BEGIN
   EXTERNAL ROUTINE SYS$FINISH_RDB : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FINISH_RDB (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONTXT, %QUOTE CONTXT) ))
   END %;
 

KEYWORDMACRO $FORCEX (PIDADR=0,PRCNAM=0,CODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$FORCEX : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FORCEX (SDL$STARLET_CONCAT( PIDADR, PRCNAM, CODE))
   END %;
 

KEYWORDMACRO $FORGE_WORD (MINLEN=0,MAXLEN=0,MINDATA=0,FLAGS=0
		,RETDATA=0,OUTLEN,OUTSTR) =
   BEGIN
   EXTERNAL ROUTINE SYS$FORGE_WORD : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FORGE_WORD (SDL$STARLET_CONCAT( MINLEN, MAXLEN, MINDATA, 
	   FLAGS, RETDATA, SDL$STARLET_REQ(OUTLEN, %QUOTE OUTLEN) , 
	   SDL$STARLET_REQ(OUTSTR, %QUOTE OUTSTR) ))
   END %;
 

KEYWORDMACRO $FORMAT_ACL (ACLENT,ACLLEN=0,ACLSTR,WIDTH=0,TRMDSC=0
		,INDENT=0,ACCNAM=0,ROUTIN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$FORMAT_ACL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FORMAT_ACL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ACLENT, %QUOTE ACLENT) , 
	   ACLLEN, SDL$STARLET_REQ(ACLSTR, %QUOTE ACLSTR) , WIDTH, TRMDSC, 
	   INDENT, ACCNAM, ROUTIN))
   END %;
 

KEYWORDMACRO $FORMAT_AUDIT (FMTTYP,AUDMSG,OUTLEN=0,OUTBUF,WIDTH=0
		,TRMDSC=0,ROUTIN=0,FMTFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$FORMAT_AUDIT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FORMAT_AUDIT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FMTTYP, %QUOTE FMTTYP) , 
	   SDL$STARLET_REQ(AUDMSG, %QUOTE AUDMSG) , OUTLEN, SDL$STARLET_REQ(OUTBUF, %QUOTE OUTBUF) , 
	   WIDTH, TRMDSC, ROUTIN, FMTFLG))
   END %;
 

KEYWORDMACRO $FORMAT_CLASS (ITMLST,ROUTIN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$FORMAT_CLASS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FORMAT_CLASS (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   ROUTIN))
   END %;
 

KEYWORDMACRO $FREE (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$FREE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FREE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $FREE_USER_CAPABILITY (CAP_NUM=0,PREV_MASK=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$FREE_USER_CAPABILITY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FREE_USER_CAPABILITY (SDL$STARLET_CONCAT( CAP_NUM, PREV_MASK, 
	   FLAGS))
   END %;
 

KEYWORDMACRO $FLUSH (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$FLUSH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FLUSH (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $GET_BITMAP_INFO (DEVNAM,NAME=0,INDEX=0,HANDLE=0
		,ITMLST=0,AST_ADDR=0,AST_PARAM=0,STATUS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_BITMAP_INFO : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_BITMAP_INFO (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) , 
	   NAME, INDEX, HANDLE, ITMLST, AST_ADDR, AST_PARAM, STATUS))
   END %;
 

KEYWORDMACRO $GET_BITMAP_INFOW (DEVNAM,NAME=0,INDEX=0,HANDLE=0
		,ITMLST=0,STATUS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_BITMAP_INFOW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_BITMAP_INFOW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) , 
	   NAME, INDEX, HANDLE, ITMLST, STATUS))
   END %;
 

KEYWORDMACRO $GET_REGION_INFO (FUNCTION,REGION_ID_64,START_VA_64
		,RESERVED,BUFFER_LENGTH,BUFFER_ADDRESS_64,RETURN_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_REGION_INFO : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_REGION_INFO (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FUNCTION, %QUOTE FUNCTION) , 
	   SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(RESERVED, %QUOTE RESERVED) , SDL$STARLET_REQ(BUFFER_LENGTH, %QUOTE BUFFER_LENGTH) , 
	   SDL$STARLET_REQ(BUFFER_ADDRESS_64, %QUOTE BUFFER_ADDRESS_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) ))
   END %;
 

KEYWORDMACRO $GET_SECURITY (CLSNAM=0,OBJNAM=0,OBJHAN=0,FLAGS=0
		,ITMLST=0,CONTXT=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_SECURITY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_SECURITY (SDL$STARLET_CONCAT( CLSNAM, OBJNAM, OBJHAN, 
	   FLAGS, ITMLST, CONTXT, ACMODE))
   END %;
 

KEYWORDMACRO $GET (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $GET_ARITH_EXCEPTION (SIGARG,MCHARG,BUFFER) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_ARITH_EXCEPTION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_ARITH_EXCEPTION (SDL$STARLET_CONCAT( SDL$STARLET_REQ(SIGARG, %QUOTE SIGARG) , 
	   SDL$STARLET_REQ(MCHARG, %QUOTE MCHARG) , SDL$STARLET_REQ(BUFFER, %QUOTE BUFFER) ))
   END %;
 

KEYWORDMACRO $GETCHN (CHAN,PRILEN=0,PRIBUF=0,SCDLEN=0,SCDBUF=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETCHN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETCHN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   PRILEN, PRIBUF, SCDLEN, SCDBUF))
   END %;
 

KEYWORDMACRO $GETDEV (DEVNAM,PRILEN=0,PRIBUF=0,SCDLEN=0,SCDBUF=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETDEV : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETDEV (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) , 
	   PRILEN, PRIBUF, SCDLEN, SCDBUF))
   END %;
 

KEYWORDMACRO $GETDTI (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0,LOG_ID=0
		,CONTXT,SEARCH,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETDTI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETDTI (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, LOG_ID, SDL$STARLET_REQ(CONTXT, %QUOTE CONTXT) , 
	   SDL$STARLET_REQ(SEARCH, %QUOTE SEARCH) , SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 
KEYWORDMACRO $GETDTIW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0,LOG_ID=0
		,CONTXT,SEARCH,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETDTIW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETDTIW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, LOG_ID, SDL$STARLET_REQ(CONTXT, %QUOTE CONTXT) , 
	   SDL$STARLET_REQ(SEARCH, %QUOTE SEARCH) , SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $GETDVI (EFN=0,CHAN=0,DEVNAM=0,ITMLST,IOSB=0,ASTADR=0
		,ASTPRM=0,NULLARG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETDVI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETDVI (SDL$STARLET_CONCAT( EFN, CHAN, DEVNAM, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   IOSB, ASTADR, ASTPRM, NULLARG))
   END %;
 
KEYWORDMACRO $GETDVIW (EFN=0,CHAN=0,DEVNAM=0,ITMLST,IOSB=0,ASTADR=0
		,ASTPRM=0,NULLARG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETDVIW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETDVIW (SDL$STARLET_CONCAT( EFN, CHAN, DEVNAM, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   IOSB, ASTADR, ASTPRM, NULLARG))
   END %;
 

KEYWORDMACRO $GETEVI (ITMLST,NULLARG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETEVI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETEVI (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   NULLARG))
   END %;
 

KEYWORDMACRO $GETJPI (EFN=0,PIDADR=0,PRCNAM=0,ITMLST,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETJPI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETJPI (SDL$STARLET_CONCAT( EFN, PIDADR, PRCNAM, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   IOSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $GETJPIW (EFN=0,PIDADR=0,PRCNAM=0,ITMLST,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETJPIW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETJPIW (SDL$STARLET_CONCAT( EFN, PIDADR, PRCNAM, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   IOSB, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $GETJPI_FAST (ITEM_MASK,FLAGS,RETURN_BUFFER,RETURN_BUFFER_LENGTH) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETJPI_FAST : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETJPI_FAST (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ITEM_MASK, %QUOTE ITEM_MASK) , 
	   SDL$STARLET_REQ(FLAGS, %QUOTE FLAGS) , SDL$STARLET_REQ(RETURN_BUFFER, %QUOTE RETURN_BUFFER) , 
	   SDL$STARLET_REQ(RETURN_BUFFER_LENGTH, %QUOTE RETURN_BUFFER_LENGTH) ))
   END %;
 

KEYWORDMACRO $GETLKI (EFN=0,LKIDADR,ITMLST,IOSB=0,ASTADR=0,ASTPRM=0
		,RESERVED=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETLKI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETLKI (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(LKIDADR, %QUOTE LKIDADR) , 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , IOSB, ASTADR, ASTPRM, 
	   RESERVED))
   END %;
 
KEYWORDMACRO $GETLKIW (EFN=0,LKIDADR,ITMLST,IOSB=0,ASTADR=0,ASTPRM=0
		,RESERVED=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETLKIW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETLKIW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(LKIDADR, %QUOTE LKIDADR) , 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , IOSB, ASTADR, ASTPRM, 
	   RESERVED))
   END %;
 

KEYWORDMACRO $GETMSG (MSGID,MSGLEN,BUFADR,FLAGS=15,OUTADR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETMSG : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETMSG (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MSGID, %QUOTE MSGID) , 
	   SDL$STARLET_REQ(MSGLEN, %QUOTE MSGLEN) , SDL$STARLET_REQ(BUFADR, %QUOTE BUFADR) , 
	   FLAGS, OUTADR))
   END %;
 

KEYWORDMACRO $GETPTI (INADR,RETADR=0,ACMODE=0,MASK=0,PAGCNT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETPTI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETPTI (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE, MASK, PAGCNT))
   END %;
 

KEYWORDMACRO $GETQUI (EFN=0,FUNC,CONTEXT=0,ITMLST=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETQUI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETQUI (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   CONTEXT, ITMLST, IOSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $GETQUIW (EFN=0,FUNC,CONTEXT=0,ITMLST=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETQUIW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETQUIW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   CONTEXT, ITMLST, IOSB, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $GETSYI (EFN=0,CSIDADR=0,NODENAME=0,ITMLST,IOSB=0
		,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETSYI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETSYI (SDL$STARLET_CONCAT( EFN, CSIDADR, NODENAME, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   IOSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $GETSYIW (EFN=0,CSIDADR=0,NODENAME=0,ITMLST,IOSB=0
		,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETSYIW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETSYIW (SDL$STARLET_CONCAT( EFN, CSIDADR, NODENAME, 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , IOSB, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $GETTIM (TIMADR) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETTIM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETTIM (SDL$STARLET_CONCAT( SDL$STARLET_REQ(TIMADR, %QUOTE TIMADR) ))
   END %;
 

KEYWORDMACRO $GET_USER_CAPABILITY (CAP_NUM=0,SELECT_NUM=0,SELECT_MASK=0
		,PREV_MASK=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_USER_CAPABILITY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_USER_CAPABILITY (SDL$STARLET_CONCAT( CAP_NUM, SELECT_NUM, 
	   SELECT_MASK, PREV_MASK, FLAGS))
   END %;
 

KEYWORDMACRO $GETUTC (UTCADR) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETUTC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETUTC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(UTCADR, %QUOTE UTCADR) ))
   END %;
 

KEYWORDMACRO $GETUAI (EFN=0,CONTXT=0,USRNAM,ITMLST,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETUAI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETUAI (SDL$STARLET_CONCAT( EFN, CONTXT, SDL$STARLET_REQ(USRNAM, %QUOTE USRNAM) , 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , IOSB, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $GOTO_UNWIND (TARGET_INVO=0,TARGET_PC=0,NEW_R0=0
		,NEW_R1=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GOTO_UNWIND : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GOTO_UNWIND (SDL$STARLET_CONCAT( TARGET_INVO, TARGET_PC, 
	   NEW_R0, NEW_R1))
   END %;
 

KEYWORDMACRO $GOTO_UNWIND_64 (TARGET_INVO_64=0,TARGET_PC_64=0
		,NEWRETVAL=0,NEWRETVAL2=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GOTO_UNWIND_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GOTO_UNWIND_64 (SDL$STARLET_CONCAT( TARGET_INVO_64, TARGET_PC_64, 
	   NEWRETVAL, NEWRETVAL2))
   END %;
 

KEYWORDMACRO $GRANTID (PIDADR=0,PRCNAM=0,ID=0,NAME=0,PRVATR=0
		,SEGMENT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GRANTID : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GRANTID (SDL$STARLET_CONCAT( PIDADR, PRCNAM, ID, NAME, 
	   PRVATR, SEGMENT))
   END %;
 

KEYWORDMACRO $GRANT_LICENSE (PRDNAM,PRDUCER,CONTXT=0,ITMLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GRANT_LICENSE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GRANT_LICENSE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PRDNAM, %QUOTE PRDNAM) , 
	   SDL$STARLET_REQ(PRDUCER, %QUOTE PRDUCER) , CONTXT, ITMLST))
   END %;
 

KEYWORDMACRO $HASH_PASSWORD (PWD,ALG,SALT=0,USRNAM,HASH) =
   BEGIN
   EXTERNAL ROUTINE SYS$HASH_PASSWORD : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$HASH_PASSWORD (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PWD, %QUOTE PWD) , 
	   SDL$STARLET_REQ(ALG, %QUOTE ALG) , SALT, SDL$STARLET_REQ(USRNAM, %QUOTE USRNAM) , 
	   SDL$STARLET_REQ(HASH, %QUOTE HASH) ))
   END %;
 

KEYWORDMACRO $HIBER =
   BEGIN
   EXTERNAL ROUTINE SYS$HIBER : BLISS ADDRESSING_MODE (GENERAL);
	SYS$HIBER()
   END %;

KEYWORDMACRO $IDTOASC (ID,NAMLEN=0,NAMBUF=0,RESID=0,ATTRIB=0,CONTXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IDTOASC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IDTOASC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ID, %QUOTE ID) , 
	   NAMLEN, NAMBUF, RESID, ATTRIB, CONTXT))
   END %;
 

KEYWORDMACRO $IEEE_SET_FP_CONTROL (CLRMSK=0,SETMSK=0,PRVMSK=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IEEE_SET_FP_CONTROL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IEEE_SET_FP_CONTROL (SDL$STARLET_CONCAT( CLRMSK, SETMSK, 
	   PRVMSK))
   END %;
 

KEYWORDMACRO $IMGACT (NAME,DFLNAM=0,HDRBUF,IMGCTL=0,INADR=0,RETADR=0
		,IDENT=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IMGACT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IMGACT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(NAME, %QUOTE NAME) , 
	   DFLNAM, SDL$STARLET_REQ(HDRBUF, %QUOTE HDRBUF) , IMGCTL, 
	   INADR, RETADR, IDENT, ACMODE))
   END %;
 

KEYWORDMACRO $IMGFIX =
   BEGIN
   EXTERNAL ROUTINE SYS$IMGFIX : BLISS ADDRESSING_MODE (GENERAL);
	SYS$IMGFIX()
   END %;

KEYWORDMACRO $INIT_VOL (DEVNAM,VOLNAM,ITMLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$INIT_VOL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$INIT_VOL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DEVNAM, %QUOTE DEVNAM) , 
	   SDL$STARLET_REQ(VOLNAM, %QUOTE VOLNAM) , ITMLST))
   END %;
 

KEYWORDMACRO $IO_CLEANUP (FANDL=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IO_CLEANUP : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IO_CLEANUP (SDL$STARLET_CONCAT( FANDL))
   END %;
 

KEYWORDMACRO $IO_FASTPATH (EFN=0,CPU_MASK=0,FUNC=0,IOSB=0,ASTADR=0
		,ASTPRM=0,CBB) =
   BEGIN
   EXTERNAL ROUTINE SYS$IO_FASTPATH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IO_FASTPATH (SDL$STARLET_CONCAT( EFN, CPU_MASK, FUNC, 
	   IOSB, ASTADR, ASTPRM, SDL$STARLET_OPT( CBB)))
   END %;
 
KEYWORDMACRO $IO_FASTPATHW (EFN=0,CPU_MASK=0,FUNC=0,IOSB=0,ASTADR=0
		,ASTPRM=0,CBB) =
   BEGIN
   EXTERNAL ROUTINE SYS$IO_FASTPATHW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IO_FASTPATHW (SDL$STARLET_CONCAT( EFN, CPU_MASK, FUNC, 
	   IOSB, ASTADR, ASTPRM, SDL$STARLET_OPT( CBB)))
   END %;
 

KEYWORDMACRO $IO_PERFORM (FANDL=0,CHAN=0,IOSADR=0,BUFADR=0,BUFLEN=0
		,DEVDATA=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IO_PERFORM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IO_PERFORM (SDL$STARLET_CONCAT( FANDL, CHAN, IOSADR, 
	   BUFADR, BUFLEN, DEVDATA))
   END %;
 
KEYWORDMACRO $IO_PERFORMW (FANDL=0,CHAN=0,IOSADR=0,BUFADR=0,BUFLEN=0
		,DEVDATA=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IO_PERFORMW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IO_PERFORMW (SDL$STARLET_CONCAT( FANDL, CHAN, IOSADR, 
	   BUFADR, BUFLEN, DEVDATA))
   END %;
 

KEYWORDMACRO $IO_SETUP (FUNC=0,BUFOBJ=0,IOSOBJ=0,ASTADR=0,FLAGS=0
		,RETURN_FANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$IO_SETUP : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IO_SETUP (SDL$STARLET_CONCAT( FUNC, BUFOBJ, IOSOBJ, ASTADR, 
	   FLAGS, SDL$STARLET_REQ(RETURN_FANDLE, %QUOTE RETURN_FANDLE) ))
   END %;
 

KEYWORDMACRO $IPC (EFN=0,FUNC,IPCB,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IPC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IPC (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   SDL$STARLET_REQ(IPCB, %QUOTE IPCB) , ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $IPCW (EFN=0,FUNC,IPCB,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IPCW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IPCW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   SDL$STARLET_REQ(IPCB, %QUOTE IPCB) , ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $LCKPAG (INADR,RETADR=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$LCKPAG : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$LCKPAG (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE))
   END %;
 

KEYWORDMACRO $LCKPAG_64 (START_VA_64,LENGTH_64,ACMODE=0,RETURN_VA_64
		,RETURN_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$LCKPAG_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$LCKPAG_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) ))
   END %;
 

KEYWORDMACRO $LFS (EFN=0,FUNC,FSB,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$LFS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$LFS (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   SDL$STARLET_REQ(FSB, %QUOTE FSB) , ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $LKWSET (INADR,RETADR=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$LKWSET : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$LKWSET (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE))
   END %;
 

KEYWORDMACRO $LKWSET_64 (START_VA_64,LENGTH_64,ACMODE=0,RETURN_VA_64
		,RETURN_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$LKWSET_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$LKWSET_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) ))
   END %;
 

KEYWORDMACRO $LOOKUP_MAPPING (INITMLST,OUTITMLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$LOOKUP_MAPPING : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$LOOKUP_MAPPING (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INITMLST, %QUOTE INITMLST) , 
	   OUTITMLST))
   END %;
 

KEYWORDMACRO $MGBLSC (INADR,RETADR=0,ACMODE=0,FLAGS=0,GSDNAM,IDENT=0
		,RELPAG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$MGBLSC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MGBLSC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE, FLAGS, SDL$STARLET_REQ(GSDNAM, %QUOTE GSDNAM) , 
	   IDENT, RELPAG))
   END %;
 

KEYWORDMACRO $MGBLSC_64 (GSDNAM_64,IDENT_64=0,REGION_ID_64,SECTION_OFFSET_64
		,LENGTH_64,ACMODE=0,FLAGS=0,RETURN_VA_64,RETURN_LENGTH_64,START_VA_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$MGBLSC_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MGBLSC_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   SDL$STARLET_REQ(SECTION_OFFSET_64, %QUOTE SECTION_OFFSET_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, FLAGS, 
	   SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( START_VA_64)))
   END %;
 

KEYWORDMACRO $MGBLSC_GPFN_64 (GSDNAM_64,IDENT_64=0,REGION_ID_64
		,RELATIVE_PAGE,PAGE_COUNT,ACMODE=0,FLAGS=0,RETURN_VA_64,RETURN_LENGTH_64
		,START_VA_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$MGBLSC_GPFN_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MGBLSC_GPFN_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(GSDNAM_64, %QUOTE GSDNAM_64) , 
	   IDENT_64, SDL$STARLET_REQ(REGION_ID_64, %QUOTE REGION_ID_64) , 
	   SDL$STARLET_REQ(RELATIVE_PAGE, %QUOTE RELATIVE_PAGE) , SDL$STARLET_REQ(PAGE_COUNT, %QUOTE PAGE_COUNT) , 
	   ACMODE, FLAGS, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( START_VA_64)))
   END %;
 

KEYWORDMACRO $MODIFY (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$MODIFY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MODIFY (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $MODIFY_MAPPING (INITMLST,MODITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$MODIFY_MAPPING : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MODIFY_MAPPING (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INITMLST, %QUOTE INITMLST) , 
	   SDL$STARLET_REQ(MODITMLST, %QUOTE MODITMLST) ))
   END %;
 

KEYWORDMACRO $MOD_HOLDER (ID,HOLDER,SET_ATTRIB=0,CLR_ATTRIB=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$MOD_HOLDER : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MOD_HOLDER (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ID, %QUOTE ID) , 
	   SDL$STARLET_REQ(HOLDER, %QUOTE HOLDER) , SET_ATTRIB, CLR_ATTRIB))
   END %;
 

KEYWORDMACRO $MOD_IDENT (ID,SET_ATTRIB=0,CLR_ATTRIB=0,NEW_NAME=0
		,NEW_VALUE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$MOD_IDENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MOD_IDENT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ID, %QUOTE ID) , 
	   SET_ATTRIB, CLR_ATTRIB, NEW_NAME, NEW_VALUE))
   END %;
 

KEYWORDMACRO $MOUNT (ITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$MOUNT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MOUNT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $MTACCESS (LBLNAM,UIC=0,STD_VERSION=3,ACCESS_CHAR=32
		,ACCESS_SPEC=0,TYPE) =
   BEGIN
   EXTERNAL ROUTINE SYS$MTACCESS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MTACCESS (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LBLNAM, %QUOTE LBLNAM) , 
	   UIC, STD_VERSION, ACCESS_CHAR, ACCESS_SPEC, SDL$STARLET_REQ(TYPE, %QUOTE TYPE) ))
   END %;
 

KEYWORDMACRO $NUMTIM (TIMBUF,TIMADR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$NUMTIM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$NUMTIM (SDL$STARLET_CONCAT( SDL$STARLET_REQ(TIMBUF, %QUOTE TIMBUF) , 
	   TIMADR))
   END %;
 

KEYWORDMACRO $NUMUTC (TIMBUF,UTCADR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$NUMUTC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$NUMUTC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(TIMBUF, %QUOTE TIMBUF) , 
	   UTCADR))
   END %;
 

KEYWORDMACRO $NXTVOL (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$NXTVOL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$NXTVOL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $OPEN (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$OPEN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$OPEN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $PARSE (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$PARSE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PARSE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $PARSE_ACL (ACLSTR,ACLENT,ERRPOS=0,ACCNAM=0,ROUTIN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$PARSE_ACL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PARSE_ACL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ACLSTR, %QUOTE ACLSTR) , 
	   SDL$STARLET_REQ(ACLENT, %QUOTE ACLENT) , ERRPOS, ACCNAM, 
	   ROUTIN))
   END %;
 

KEYWORDMACRO $PARSE_CLASS (ITMLST,ROUTIN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$PARSE_CLASS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PARSE_CLASS (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   ROUTIN))
   END %;
 

KEYWORDMACRO $PERSONA_CREATE (PERSONA,USRNAM=0,FLAGS=0,USRPRO
		,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_CREATE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_CREATE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , 
	   USRNAM, FLAGS, SDL$STARLET_OPT( USRPRO, ITMLST)))
   END %;
 

KEYWORDMACRO $PERSONA_CREATE_INT (PERSONA,ITMLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_CREATE_INT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_CREATE_INT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , 
	   ITMLST))
   END %;
 

KEYWORDMACRO $PERSONA_ASSUME (PERSONA,FLAGS=0,PREVIOUS,ACMODE) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_ASSUME : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_ASSUME (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , 
	   FLAGS, SDL$STARLET_OPT( PREVIOUS, ACMODE)))
   END %;
 

KEYWORDMACRO $PERSONA_DELETE (PERSONA) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_DELETE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_DELETE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) ))
   END %;
 

KEYWORDMACRO $PERSONA_EXPORT_ARB (LEVEL=-1) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_EXPORT_ARB : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_EXPORT_ARB (SDL$STARLET_CONCAT( LEVEL))
   END %;
 

KEYWORDMACRO $PERSONA_IMPORT_ARB (LEVEL=-1) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_IMPORT_ARB : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_IMPORT_ARB (SDL$STARLET_CONCAT( LEVEL))
   END %;
 

KEYWORDMACRO $PERSONA_CLONE (PERSONA,INPUT_ID) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_CLONE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_CLONE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , 
	   SDL$STARLET_OPT( INPUT_ID)))
   END %;
 

KEYWORDMACRO $PROCESS_AFFINITY (PIDADR=0,PRCNAM=0,SELECT_MASK=0
		,MODIFY_MASK=0,PREV_MASK=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$PROCESS_AFFINITY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PROCESS_AFFINITY (SDL$STARLET_CONCAT( PIDADR, PRCNAM, 
	   SELECT_MASK, MODIFY_MASK, PREV_MASK, FLAGS))
   END %;
 

KEYWORDMACRO $PROCESS_CAPABILITIES (PIDADR=0,PRCNAM=0,SELECT_MASK=0
		,MODIFY_MASK=0,PREV_MASK=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$PROCESS_CAPABILITIES : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PROCESS_CAPABILITIES (SDL$STARLET_CONCAT( PIDADR, PRCNAM, 
	   SELECT_MASK, MODIFY_MASK, PREV_MASK, FLAGS))
   END %;
 

KEYWORDMACRO $PROCESS_SCAN (PIDCTX,ITMLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$PROCESS_SCAN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PROCESS_SCAN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PIDCTX, %QUOTE PIDCTX) , 
	   ITMLST))
   END %;
 

KEYWORDMACRO $PURGE_WS (START_VA_64,LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$PURGE_WS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PURGE_WS (SDL$STARLET_CONCAT( SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) ))
   END %;
 

KEYWORDMACRO $PURGWS (INADR) =
   BEGIN
   EXTERNAL ROUTINE SYS$PURGWS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PURGWS (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) ))
   END %;
 

KEYWORDMACRO $PUT (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$PUT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PUT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $PUTMSG (MSGVEC,ACTRTN=0,FACNAM=0,ACTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$PUTMSG : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PUTMSG (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MSGVEC, %QUOTE MSGVEC) , 
	   ACTRTN, FACNAM, ACTPRM))
   END %;
 

KEYWORDMACRO $QIO (EFN=0,CHAN,FUNC,IOSB=0,ASTADR=0,ASTPRM=0,P1=0
		,P2=0,P3=0,P4=0,P5=0,P6=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$QIO : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$QIO (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , IOSB, ASTADR, ASTPRM, 
	   P1, P2, P3, P4, P5, P6))
   END %;
 
KEYWORDMACRO $QIOW (EFN=0,CHAN,FUNC,IOSB=0,ASTADR=0,ASTPRM=0,P1=0
		,P2=0,P3=0,P4=0,P5=0,P6=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$QIOW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$QIOW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , IOSB, ASTADR, ASTPRM, 
	   P1, P2, P3, P4, P5, P6))
   END %;
 

KEYWORDMACRO $READ (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$READ : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$READ (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $READEF (EFN,STATE) =
   BEGIN
   EXTERNAL ROUTINE SYS$READEF : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$READEF (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EFN, %QUOTE EFN) , 
	   SDL$STARLET_REQ(STATE, %QUOTE STATE) ))
   END %;
 

KEYWORDMACRO $READ_THREAD_UNQ (CONTXT) =
   BEGIN
   EXTERNAL ROUTINE SYS$READ_THREAD_UNQ : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$READ_THREAD_UNQ (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONTXT, %QUOTE CONTXT) ))
   END %;
 

KEYWORDMACRO $REGISTRY (EFN=0,FUNC,NTCREDENTIALS=0,ITMLST,IOSB=0
		,ASTADR,ASTPRM,TIMEOUT) =
   BEGIN
   EXTERNAL ROUTINE SYS$REGISTRY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$REGISTRY (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   NTCREDENTIALS, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , IOSB, 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, TIMEOUT)))
   END %;
 
KEYWORDMACRO $REGISTRYW (EFN=0,FUNC,NTCREDENTIALS=0,ITMLST,IOSB=0
		,ASTADR,ASTPRM,TIMEOUT) =
   BEGIN
   EXTERNAL ROUTINE SYS$REGISTRYW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$REGISTRYW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   NTCREDENTIALS, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , IOSB, 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, TIMEOUT)))
   END %;
 

KEYWORDMACRO $RELEASE (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$RELEASE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RELEASE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $RELEASE_LICENSE (CONTXT) =
   BEGIN
   EXTERNAL ROUTINE SYS$RELEASE_LICENSE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RELEASE_LICENSE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONTXT, %QUOTE CONTXT) ))
   END %;
 

KEYWORDMACRO $RELEASE_VP =
   BEGIN
   EXTERNAL ROUTINE SYS$RELEASE_VP : BLISS ADDRESSING_MODE (GENERAL);
	SYS$RELEASE_VP()
   END %;

KEYWORDMACRO $RELEASE_VP_INT =
   BEGIN
   EXTERNAL ROUTINE SYS$RELEASE_VP_INT : BLISS ADDRESSING_MODE (GENERAL);
	SYS$RELEASE_VP_INT()
   END %;

KEYWORDMACRO $REMOVE (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$REMOVE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$REMOVE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $REM_HOLDER (ID,HOLDER) =
   BEGIN
   EXTERNAL ROUTINE SYS$REM_HOLDER : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$REM_HOLDER (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ID, %QUOTE ID) , 
	   SDL$STARLET_REQ(HOLDER, %QUOTE HOLDER) ))
   END %;
 

KEYWORDMACRO $REM_IDENT (ID) =
   BEGIN
   EXTERNAL ROUTINE SYS$REM_IDENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$REM_IDENT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ID, %QUOTE ID) ))
   END %;
 

KEYWORDMACRO $RENAME (OLDFAB,ERR=0,SUC=0,NEWFAB) =
   BEGIN
   EXTERNAL ROUTINE SYS$RENAME : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RENAME (SDL$STARLET_CONCAT( SDL$STARLET_REQ(OLDFAB, %QUOTE OLDFAB) , 
	   ERR, SUC, SDL$STARLET_REQ(NEWFAB, %QUOTE NEWFAB) ))
   END %;
 

KEYWORDMACRO $RESTORE_VP_EXCEPTION (EXCID) =
   BEGIN
   EXTERNAL ROUTINE SYS$RESTORE_VP_EXCEPTION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RESTORE_VP_EXCEPTION (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EXCID, %QUOTE EXCID) ))
   END %;
 

KEYWORDMACRO $RESTORE_VP_EXC_INT (EXCID) =
   BEGIN
   EXTERNAL ROUTINE SYS$RESTORE_VP_EXC_INT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RESTORE_VP_EXC_INT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EXCID, %QUOTE EXCID) ))
   END %;
 

KEYWORDMACRO $RESTORE_VP_STATE =
   BEGIN
   EXTERNAL ROUTINE SYS$RESTORE_VP_STATE : BLISS ADDRESSING_MODE (GENERAL);
	SYS$RESTORE_VP_STATE()
   END %;

KEYWORDMACRO $RESUME (PIDADR=0,PRCNAM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$RESUME : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RESUME (SDL$STARLET_CONCAT( PIDADR, PRCNAM))
   END %;
 

KEYWORDMACRO $REVOKID (PIDADR=0,PRCNAM=0,ID=0,NAME=0,PRVATR=0
		,SEGMENT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$REVOKID : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$REVOKID (SDL$STARLET_CONCAT( PIDADR, PRCNAM, ID, NAME, 
	   PRVATR, SEGMENT))
   END %;
 

KEYWORDMACRO $REWIND (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$REWIND : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$REWIND (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $RMSRUNDWN (BUFADDR,TYPEVALUE) =
   BEGIN
   EXTERNAL ROUTINE SYS$RMSRUNDWN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RMSRUNDWN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(BUFADDR, %QUOTE BUFADDR) , 
	   SDL$STARLET_REQ(TYPEVALUE, %QUOTE TYPEVALUE) ))
   END %;
 

KEYWORDMACRO $RUNDWN (ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$RUNDWN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RUNDWN (SDL$STARLET_CONCAT( ACMODE))
   END %;
 

KEYWORDMACRO $SAVE_VP_EXCEPTION (EXCID,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SAVE_VP_EXCEPTION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SAVE_VP_EXCEPTION (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EXCID, %QUOTE EXCID) , 
	   FLAGS))
   END %;
 

KEYWORDMACRO $SAVE_VP_EXC_INT (EXCID,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SAVE_VP_EXC_INT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SAVE_VP_EXC_INT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EXCID, %QUOTE EXCID) , 
	   FLAGS))
   END %;
 

KEYWORDMACRO $SCAN_INTRUSION (LOGFAIL_STATUS,FAILED_USER,JOB_TYPE
		,SOURCE_TERMINAL=0,SOURCE_NODE=0,SOURCE_USER=0,SOURCE_ADDRESS=0
		,FAILED_PASSWORD=0,PARENT_USER=0,PARENT_ID=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SCAN_INTRUSION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SCAN_INTRUSION (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOGFAIL_STATUS, %QUOTE LOGFAIL_STATUS) , 
	   SDL$STARLET_REQ(FAILED_USER, %QUOTE FAILED_USER) , SDL$STARLET_REQ(JOB_TYPE, %QUOTE JOB_TYPE) , 
	   SOURCE_TERMINAL, SOURCE_NODE, SOURCE_USER, SOURCE_ADDRESS, 
	   FAILED_PASSWORD, PARENT_USER, PARENT_ID, FLAGS))
   END %;
 

KEYWORDMACRO $SCAN_MAPPING (INITMLST,OUTITMLST,CONTXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SCAN_MAPPING : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SCAN_MAPPING (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INITMLST, %QUOTE INITMLST) , 
	   SDL$STARLET_REQ(OUTITMLST, %QUOTE OUTITMLST) , CONTXT))
   END %;
 

KEYWORDMACRO $SCHDWK (PIDADR=0,PRCNAM=0,DAYTIM,REPTIM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SCHDWK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SCHDWK (SDL$STARLET_CONCAT( PIDADR, PRCNAM, SDL$STARLET_REQ(DAYTIM, %QUOTE DAYTIM) , 
	   REPTIM))
   END %;
 

KEYWORDMACRO $SEARCH (FAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$SEARCH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SEARCH (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FAB, %QUOTE FAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $SETCLUEVT (EVENT,ASTADR,ASTPRM=0,ACMODE=0,HANDLE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETCLUEVT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETCLUEVT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EVENT, %QUOTE EVENT) , 
	   SDL$STARLET_REQ(ASTADR, %QUOTE ASTADR) , ASTPRM, ACMODE, 
	   HANDLE))
   END %;
 

KEYWORDMACRO $SETDDIR (NEWDIRADDR=0,LENGTHADDR=0,CURDIRADDR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETDDIR : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETDDIR (SDL$STARLET_CONCAT( NEWDIRADDR, LENGTHADDR, 
	   CURDIRADDR))
   END %;
 

KEYWORDMACRO $SETDFPROT (NEWDEFPROTADDR=0,CURDEFPROTADDR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETDFPROT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETDFPROT (SDL$STARLET_CONCAT( NEWDEFPROTADDR, CURDEFPROTADDR))
   END %;
 

KEYWORDMACRO $SET_RETURN_VALUE (MECHANISM_ARG=0,RETURN_TYPE=0
		,RETURN_VALUE) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_RETURN_VALUE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_RETURN_VALUE (SDL$STARLET_CONCAT( MECHANISM_ARG, 
	   RETURN_TYPE, SDL$STARLET_REQ(RETURN_VALUE, %QUOTE RETURN_VALUE) ))
   END %;
 

KEYWORDMACRO $SET_SYSTEM_EVENT (EVENT,ASTADR,ASTPRM=0,ACMODE=0
		,FLAGS=0,HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_SYSTEM_EVENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_SYSTEM_EVENT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EVENT, %QUOTE EVENT) , 
	   SDL$STARLET_REQ(ASTADR, %QUOTE ASTADR) , ASTPRM, ACMODE, 
	   FLAGS, SDL$STARLET_REQ(HANDLE, %QUOTE HANDLE) ))
   END %;
 

KEYWORDMACRO $SET_IMPLICIT_AFFINITY (PIDADR=0,PRCNAM=0,STATE=0
		,CPU_ID=-1,PREV_MASK=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_IMPLICIT_AFFINITY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_IMPLICIT_AFFINITY (SDL$STARLET_CONCAT( PIDADR, PRCNAM, 
	   STATE, CPU_ID, PREV_MASK))
   END %;
 

KEYWORDMACRO $SET_RESOURCE_DOMAIN (FUNC,RSDM_ID,DOMAIN_NUMBER
		,NULLARG=0,ACCESS=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_RESOURCE_DOMAIN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_RESOURCE_DOMAIN (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   SDL$STARLET_REQ(RSDM_ID, %QUOTE RSDM_ID) , SDL$STARLET_REQ(DOMAIN_NUMBER, %QUOTE DOMAIN_NUMBER) , 
	   NULLARG, ACCESS, ACMODE))
   END %;
 

KEYWORDMACRO $SET_SECURITY (CLSNAM=0,OBJNAM=0,OBJHAN=0,FLAGS=0
		,ITMLST=0,CONTXT=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_SECURITY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_SECURITY (SDL$STARLET_CONCAT( CLSNAM, OBJNAM, OBJHAN, 
	   FLAGS, ITMLST, CONTXT, ACMODE))
   END %;
 

KEYWORDMACRO $SET_UNWIND_TABLE (CODE_BASE_VA=0,CODE_SIZE=0,UT_BASE_VA=0
		,UT_SIZE=0,HANDLER_BASE_VA=0,UNWIND_INFO_BASE=0,NAME) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_UNWIND_TABLE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_UNWIND_TABLE (SDL$STARLET_CONCAT( CODE_BASE_VA, CODE_SIZE, 
	   UT_BASE_VA, UT_SIZE, HANDLER_BASE_VA, UNWIND_INFO_BASE, SDL$STARLET_REQ(NAME, %QUOTE NAME) ))
   END %;
 

KEYWORDMACRO $SETAST (ENBFLG) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETAST : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETAST (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ENBFLG, %QUOTE ENBFLG) ))
   END %;
 

KEYWORDMACRO $SETEF (EFN) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETEF : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETEF (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EFN, %QUOTE EFN) ))
   END %;
 

KEYWORDMACRO $GETENV (ITEMLIST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GETENV : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GETENV (SDL$STARLET_CONCAT( ITEMLIST))
   END %;
 

KEYWORDMACRO $SETENV (ITEMLIST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETENV : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETENV (SDL$STARLET_CONCAT( ITEMLIST))
   END %;
 

KEYWORDMACRO $SETEVTAST (EVTNAM,EVTADR,EVTFAC=0,ACMODE=0,FLAGS=0
		,REQID=0,EVTID=0,EVTCRD=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0,NULLARG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETEVTAST : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETEVTAST (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EVTNAM, %QUOTE EVTNAM) , 
	   SDL$STARLET_REQ(EVTADR, %QUOTE EVTADR) , EVTFAC, ACMODE, 
	   FLAGS, REQID, EVTID, EVTCRD, EFN, IOSB, ASTADR, ASTPRM, NULLARG))
   END %;
 
KEYWORDMACRO $SETEVTASTW (EVTNAM,EVTADR,EVTFAC=0,ACMODE=0,FLAGS=0
		,REQID=0,EVTID=0,EVTCRD=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0,NULLARG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETEVTASTW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETEVTASTW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EVTNAM, %QUOTE EVTNAM) , 
	   SDL$STARLET_REQ(EVTADR, %QUOTE EVTADR) , EVTFAC, ACMODE, 
	   FLAGS, REQID, EVTID, EVTCRD, EFN, IOSB, ASTADR, ASTPRM, NULLARG))
   END %;
 

KEYWORDMACRO $SETEXV (VECTOR=0,ADDRES=0,ACMODE=0,PRVHND=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETEXV : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETEXV (SDL$STARLET_CONCAT( VECTOR, ADDRES, ACMODE, PRVHND))
   END %;
 

KEYWORDMACRO $SETIME (TIMADR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETIME : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETIME (SDL$STARLET_CONCAT( TIMADR))
   END %;
 

KEYWORDMACRO $SETIMR (EFN=0,DAYTIM,ASTADR=0,REQIDT=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETIMR : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETIMR (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(DAYTIM, %QUOTE DAYTIM) , 
	   ASTADR, REQIDT, FLAGS))
   END %;
 

KEYWORDMACRO $SETPFM (PFMFLG=0,ASTADR=0,ASTPRM=0,ACMODE=0,BUFCNTADR=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETPFM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETPFM (SDL$STARLET_CONCAT( PFMFLG, ASTADR, ASTPRM, ACMODE, 
	   BUFCNTADR))
   END %;
 

KEYWORDMACRO $SETPRA (ASTADR,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETPRA : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETPRA (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ASTADR, %QUOTE ASTADR) , 
	   ACMODE))
   END %;
 

KEYWORDMACRO $SETPRI (PIDADR=0,PRCNAM=0,PRI,PRVPRI=0,POL=0,PRVPOL=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETPRI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETPRI (SDL$STARLET_CONCAT( PIDADR, PRCNAM, SDL$STARLET_REQ(PRI, %QUOTE PRI) , 
	   PRVPRI, POL, PRVPOL))
   END %;
 

KEYWORDMACRO $SETPRN (PRCNAM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETPRN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETPRN (SDL$STARLET_CONCAT( PRCNAM))
   END %;
 

KEYWORDMACRO $SETPRT (INADR,RETADR=0,ACMODE=0,PROT,PRVPRT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETPRT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETPRT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE, SDL$STARLET_REQ(PROT, %QUOTE PROT) , PRVPRT))
   END %;
 

KEYWORDMACRO $SETPRT_64 (START_VA_64,LENGTH_64,ACMODE=0,PROT,RETURN_VA_64
		,RETURN_LENGTH_64,RETURN_PROT_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETPRT_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETPRT_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, SDL$STARLET_REQ(PROT, %QUOTE PROT) , 
	   SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_REQ(RETURN_PROT_64, %QUOTE RETURN_PROT_64) ))
   END %;
 

KEYWORDMACRO $SETPRV (ENBFLG=0,PRVADR=0,PRMFLG=0,PRVPRV=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETPRV : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETPRV (SDL$STARLET_CONCAT( ENBFLG, PRVADR, PRMFLG, PRVPRV))
   END %;
 

KEYWORDMACRO $SETRWM (WATFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETRWM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETRWM (SDL$STARLET_CONCAT( WATFLG))
   END %;
 

KEYWORDMACRO $SETSFM (ENBFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETSFM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETSFM (SDL$STARLET_CONCAT( ENBFLG))
   END %;
 

KEYWORDMACRO $SETSSF (MASK=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETSSF : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETSSF (SDL$STARLET_CONCAT( MASK))
   END %;
 

KEYWORDMACRO $SETSHLV (PIDADR=0,PRCNAM=0,SHLVFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETSHLV : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETSHLV (SDL$STARLET_CONCAT( PIDADR, PRCNAM, SHLVFLG))
   END %;
 

KEYWORDMACRO $SETSTK (INADR,RETADR=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETSTK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETSTK (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE))
   END %;
 

KEYWORDMACRO $SETSWM (SWPFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETSWM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETSWM (SDL$STARLET_CONCAT( SWPFLG))
   END %;
 

KEYWORDMACRO $SETDTI (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0,CONTXT
		,FUNC,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETDTI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETDTI (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(CONTXT, %QUOTE CONTXT) , 
	   SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 
KEYWORDMACRO $SETDTIW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0,CONTXT
		,FUNC,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETDTIW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETDTIW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(CONTXT, %QUOTE CONTXT) , 
	   SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $SETUAI (EFN=0,CONTXT=0,USRNAM,ITMLST,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETUAI : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETUAI (SDL$STARLET_CONCAT( EFN, CONTXT, SDL$STARLET_REQ(USRNAM, %QUOTE USRNAM) , 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , IOSB, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $SHOW_INTRUSION (USER_CRITERIA,INTRUDER,INTRUDER_LEN
		,BREAKIN_BLOCK,FLAGS=0,CONTEXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SHOW_INTRUSION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SHOW_INTRUSION (SDL$STARLET_CONCAT( SDL$STARLET_REQ(USER_CRITERIA, %QUOTE USER_CRITERIA) , 
	   SDL$STARLET_REQ(INTRUDER, %QUOTE INTRUDER) , SDL$STARLET_REQ(INTRUDER_LEN, %QUOTE INTRUDER_LEN) , 
	   SDL$STARLET_REQ(BREAKIN_BLOCK, %QUOTE BREAKIN_BLOCK) , FLAGS, 
	   CONTEXT))
   END %;
 

KEYWORDMACRO $SNDACC (MSGBUF,CHAN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SNDACC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SNDACC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MSGBUF, %QUOTE MSGBUF) , 
	   CHAN))
   END %;
 

KEYWORDMACRO $SNDERR (MSGBUF) =
   BEGIN
   EXTERNAL ROUTINE SYS$SNDERR : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SNDERR (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MSGBUF, %QUOTE MSGBUF) ))
   END %;
 

KEYWORDMACRO $SNDOPR (MSGBUF,CHAN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SNDOPR : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SNDOPR (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MSGBUF, %QUOTE MSGBUF) , 
	   CHAN))
   END %;
 

KEYWORDMACRO $SNDSMB (MSGBUF,CHAN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SNDSMB : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SNDSMB (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MSGBUF, %QUOTE MSGBUF) , 
	   CHAN))
   END %;
 

KEYWORDMACRO $SNDJBC (EFN=0,FUNC,NULLARG=0,ITMLST=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SNDJBC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SNDJBC (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   NULLARG, ITMLST, IOSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $SNDJBCW (EFN=0,FUNC,NULLARG=0,ITMLST=0,IOSB=0,ASTADR=0
		,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SNDJBCW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SNDJBCW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   NULLARG, ITMLST, IOSB, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $SPACE (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$SPACE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SPACE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $SUSPND (PIDADR=0,PRCNAM=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SUSPND : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SUSPND (SDL$STARLET_CONCAT( PIDADR, PRCNAM, FLAGS))
   END %;
 

KEYWORDMACRO $SYNCH (EFN=0,IOSB=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SYNCH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SYNCH (SDL$STARLET_CONCAT( EFN, IOSB))
   END %;
 

KEYWORDMACRO $SUBSYSTEM (ENBFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SUBSYSTEM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SUBSYSTEM (SDL$STARLET_CONCAT( ENBFLG))
   END %;
 

KEYWORDMACRO $TIMCON (SMNADR,UTCADR,CVTFLG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$TIMCON : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$TIMCON (SDL$STARLET_CONCAT( SDL$STARLET_REQ(SMNADR, %QUOTE SMNADR) , 
	   SDL$STARLET_REQ(UTCADR, %QUOTE UTCADR) , CVTFLG))
   END %;
 

KEYWORDMACRO $TRNLNM (ATTR=0,TABNAM,LOGNAM,ACMODE=0,ITMLST=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$TRNLNM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$TRNLNM (SDL$STARLET_CONCAT( ATTR, SDL$STARLET_REQ(TABNAM, %QUOTE TABNAM) , 
	   SDL$STARLET_REQ(LOGNAM, %QUOTE LOGNAM) , ACMODE, ITMLST))
   END %;
 

KEYWORDMACRO $TRNLOG (LOGNAM,RSLLEN=0,RSLBUF,TABLE=0,ACMODE=0
		,DSBMSK=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$TRNLOG : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$TRNLOG (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOGNAM, %QUOTE LOGNAM) , 
	   RSLLEN, SDL$STARLET_REQ(RSLBUF, %QUOTE RSLBUF) , TABLE, ACMODE, 
	   DSBMSK))
   END %;
 

KEYWORDMACRO $TRUNCATE (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$TRUNCATE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$TRUNCATE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $ULKPAG (INADR,RETADR=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ULKPAG : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ULKPAG (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE))
   END %;
 

KEYWORDMACRO $ULKPAG_64 (START_VA_64,LENGTH_64,ACMODE=0,RETURN_VA_64
		,RETURN_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$ULKPAG_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ULKPAG_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) ))
   END %;
 

KEYWORDMACRO $ULWSET (INADR,RETADR=0,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ULWSET : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ULWSET (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE))
   END %;
 

KEYWORDMACRO $ULWSET_64 (START_VA_64,LENGTH_64,ACMODE=0,RETURN_VA_64
		,RETURN_LENGTH_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$ULWSET_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ULWSET_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) ))
   END %;
 

KEYWORDMACRO $UNWIND (DEPADR=0,NEWPC=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$UNWIND : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$UNWIND (SDL$STARLET_CONCAT( DEPADR, NEWPC))
   END %;
 

KEYWORDMACRO $UPDATE (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$UPDATE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$UPDATE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $UPDSEC (INADR,RETADR=0,ACMODE=0,UPDFLG=0,EFN=0,IOSB=0
		,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$UPDSEC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$UPDSEC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE, UPDFLG, EFN, IOSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $UPDSECW (INADR,RETADR=0,ACMODE=0,UPDFLG=0,EFN=0
		,IOSB=0,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$UPDSECW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$UPDSECW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(INADR, %QUOTE INADR) , 
	   RETADR, ACMODE, UPDFLG, EFN, IOSB, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $UPDSEC_64 (START_VA_64,LENGTH_64,ACMODE=0,UPDFLG=0
		,EFN=0,IOSA_64=0,RETURN_VA_64,RETURN_LENGTH_64,ASTADR_64,ASTPRM_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$UPDSEC_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$UPDSEC_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, UPDFLG, 
	   EFN, IOSA_64, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( ASTADR_64, ASTPRM_64)))
   END %;
 
KEYWORDMACRO $UPDSEC_64W (START_VA_64,LENGTH_64,ACMODE=0,UPDFLG=0
		,EFN=0,IOSA_64=0,RETURN_VA_64,RETURN_LENGTH_64,ASTADR_64,ASTPRM_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$UPDSEC_64W : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$UPDSEC_64W (SDL$STARLET_CONCAT( SDL$STARLET_REQ(START_VA_64, %QUOTE START_VA_64) , 
	   SDL$STARLET_REQ(LENGTH_64, %QUOTE LENGTH_64) , ACMODE, UPDFLG, 
	   EFN, IOSA_64, SDL$STARLET_REQ(RETURN_VA_64, %QUOTE RETURN_VA_64) , 
	   SDL$STARLET_REQ(RETURN_LENGTH_64, %QUOTE RETURN_LENGTH_64) , 
	   SDL$STARLET_OPT( ASTADR_64, ASTPRM_64)))
   END %;
 

KEYWORDMACRO $VERIFY_PROXY (REM_NODE,REM_USER,PROPOSED_USER=0
		,LOCAL_USER,LOCAL_USER_LEN,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$VERIFY_PROXY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$VERIFY_PROXY (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REM_NODE, %QUOTE REM_NODE) , 
	   SDL$STARLET_REQ(REM_USER, %QUOTE REM_USER) , PROPOSED_USER, 
	   SDL$STARLET_REQ(LOCAL_USER, %QUOTE LOCAL_USER) , SDL$STARLET_REQ(LOCAL_USER_LEN, %QUOTE LOCAL_USER_LEN) , 
	   FLAGS))
   END %;
 

KEYWORDMACRO $WAIT (RAB) =
   BEGIN
   EXTERNAL ROUTINE SYS$WAIT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$WAIT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) ))
   END %;
 

KEYWORDMACRO $WAITFR (EFN) =
   BEGIN
   EXTERNAL ROUTINE SYS$WAITFR : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$WAITFR (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EFN, %QUOTE EFN) ))
   END %;
 

KEYWORDMACRO $WAKE (PIDADR=0,PRCNAM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$WAKE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$WAKE (SDL$STARLET_CONCAT( PIDADR, PRCNAM))
   END %;
 

KEYWORDMACRO $WFLAND (EFN,MASK) =
   BEGIN
   EXTERNAL ROUTINE SYS$WFLAND : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$WFLAND (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EFN, %QUOTE EFN) , 
	   SDL$STARLET_REQ(MASK, %QUOTE MASK) ))
   END %;
 

KEYWORDMACRO $WFLOR (EFN,MASK) =
   BEGIN
   EXTERNAL ROUTINE SYS$WFLOR : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$WFLOR (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EFN, %QUOTE EFN) , 
	   SDL$STARLET_REQ(MASK, %QUOTE MASK) ))
   END %;
 

KEYWORDMACRO $WRITE (RAB,ERR,SUC) =
   BEGIN
   EXTERNAL ROUTINE SYS$WRITE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$WRITE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RAB, %QUOTE RAB) , 
	   SDL$STARLET_OPT( ERR, SUC)))
   END %;
 

KEYWORDMACRO $WRITE_THREAD_UNQ (CONTXT) =
   BEGIN
   EXTERNAL ROUTINE SYS$WRITE_THREAD_UNQ : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$WRITE_THREAD_UNQ (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONTXT, %QUOTE CONTXT) ))
   END %;
 

KEYWORDMACRO $XFS_CLIENT (EFN=0,FUNC,FSB,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$XFS_CLIENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$XFS_CLIENT (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   SDL$STARLET_REQ(FSB, %QUOTE FSB) , ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $XFS_SERVER (EFN=0,FUNC,FSB,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$XFS_SERVER : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$XFS_SERVER (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   SDL$STARLET_REQ(FSB, %QUOTE FSB) , ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $DCLRNH (DESBLK) =
   BEGIN
   EXTERNAL ROUTINE SYS$DCLRNH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DCLRNH (SDL$STARLET_CONCAT( SDL$STARLET_REQ(DESBLK, %QUOTE DESBLK) ))
   END %;
 

KEYWORDMACRO $CANRNH (DESBLK=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CANRNH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CANRNH (SDL$STARLET_CONCAT( DESBLK))
   END %;
 

KEYWORDMACRO $ABORT_TRANS (EFN=0,FLAGS=0,IOSB,ASTADR,ASTPRM,TID
		,REASON,BID) =
   BEGIN
   EXTERNAL ROUTINE SYS$ABORT_TRANS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ABORT_TRANS (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, TID, REASON, BID)))
   END %;
 
KEYWORDMACRO $ABORT_TRANSW (EFN=0,FLAGS=0,IOSB,ASTADR,ASTPRM,TID
		,REASON,BID) =
   BEGIN
   EXTERNAL ROUTINE SYS$ABORT_TRANSW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ABORT_TRANSW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, TID, REASON, BID)))
   END %;
 

KEYWORDMACRO $ACK_EVENT (FLAGS=0,REPORT_ID,REPORT_REPLY,REASON
		,BEFTIME,AFTTIME,PART_NAME,RM_CONTEXT,TIMOUT) =
   BEGIN
   EXTERNAL ROUTINE SYS$ACK_EVENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ACK_EVENT (SDL$STARLET_CONCAT( FLAGS, SDL$STARLET_REQ(REPORT_ID, %QUOTE REPORT_ID) , 
	   SDL$STARLET_REQ(REPORT_REPLY, %QUOTE REPORT_REPLY) , 
	   SDL$STARLET_OPT( REASON, BEFTIME, AFTTIME, PART_NAME, RM_CONTEXT, TIMOUT)))
   END %;
 

KEYWORDMACRO $ADD_BRANCH (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID=0,TM_NAME,BID) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADD_BRANCH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADD_BRANCH (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, TID, SDL$STARLET_REQ(TM_NAME, %QUOTE TM_NAME) , 
	   SDL$STARLET_REQ(BID, %QUOTE BID) ))
   END %;
 
KEYWORDMACRO $ADD_BRANCHW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID=0,TM_NAME,BID) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADD_BRANCHW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADD_BRANCHW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, TID, SDL$STARLET_REQ(TM_NAME, %QUOTE TM_NAME) , 
	   SDL$STARLET_REQ(BID, %QUOTE BID) ))
   END %;
 

KEYWORDMACRO $CREATE_BRANCH (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,BID,TIMOUT,ACMODE,TX_CLASS) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_BRANCH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_BRANCH (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(BID, %QUOTE BID) , 
	   SDL$STARLET_OPT( TIMOUT, ACMODE, TX_CLASS)))
   END %;
 
KEYWORDMACRO $CREATE_BRANCHW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,BID,TIMOUT,ACMODE,TX_CLASS) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_BRANCHW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_BRANCHW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(BID, %QUOTE BID) , 
	   SDL$STARLET_OPT( TIMOUT, ACMODE, TX_CLASS)))
   END %;
 

KEYWORDMACRO $CVT_FILENAME (CVTTYP=0,SRCSTR,INFLAGS=0,OUTBUF=0
		,OUTLEN=0,OUTFLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CVT_FILENAME : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CVT_FILENAME (SDL$STARLET_CONCAT( CVTTYP, SDL$STARLET_REQ(SRCSTR, %QUOTE SRCSTR) , 
	   INFLAGS, OUTBUF, OUTLEN, OUTFLAGS))
   END %;
 

KEYWORDMACRO $DECLARE_RM (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,RM_ID,EVENT_HANDLER,PART_NAME,RM_CONTEXT,ACMODE,TM_LOG_ID,EVENT_MASK) =
   BEGIN
   EXTERNAL ROUTINE SYS$DECLARE_RM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DECLARE_RM (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) , SDL$STARLET_REQ(EVENT_HANDLER, %QUOTE EVENT_HANDLER) , 
	   SDL$STARLET_OPT( PART_NAME, RM_CONTEXT, ACMODE, TM_LOG_ID, EVENT_MASK)))
   END %;
 
KEYWORDMACRO $DECLARE_RMW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,RM_ID,EVENT_HANDLER,PART_NAME,RM_CONTEXT,ACMODE,TM_LOG_ID,EVENT_MASK) =
   BEGIN
   EXTERNAL ROUTINE SYS$DECLARE_RMW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DECLARE_RMW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) , SDL$STARLET_REQ(EVENT_HANDLER, %QUOTE EVENT_HANDLER) , 
	   SDL$STARLET_OPT( PART_NAME, RM_CONTEXT, ACMODE, TM_LOG_ID, EVENT_MASK)))
   END %;
 

KEYWORDMACRO $END_BRANCH (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,BID) =
   BEGIN
   EXTERNAL ROUTINE SYS$END_BRANCH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$END_BRANCH (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(BID, %QUOTE BID) ))
   END %;
 
KEYWORDMACRO $END_BRANCHW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,BID) =
   BEGIN
   EXTERNAL ROUTINE SYS$END_BRANCHW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$END_BRANCHW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(BID, %QUOTE BID) ))
   END %;
 

KEYWORDMACRO $END_TRANS (EFN=0,FLAGS=0,IOSB,ASTADR,ASTPRM,TID) =
   BEGIN
   EXTERNAL ROUTINE SYS$END_TRANS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$END_TRANS (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, TID)))
   END %;
 
KEYWORDMACRO $END_TRANSW (EFN=0,FLAGS=0,IOSB,ASTADR,ASTPRM,TID) =
   BEGIN
   EXTERNAL ROUTINE SYS$END_TRANSW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$END_TRANSW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, TID)))
   END %;
 

KEYWORDMACRO $FINISH_RMOP (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,PART_ID,RETSTS,REASON,BEFTIME,AFTTIME) =
   BEGIN
   EXTERNAL ROUTINE SYS$FINISH_RMOP : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FINISH_RMOP (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(PART_ID, %QUOTE PART_ID) , 
	   SDL$STARLET_REQ(RETSTS, %QUOTE RETSTS) , 
	   SDL$STARLET_OPT( REASON, BEFTIME, AFTTIME)))
   END %;
 
KEYWORDMACRO $FINISH_RMOPW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,PART_ID,RETSTS,REASON,BEFTIME,AFTTIME) =
   BEGIN
   EXTERNAL ROUTINE SYS$FINISH_RMOPW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FINISH_RMOPW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(PART_ID, %QUOTE PART_ID) , 
	   SDL$STARLET_REQ(RETSTS, %QUOTE RETSTS) , 
	   SDL$STARLET_OPT( REASON, BEFTIME, AFTTIME)))
   END %;
 

KEYWORDMACRO $FORGET_RM (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,RM_ID) =
   BEGIN
   EXTERNAL ROUTINE SYS$FORGET_RM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FORGET_RM (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) ))
   END %;
 
KEYWORDMACRO $FORGET_RMW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,RM_ID) =
   BEGIN
   EXTERNAL ROUTINE SYS$FORGET_RMW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$FORGET_RMW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) ))
   END %;
 

KEYWORDMACRO $GET_DEFAULT_TRANS (TID) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_DEFAULT_TRANS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_DEFAULT_TRANS (SDL$STARLET_CONCAT( SDL$STARLET_REQ(TID, %QUOTE TID) ))
   END %;
 

KEYWORDMACRO $GET_UNWIND_ENTRY_INFO (PC=0,GET_UE_BLOCK=0,NAME) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_UNWIND_ENTRY_INFO : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_UNWIND_ENTRY_INFO (SDL$STARLET_CONCAT( PC, GET_UE_BLOCK, 
	   SDL$STARLET_REQ(NAME, %QUOTE NAME) ))
   END %;
 

KEYWORDMACRO $JOIN_RM (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0,RM_ID
		,TID,PART_NAME,RM_CONTEXT,TIMOUT) =
   BEGIN
   EXTERNAL ROUTINE SYS$JOIN_RM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$JOIN_RM (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) , 
	   SDL$STARLET_OPT( TID, PART_NAME, RM_CONTEXT, TIMOUT)))
   END %;
 
KEYWORDMACRO $JOIN_RMW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0,RM_ID
		,TID,PART_NAME,RM_CONTEXT,TIMOUT) =
   BEGIN
   EXTERNAL ROUTINE SYS$JOIN_RMW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$JOIN_RMW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) , 
	   SDL$STARLET_OPT( TID, PART_NAME, RM_CONTEXT, TIMOUT)))
   END %;
 

KEYWORDMACRO $RECOVER (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0,RECOVERY_PREFIX
		,EVENT_HANDLER,TM_LOG_ID,TID,NODE,RM_CONTEXT,ACMODE,MAX_EVENTS) =
   BEGIN
   EXTERNAL ROUTINE SYS$RECOVER : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RECOVER (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RECOVERY_PREFIX, %QUOTE RECOVERY_PREFIX) , 
	   SDL$STARLET_REQ(EVENT_HANDLER, %QUOTE EVENT_HANDLER) , SDL$STARLET_REQ(TM_LOG_ID, %QUOTE TM_LOG_ID) , 
	   SDL$STARLET_OPT( TID, NODE, RM_CONTEXT, ACMODE, MAX_EVENTS)))
   END %;
 
KEYWORDMACRO $RECOVERW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0,RECOVERY_PREFIX
		,EVENT_HANDLER,TM_LOG_ID,TID,NODE,RM_CONTEXT,ACMODE,MAX_EVENTS) =
   BEGIN
   EXTERNAL ROUTINE SYS$RECOVERW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RECOVERW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RECOVERY_PREFIX, %QUOTE RECOVERY_PREFIX) , 
	   SDL$STARLET_REQ(EVENT_HANDLER, %QUOTE EVENT_HANDLER) , SDL$STARLET_REQ(TM_LOG_ID, %QUOTE TM_LOG_ID) , 
	   SDL$STARLET_OPT( TID, NODE, RM_CONTEXT, ACMODE, MAX_EVENTS)))
   END %;
 

KEYWORDMACRO $SET_DEFAULT_TRANS (EFN=0,FLAGS=0,IOSB,ASTADR,ASTPRM
		,NEW_TID,OLD_TID) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_DEFAULT_TRANS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_DEFAULT_TRANS (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, NEW_TID, OLD_TID)))
   END %;
 
KEYWORDMACRO $SET_DEFAULT_TRANSW (EFN=0,FLAGS=0,IOSB,ASTADR,ASTPRM
		,NEW_TID,OLD_TID) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_DEFAULT_TRANSW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_DEFAULT_TRANSW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, NEW_TID, OLD_TID)))
   END %;
 

KEYWORDMACRO $START_BRANCH (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,TM_NAME,BID,TIMOUT,ACMODE,TX_CLASS) =
   BEGIN
   EXTERNAL ROUTINE SYS$START_BRANCH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$START_BRANCH (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(TM_NAME, %QUOTE TM_NAME) , 
	   SDL$STARLET_REQ(BID, %QUOTE BID) , 
	   SDL$STARLET_OPT( TIMOUT, ACMODE, TX_CLASS)))
   END %;
 
KEYWORDMACRO $START_BRANCHW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,TM_NAME,BID,TIMOUT,ACMODE,TX_CLASS) =
   BEGIN
   EXTERNAL ROUTINE SYS$START_BRANCHW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$START_BRANCHW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(TM_NAME, %QUOTE TM_NAME) , 
	   SDL$STARLET_REQ(BID, %QUOTE BID) , 
	   SDL$STARLET_OPT( TIMOUT, ACMODE, TX_CLASS)))
   END %;
 

KEYWORDMACRO $START_TRANS (EFN=0,FLAGS=0,IOSB,ASTADR,ASTPRM,TID
		,TIMOUT,ACMODE,TX_CLASS) =
   BEGIN
   EXTERNAL ROUTINE SYS$START_TRANS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$START_TRANS (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, TID, TIMOUT, ACMODE, TX_CLASS)))
   END %;
 
KEYWORDMACRO $START_TRANSW (EFN=0,FLAGS=0,IOSB,ASTADR,ASTPRM,TID
		,TIMOUT,ACMODE,TX_CLASS) =
   BEGIN
   EXTERNAL ROUTINE SYS$START_TRANSW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$START_TRANSW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   SDL$STARLET_OPT( ASTADR, ASTPRM, TID, TIMOUT, ACMODE, TX_CLASS)))
   END %;
 

KEYWORDMACRO $TRANS_EVENT (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,RM_ID=0,TX_EVENT) =
   BEGIN
   EXTERNAL ROUTINE SYS$TRANS_EVENT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$TRANS_EVENT (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , RM_ID, 
	   SDL$STARLET_REQ(TX_EVENT, %QUOTE TX_EVENT) ))
   END %;
 
KEYWORDMACRO $TRANS_EVENTW (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,RM_ID=0,TX_EVENT) =
   BEGIN
   EXTERNAL ROUTINE SYS$TRANS_EVENTW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$TRANS_EVENTW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , RM_ID, 
	   SDL$STARLET_REQ(TX_EVENT, %QUOTE TX_EVENT) ))
   END %;
 

KEYWORDMACRO $TSTCLUEVT (HANDLE=0,ACMODE=0,EVENT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$TSTCLUEVT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$TSTCLUEVT (SDL$STARLET_CONCAT( HANDLE, ACMODE, EVENT))
   END %;
 

KEYWORDMACRO $ADD_BRANCHV1 (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID=0,NODE) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADD_BRANCH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADD_BRANCH (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, TID, SDL$STARLET_REQ(NODE, %QUOTE NODE) ))
   END %;
 
KEYWORDMACRO $ADD_BRANCHV1W (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID=0,NODE) =
   BEGIN
   EXTERNAL ROUTINE SYS$ADD_BRANCHW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ADD_BRANCHW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, TID, SDL$STARLET_REQ(NODE, %QUOTE NODE) ))
   END %;
 

KEYWORDMACRO $DECLARE_RMV1 (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,RM_NAME,RM_ID,EVT_RTN,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DECLARE_RM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DECLARE_RM (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_NAME, %QUOTE RM_NAME) , 
	   SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) , SDL$STARLET_REQ(EVT_RTN, %QUOTE EVT_RTN) , 
	   ACMODE))
   END %;
 
KEYWORDMACRO $DECLARE_RMV1W (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,RM_NAME,RM_ID,EVT_RTN,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DECLARE_RMW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DECLARE_RMW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_NAME, %QUOTE RM_NAME) , 
	   SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) , SDL$STARLET_REQ(EVT_RTN, %QUOTE EVT_RTN) , 
	   ACMODE))
   END %;
 

KEYWORDMACRO $JOIN_RMV1 (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,RM_ID,RM_LOG_ID,TID,PART_ID,TM_LOG_ID,RM_CTX,TIMOUT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$JOIN_RM : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$JOIN_RM (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) , SDL$STARLET_REQ(RM_LOG_ID, %QUOTE RM_LOG_ID) , 
	   SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(PART_ID, %QUOTE PART_ID) , 
	   SDL$STARLET_REQ(TM_LOG_ID, %QUOTE TM_LOG_ID) , SDL$STARLET_REQ(RM_CTX, %QUOTE RM_CTX) , 
	   TIMOUT))
   END %;
 
KEYWORDMACRO $JOIN_RMV1W (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,RM_ID,RM_LOG_ID,TID,PART_ID,TM_LOG_ID,RM_CTX,TIMOUT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$JOIN_RMW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$JOIN_RMW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(RM_ID, %QUOTE RM_ID) , SDL$STARLET_REQ(RM_LOG_ID, %QUOTE RM_LOG_ID) , 
	   SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(PART_ID, %QUOTE PART_ID) , 
	   SDL$STARLET_REQ(TM_LOG_ID, %QUOTE TM_LOG_ID) , SDL$STARLET_REQ(RM_CTX, %QUOTE RM_CTX) , 
	   TIMOUT))
   END %;
 

KEYWORDMACRO $START_BRANCHV1 (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,PARENT) =
   BEGIN
   EXTERNAL ROUTINE SYS$START_BRANCH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$START_BRANCH (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(PARENT, %QUOTE PARENT) ))
   END %;
 
KEYWORDMACRO $START_BRANCHV1W (EFN=0,FLAGS=0,IOSB,ASTADR=0,ASTPRM=0
		,TID,PARENT) =
   BEGIN
   EXTERNAL ROUTINE SYS$START_BRANCHW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$START_BRANCHW (SDL$STARLET_CONCAT( EFN, FLAGS, SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(TID, %QUOTE TID) , SDL$STARLET_REQ(PARENT, %QUOTE PARENT) ))
   END %;
 

KEYWORDMACRO PTD$CREATE (CHAN,ACMODE=0,CHARBUFF=0,BUFLEN=12,ASTADR=0
		,ASTPRM=0,AST_ACMODE=0,INADR) =
   BEGIN
   EXTERNAL ROUTINE PTD$CREATE : BLISS ADDRESSING_MODE (GENERAL);
	   PTD$CREATE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   ACMODE, CHARBUFF, BUFLEN, ASTADR, ASTPRM, AST_ACMODE, SDL$STARLET_REQ(INADR, %QUOTE INADR) ))
   END %;
 

KEYWORDMACRO PTD$READ (EFN=0,CHAN,ASTADR=0,ASTPRM=0,READBUF=0
		,READBUF_LEN=0) =
   BEGIN
   EXTERNAL ROUTINE PTD$READ : BLISS ADDRESSING_MODE (GENERAL);
	   PTD$READ (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   ASTADR, ASTPRM, READBUF, READBUF_LEN))
   END %;
 
KEYWORDMACRO PTD$READW (EFN=0,CHAN,ASTADR=0,ASTPRM=0,READBUF=0
		,READBUF_LEN=0) =
   BEGIN
   EXTERNAL ROUTINE PTD$READW : BLISS ADDRESSING_MODE (GENERAL);
	   PTD$READW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   ASTADR, ASTPRM, READBUF, READBUF_LEN))
   END %;
 

KEYWORDMACRO PTD$WRITE (CHAN,ASTADR=0,ASTPRM=0,WRTBUF=0,WRTBUF_LEN=0
		,ECHOBUF=0,ECHOBUF_LEN=0) =
   BEGIN
   EXTERNAL ROUTINE PTD$WRITE : BLISS ADDRESSING_MODE (GENERAL);
	   PTD$WRITE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   ASTADR, ASTPRM, WRTBUF, WRTBUF_LEN, ECHOBUF, ECHOBUF_LEN))
   END %;
 

KEYWORDMACRO PTD$SET_EVENT_NOTIFICATION (CHAN,ASTADR=0,ASTPRM=0
		,ACMODE=0,TYPE) =
   BEGIN
   EXTERNAL ROUTINE PTD$SET_EVENT_NOTIFICATION : BLISS ADDRESSING_MODE (GENERAL);
	   PTD$SET_EVENT_NOTIFICATION (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   ASTADR, ASTPRM, ACMODE, SDL$STARLET_REQ(TYPE, %QUOTE TYPE) ))
   END %;
 

KEYWORDMACRO PTD$CANCEL (CHAN) =
   BEGIN
   EXTERNAL ROUTINE PTD$CANCEL : BLISS ADDRESSING_MODE (GENERAL);
	   PTD$CANCEL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ))
   END %;
 

KEYWORDMACRO PTD$DELETE (CHAN) =
   BEGIN
   EXTERNAL ROUTINE PTD$DELETE : BLISS ADDRESSING_MODE (GENERAL);
	   PTD$DELETE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) ))
   END %;
 

KEYWORDMACRO PTD$DECTERM_SET_PAGE_SIZE (CHAN,PAGE_LEN,PAGE_WIDTH) =
   BEGIN
   EXTERNAL ROUTINE PTD$DECTERM_SET_PAGE_SIZE : BLISS ADDRESSING_MODE (GENERAL);
	   PTD$DECTERM_SET_PAGE_SIZE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CHAN, %QUOTE CHAN) , 
	   SDL$STARLET_REQ(PAGE_LEN, %QUOTE PAGE_LEN) , SDL$STARLET_REQ(PAGE_WIDTH, %QUOTE PAGE_WIDTH) ))
   END %;
 

KEYWORDMACRO $POSIX_FORK_CONTROL (CNTRL,WHEN=0,HANDLER=0,ARG=0
		,ACMODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$POSIX_FORK_CONTROL : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$POSIX_FORK_CONTROL (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CNTRL, %QUOTE CNTRL) , 
	   WHEN, HANDLER, ARG, ACMODE))
   END %;
 

KEYWORDMACRO $START_ALIGN_FAULT_REPORT (REPORT_METHOD,REPORT_BUFFER=0
		,BUFFER_LENGTH=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$START_ALIGN_FAULT_REPORT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$START_ALIGN_FAULT_REPORT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REPORT_METHOD, %QUOTE REPORT_METHOD) , 
	   REPORT_BUFFER, BUFFER_LENGTH))
   END %;
 

KEYWORDMACRO $GET_ALIGN_FAULT_DATA (BUFFER,BUFFER_SIZE,RETURN_SIZE) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_ALIGN_FAULT_DATA : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_ALIGN_FAULT_DATA (SDL$STARLET_CONCAT( SDL$STARLET_REQ(BUFFER, %QUOTE BUFFER) , 
	   SDL$STARLET_REQ(BUFFER_SIZE, %QUOTE BUFFER_SIZE) , SDL$STARLET_REQ(RETURN_SIZE, %QUOTE RETURN_SIZE) ))
   END %;
 

KEYWORDMACRO $STOP_ALIGN_FAULT_REPORT =
   BEGIN
   EXTERNAL ROUTINE SYS$STOP_ALIGN_FAULT_REPORT : BLISS ADDRESSING_MODE (GENERAL);
	SYS$STOP_ALIGN_FAULT_REPORT()
   END %;

KEYWORDMACRO $PERM_REPORT_ALIGN_FAULT =
   BEGIN
   EXTERNAL ROUTINE SYS$PERM_REPORT_ALIGN_FAULT : BLISS ADDRESSING_MODE (GENERAL);
	SYS$PERM_REPORT_ALIGN_FAULT()
   END %;

KEYWORDMACRO $PERM_DIS_ALIGN_FAULT_REPORT =
   BEGIN
   EXTERNAL ROUTINE SYS$PERM_DIS_ALIGN_FAULT_REPORT : BLISS ADDRESSING_MODE (GENERAL);
	SYS$PERM_DIS_ALIGN_FAULT_REPORT()
   END %;

KEYWORDMACRO $INIT_SYS_ALIGN_FAULT_REPORT (MATCH_TABLE,BUFFER_SIZE
		,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$INIT_SYS_ALIGN_FAULT_REPORT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$INIT_SYS_ALIGN_FAULT_REPORT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MATCH_TABLE, %QUOTE MATCH_TABLE) , 
	   SDL$STARLET_REQ(BUFFER_SIZE, %QUOTE BUFFER_SIZE) , FLAGS))
   END %;
 

KEYWORDMACRO $GET_SYS_ALIGN_FAULT_DATA (BUFFER,BUFFER_SIZE,RETURN_SIZE) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_SYS_ALIGN_FAULT_DATA : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_SYS_ALIGN_FAULT_DATA (SDL$STARLET_CONCAT( SDL$STARLET_REQ(BUFFER, %QUOTE BUFFER) , 
	   SDL$STARLET_REQ(BUFFER_SIZE, %QUOTE BUFFER_SIZE) , SDL$STARLET_REQ(RETURN_SIZE, %QUOTE RETURN_SIZE) ))
   END %;
 

KEYWORDMACRO $STOP_SYS_ALIGN_FAULT_REPORT =
   BEGIN
   EXTERNAL ROUTINE SYS$STOP_SYS_ALIGN_FAULT_REPORT : BLISS ADDRESSING_MODE (GENERAL);
	SYS$STOP_SYS_ALIGN_FAULT_REPORT()
   END %;

KEYWORDMACRO $RESCHED =
   BEGIN
   EXTERNAL ROUTINE SYS$RESCHED : BLISS ADDRESSING_MODE (GENERAL);
	SYS$RESCHED()
   END %;

KEYWORDMACRO $SCHED (FUNC,P1=0,P2=0,P3=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SCHED : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SCHED (SDL$STARLET_CONCAT( SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   P1, P2, P3))
   END %;
 

KEYWORDMACRO $SIGNAL_ARRAY_64 (MCHARG,SIGARG_64) =
   BEGIN
   EXTERNAL ROUTINE SYS$SIGNAL_ARRAY_64 : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SIGNAL_ARRAY_64 (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MCHARG, %QUOTE MCHARG) , 
	   SDL$STARLET_REQ(SIGARG_64, %QUOTE SIGARG_64) ))
   END %;
 

KEYWORDMACRO $AVOID_PREEMPT (ENBFLG) =
   BEGIN
   EXTERNAL ROUTINE SYS$AVOID_PREEMPT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$AVOID_PREEMPT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ENBFLG, %QUOTE ENBFLG) ))
   END %;
 

KEYWORDMACRO $SETUP_AVOID_PREEMPT (ENBFLG) =
   BEGIN
   EXTERNAL ROUTINE SYS$SETUP_AVOID_PREEMPT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SETUP_AVOID_PREEMPT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ENBFLG, %QUOTE ENBFLG) ))
   END %;
 

KEYWORDMACRO $ICC_ACCEPT (CONN_HANDLE,ACCEPT_BUF=0,ACCEPT_LEN=0
		,USER_CONTEXT=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_ACCEPT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_ACCEPT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   ACCEPT_BUF, ACCEPT_LEN, USER_CONTEXT, FLAGS))
   END %;
 

KEYWORDMACRO $ICC_CLOSE_ASSOC (ASSOC_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_CLOSE_ASSOC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_CLOSE_ASSOC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ASSOC_HANDLE, %QUOTE ASSOC_HANDLE) ))
   END %;
 

KEYWORDMACRO $ICC_CONNECT (IOS_ICC,ASTADR=0,ASTPRM=0,ASSOC_HANDLE
		,CONN_HNDL_A,REMOTE_ASSOC=0,REMOTE_NODE=0,USER_CONTEXT=0,CONN_BUF=0
		,CONN_BUF_LEN=0,RETURN_BUF=0,RETURN_BUF_LEN=0,RETLEN_ADDR=0
		,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_CONNECT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_CONNECT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(ASSOC_HANDLE, %QUOTE ASSOC_HANDLE) , 
	   SDL$STARLET_REQ(CONN_HNDL_A, %QUOTE CONN_HNDL_A) , REMOTE_ASSOC, 
	   REMOTE_NODE, USER_CONTEXT, CONN_BUF, CONN_BUF_LEN, RETURN_BUF, 
	   RETURN_BUF_LEN, RETLEN_ADDR, FLAGS))
   END %;
 
KEYWORDMACRO $ICC_CONNECTW (IOS_ICC,ASTADR=0,ASTPRM=0,ASSOC_HANDLE
		,CONN_HNDL_A,REMOTE_ASSOC=0,REMOTE_NODE=0,USER_CONTEXT=0,CONN_BUF=0
		,CONN_BUF_LEN=0,RETURN_BUF=0,RETURN_BUF_LEN=0,RETLEN_ADDR=0
		,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_CONNECTW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_CONNECTW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , 
	   ASTADR, ASTPRM, SDL$STARLET_REQ(ASSOC_HANDLE, %QUOTE ASSOC_HANDLE) , 
	   SDL$STARLET_REQ(CONN_HNDL_A, %QUOTE CONN_HNDL_A) , REMOTE_ASSOC, 
	   REMOTE_NODE, USER_CONTEXT, CONN_BUF, CONN_BUF_LEN, RETURN_BUF, 
	   RETURN_BUF_LEN, RETLEN_ADDR, FLAGS))
   END %;
 

KEYWORDMACRO $ICC_DISCONNECT (CONN_HANDLE,IOSB,ASTADR=0,ASTPRM=0
		,DISC_BUF=0,DISC_BUF_LEN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_DISCONNECT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_DISCONNECT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , ASTADR, ASTPRM, DISC_BUF, 
	   DISC_BUF_LEN))
   END %;
 
KEYWORDMACRO $ICC_DISCONNECTW (CONN_HANDLE,IOSB,ASTADR=0,ASTPRM=0
		,DISC_BUF=0,DISC_BUF_LEN=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_DISCONNECTW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_DISCONNECTW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOSB, %QUOTE IOSB) , ASTADR, ASTPRM, DISC_BUF, 
	   DISC_BUF_LEN))
   END %;
 

KEYWORDMACRO $ICC_REJECT (CONN_HANDLE,REJECT_BUF=0,REJECT_BUF_LEN=0
		,REASON=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_REJECT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_REJECT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   REJECT_BUF, REJECT_BUF_LEN, REASON))
   END %;
 

KEYWORDMACRO $ICC_OPEN_ASSOC (ASSOC_HANDLE,ASSOC_NAME=0,LOGICAL_NAME=0
		,LOGICAL_TABLE=0,CONN_RTN=0,DISC_RTN=0,RECV_RTN=0,MAXFLOWBUFCNT=0
		,PROT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_OPEN_ASSOC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_OPEN_ASSOC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ASSOC_HANDLE, %QUOTE ASSOC_HANDLE) , 
	   ASSOC_NAME, LOGICAL_NAME, LOGICAL_TABLE, CONN_RTN, DISC_RTN, 
	   RECV_RTN, MAXFLOWBUFCNT, PROT))
   END %;
 

KEYWORDMACRO $ICC_RECEIVE (CONN_HANDLE,IOS_ICC,ASTADR=0,ASTPRM=0
		,RECV_BUF,RECV_BUF_LEN) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_RECEIVE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_RECEIVE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , ASTADR, ASTPRM, 
	   SDL$STARLET_REQ(RECV_BUF, %QUOTE RECV_BUF) , SDL$STARLET_REQ(RECV_BUF_LEN, %QUOTE RECV_BUF_LEN) ))
   END %;
 
KEYWORDMACRO $ICC_RECEIVEW (CONN_HANDLE,IOS_ICC,ASTADR=0,ASTPRM=0
		,RECV_BUF,RECV_BUF_LEN) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_RECEIVEW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_RECEIVEW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , ASTADR, ASTPRM, 
	   SDL$STARLET_REQ(RECV_BUF, %QUOTE RECV_BUF) , SDL$STARLET_REQ(RECV_BUF_LEN, %QUOTE RECV_BUF_LEN) ))
   END %;
 

KEYWORDMACRO $ICC_REPLY (CONN_HANDLE,IOS_ICC,ASTADR=0,ASTPRM=0
		,REPLY_BUF,REPLY_LEN) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_REPLY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_REPLY (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , ASTADR, ASTPRM, 
	   SDL$STARLET_REQ(REPLY_BUF, %QUOTE REPLY_BUF) , SDL$STARLET_REQ(REPLY_LEN, %QUOTE REPLY_LEN) ))
   END %;
 
KEYWORDMACRO $ICC_REPLYW (CONN_HANDLE,IOS_ICC,ASTADR=0,ASTPRM=0
		,REPLY_BUF,REPLY_LEN) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_REPLYW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_REPLYW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , ASTADR, ASTPRM, 
	   SDL$STARLET_REQ(REPLY_BUF, %QUOTE REPLY_BUF) , SDL$STARLET_REQ(REPLY_LEN, %QUOTE REPLY_LEN) ))
   END %;
 

KEYWORDMACRO $ICC_TRANSCEIVE (CONN_HANDLE,IOS_ICC,ASTADR=0,ASTPRM=0
		,SEND_BUF,SEND_LEN) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_TRANSCEIVE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_TRANSCEIVE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , ASTADR, ASTPRM, 
	   SDL$STARLET_REQ(SEND_BUF, %QUOTE SEND_BUF) , SDL$STARLET_REQ(SEND_LEN, %QUOTE SEND_LEN) ))
   END %;
 
KEYWORDMACRO $ICC_TRANSCEIVEW (CONN_HANDLE,IOS_ICC,ASTADR,ASTPRM
		,SEND_BUF,SEND_LEN) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_TRANSCEIVEW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_TRANSCEIVEW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , SDL$STARLET_REQ(ASTADR, %QUOTE ASTADR) , 
	   SDL$STARLET_REQ(ASTPRM, %QUOTE ASTPRM) , SDL$STARLET_REQ(SEND_BUF, %QUOTE SEND_BUF) , 
	   SDL$STARLET_REQ(SEND_LEN, %QUOTE SEND_LEN) ))
   END %;
 

KEYWORDMACRO $ICC_TRANSMIT (CONN_HANDLE,IOS_ICC,ASTADR=0,ASTPRM=0
		,SEND_BUF,SEND_LEN) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_TRANSMIT : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_TRANSMIT (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , ASTADR, ASTPRM, 
	   SDL$STARLET_REQ(SEND_BUF, %QUOTE SEND_BUF) , SDL$STARLET_REQ(SEND_LEN, %QUOTE SEND_LEN) ))
   END %;
 
KEYWORDMACRO $ICC_TRANSMITW (CONN_HANDLE,IOS_ICC,ASTADR=0,ASTPRM=0
		,SEND_BUF,SEND_LEN) =
   BEGIN
   EXTERNAL ROUTINE SYS$ICC_TRANSMITW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ICC_TRANSMITW (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CONN_HANDLE, %QUOTE CONN_HANDLE) , 
	   SDL$STARLET_REQ(IOS_ICC, %QUOTE IOS_ICC) , ASTADR, ASTPRM, 
	   SDL$STARLET_REQ(SEND_BUF, %QUOTE SEND_BUF) , SDL$STARLET_REQ(SEND_LEN, %QUOTE SEND_LEN) ))
   END %;
 

KEYWORDMACRO $PERSONA_QUERY (PERSONA,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_QUERY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_QUERY (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $PERSONA_FIND (PERSONA,ITMLST,CONTXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_FIND : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_FIND (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , CONTXT))
   END %;
 

KEYWORDMACRO $PERSONA_RESERVE (CLIENTPID,PERSONA) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_RESERVE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_RESERVE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(CLIENTPID, %QUOTE CLIENTPID) , 
	   SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) ))
   END %;
 

KEYWORDMACRO $PERSONA_DELEGATE (SERVERPID,PERSONA,INPUT_ID) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_DELEGATE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_DELEGATE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(SERVERPID, %QUOTE SERVERPID) , 
	   SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , SDL$STARLET_REQ(INPUT_ID, %QUOTE INPUT_ID) ))
   END %;
 

KEYWORDMACRO $PERSONA_EXTENSION_LOOKUP (EXTENSIONNAME,EXTENSIONID) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_EXTENSION_LOOKUP : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_EXTENSION_LOOKUP (SDL$STARLET_CONCAT( SDL$STARLET_REQ(EXTENSIONNAME, %QUOTE EXTENSIONNAME) , 
	   SDL$STARLET_REQ(EXTENSIONID, %QUOTE EXTENSIONID) ))
   END %;
 

KEYWORDMACRO $PERSONA_CREATE_EXTENSION (PERSONA,EXTENSIONID,BUFFER
		,LENGTH,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_CREATE_EXTENSION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_CREATE_EXTENSION (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , 
	   SDL$STARLET_REQ(EXTENSIONID, %QUOTE EXTENSIONID) , SDL$STARLET_REQ(BUFFER, %QUOTE BUFFER) , 
	   SDL$STARLET_REQ(LENGTH, %QUOTE LENGTH) , SDL$STARLET_REQ(FLAGS, %QUOTE FLAGS) ))
   END %;
 

KEYWORDMACRO $PERSONA_DELETE_EXTENSION (PERSONA,EXTENSIONID) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_DELETE_EXTENSION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_DELETE_EXTENSION (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , 
	   SDL$STARLET_REQ(EXTENSIONID, %QUOTE EXTENSIONID) ))
   END %;
 

KEYWORDMACRO $PERSONA_MODIFY (PERSONA,ITMLST) =
   BEGIN
   EXTERNAL ROUTINE SYS$PERSONA_MODIFY : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PERSONA_MODIFY (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PERSONA, %QUOTE PERSONA) , 
	   SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) ))
   END %;
 

KEYWORDMACRO $SET_PROCESS_PROPERTIES (MBZ1=0,MBZ2=0,MBZ3=0,PROPERTY
		,VALUE,PREV_VALUE,BUFSIZ,BUFCNT) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_PROCESS_PROPERTIES : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_PROCESS_PROPERTIES (SDL$STARLET_CONCAT( MBZ1, MBZ2, 
	   MBZ3, SDL$STARLET_REQ(PROPERTY, %QUOTE PROPERTY) , SDL$STARLET_REQ(VALUE, %QUOTE VALUE) , 
	   SDL$STARLET_REQ(PREV_VALUE, %QUOTE PREV_VALUE) , 
	   SDL$STARLET_OPT( BUFSIZ, BUFCNT)))
   END %;
 
KEYWORDMACRO $SET_PROCESS_PROPERTIESW (MBZ1=0,MBZ2=0,MBZ3=0,PROPERTY
		,VALUE,PREV_VALUE,BUFSIZ,BUFCNT) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_PROCESS_PROPERTIESW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_PROCESS_PROPERTIESW (SDL$STARLET_CONCAT( MBZ1, MBZ2, 
	   MBZ3, SDL$STARLET_REQ(PROPERTY, %QUOTE PROPERTY) , SDL$STARLET_REQ(VALUE, %QUOTE VALUE) , 
	   SDL$STARLET_REQ(PREV_VALUE, %QUOTE PREV_VALUE) , 
	   SDL$STARLET_OPT( BUFSIZ, BUFCNT)))
   END %;
 

KEYWORDMACRO $ACQUIRE_GALAXY_LOCK (LOCK_HANDLE,TIMEOUT=0,FLAGS=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$ACQUIRE_GALAXY_LOCK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ACQUIRE_GALAXY_LOCK (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOCK_HANDLE, %QUOTE LOCK_HANDLE) , 
	   TIMEOUT, FLAGS))
   END %;
 

KEYWORDMACRO $CREATE_GALAXY_LOCK (LCKTBL_HANDLE,NAME,SIZE,TIMEOUT=0
		,IPL=0,RANK=0,LOCK_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_GALAXY_LOCK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_GALAXY_LOCK (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LCKTBL_HANDLE, %QUOTE LCKTBL_HANDLE) , 
	   SDL$STARLET_REQ(NAME, %QUOTE NAME) , SDL$STARLET_REQ(SIZE, %QUOTE SIZE) , 
	   TIMEOUT, IPL, RANK, SDL$STARLET_REQ(LOCK_HANDLE, %QUOTE LOCK_HANDLE) ))
   END %;
 

KEYWORDMACRO $CREATE_GALAXY_LOCK_TABLE (NAME,ACCMODE,SECTION_SIZE
		,SECTION_TYPE,PROT,LOCK_SIZE,LCKTBL_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$CREATE_GALAXY_LOCK_TABLE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CREATE_GALAXY_LOCK_TABLE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(NAME, %QUOTE NAME) , 
	   SDL$STARLET_REQ(ACCMODE, %QUOTE ACCMODE) , SDL$STARLET_REQ(SECTION_SIZE, %QUOTE SECTION_SIZE) , 
	   SDL$STARLET_REQ(SECTION_TYPE, %QUOTE SECTION_TYPE) , SDL$STARLET_REQ(PROT, %QUOTE PROT) , 
	   SDL$STARLET_REQ(LOCK_SIZE, %QUOTE LOCK_SIZE) , SDL$STARLET_REQ(LCKTBL_HANDLE, %QUOTE LCKTBL_HANDLE) ))
   END %;
 

KEYWORDMACRO $DELETE_GALAXY_LOCK (LOCK_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELETE_GALAXY_LOCK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELETE_GALAXY_LOCK (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOCK_HANDLE, %QUOTE LOCK_HANDLE) ))
   END %;
 

KEYWORDMACRO $DELETE_GALAXY_LOCK_TABLE (LCKTBL_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$DELETE_GALAXY_LOCK_TABLE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DELETE_GALAXY_LOCK_TABLE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LCKTBL_HANDLE, %QUOTE LCKTBL_HANDLE) ))
   END %;
 

KEYWORDMACRO $GET_GALAXY_LOCK_INFO (LOCK_HANDLE,NAME,TIMEOUT,SIZE
		,IPL,RANK,FLAGS,NAME_LENGTH) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_GALAXY_LOCK_INFO : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_GALAXY_LOCK_INFO (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOCK_HANDLE, %QUOTE LOCK_HANDLE) , 
	   SDL$STARLET_REQ(NAME, %QUOTE NAME) , SDL$STARLET_REQ(TIMEOUT, %QUOTE TIMEOUT) , 
	   SDL$STARLET_REQ(SIZE, %QUOTE SIZE) , SDL$STARLET_REQ(IPL, %QUOTE IPL) , 
	   SDL$STARLET_REQ(RANK, %QUOTE RANK) , SDL$STARLET_REQ(FLAGS, %QUOTE FLAGS) , 
	   SDL$STARLET_OPT( NAME_LENGTH)))
   END %;
 

KEYWORDMACRO $GET_GALAXY_LOCK_SIZE (MIN_SIZE,MAX_SIZE) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_GALAXY_LOCK_SIZE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_GALAXY_LOCK_SIZE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(MIN_SIZE, %QUOTE MIN_SIZE) , 
	   SDL$STARLET_REQ(MAX_SIZE, %QUOTE MAX_SIZE) ))
   END %;
 

KEYWORDMACRO $INIT_GALAXY_LOCK (VA,NAME,SIZE,TIMEOUT=0,IPL=0,RANK=0
		,LOCK_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$INIT_GALAXY_LOCK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$INIT_GALAXY_LOCK (SDL$STARLET_CONCAT( SDL$STARLET_REQ(VA, %QUOTE VA) , 
	   SDL$STARLET_REQ(NAME, %QUOTE NAME) , SDL$STARLET_REQ(SIZE, %QUOTE SIZE) , 
	   TIMEOUT, IPL, RANK, SDL$STARLET_REQ(LOCK_HANDLE, %QUOTE LOCK_HANDLE) ))
   END %;
 

KEYWORDMACRO $INIT_GALAXY_LOCK_TABLE (REGION_VA,REG_PHYS_SIZE
		,REG_VIRT_SIZE,SECTION_TYPE,LOCK_SIZE,LCKTBL_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$INIT_GALAXY_LOCK_TABLE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$INIT_GALAXY_LOCK_TABLE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(REGION_VA, %QUOTE REGION_VA) , 
	   SDL$STARLET_REQ(REG_PHYS_SIZE, %QUOTE REG_PHYS_SIZE) , SDL$STARLET_REQ(REG_VIRT_SIZE, %QUOTE REG_VIRT_SIZE) , 
	   SDL$STARLET_REQ(SECTION_TYPE, %QUOTE SECTION_TYPE) , SDL$STARLET_REQ(LOCK_SIZE, %QUOTE LOCK_SIZE) , 
	   SDL$STARLET_REQ(LCKTBL_HANDLE, %QUOTE LCKTBL_HANDLE) ))
   END %;
 

KEYWORDMACRO $RELEASE_GALAXY_LOCK (LOCK_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$RELEASE_GALAXY_LOCK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RELEASE_GALAXY_LOCK (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOCK_HANDLE, %QUOTE LOCK_HANDLE) ))
   END %;
 

KEYWORDMACRO $RESET_GALAXY_LOCK (LOCK_HANDLE,LOCK_VA) =
   BEGIN
   EXTERNAL ROUTINE SYS$RESET_GALAXY_LOCK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RESET_GALAXY_LOCK (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOCK_HANDLE, %QUOTE LOCK_HANDLE) , 
	   SDL$STARLET_REQ(LOCK_VA, %QUOTE LOCK_VA) ))
   END %;
 

KEYWORDMACRO $WAIT_ON_GLOCK (LOCK_HANDLE,TIMEOUT) =
   BEGIN
   EXTERNAL ROUTINE SYS$WAIT_ON_GLOCK : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$WAIT_ON_GLOCK (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOCK_HANDLE, %QUOTE LOCK_HANDLE) , 
	   SDL$STARLET_REQ(TIMEOUT, %QUOTE TIMEOUT) ))
   END %;
 

KEYWORDMACRO $NOTIFY_GLOCK_WAITERS (LOCK_HANDLE,WAITERS) =
   BEGIN
   EXTERNAL ROUTINE SYS$NOTIFY_GLOCK_WAITERS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$NOTIFY_GLOCK_WAITERS (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOCK_HANDLE, %QUOTE LOCK_HANDLE) , 
	   SDL$STARLET_REQ(WAITERS, %QUOTE WAITERS) ))
   END %;
 

KEYWORDMACRO $QIOSERVER (EFN=0,FUNC,CONTEXT=0,ITMLST=0,IOSB=0
		,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$QIOSERVER : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$QIOSERVER (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   CONTEXT, ITMLST, IOSB, ASTADR, ASTPRM))
   END %;
 
KEYWORDMACRO $QIOSERVERW (EFN=0,FUNC,CONTEXT=0,ITMLST=0,IOSB=0
		,ASTADR=0,ASTPRM=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$QIOSERVERW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$QIOSERVERW (SDL$STARLET_CONCAT( EFN, SDL$STARLET_REQ(FUNC, %QUOTE FUNC) , 
	   CONTEXT, ITMLST, IOSB, ASTADR, ASTPRM))
   END %;
 

KEYWORDMACRO $DEVICE_PATH_SCAN (CHAN=0,DEVNAM=0,ITMLST,CONTXT=0
		,NULLARG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DEVICE_PATH_SCAN : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DEVICE_PATH_SCAN (SDL$STARLET_CONCAT( CHAN, DEVNAM, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   CONTXT, NULLARG))
   END %;
 

KEYWORDMACRO $SET_DEVICE (EFN=0,CHAN=0,DEVNAM=0,ITMLST,IOSB=0
		,ASTADR=0,ASTPRM=0,NULLARG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_DEVICE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_DEVICE (SDL$STARLET_CONCAT( EFN, CHAN, DEVNAM, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   IOSB, ASTADR, ASTPRM, NULLARG))
   END %;
 
KEYWORDMACRO $SET_DEVICEW (EFN=0,CHAN=0,DEVNAM=0,ITMLST,IOSB=0
		,ASTADR=0,ASTPRM=0,NULLARG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_DEVICEW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_DEVICEW (SDL$STARLET_CONCAT( EFN, CHAN, DEVNAM, SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   IOSB, ASTADR, ASTPRM, NULLARG))
   END %;
 

KEYWORDMACRO $IO_TRANSITION (TRAN_CODE=0,DEVNAM=0,NODENAME=0,NODE_ID=-1
		,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0,CONTXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IO_TRANSITION : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IO_TRANSITION (SDL$STARLET_CONCAT( TRAN_CODE, DEVNAM, 
	   NODENAME, NODE_ID, FLAGS, EFN, IOSB, ASTADR, ASTPRM, CONTXT))
   END %;
 
KEYWORDMACRO $IO_TRANSITIONW (TRAN_CODE=0,DEVNAM=0,NODENAME=0
		,NODE_ID=-1,FLAGS=0,EFN=0,IOSB=0,ASTADR=0,ASTPRM=0,CONTXT=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$IO_TRANSITIONW : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$IO_TRANSITIONW (SDL$STARLET_CONCAT( TRAN_CODE, DEVNAM, 
	   NODENAME, NODE_ID, FLAGS, EFN, IOSB, ASTADR, ASTPRM, CONTXT))
   END %;
 

KEYWORDMACRO $MAP_UIC (UIC,UID,GID) =
   BEGIN
   EXTERNAL ROUTINE SYS$MAP_UIC : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MAP_UIC (SDL$STARLET_CONCAT( SDL$STARLET_REQ(UIC, %QUOTE UIC) , 
	   SDL$STARLET_REQ(UID, %QUOTE UID) , SDL$STARLET_REQ(GID, %QUOTE GID) ))
   END %;
 

KEYWORDMACRO $MAP_UID (UID,UIC,USERNAME,RETLEN) =
   BEGIN
   EXTERNAL ROUTINE SYS$MAP_UID : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$MAP_UID (SDL$STARLET_CONCAT( SDL$STARLET_REQ(UID, %QUOTE UID) , 
	   SDL$STARLET_REQ(UIC, %QUOTE UIC) , SDL$STARLET_REQ(USERNAME, %QUOTE USERNAME) , 
	   SDL$STARLET_REQ(RETLEN, %QUOTE RETLEN) ))
   END %;
 

KEYWORDMACRO $SET_SESSION_ID (SID) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_SESSION_ID : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_SESSION_ID (SDL$STARLET_CONCAT( SDL$STARLET_REQ(SID, %QUOTE SID) ))
   END %;
 

KEYWORDMACRO $SET_PROCESS_GROUP (PID,PGID,RETPGID) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_PROCESS_GROUP : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_PROCESS_GROUP (SDL$STARLET_CONCAT( SDL$STARLET_REQ(PID, %QUOTE PID) , 
	   SDL$STARLET_REQ(PGID, %QUOTE PGID) , SDL$STARLET_REQ(RETPGID, %QUOTE RETPGID) ))
   END %;
 

KEYWORDMACRO $SET_POSIX_IDS (ITMLST,FLAGS) =
   BEGIN
   EXTERNAL ROUTINE SYS$SET_POSIX_IDS : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$SET_POSIX_IDS (SDL$STARLET_CONCAT( SDL$STARLET_REQ(ITMLST, %QUOTE ITMLST) , 
	   SDL$STARLET_REQ(FLAGS, %QUOTE FLAGS) ))
   END %;
 

KEYWORDMACRO $LOG_SYSTEM_SERVICE (LOGTYP,BUFSEQNUM,LOGENTRY,SERVICE_STATUS
		,SERVICE_RA,ARGLIST_ADD,VECTOR_INDEX,PREV_MODE) =
   BEGIN
   EXTERNAL ROUTINE SYS$LOG_SYSTEM_SERVICE : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$LOG_SYSTEM_SERVICE (SDL$STARLET_CONCAT( SDL$STARLET_REQ(LOGTYP, %QUOTE LOGTYP) , 
	   SDL$STARLET_OPT( BUFSEQNUM, LOGENTRY, SERVICE_STATUS, SERVICE_RA, ARGLIST_ADD, VECTOR_INDEX, PREV_MODE)))
   END %;
 

 

literal ACME$_FACILITY = 1866;

literal ACME$_NORMAL = 122322945;
literal ACME$_WASCLR = 122322953;
literal ACME$_WASSET = 122322961;
literal ACME$_LOCKED = 122322969;
literal ACME$_CONTINUE = 122322945;
literal ACME$_PWDSYNCH = 122323747;
literal ACME$_PWDNOSYNCH = 122323755;
literal ACME$_LOCLOGIN = 122323763;

literal ACME$_BUFFEROVF = 122323771;
literal ACME$_SERVERSTART = 122323779;
literal ACME$_SERVEREXIT = 122323787;

literal ACME$_OPINCOMPL = 122324544;
literal ACME$_NOSUCHUSERID = 122332546;
literal ACME$_PWDWRONG = 122332554;
literal ACME$_ACCEXPIRED = 122332562;
literal ACME$_PWDEXPIRED = 122332570;
literal ACME$_INVALIDTIME = 122332578;
literal ACME$_UNSPECIFIED = 122332586;
literal ACME$_PWDINHISTORY = 122332594;
literal ACME$_PWDINDICT = 122332602;
literal ACME$_PWDTOOSHORT = 122332610;
literal ACME$_PWDTOOLONG = 122332618;
literal ACME$_PWDINVCHAR = 122332626;
literal ACME$_PWDTOOEASY = 122332634;
literal ACME$_PWDINVALID = 122332642;
literal ACME$_PWDCANTCHANGE = 122332650;
literal ACME$_NOLOCAUTH = 122332658;
literal ACME$_USERIDRQRD = 122332666;
literal ACME$_PWDRQRD = 122332674;
literal ACME$_INSUFITM = 122332682;

literal ACME$_AUTHFAILURE = 122332690;
literal ACME$_ACCOUNTLOCK = 122332698;
literal ACME$_NOSUCHUSER = 122332706;
literal ACME$_INVALIDPWD = 122332714;
literal ACME$_INVNEWPWD = 122332722;
literal ACME$_PWDNOTCHG = 122332730;
literal ACME$_INVMAPPING = 122332738;
literal ACME$_MAPCONFLICT = 122332746;
literal ACME$_NOTAUTHORIZED = 122332754;
literal ACME$_NOEXTAUTH = 122332762;
literal ACME$_INTRUDER = 122332770;
literal ACME$_INVPERSONA = 122332778;
literal ACME$_NOTARGETCRED = 122332786;
literal ACME$_NOCREDENTIALS = 122332794;
literal ACME$_INSFDIALSUPPORT = 122332802;
literal ACME$_INVALIDCTX = 122332810;
literal ACME$_INVREQUEST = 122332818;
literal ACME$_INVALIDTLV = 122332826;
literal ACME$_NOPRIV = 122332834;
literal ACME$_DOIUNAVAILABLE = 122332842;
literal ACME$_NOSUCHDOI = 122332850;
literal ACME$_TIMEOUT = 122332858;
literal ACME$_UNSUPPORTED = 122332866;  

literal ACME$_FAILURE = 122332874;
literal ACME$_ERROPENLOGFIL = 122332882;
literal ACME$_ERRCLOSELOGFIL = 122332890;
literal ACME$_ERRWRITELOGFIL = 122332898;
literal ACME$_INVITMSEQ = 122332906;
literal ACME$_NOACMECTX = 122332914;

literal ACME$_CONTACTSYSMGR = 122332922;

literal ACME$_ERROPENRESTARTFIL = 122332930;
literal ACME$_ERROPENCONFIGSFIL = 122332938;
literal ACME$_DIALOGUELM = 122332946;

literal ACME$_ACTIVE = 122338946;
literal ACME$_INACTIVE = 122338954;
literal ACME$_NOTSTARTED = 122338962;
literal ACME$_AGENTDBFULL = 122338970;
literal ACME$_DUPACME = 122338978;
literal ACME$_BUSY = 122338986;
literal ACME$_INCOMPATSTATE = 122338994;
literal ACME$_AGENTLOADFAIL = 122339002;
literal ACME$_NOAGENTINIT = 122339010;
literal ACME$_AUTHDOWN = 122340548;
literal ACME$_INCONSTATE = 122340556;

literal ACME$_PERFORMDIALOGUE = 122344448;
literal ACME$_PERFORMPHASE = 122344456;
literal ACME$_RETRYPWD = 122344464;
literal ACME$_WAITAST = 122344472;
literal ACME$_WAITRESOURCE = 122344480;
literal ACME$_ASTCTXNOTFND = 122345474;
literal ACME$_BUFTOOSMALL = 122345482;
literal ACME$_DIALOGFULL = 122345490;
literal ACME$_DUPCREDTYP = 122345498;
literal ACME$_INVCREDTYP = 122345506;
literal ACME$_INVFLAG = 122345514;
literal ACME$_INVPARAMETER = 122345522;
literal ACME$_NOMSGFND = 122345530;
literal ACME$_NULLVALUE = 122345538;
literal ACME$_RESOURCENOTAVAIL = 122345546;
literal ACME$_UNSUPREVLVL = 122345554;
literal ACME$_NOTOUTITEM = 122345562;
literal ACME$_BADSTRUCTLEN = 122345570;
literal ACME$_THREADERROR = 122346500;

 

literal AUDSRV$_FACILITY = 48;
literal AUDSRV$_INCONSTATE = 3178508;
literal AUDSRV$_RESCRASH = 3178516;
literal AUDSRV$_RESTART = 3178524;
literal AUDSRV$_BADSTATE = 3178530;
literal AUDSRV$_BADAUDFLG = 3178538;
literal AUDSRV$_NORESTART = 3178546;
literal AUDSRV$_MSGQUEEMPTY = 3178554;
literal AUDSRV$_SYSJNLFULL = 3178562;
literal AUDSRV$_BADARCDSB = 3178568;
literal AUDSRV$_BADARCENB = 3178576;
literal AUDSRV$_BADCTLMSG = 3178584;
literal AUDSRV$_BADJOURNAL = 3178592;
literal AUDSRV$_BADMSGSIZE = 3178600;
literal AUDSRV$_FORMATERR = 3178608;
literal AUDSRV$_NOACTION = 3178616;
literal AUDSRV$_NOARCDEV = 3178624;
literal AUDSRV$_NOARCDEVENB = 3178632;
literal AUDSRV$_PKTCNTBAD = 3178640;
literal AUDSRV$_PKTCNTZERO = 3178648;
literal AUDSRV$_NOSELECT = 3178656;
literal AUDSRV$_BRKTHRUERR = 3178664;
literal AUDSRV$_BADRECORD = 3178672;
literal AUDSRV$_BADPACKET = 3178680;
literal AUDSRV$_DUPPACKET = 3178688;
literal AUDSRV$_BADCOUNT = 3178696;
literal AUDSRV$_SUSPEND = 3178704;
literal AUDSRV$_RESWARNING = 3178712;
literal AUDSRV$_RESCRITICAL = 3178720;
literal AUDSRV$_RESDISMISS = 3178728;
literal AUDSRV$_RESUMEWARN = 3178736;
literal AUDSRV$_RESUMEFAIL = 3178744;
literal AUDSRV$_OLDPURGE = 3178752;
literal AUDSRV$_NEWIGNORE = 3178760;
literal AUDSRV$_RESNOTDISK = 3178768;
literal AUDSRV$_REMARCNAVL = 3178776;
literal AUDSRV$_REMARCFAIL = 3178784;
literal AUDSRV$_REMARCSTS = 3178792;
literal AUDSRV$_INVRESMODE = 3178800;
literal AUDSRV$_INVTHRESH = 3178808;
literal AUDSRV$_INVFNLMODE = 3178816;
literal AUDSRV$_PEXFULL = 3178824;
literal AUDSRV$_LISTENFAIL = 3178832;
literal AUDSRV$_DISPLAY_SHORT = 3178840;
literal AUDSRV$_NOTDELTA = 3178848;
literal AUDSRV$_JNLADDFAIL = 3178856;
literal AUDSRV$_JNLREMFAIL = 3178864;
literal AUDSRV$_REMNOTENAB = 3178872;
literal AUDSRV$_JNLNOTACTIVE = 3178880;
literal AUDSRV$_LISTENNOTMBX = 3178888;
literal AUDSRV$_ARCOPENFAIL = 3178896;
literal AUDSRV$_ARCNOTDISK = 3178904;
literal AUDSRV$_REQPKTINV = 3178912;
literal AUDSRV$_LOCKED = 3178920;
literal AUDSRV$_SNDOPRERR = 3178928;
literal AUDSRV$_SYSJNLNAC = 3178936;
literal AUDSRV$_SERVEREXIT = 3178947;
literal AUDSRV$_ARCHIVENEW = 3178955;
literal AUDSRV$_ARCHIVEMOVE = 3178963;
literal AUDSRV$_ARCHIVEDSB = 3178971;
literal AUDSRV$_RESINFO = 3178979;
literal AUDSRV$_IGNORED = 3178987;
literal AUDSRV$_NEW_FILE = 3178995;
literal AUDSRV$_REMARCEST = 3179003;
literal AUDSRV$_NEWSERVERDB = 3179011;
literal AUDSRV$_OBSSERVERDB = 3179019;
literal AUDSRV$_NOOPCOM = 3179027;
literal AUDSRV$_REMENABLED = 3179035;
literal AUDSRV$_REMDISABLED = 3179043;
literal AUDSRV$_LISTENENAB = 3179051;
literal AUDSRV$_LISTENDSB = 3179059;
literal AUDSRV$_SERVERLOCKED = 3179067;
literal AUDSRV$_RESUME = 3179073;
literal AUDSRV$_RESOKAY = 3179081;

literal AUDSRV$_NEWOBJECTDB = 3180099;
literal AUDSRV$_REUSE_BUFFER = 3180107;
literal AUDSRV$_REQUEUE = 3180115;
literal AUDSRV$_AUDIT_BACKLOG = 3180123;
literal AUDSRV$_BADUNIPKT = 3181696;
literal AUDSRV$_BADOBJREQ = 3181704;
literal AUDSRV$_BADORBTLV = 3181712;
literal AUDSRV$_ORBDISSEQFAIL = 3181720;
literal AUDSRV$_BADFLOWVAL = 3181728;
literal AUDSRV$_SYSJNLRES = 3183298;
literal AUDSRV$_FATINITERR = 3183306;
literal AUDSRV$_JNLRECNAC = 3183314;
literal AUDSRV$_DB_NAC = 3183322;
literal AUDSRV$_ODB_NAC = 3183330;
literal AUDSRV$_JNLPUTFAIL = 3183338;

 
literal CONV$M_SIGNAL = %X'1';
literal CONV$M_FDL_STRING = %X'2';
literal CONV$S_CONVDEF = 2;
macro CONV$V_SIGNAL = 0,0,1,0 %;
macro CONV$V_FDL_STRING = 0,1,1,0 %;
literal CONV$K_OPTIONS_COUNT = 0;
literal CONV$K_CREATE = 1;
literal CONV$K_SHARE = 2;
literal CONV$K_FAST = 3;
literal CONV$K_MERGE = 4;
literal CONV$K_APPEND = 5;
literal CONV$K_SORT = 6;
literal CONV$K_WORK_FILES = 7;
literal CONV$K_KEY = 8;
literal CONV$K_PAD = 9;
literal CONV$K_PAD_CHARACTER = 10;
literal CONV$K_TRUNCATE = 11;
literal CONV$K_EXIT = 12;
literal CONV$K_FIXED_CONTROL = 13;
literal CONV$K_FILL_BUCKETS = 14;
literal CONV$K_READ_CHECK = 15;
literal CONV$K_WRITE_CHECK = 16;
literal CONV$K_FDL = 17;
literal CONV$K_EXCEPTION = 18;
literal CONV$K_PROLOGUE = 19;
literal CONV$K_IGNORE_PROLOGUE = 20;
literal CONV$K_SECONDARY = 21;
literal CONV$K_MAX_OPTIONS = 21;
literal CONV$C_MAX_OPTIONS = 21;
literal CONV$S_OPTIONS = 88;
literal CONV$S_CONV$OPTIONS = 88;
macro CONV$L_OPTIONS_COUNT = 0,0,32,0 %;
macro CONV$L_CREATE = 4,0,32,0 %;
macro CONV$L_SHARE = 8,0,32,0 %;
macro CONV$L_FAST = 12,0,32,0 %;
macro CONV$L_MERGE = 16,0,32,0 %;
macro CONV$L_APPEND = 20,0,32,0 %;
macro CONV$L_SORT = 24,0,32,0 %;
macro CONV$L_WORK_FILES = 28,0,32,0 %;
macro CONV$L_KEY = 32,0,32,0 %;
macro CONV$L_PAD = 36,0,32,0 %;
macro CONV$L_PAD_CHARACTER = 40,0,32,0 %;
macro CONV$L_TRUNCATE = 44,0,32,0 %;
macro CONV$L_EXIT = 48,0,32,0 %;
macro CONV$L_FIXED_CONTROL = 52,0,32,0 %;
macro CONV$L_FILL_BUCKETS = 56,0,32,0 %;
macro CONV$L_READ_CHECK = 60,0,32,0 %;
macro CONV$L_WRITE_CHECK = 64,0,32,0 %;
macro CONV$L_FDL = 68,0,32,0 %;
macro CONV$L_EXCEPTION = 72,0,32,0 %;
macro CONV$L_PROLOGUE = 76,0,32,0 %;
macro CONV$L_IGNORE_PROLOGUE = 80,0,32,0 %;
macro CONV$L_SECONDARY = 84,0,32,0 %;
literal CONV$K_STATISTICS_COUNT = 0;
literal CONV$K_FILE_COUNT = 1;
literal CONV$K_RECORD_COUNT = 2;
literal CONV$K_EXCEPT_COUNT = 3;
literal CONV$K_VALID_COUNT = 4;
literal CONV$K_MAX_STATISTICS = 4;
literal CONV$C_MAX_STATISTICS = 4;
literal CONV$S_STATISTICS = 20;
literal CONV$K_KEY_NUMBER = 5;
literal CONV$K_REC_OUT = 6;
literal CONV$K_NODES = 7;
literal CONV$K_WRK_ALQ = 8;
literal CONV$K_INI_RUNS = 9;
literal CONV$K_MRG_ORDER = 10;
literal CONV$K_MRG_PASSES = 11;
literal CONV$K_SORT_DIO_COUNT = 12;
literal CONV$K_SORT_BIO_COUNT = 13;
literal CONV$K_SORT_ELAPSED_TIME = 14;
literal CONV$K_SORT_CPU_TIME = 16;
literal CONV$K_SORT_PF_COUNT = 18;
literal CONV$K_LOAD_DIO_COUNT = 19;
literal CONV$K_LOAD_BIO_COUNT = 20;
literal CONV$K_LOAD_ELAPSED_TIME = 21;
literal CONV$K_LOAD_CPU_TIME = 23;
literal CONV$K_LOAD_PF_COUNT = 25;
literal CONV$K_EXT_STATISTICS = 25;
literal CONV$C_EXT_STATISTICS = 25;
literal CONV$S_EXT_STATISTICS = 104;
literal CONV$S_CONV$STATISTICS = 104;
macro CONV$L_STATISTICS_COUNT = 0,0,32,0 %;
macro CONV$L_FILE_COUNT = 4,0,32,0 %;
macro CONV$L_RECORD_COUNT = 8,0,32,0 %;
macro CONV$L_EXCEPT_COUNT = 12,0,32,0 %;
macro CONV$L_VALID_COUNT = 16,0,32,0 %;
macro CONV$L_KEY_NUMBER = 20,0,32,0 %;
macro CONV$L_REC_OUT = 24,0,32,0 %;
macro CONV$L_NODES = 28,0,32,0 %;
macro CONV$L_WRK_ALQ = 32,0,32,0 %;
macro CONV$L_INI_RUNS = 36,0,32,0 %;
macro CONV$L_MRG_ORDER = 40,0,32,0 %;
macro CONV$L_MRG_PASSES = 44,0,32,0 %;
macro CONV$L_SORT_DIO_COUNT = 48,0,32,0 %;
macro CONV$L_SORT_BIO_COUNT = 52,0,32,0 %;
macro CONV$Q_SORT_ELAPSED_TIME = 56,0,0,0 %;
literal CONV$S_SORT_ELAPSED_TIME = 8;
macro CONV$Q_SORT_CPU_TIME = 64,0,0,0 %;
literal CONV$S_SORT_CPU_TIME = 8;
macro CONV$L_SORT_PF_COUNT = 72,0,32,0 %;
macro CONV$L_LOAD_DIO_COUNT = 76,0,32,0 %;
macro CONV$L_LOAD_BIO_COUNT = 80,0,32,0 %;
macro CONV$Q_LOAD_ELAPSED_TIME = 84,0,0,0 %;
literal CONV$S_LOAD_ELAPSED_TIME = 8;
macro CONV$Q_LOAD_CPU_TIME = 92,0,0,0 %;
literal CONV$S_LOAD_CPU_TIME = 8;
macro CONV$L_LOAD_PF_COUNT = 100,0,32,0 %;
literal RECL$K_STATISTICS_COUNT = 0;
literal RECL$K_SCAN_COUNT = 1;
literal RECL$K_DATA_COUNT = 2;
literal RECL$K_INDEX_COUNT = 3;
literal RECL$K_TOTAL_COUNT = 4;
literal RECL$K_MAX_STATISTICS = 4;
literal RECL$C_MAX_STATISTICS = 4;
literal RECL$S_STATISTICS = 20;
literal RECL$S_RECL$STATISTICS = 20;
macro RECL$L_STATISTICS_COUNT = 0,0,32,0 %;
macro RECL$L_SCAN_COUNT = 4,0,32,0 %;
macro RECL$L_DATA_COUNT = 8,0,32,0 %;
macro RECL$L_INDEX_COUNT = 12,0,32,0 %;
macro RECL$L_TOTAL_COUNT = 16,0,32,0 %;

 

literal CONVERT$_FACILITY = 178;
literal CONV$_CREATEDSTM = 11670267;    
literal CONV$_INSVIRMEM = 11670258;     
literal CONV$_OPENERR = 11670410;       
literal CONV$_OPENIN = 11669658;        
literal CONV$_OPENOUT = 11669666;       
literal CONV$_READERR = 11669682;       
literal CONV$_WRITEERR = 11669714;      
literal CONV$_CLOSEIN = 11669586;       
literal CONV$_CLOSEOUT = 11669594;      
literal CONV$_BADLOGIC = 11669794;      
literal CONV$_NOWILD = 11669802;        
literal CONV$_VALERR = 11669994;        
literal CONV$_CONFQUAL = 11670242;      
literal CONV$_FAO_MAX = 2;
literal CONV$_NI = 11698187;
literal CONV$_PAD = 11698195;
literal CONV$_RMS = 11698203;
literal CONV$_RTL = 11698211;
literal CONV$_RTS = 11698219;
literal CONV$_VFC = 11698227;
literal CONV$_DUP = 11698235;
literal CONV$_KEY = 11698243;
literal CONV$_REX = 11698251;
literal CONV$_RSK = 11698259;
literal CONV$_RSZ = 11698267;
literal CONV$_SEQ = 11698275;
literal CONV$_BADBLK = 11698282;
literal CONV$_CREA_ERR = 11698290;
literal CONV$_DELPRI = 11698298;        
literal CONV$_EXTN_ERR = 11698306;
literal CONV$_FATALEXC = 11698314;
literal CONV$_BADSORT = 11698322;
literal CONV$_FILLIM = 11698330;
literal CONV$_IDX_LIM = 11698338;
literal CONV$_ILL_KEY = 11698346;
literal CONV$_ILL_VALUE = 11698354;
literal CONV$_INP_FILES = 11698362;
literal CONV$_KEYREF = 11698370;        
literal CONV$_LOADIDX = 11698378;
literal CONV$_NARG = 11698386;
literal CONV$_NOKEY = 11698394;
literal CONV$_NOTIDX = 11698402;
literal CONV$_NOTSEQ = 11698410;
literal CONV$_ORDER = 11698418;
literal CONV$_OPENEXC = 11698426;
literal CONV$_PROERR = 11698434;
literal CONV$_PROL_WRT = 11698442;
literal CONV$_UDF_BKS = 11698450;
literal CONV$_UDF_BLK = 11698458;
literal CONV$_INVBKT = 11698466;
literal CONV$_PLV = 11698474;

 

literal CRF$S_CRFDEF = 24;
macro CRF$L_IR_CTLTBL = 4,0,32,0 %;     
macro CRF$L_IR_KEYADR = 8,0,32,0 %;     
macro CRF$L_IR_REFADR = 12,0,32,0 %;    
macro CRF$W_IR_REFLAG = 16,0,16,0 %;    
macro CRF$B_IR_DEFIND = 20,0,8,0 %;     

literal CRF$S_CRFDEF1 = 20;
macro CRF$L_IK_CTLTBL = 4,0,32,0 %;     
macro CRF$L_IK_KEYADR = 8,0,32,0 %;     
macro CRF$L_IK_VALADR = 12,0,32,0 %;    
macro CRF$W_IK_VALFLG = 16,0,16,0 %;    

literal CRF$S_CRFDEF2 = 25;
macro CRF$L_OU_CTLTBL = 4,0,32,0 %;     
macro CRF$L_OU_LINWID = 8,0,32,0 %;     
macro CRF$B_OU_PAG1 = 12,0,8,0 %;       
macro CRF$B_OU_SUCPAG = 16,0,8,0 %;     
macro CRF$B_OU_PRTIND = 20,0,8,0 %;     
macro CRF$B_OU_SAVIND = 24,0,8,0 %;     

literal CRF$S_CRFDEF3 = 96;
macro CRF$L_HASHT = 0,0,32,0 %;         
macro CRF$L_LASTKEY = 4,0,32,0 %;       
macro CRF$R_KEYTYPE_OVERLAY = 8,0,8,0 %;
macro CRF$B_KEYTYPE = 8,0,8,0 %;        
macro CRF$R_KEYTYPE_BITS = 8,0,8,0 %;
macro CRF$V_BINARY = 8,0,1,0 %;         
macro CRF$B_FLAGS = 9,0,8,0 %;          
macro CRF$W_ERRSTS = 10,0,16,0 %;       
macro CRF$L_ENTRIES = 12,0,32,0 %;      
macro CRF$L_DYNMEM = 16,0,0,0 %;
literal CRF$S_DYNMEM = 8;               
macro CRF$L_MAXBLK = 24,0,32,0 %;       
macro CRF$L_MEMEXP = 28,0,32,0 %;       
macro CRF$L_ERROR = 64,0,32,0 %;        
macro CRF$L_OUTPUT = 68,0,32,0 %;       
macro CRF$L_K1FMTBL = 72,0,32,0 %;      
macro CRF$L_K2FMTBL = 76,0,32,0 %;      
macro CRF$L_V1FMTBL = 80,0,32,0 %;      
macro CRF$L_V2FMTBL = 84,0,32,0 %;      
macro CRF$L_R1FMTBL = 88,0,32,0 %;      
macro CRF$L_R2FMTBL = 92,0,32,0 %;      

 
literal CVT$K_VAX_F = 0;                
literal CVT$K_VAX_D = 1;                
literal CVT$K_VAX_G = 2;                
literal CVT$K_VAX_H = 3;                
literal CVT$K_IEEE_S = 4;               
literal CVT$K_IEEE_T = 5;               
literal CVT$K_IBM_LONG = 6;             
literal CVT$K_IBM_SHORT = 7;            
literal CVT$K_CRAY = 8;                 
literal CVT$K_IEEE_X = 9;               
literal CVT$K_BIG_ENDIAN_IEEE_S = 10;   
literal CVT$K_BIG_ENDIAN_IEEE_T = 11;   
literal CVT$K_BIG_ENDIAN_IEEE_X = 12;   
literal CVT$K_CRAY_SINGLE = 8;

literal CVT$K_NORMAL = 0;
literal CVT$M_INVALID_INPUT_TYPE = %X'1';
literal CVT$M_INVALID_OUTPUT_TYPE = %X'2';
literal CVT$M_INVALID_OPTION = %X'4';
literal CVT$M_RESULT_INFINITE = %X'8';
literal CVT$M_RESULT_DENORMALIZED = %X'10';
literal CVT$M_RESULT_OVERFLOW_RANGE = %X'20';
literal CVT$M_RESULT_UNDERFLOW_RANGE = %X'40';
literal CVT$M_RESULT_UNNORMALIZED = %X'80';
literal CVT$M_RESULT_INVALID = %X'100';
literal CVT$M_RESULT_OVERFLOW = %X'200';
literal CVT$M_RESULT_UNDERFLOW = %X'400';
literal CVT$M_RESULT_INEXACT = %X'800';
literal CVT$S_RETURN_STATUS = 2;
macro CVT$V_INVALID_INPUT_TYPE = 0,0,1,0 %;
macro CVT$V_INVALID_OUTPUT_TYPE = 0,1,1,0 %;
macro CVT$V_INVALID_OPTION = 0,2,1,0 %;
macro CVT$V_RESULT_INFINITE = 0,3,1,0 %;
macro CVT$V_RESULT_DENORMALIZED = 0,4,1,0 %;
macro CVT$V_RESULT_OVERFLOW_RANGE = 0,5,1,0 %;
macro CVT$V_RESULT_UNDERFLOW_RANGE = 0,6,1,0 %;
macro CVT$V_RESULT_UNNORMALIZED = 0,7,1,0 %;
macro CVT$V_RESULT_INVALID = 0,8,1,0 %;
macro CVT$V_RESULT_OVERFLOW = 0,9,1,0 %;
macro CVT$V_RESULT_UNDERFLOW = 0,10,1,0 %;
macro CVT$V_RESULT_INEXACT = 0,11,1,0 %;

literal CVT$M_ROUND_TO_NEAREST = %X'1';
literal CVT$M_TRUNCATE = %X'2';
literal CVT$M_ROUND_TO_POS = %X'4';
literal CVT$M_ROUND_TO_NEG = %X'8';
literal CVT$M_VAX_ROUNDING = %X'10';
literal CVT$M_BIG_ENDIAN = %X'20';
literal CVT$M_ERR_UNDERFLOW = %X'40';
literal CVT$M_FORCE_INVALID_TO_ZERO = %X'80';
literal CVT$M_FORCE_DENORM_TO_ZERO = %X'100';
literal CVT$M_FORCE_INF_TO_MAX_FLOAT = %X'200';
literal CVT$M_FORCE_ALL_SPECIAL_VALUES = %X'400';
literal CVT$M_ALLOW_OVRFLW_RANGE_VALUES = %X'800';
literal CVT$M_ALLOW_UDRFLW_RANGE_VALUES = %X'1000';
literal CVT$M_ALLOW_UNNORMALIZED_VALUES = %X'2000';
literal CVT$M_REPORT_ALL = %X'4000';
literal CVT$m_spare2 = %X'FFFF8000';
literal CVT$S_CONVERSION_OPTIONS = 4;

macro CVT$V_ROUND_TO_NEAREST = 0,0,1,0 %;
macro CVT$V_TRUNCATE = 0,1,1,0 %;
macro CVT$V_ROUND_TO_POS = 0,2,1,0 %;
macro CVT$V_ROUND_TO_NEG = 0,3,1,0 %;
macro CVT$V_VAX_ROUNDING = 0,4,1,0 %;

macro CVT$V_BIG_ENDIAN = 0,5,1,0 %;
macro CVT$V_ERR_UNDERFLOW = 0,6,1,0 %;

macro CVT$V_FORCE_INVALID_TO_ZERO = 0,7,1,0 %;
macro CVT$V_FORCE_DENORM_TO_ZERO = 0,8,1,0 %;
macro CVT$V_FORCE_INF_TO_MAX_FLOAT = 0,9,1,0 %;
macro CVT$V_FORCE_ALL_SPECIAL_VALUES = 0,10,1,0 %;

macro CVT$V_ALLOW_OVRFLW_RANGE_VALUES = 0,11,1,0 %;
macro CVT$V_ALLOW_UDRFLW_RANGE_VALUES = 0,12,1,0 %;
macro CVT$V_ALLOW_UNNORMALIZED_VALUES = 0,13,1,0 %;

macro CVT$V_REPORT_ALL = 0,14,1,0 %;

macro CVT$v_spare2 = 0,15,17,0 %;
literal CVT$s_spare2 = 17;
literal CVT$M_ALT_ROUND_TO_NEAREST = %X'1';
literal CVT$M_ROUND_TO_ZERO = %X'2';
literal CVT$M_ALT_ROUND_TO_POS = %X'4';
literal CVT$M_ALT_ROUND_TO_NEG = %X'8';
literal CVT$M_BIASED_ROUNDING = %X'10';
literal CVT$m_spare3 = %X'FFFFFFE0';
literal CVT$S_ALT_CONVERSION_OPTIONS = 4;

macro CVT$V_ALT_ROUND_TO_NEAREST = 0,0,1,0 %;
macro CVT$V_ROUND_TO_ZERO = 0,1,1,0 %;
macro CVT$V_ALT_ROUND_TO_POS = 0,2,1,0 %;
macro CVT$V_ALT_ROUND_TO_NEG = 0,3,1,0 %;
macro CVT$V_BIASED_ROUNDING = 0,4,1,0 %;
macro CVT$v_spare3 = 0,5,27,0 %;
literal CVT$s_spare3 = 27;

 

literal DDTM$_FACILITY = 1187;
literal DDTM$_UNKNOWN = 0;              

literal DDTM$_RESERVED = 77824002;
literal DDTM$_TIMEOUT = 77824010;
literal DDTM$_PART_TIMEOUT = 77824018;
literal DDTM$_SEG_FAIL = 77824026;
literal DDTM$_COMM_FAIL = 77824034;
literal DDTM$_VETOED = 77824042;
literal DDTM$_ABORTED = 77824050;
literal DDTM$_SERIALIZATION = 77824058;
literal DDTM$_PART_SERIAL = 77824066;
literal DDTM$_INTEGRITY = 77824074;
literal DDTM$_LOG_FAIL = 77824082;
literal DDTM$_SYNC_FAIL = 77824090;
literal DDTM$_ORPHAN_BRANCH = 77824098;
literal DDTM$_DEADLOCK = 77824106;
literal DDTM$_PROTERROR = 77824114;
literal DDTM$_ROLLBACK = 77824122;
literal DDTM$_TRANSIENT = 77824130;

 

literal DST$K_LOCOMMAND = 0;            
literal DST$K_STA_R00 = 0;              
literal DST$K_STA_R01 = 1;              
literal DST$K_STA_R02 = 2;              
literal DST$K_STA_R03 = 3;              
literal DST$K_STA_R04 = 4;              
literal DST$K_STA_R05 = 5;              
literal DST$K_STA_R06 = 6;              
literal DST$K_STA_R07 = 7;              
literal DST$K_STA_R08 = 8;              
literal DST$K_STA_R09 = 9;              
literal DST$K_STA_R10 = 10;             
literal DST$K_STA_R11 = 11;             
literal DST$K_STA_R12 = 12;             
literal DST$K_STA_R13 = 13;             
literal DST$K_STA_R14 = 14;             
literal DST$K_STA_R15 = 15;             
literal DST$K_STA_IMM_B = 16;           
literal DST$K_STA_IMM_W = 17;           
literal DST$K_STA_IMM_L = 18;           
literal DST$K_OPR_ADD = 19;             
literal DST$K_STA_REP_B = 20;           
literal DST$K_STA_REP_W = 21;           
literal DST$K_STA_REP_L = 22;           
literal DST$K_OPR_STOP = 23;            

literal DST$K_HICOMMAND = 23;           

 

literal DTK$K_TRM_ZERO = 48;
literal DTK$K_TRM_ONE = 49;
literal DTK$K_TRM_TWO = 50;
literal DTK$K_TRM_THREE = 51;
literal DTK$K_TRM_FOUR = 52;
literal DTK$K_TRM_FIVE = 53;
literal DTK$K_TRM_SIX = 54;
literal DTK$K_TRM_SEVEN = 55;
literal DTK$K_TRM_EIGHT = 56;
literal DTK$K_TRM_NINE = 57;
literal DTK$K_TRM_A = 65;
literal DTK$K_TRM_B = 66;
literal DTK$K_TRM_C = 67;
literal DTK$K_TRM_D = 68;
literal DTK$K_TRM_NUMBER_SIGN = 35;
literal DTK$K_TRM_ASTERISK = 42;
literal DTK$K_TRM_CANCELLED = 508;      
literal DTK$K_TRM_TIMEOUT = 509;        
literal DTK$K_TRM_BUFFER_FULL = 510;    
literal DTK$K_TRM_UNKNOWN = 511;        

literal DTK$K_TEST_POWER = 1;
literal DTK$K_TEST_HDATA = 2;
literal DTK$K_TEST_HCONTROL = 3;
literal DTK$K_TEST_DATA = 4;
literal DTK$K_TEST_SPEAK = 5;

literal DTK$K_DIAL_TONE = 0;
literal DTK$K_DIAL_PULSE = 1;

literal DTK$K_DTC_UNKNOWN = 0;
literal DTK$K_DTC_01 = 1;
literal DTK$K_DTC_03 = 2;

literal DTK$K_KEYPAD_OFF = 0;
literal DTK$K_KEYPAD_ON = 1;
literal DTK$K_KEYPAD_AUTO = 2;

literal DTK$K_VOICE_MALE = 0;
literal DTK$K_VOICE_FEMALE = 1;
literal DTK$K_VOICE_CHILD = 2;
literal DTK$K_VOICE_DEEP_MALE = 3;
literal DTK$K_VOICE_DEEP_FEMALE = 4;
literal DTK$K_VOICE_OLDER_MALE = 5;
literal DTK$K_VOICE_LIGHT_FEMALE = 6;

literal DTK$K_SPEAK = 0;
literal DTK$K_STOP = 1;
literal DTK$K_HALT = 2;

literal DTK$K_IMMED = 0;                
literal DTK$K_WAIT = 1;                 
literal DTK$K_STATUS = 2;               

literal DTK$M_SQUARE = %X'1';
literal DTK$M_ASCII = %X'2';
literal DTK$M_MINUS = %X'4';
literal DTK$M_EUROPE = %X'8';
literal DTK$M_SPELL = %X'10';
literal DTK$M_NORMAL = 0;               
literal DTK$K_SQUARE = 0;               
literal DTK$K_ASCII = 1;                
literal DTK$K_MINUS = 2;                
literal DTK$K_EUROPE = 3;               
literal DTK$K_SPELL = 4;                
literal DTK$M_HOST = %X'1';
literal DTK$M_SPEAK_ALL = %X'2';
literal DTK$M_EDITED = %X'4';
literal DTK$M_HARD = %X'8';
literal DTK$M_SETUP = %X'10';
literal DTK$M_FILTER = %X'20';
literal DTK$K_HOST = 0;                 
literal DTK$K_SPEAK_ALL = 1;            
literal DTK$K_EDITED = 2;               
literal DTK$K_HARD = 3;                 
literal DTK$K_SETUP = 4;                
literal DTK$K_FILTER = 5;               
literal DTK$M_TEXT = %X'1';
literal DTK$M_PHONEME = %X'2';
literal DTK$M_RAWHOST = %X'4';
literal DTK$M_INHOST = %X'8';
literal DTK$M_OUTHOST = %X'10';
literal DTK$M_ERROR = %X'20';
literal DTK$M_TRACE = %X'40';
literal DTK$M_DEBUG = %X'80';
literal DTK$K_TEXT = 0;                 
literal DTK$K_PHONEME = 1;              
literal DTK$K_RAWHOST = 2;              
literal DTK$K_INHOST = 3;               
literal DTK$K_OUTHOST = 4;              
literal DTK$K_ERROR = 5;                
literal DTK$K_TRACE = 6;                
literal DTK$K_DEBUG = 7;                
literal DTK$S_DTKDEF = 1;

macro DTK$R_DTKMODE_BITS = 0,0,8,0 %;
macro DTK$V_SQUARE = 0,0,1,0 %;         
macro DTK$V_ASCII = 0,1,1,0 %;          
macro DTK$V_MINUS = 0,2,1,0 %;          
macro DTK$V_EUROPE = 0,3,1,0 %;         
macro DTK$V_SPELL = 0,4,1,0 %;          
macro DTK$R_DTKTERM_BITS = 0,0,8,0 %;
macro DTK$V_HOST = 0,0,1,0 %;           
macro DTK$V_SPEAK_ALL = 0,1,1,0 %;      
macro DTK$V_EDITED = 0,2,1,0 %;         
macro DTK$V_HARD = 0,3,1,0 %;           
macro DTK$V_SETUP = 0,4,1,0 %;          
macro DTK$V_FILTER = 0,5,1,0 %;         
macro DTK$R_DTKLOG_BITS = 0,0,8,0 %;
macro DTK$V_TEXT = 0,0,1,0 %;           
macro DTK$V_PHONEME = 0,1,1,0 %;        
macro DTK$V_RAWHOST = 0,2,1,0 %;        
macro DTK$V_INHOST = 0,3,1,0 %;         
macro DTK$V_OUTHOST = 0,4,1,0 %;        
macro DTK$V_ERROR = 0,5,1,0 %;          
macro DTK$V_TRACE = 0,6,1,0 %;          
macro DTK$V_DEBUG = 0,7,1,0 %;          

 

literal FDL$_FACILITY = 180;
literal FDL$_BADLOGIC = 11800866;       
literal FDL$_CLOSEIN = 11800658;        
literal FDL$_CLOSEOUT = 11800666;       
literal FDL$_CREATED = 11800691;        
literal FDL$_CREATEDSTM = 11801339;     
literal FDL$_INSVIRMEM = 11801330;      
literal FDL$_OPENIN = 11800730;         
literal FDL$_OPENOUT = 11800738;        
literal FDL$_READERR = 11800754;        
literal FDL$_VALERR = 11801066;         
literal FDL$_WRITEERR = 11800786;       
literal FDL$_FAO_MAX = 5;
literal FDL$_TITLE = 11829259;
literal FDL$_ABKW = 11829264;
literal FDL$_INVDATIM = 11829272;
literal FDL$_MULSEC = 11829280;
literal FDL$_NOQUAL = 11829288;
literal FDL$_NULLPRI = 11829296;
literal FDL$_RFLOC = 11829304;
literal FDL$_VALPRI = 11829312;
literal FDL$_UNQUAKW = 11829320;
literal FDL$_UNSECKW = 11829328;
literal FDL$_WARNING = 11829336;
literal FDL$_ABPRIKW = 11829346;
literal FDL$_CREATE = 11829354;
literal FDL$_FDLERROR = 11829362;
literal FDL$_ILL_ARG = 11829370;
literal FDL$_MULPRI = 11829378;
literal FDL$_OPENFDL = 11829386;
literal FDL$_OUTORDER = 11829394;
literal FDL$_SYNTAX = 11829402;
literal FDL$_UNPRIKW = 11829410;
literal FDL$_INVBLK = 11829418;
literal FDL$_UNKNOWN_TAG = 11829426;

 

literal JBC$_FACILITY = 4;

literal JBC$_NORMAL = 262145;           
literal JBC$_NOCMKRNL = 272386;         
literal JBC$_NOOPER = 272530;           
literal JBC$_NOSYSNAM = 272402;         
literal JBC$_ILLDEVNAM = 294916;
literal JBC$_UNSDEVTYP = 294924;
literal JBC$_ILLFILNAM = 294932;
literal JBC$_INVQUENAM = 294940;
literal JBC$_NOPRIV = 294946;
literal JBC$_NOQUEHDR = 294956;
literal JBC$_NOQUESPACE = 294962;
literal JBC$_NOSUCHQUE = 294970;
literal JBC$_NOSUCHJOB = 294978;
literal JBC$_NOOPENJOB = 294986;
literal JBC$_REFERENCED = 294994;
literal JBC$_STARTED = 295002;
literal JBC$_INVITMCOD = 295012;
literal JBC$_INVFUNCOD = 295020;
literal JBC$_EMPTYJOB = 295026;
literal JBC$_JOBQUEDIS = 295034;
literal JBC$_JOBABORT = 295044;
literal JBC$_ACMINVOP = 295052;
literal JBC$_INVPARLEN = 295060;
literal JBC$_TRMMBXUSE = 295068;
literal JBC$_MAXSYMEXD = 295076;
literal JBC$_SCTTABFUL = 295084;
literal JBC$_CREPRCFAL = 295092;
literal JBC$_SYMNTBFUL = 295100;
literal JBC$_NODSTQUE = 295106;
literal JBC$_INVDSTQUE = 295116;
literal JBC$_JOBDELETE = 295124;
literal JBC$_NORESTART = 295130;
literal JBC$_JOBREQUEUE = 295140;
literal JBC$_QUERESET = 295148;
literal JBC$_SYSFAIL = 295156;
literal JBC$_EXECUTING = 295162;
literal JBC$_INVMSGBUF = 295172;
literal JBC$_MISREQPAR = 295180;
literal JBC$_INVPARVAL = 295188;
literal JBC$_INCQUETYP = 295196;
literal JBC$_INCDSTQUE = 295204;
literal JBC$_JOBQUEENA = 295210;
literal JBC$_NOTASSIGN = 295218;
literal JBC$_INCOMPLETE = 295226;
literal JBC$_INVCHANAM = 295236;
literal JBC$_INVFORNAM = 295244;
literal JBC$_NOSUCHCHAR = 295250;
literal JBC$_NOSUCHFORM = 295258;
literal JBC$_DUPFORM = 295266;
literal JBC$_INCFORMPAR = 295276;
literal JBC$_NOSUCHFILE = 295282;
literal JBC$_DELACCESS = 295290;
literal JBC$_QUENOTSTOP = 295298;
literal JBC$_NOMORECHAR = 295306;
literal JBC$_NOMOREFILE = 295314;
literal JBC$_NOMOREFORM = 295322;
literal JBC$_NOMOREJOB = 295330;
literal JBC$_NOMOREQUE = 295338;
literal JBC$_NOJOBCTX = 295346;
literal JBC$_NOQUECTX = 295354;
literal JBC$_NOSUCHNODE = 295362;
literal JBC$_GEN_MAX = 295370;
literal JBC$_QUE_CLOSED = 295378;
literal JBC$_NOSUCHENT = 295386;
literal JBC$_NOMOREENT = 295394;
literal JBC$_JOBCTLABORT = 295404;
literal JBC$_NOTSUPPORTED = 295412;
literal JBC$_NOTMEANINGFUL = 295419;
literal JBC$_QUEDISABLED = 295426;
literal JBC$_NOTDISABLED = 295434;
literal JBC$_NOTENAGEN = 295442;
literal JBC$_ENABLEQUE = 295448;
literal JBC$_QUENOTMOD = 295459;
literal JBC$_ATT_MAX = 295466;
literal JBC$_ATTNOTAVAIL = 295474;
literal JBC$_QEXISTS = 295482;
literal JBC$_NOSUCHQMGR = 295490;
literal JBC$_JOBNOTEXEC = 295498;
literal JBC$_DUPCHARNAME = 295506;
literal JBC$_DUPCHARNUM = 295514;
literal JBC$_DUPFORMNAME = 295522;
literal JBC$_STKNOTCHANGE = 295530;
literal JBC$_ITMREMOVED = 295539;
literal JBC$_PRIOSMALL = 295547;
literal JBC$_QMANMAX = 295552;
literal JBC$_NOAUTOSTART = 295560;
literal JBC$_NOTALLREQUE = 295568;
literal JBC$_NULL1 = 295580;
literal JBC$_TOOMUCHINFO = 295586;
literal JBC$_AUTONOTSTART = 295595;
literal JBC$_NULL2 = 295602;
literal JBC$_QMANNOTSTARTED = 295610;
literal JBC$_BUFTOOSMALL = 295616;
literal JBC$_INTERNALERROR = 295624;
literal JBC$_QMGREXISTS = 295634;
literal JBC$_TWOQMGRS = 295642;
literal JBC$_INVQMANNAM = 295650;
literal JBC$_NOMOREQMGR = 295658;
literal JBC$_QMANABORT = 295668;

literal JBC$_ACCDISERR = 295939;
literal JBC$_ALLOCMEM = 295948;
literal JBC$_COMREMJBC = 295956;
literal JBC$_INVBLOCK = 295964;
literal JBC$_INVMSG = 295970;
literal JBC$_NEWQUEUE = 295979;
literal JBC$_OPEJBCMBX = 295988;
literal JBC$_PRCREAT = 295996;
literal JBC$_QUEFORMAT = 296000;
literal JBC$_REAJBCMBX = 296012;
literal JBC$_REQUEST = 296019;
literal JBC$_SETIMR = 296026;
literal JBC$_SYMCREPRC = 296034;
literal JBC$_SYMDEL = 296042;
literal JBC$_WRIRSPMSG = 296050;
literal JBC$_WRISMBMBX = 296058;
literal JBC$_NFY_COMPLETE = 296067;
literal JBC$_NFY_CURRENT = 296075;
literal JBC$_NFY_HOLD = 296083;
literal JBC$_NFY_PENDING = 296091;
literal JBC$_NFY_TIMER = 296099;
literal JBC$_STRUCT_LEVEL = 296107;
literal JBC$_DIAGNOSTIC = 296112;
literal JBC$_DIAG_TEXT = 296120;
literal JBC$_DIAG_DATA = 296128;
literal JBC$_RESTRICT = 296136;
literal JBC$_NFY_FAILURE = 296147;
literal JBC$_NFY_CPULIM = 296155;
literal JBC$_NFY_WSVAL = 296163;
literal JBC$_RESTARTCOM = 296171;
literal JBC$_NFY_NOACCESS = 296179;
literal JBC$_NFY_CHARAC = 296187;
literal JBC$_NFY_NOLOWER = 296195;
literal JBC$_NFY_SIZE_MIN = 296203;
literal JBC$_NFY_SIZE_MAX = 296211;
literal JBC$_NFY_FORM = 296219;
literal JBC$_NFY_QUESTATE = 296227;
literal JBC$_FAILCREPRC = 296234;
literal JBC$_QMANCREPRC = 296242;
literal JBC$_INITFAIL = 296252;
literal JBC$_QMANDEL = 296258;
literal JBC$_NOTIMZONRUL = 296264;      

literal JBC$_ACCNOTENB = 298914;

 
literal LBR$C_CTLTBLID = 203;           
literal LBR$M_LOCATE = %X'1';
literal LBR$M_OPEN = %X'2';
literal LBR$K_LENGTH = 30;
literal LBR$C_LENGTH = 30;
literal LBR$S_LBRCTLTBL = 30;
macro LBR$B_ID = 0,0,8,0 %;             
macro LBR$B_TBLSIZ = 1,0,8,0 %;         
macro LBR$B_TYPE = 2,0,8,0 %;           
macro LBR$B_FUNC = 3,0,8,0 %;           
macro LBR$R_USRFLG_OVERLAY = 6,0,32,0 %;
macro LBR$L_USRFLG = 6,0,32,0 %;        
macro LBR$R_USRFLG_BITS = 6,0,8,0 %;
macro LBR$V_LOCATE = 6,0,1,0 %;         
macro LBR$V_OPEN = 6,1,1,0 %;           
macro LBR$L_HDRPTR = 10,0,32,0 %;       
macro LBR$L_CTXPTR = 14,0,32,0 %;       
macro LBR$L_CURIDX = 18,0,32,0 %;       
macro LBR$L_USRNAM = 22,0,32,0 %;       
macro LBR$L_OLDHDRPTR = 26,0,32,0 %;    
 

literal MHD$C_MHDID = 173;              
literal MHD$K_REFLNG = 8;               
literal MHD$C_REFLNG = 8;               
literal MHD$K_INSTIME = 8;              
literal MHD$C_INSTIME = 8;              
literal MHD$K_USRDAT = 16;              
literal MHD$C_USRDAT = 16;              
literal MHD$K_MHDLEN = 16;              
literal MHD$C_MHDLEN = 16;              
literal MHD$M_SELSRC = %X'1';
literal MHD$M_OBJTIR = %X'2';
literal MHD$K_OBJIDENT = 18;            
literal MHD$C_OBJIDENT = 18;            
literal MHD$S_MHDDEF = 18;
macro MHD$B_LBRFLAG = 0,0,8,0 %;        
macro MHD$B_ID = 1,0,8,0 %;             
macro MHD$L_REFCNT = 4,0,32,0 %;        
macro MHD$L_DATIM = 8,0,32,0 %;         
macro MHD$R_FILL_2_OVERLAY = 12,0,32,0 %;
macro MHD$R_FILL_2_FIELDS = 12,0,32,0 %;
macro MHD$B_USRDAT = 16,0,0,0 %;        
macro MHD$R_OBJSTAT_OVERLAY = 16,0,8,0 %;
macro MHD$B_OBJSTAT = 16,0,8,0 %;       
macro MHD$R_OBJSTAT_BITS = 16,0,8,0 %;
macro MHD$V_SELSRC = 16,0,1,0 %;        
macro MHD$V_OBJTIR = 16,1,1,0 %;        
macro MHD$R_OBJIDLNG_OVERLAY = 17,0,8,0 %;
macro MHD$B_OBJIDLNG = 17,0,8,0 %;      
macro MHD$R_OBJIDLNG_FIELDS = 17,0,8,0 %;
macro MHD$T_OBJIDENT = 18,0,0,0 %;      
 

literal HLP$M_PROMPT = %X'1';
literal HLP$M_PROCESS = %X'2';
literal HLP$M_GROUP = %X'4';
literal HLP$M_SYSTEM = %X'8';
literal HLP$M_LIBLIST = %X'10';
literal HLP$M_HELP = %X'20';
literal HLP$M_SPARE1 = %X'40';
literal HLP$M_PAGE_SAVE = %X'80';
literal HLP$M_PAGE = %X'100';
literal HLP$M_OUTPUT = %X'200';
literal HLP$M_LIBRARY = %X'400';
literal HLP$M_ALL = %X'800';
literal HLP$M_PAGEDEF = %X'1000';
literal HLP$M_PMPTDEF = %X'2000';
literal HLP$M_NOTTERM = %X'4000';
literal HLP$S_HLPDEF = 2;
macro HLP$R_HLPDEF_BITS = 0,0,16,0 %;
macro HLP$V_PROMPT = 0,0,1,0 %;         
macro HLP$V_PROCESS = 0,1,1,0 %;        
macro HLP$V_GROUP = 0,2,1,0 %;          
macro HLP$V_SYSTEM = 0,3,1,0 %;         
macro HLP$V_LIBLIST = 0,4,1,0 %;        
macro HLP$V_HELP = 0,5,1,0 %;           
macro HLP$V_SPARE1 = 0,6,1,0 %;
macro HLP$V_PAGE_SAVE = 0,7,1,0 %;      
macro HLP$V_PAGE = 0,8,1,0 %;           
macro HLP$V_OUTPUT = 0,9,1,0 %;         
macro HLP$V_LIBRARY = 0,10,1,0 %;       
macro HLP$V_ALL = 0,11,1,0 %;           
macro HLP$V_PAGEDEF = 0,12,1,0 %;       
macro HLP$V_PMPTDEF = 0,13,1,0 %;       
macro HLP$V_NOTTERM = 0,14,1,0 %;       
literal HLP$M_NOHLPTXT = %X'1';
literal HLP$M_KEYNAMLIN = %X'2';
literal HLP$M_OTHERINFO = %X'4';
literal HLP$S_HLPDEF1 = 16;
macro HLP$L_DESC = 0,0,32,0 %;          
macro HLP$R_FLAGS_OVERLAY = 4,0,32,0 %;
macro HLP$L_FLAGS = 4,0,32,0 %;         
macro HLP$R_FLAGS_BITS = 4,0,8,0 %;
macro HLP$V_NOHLPTXT = 4,0,1,0 %;       
macro HLP$V_KEYNAMLIN = 4,1,1,0 %;      
macro HLP$V_OTHERINFO = 4,2,1,0 %;      
macro HLP$L_DATA = 8,0,32,0 %;          
macro HLP$L_LEVEL = 12,0,32,0 %;        
 

literal LBR$C_TYP_UNK = 0;              
literal LBR$C_TYP_OBJ = 1;              
literal LBR$C_TYP_MLB = 2;              
literal LBR$C_TYP_HLP = 3;              
literal LBR$C_TYP_TXT = 4;              
literal LBR$C_TYP_SHSTB = 5;            
literal LBR$C_TYP_NCS = 6;              
literal LBR$C_TYP_DECMX = 6;            
literal LBR$C_TYP_EOBJ = 7;             
literal LBR$C_TYP_ESHSTB = 8;           
literal ELBR$C_TYP_DECMX = 8;           
literal LBR$C_TYP_RDEC = 127;           
literal LBR$C_TYP_USRLW = 128;          
literal LBR$C_TYP_USRHI = 255;          

literal LBR$C_FLUSHDATA = 1;            
literal LBR$C_FLUSHALL = 0;             

literal LBR$C_MAXRECSIZ = 2048;         
literal LBR$C_PAGESIZE = 512;           
literal LBR$C_HASHSIZE = 512;           
literal LBR$C_TEXTPAGE = 508;           
literal LBR$C_DEXTQ = 50;               
literal LBR$C_MAXCTL = 64;              
literal LBR$C_MAXHDRSIZ = 128;          

literal LBR$C_DEFENTALL = 300;          
literal LBR$C_RETRYOPEN = 120;          
literal LBR$C_RETRYWAIT = 1;            
literal LBR$C_MINREAD = 2;              
literal LBR$C_MAXREAD = 100;            
literal LBR$C_MEMXTRA = 50;             
literal LBR$C_PUTBUFSIZ = 30;           
literal LBR$C_FLSHBFSIZ = 1;            
literal LBR$C_MAXIDXRD = 20;            
literal LBR$C_MAXKEYLEN = 128;          
literal LBR$C_MAXLUHREC = 32768;        

literal ELBR$C_MAXRECSIZ = 8192;        

literal LBR$C_CREATE = 0;               
literal LBR$C_READ = 1;                 
literal LBR$C_UPDATE = 2;               
literal LBR$C_MAXFUNC = 2;              
literal LBR$S_LBRDEF = 16;
macro LBR$L_IC_CTLTBL = 4,0,32,0 %;     
macro LBR$L_IC_FUNC = 8,0,32,0 %;       
macro LBR$L_IC_TYPE = 12,0,32,0 %;      

literal LBR$S_LBRDEF1 = 32;
macro LBR$L_OP_CTLTBL = 4,0,32,0 %;     
macro LBR$L_OP_FNS = 8,0,32,0 %;        
macro LBR$L_OP_CREOPT = 12,0,32,0 %;    
macro LBR$L_OP_DNS = 16,0,32,0 %;       
macro LBR$L_OP_RLFNA = 20,0,32,0 %;     
macro LBR$L_OP_RNS = 24,0,32,0 %;       
macro LBR$L_OP_RNSLEN = 28,0,32,0 %;    

literal LBR$S_LBRDEF2 = 8;
macro LBR$L_CL_CTLTBL = 4,0,32,0 %;     

literal LBR$S_LBRDEF3 = 12;
macro LBR$L_GH_CTLTBL = 4,0,32,0 %;     
macro LBR$L_GH_RETARY = 8,0,32,0 %;     

literal LBR$S_LBRDEF4 = 12;
macro LBR$L_SI_CTLTBL = 4,0,32,0 %;     
macro LBR$L_SI_IDXNUM = 8,0,32,0 %;     

literal LBR$S_LBRDEF5 = 16;
macro LBR$L_LK_CTLTBL = 4,0,32,0 %;     
macro LBR$L_LK_KEYNAM = 8,0,32,0 %;     
macro LBR$L_LK_TXTRFA = 12,0,32,0 %;    

literal LBR$S_LBRDEF6 = 16;
macro LBR$L_IK_CTLTBL = 4,0,32,0 %;     
macro LBR$L_IK_KEYNAM = 8,0,32,0 %;     
macro LBR$L_IK_TXTRFA = 12,0,32,0 %;    

literal LBR$S_LBRDEF7 = 20;
macro LBR$L_RK_CTLTBL = 4,0,32,0 %;     
macro LBR$L_RK_KEYNAM = 8,0,32,0 %;     
macro LBR$L_RK_OLDRFA = 12,0,32,0 %;    
macro LBR$L_RK_NEWRFA = 16,0,32,0 %;    

literal LBR$S_LBRDEF8 = 12;
macro LBR$L_DK_CTLTBL = 4,0,32,0 %;     
macro LBR$L_DK_KEYNAM = 8,0,32,0 %;     

literal LBR$S_LBRDEF9 = 12;
macro LBR$L_DD_CTLTBL = 4,0,32,0 %;     
macro LBR$L_DD_TXTRFA = 8,0,32,0 %;     

literal LBR$S_LBRDEF10 = 16;
macro LBR$L_GR_CTLTBL = 4,0,32,0 %;     
macro LBR$L_GR_BUFDES = 8,0,32,0 %;     
macro LBR$L_GR_BUFLEN = 12,0,32,0 %;    

literal LBR$S_LBRDEF11 = 16;
macro LBR$L_PR_CTLTBL = 4,0,32,0 %;     
macro LBR$L_PR_BUFDES = 8,0,32,0 %;     
macro LBR$L_PR_TXTRFA = 12,0,32,0 %;    

literal LBR$S_LBRDEF12 = 8;
macro LBR$L_PE_CTLTBL = 4,0,32,0 %;     

literal LBR$S_LBRDEF13 = 20;
macro LBR$L_SR_CTLTBL = 4,0,32,0 %;     
macro LBR$L_SR_IDXNUM = 8,0,32,0 %;     
macro LBR$L_SR_RFA = 12,0,32,0 %;       
macro LBR$L_SR_USRTN = 16,0,32,0 %;     

literal LBR$S_LBRDEF14 = 12;
macro LBR$L_SU_KEYDES = 4,0,32,0 %;     
macro LBR$L_SU_TXTRFA = 8,0,32,0 %;     

literal LBR$S_LBRDEF15 = 16;
macro LBR$L_GI_CTLTBL = 4,0,32,0 %;     
macro LBR$L_GI_IDXNUM = 8,0,32,0 %;     
macro LBR$L_GI_USRTN = 12,0,32,0 %;     

literal LBR$S_LBRDEF16 = 12;
macro LBR$L_GU_KEYADR = 4,0,32,0 %;     
macro LBR$L_GU_TXTRFA = 8,0,32,0 %;     

literal LBR$C_ADDMOD = 1;               
literal LBR$C_DELMOD = 2;               
literal LBR$C_REPMOD = 3;               
literal LBR$S_LBRDEF17 = 16;
macro LBR$L_AU_CTLTBL = 4,0,32,0 %;     
macro LBR$L_AU_FLAGS = 8,0,32,0 %;      
macro LBR$L_AU_KEYNAM = 12,0,32,0 %;    

literal LBR$S_LBRDEF18 = 12;
macro LBR$L_GU_CTLTBL = 4,0,32,0 %;     
macro LBR$L_GU_USRTN = 8,0,32,0 %;      

literal LBR$S_LBRDEF19 = 8;
macro LBR$L_UU_UPDESC = 4,0,32,0 %;     
 

literal LHI$S_LHIDEF = 128;
macro LHI$L_TYPE = 0,0,32,0 %;          
macro LHI$L_NINDEX = 4,0,32,0 %;        
macro LHI$L_MAJORID = 8,0,32,0 %;       
macro LHI$L_MINORID = 12,0,32,0 %;      
macro LHI$T_LBRVER = 16,0,0,0 %;
literal LHI$S_LBRVER = 32;              
macro LHI$L_CREDAT = 48,0,32,0 %;       
macro LHI$L_UPDTIM = 56,0,32,0 %;       
macro LHI$L_UPDHIS = 64,0,32,0 %;       
macro LHI$L_FREEVBN = 68,0,32,0 %;      
macro LHI$L_FREEBLK = 72,0,32,0 %;      
macro LHI$B_NEXTRFA = 76,0,0,0 %;
literal LHI$S_NEXTRFA = 6;              
macro LHI$W_RFAXTR = 82,0,16,0 %;       
macro LHI$L_NEXTVBN = 84,0,32,0 %;      
macro LHI$L_FREIDXBLK = 88,0,32,0 %;    
macro LHI$L_FREEIDX = 92,0,32,0 %;      
macro LHI$L_HIPREAL = 96,0,32,0 %;      
macro LHI$L_IDXBLKS = 100,0,32,0 %;     
macro LHI$L_IDXCNT = 104,0,32,0 %;      
macro LHI$L_MODCNT = 108,0,32,0 %;      
macro LHI$L_MHDUSZ = 112,0,32,0 %;      
macro LHI$L_MAXLUHREC = 116,0,32,0 %;   
macro LHI$L_NUMLUHREC = 120,0,32,0 %;   
macro LHI$L_LIBSTATUS = 124,0,32,0 %;   
 

literal CRE$C_VMSV2 = 2;                
literal CRE$C_VMSV3 = 3;                
literal CRE$M_NOCASECMP = %X'1';
literal CRE$M_NOCASENTR = %X'2';
literal CRE$M_UPCASNTRY = %X'4';
literal CRE$C_HLPCASING = 6;            
literal CRE$C_OBJCASING = 3;            
literal CRE$C_MACTXTCAS = 0;            
literal CRE$K_LENGTH = 80;              
literal CRE$C_LENGTH = 80;              
literal CRE$S_CREDEF = 80;
macro CRE$L_TYPE = 0,0,32,0 %;          
macro CRE$L_KEYLEN = 4,0,32,0 %;        
macro CRE$L_ALLOC = 8,0,32,0 %;         
macro CRE$L_IDXMAX = 12,0,32,0 %;       
macro CRE$L_UHDMAX = 16,0,32,0 %;       
macro CRE$L_ENTALL = 20,0,32,0 %;       
macro CRE$L_LUHMAX = 24,0,32,0 %;       
macro CRE$L_VERTYP = 28,0,32,0 %;       
macro CRE$R_IDXOPT_OVERLAY = 32,0,32,0 %;
macro CRE$L_IDXOPT = 32,0,32,0 %;       
macro CRE$R_IDXOPT_BITS = 32,0,8,0 %;
macro CRE$V_NOCASECMP = 32,0,1,0 %;     
macro CRE$V_NOCASENTR = 32,1,1,0 %;     
macro CRE$V_UPCASNTRY = 32,2,1,0 %;     

 

literal LIB$K_CLI_LOCAL_SYM = 1;
literal LIB$K_CLI_GLOBAL_SYM = 2;
literal LIB$M_CLI_CTRLT = %X'100000';
literal LIB$M_CLI_CTRLY = %X'2000000';
macro CLI$CTRL_FIELDS = 0,0,32,0 %;
literal LIB$S_CLI$CTRL_FIELDS = 4;
macro LIB$V_CLI_CTRLT = 0,20,1,0 %;
macro LIB$V_CLI_CTRLY = 0,25,1,0 %;

 
literal UTIL$M_CQF_CONFIRM = %X'1';
literal UTIL$M_CQF_EXCLUDE = %X'2';
literal UTIL$M_CQF_BEFORE = %X'4';
literal UTIL$M_CQF_SINCE = %X'8';
literal UTIL$M_CQF_CREATED = %X'10';
literal UTIL$M_CQF_MODIFIED = %X'20';
literal UTIL$M_CQF_EXPIRED = %X'40';
literal UTIL$M_CQF_BACKUP = %X'80';
literal UTIL$M_CQF_BYOWNER = %X'100';
literal UTIL$M_CQF_ACCESSED = %X'200';
literal UTIL$M_CQF_ATTRIBUTES = %X'400';
literal UTIL$M_CQF_UPDATE_DATA = %X'800';
literal UTIL$S_CFQUALS = 4;
macro UTIL$R_FLAGS_OVERLAY = 0,0,32,0 %;
macro UTIL$L_QUALIFIER_FLAGS = 0,0,32,0 %;
literal UTIL$S_QUALIFIER_FLAGS = 4;
macro UTIL$V_CQF_CONFIRM = 0,0,1,0 %;   
macro UTIL$V_CQF_EXCLUDE = 0,1,1,0 %;   
macro UTIL$V_CQF_BEFORE = 0,2,1,0 %;    
macro UTIL$V_CQF_SINCE = 0,3,1,0 %;     
macro UTIL$V_CQF_CREATED = 0,4,1,0 %;   
macro UTIL$V_CQF_MODIFIED = 0,5,1,0 %;  
macro UTIL$V_CQF_EXPIRED = 0,6,1,0 %;   
macro UTIL$V_CQF_BACKUP = 0,7,1,0 %;    
macro UTIL$V_CQF_BYOWNER = 0,8,1,0 %;   
macro UTIL$V_CQF_ACCESSED = 0,9,1,0 %;  
macro UTIL$V_CQF_ATTRIBUTES = 0,10,1,0 %; 
macro UTIL$V_CQF_UPDATE_DATA = 0,11,1,0 %; 
macro UTIL$R_QF_OVERLAY2 = 0,0,32,0 %;
macro UTIL$V_CQF_ASSIGNED = 0,0,12,0 %;
literal UTIL$S_CQF_ASSIGNED = 12;
macro UTIL$V_CQF_UNASSIGNED = 0,12,20,0 %;
literal UTIL$S_CQF_UNASSIGNED = 20;

literal UTIL$K_CQF_UNSPECIFIED = 0;
literal UTIL$K_CQF_SHORT = 1;
literal UTIL$K_CQF_LONG = 2;
literal UTIL$K_CQF_CONDENSED = 1;
literal UTIL$K_CQF_EXPANDED = 2;
literal UTIL$K_CQF_MAX_FORM = 2;

literal LIB$M_CQF_CONFIRM = %X'1';
literal LIB$M_CQF_EXCLUDE = %X'2';
literal LIB$M_CQF_BEFORE = %X'4';
literal LIB$M_CQF_SINCE = %X'8';
literal LIB$M_CQF_CREATED = %X'10';
literal LIB$M_CQF_MODIFIED = %X'20';
literal LIB$M_CQF_EXPIRED = %X'40';
literal LIB$M_CQF_BACKUP = %X'80';
literal LIB$M_CQF_BYOWNER = %X'100';
literal LIB$S_CQUALS = 4;
macro LIB$R_FLAGS_OVERLAY = 0,0,32,0 %;
macro LIB$L_QUALIFIER_FLAGS = 0,0,32,0 %;
literal LIB$S_QUALIFIER_FLAGS = 4;
macro LIB$V_CQF_CONFIRM = 0,0,1,0 %;    
macro LIB$V_CQF_EXCLUDE = 0,1,1,0 %;    
macro LIB$V_CQF_BEFORE = 0,2,1,0 %;     
macro LIB$V_CQF_SINCE = 0,3,1,0 %;      
macro LIB$V_CQF_CREATED = 0,4,1,0 %;    
macro LIB$V_CQF_MODIFIED = 0,5,1,0 %;   
macro LIB$V_CQF_EXPIRED = 0,6,1,0 %;    
macro LIB$V_CQF_BACKUP = 0,7,1,0 %;     
macro LIB$V_CQF_BYOWNER = 0,8,1,0 %;    
macro LIB$R_QF_OVERLAY2 = 0,0,32,0 %;
macro LIB$V_CQF_ASSIGNED = 0,0,9,0 %;
literal LIB$S_CQF_ASSIGNED = 9;
macro LIB$V_CQF_UNASSIGNED = 0,9,23,0 %;
literal LIB$S_CQF_UNASSIGNED = 23;

 

literal LIB$M_DCFACC = %X'7';
literal LIB$M_DCFTYP = %X'F8';
literal LIB$S_LIB$B_DCF_OPERAND = 1;
macro LIB$V_DCFACC = 0,0,3,0 %;
literal LIB$S_DCFACC = 3;               
macro LIB$V_DCFTYP = 0,3,5,0 %;
literal LIB$S_DCFTYP = 5;               

literal LIB$K_DCFACC_R = 1;             
literal LIB$K_DCFACC_M = 2;             
literal LIB$K_DCFACC_W = 3;             
literal LIB$K_DCFACC_A = 4;             
literal LIB$K_DCFACC_V = 5;             
literal LIB$K_DCFACC_B = 6;             

literal LIB$K_DCFTYP_B = 1;             
literal LIB$K_DCFTYP_W = 2;             
literal LIB$K_DCFTYP_L = 3;             
literal LIB$K_DCFTYP_Q = 4;             
literal LIB$K_DCFTYP_O = 5;             
literal LIB$K_DCFTYP_F = 6;             
literal LIB$K_DCFTYP_D = 7;             
literal LIB$K_DCFTYP_G = 8;             
literal LIB$K_DCFTYP_H = 9;             

literal LIB$K_DCFOPR_AB = 8;
literal LIB$K_DCFOPR_RB = 9;
literal LIB$K_DCFOPR_MB = 10;
literal LIB$K_DCFOPR_WB = 11;
literal LIB$K_DCFOPR_VB = 12;
literal LIB$K_DCFOPR_BB = 13;
literal LIB$K_DCFOPR_AW = 16;
literal LIB$K_DCFOPR_RW = 17;
literal LIB$K_DCFOPR_MW = 18;
literal LIB$K_DCFOPR_WW = 19;
literal LIB$K_DCFOPR_VW = 20;
literal LIB$K_DCFOPR_BW = 21;
literal LIB$K_DCFOPR_AL = 24;
literal LIB$K_DCFOPR_RL = 25;
literal LIB$K_DCFOPR_ML = 26;
literal LIB$K_DCFOPR_WL = 27;
literal LIB$K_DCFOPR_VL = 28;
literal LIB$K_DCFOPR_BL = 29;
literal LIB$K_DCFOPR_AQ = 32;
literal LIB$K_DCFOPR_RQ = 33;
literal LIB$K_DCFOPR_MQ = 34;
literal LIB$K_DCFOPR_WQ = 35;
literal LIB$K_DCFOPR_VQ = 36;
literal LIB$K_DCFOPR_AO = 40;
literal LIB$K_DCFOPR_RO = 41;
literal LIB$K_DCFOPR_MO = 42;
literal LIB$K_DCFOPR_WO = 43;
literal LIB$K_DCFOPR_VO = 44;
literal LIB$K_DCFOPR_AF = 48;
literal LIB$K_DCFOPR_RF = 49;
literal LIB$K_DCFOPR_MF = 50;
literal LIB$K_DCFOPR_WF = 51;
literal LIB$K_DCFOPR_VF = 52;
literal LIB$K_DCFOPR_AD = 56;
literal LIB$K_DCFOPR_RD = 57;
literal LIB$K_DCFOPR_MD = 58;
literal LIB$K_DCFOPR_WD = 59;
literal LIB$K_DCFOPR_VD = 60;
literal LIB$K_DCFOPR_AG = 64;
literal LIB$K_DCFOPR_RG = 65;
literal LIB$K_DCFOPR_MG = 66;
literal LIB$K_DCFOPR_WG = 67;
literal LIB$K_DCFOPR_VG = 68;
literal LIB$K_DCFOPR_AH = 72;
literal LIB$K_DCFOPR_RH = 73;
literal LIB$K_DCFOPR_MH = 74;
literal LIB$K_DCFOPR_WH = 75;
literal LIB$K_DCFOPR_VH = 76;
literal LIB$K_DCFOPR_END = 0;

 

literal LIB$K_MONTH_NAME = 0;           
literal LIB$K_MONTH_NAME_ABB = 3;       
literal LIB$K_WEEKDAY_NAME = 6;         
literal LIB$K_WEEKDAY_NAME_ABB = 9;     
literal LIB$K_MERIDIEM_INDICATOR = 12;  
literal LIB$K_OUTPUT_FORMAT = 1;        
literal LIB$K_INPUT_FORMAT = 2;         
literal LIB$K_RELATIVE_DAY_NAME = 15;   
literal LIB$K_FORMAT_MNEMONICS = 18;    
literal LIB$K_LANGUAGE = 4;             

literal LIB$K_MONTH_OF_YEAR = 1;        
literal LIB$K_DAY_OF_YEAR = 2;          
literal LIB$K_HOUR_OF_YEAR = 3;         
literal LIB$K_MINUTE_OF_YEAR = 4;       
literal LIB$K_SECOND_OF_YEAR = 5;       
literal LIB$K_DAY_OF_MONTH = 6;         
literal LIB$K_HOUR_OF_MONTH = 7;        
literal LIB$K_MINUTE_OF_MONTH = 8;      
literal LIB$K_SECOND_OF_MONTH = 9;      
literal LIB$K_DAY_OF_WEEK = 10;         
literal LIB$K_HOUR_OF_WEEK = 11;        
literal LIB$K_MINUTE_OF_WEEK = 12;      
literal LIB$K_SECOND_OF_WEEK = 13;      
literal LIB$K_HOUR_OF_DAY = 14;         
literal LIB$K_MINUTE_OF_DAY = 15;       
literal LIB$K_SECOND_OF_DAY = 16;       
literal LIB$K_MINUTE_OF_HOUR = 17;      
literal LIB$K_SECOND_OF_HOUR = 18;      
literal LIB$K_SECOND_OF_MINUTE = 19;    
literal LIB$K_JULIAN_DATE = 20;         
literal LIB$K_DELTA_WEEKS = 21;         
literal LIB$K_DELTA_DAYS = 22;          
literal LIB$K_DELTA_HOURS = 23;         
literal LIB$K_DELTA_MINUTES = 24;       
literal LIB$K_DELTA_SECONDS = 25;       
literal LIB$K_DELTA_WEEKS_F = 26;       
literal LIB$K_DELTA_DAYS_F = 27;        
literal LIB$K_DELTA_HOURS_F = 28;       
literal LIB$K_DELTA_MINUTES_F = 29;     
literal LIB$K_DELTA_SECONDS_F = 30;     
literal LIB$K_MAX_OPERATION = 31;       

literal LIB$M_TIME_FIELDS = %X'1';
literal LIB$M_DATE_FIELDS = %X'2';
macro DT_PRINT_FIELDS = 0,0,8,0 %;
literal LIB$S_DT_PRINT_FIELDS = 1;
macro LIB$V_TIME_FIELDS = 0,0,1,0 %;    
macro LIB$V_DATE_FIELDS = 0,1,1,0 %;    

literal LIB$M_YEAR = %X'1';
literal LIB$M_MONTH = %X'2';
literal LIB$M_DAY = %X'4';
literal LIB$M_HOUR = %X'8';
literal LIB$M_MINUTE = %X'10';
literal LIB$M_SECOND = %X'20';
literal LIB$M_HUNDREDTHS = %X'40';
macro DT_DEFAULT_FIELDS = 0,0,8,0 %;
literal LIB$S_DT_DEFAULT_FIELDS = 1;
macro LIB$V_YEAR = 0,0,1,0 %;           
macro LIB$V_MONTH = 0,1,1,0 %;          
macro LIB$V_DAY = 0,2,1,0 %;            
macro LIB$V_HOUR = 0,3,1,0 %;           
macro LIB$V_MINUTE = 0,4,1,0 %;         
macro LIB$V_SECOND = 0,5,1,0 %;         
macro LIB$V_HUNDREDTHS = 0,6,1,0 %;     

 
literal LIB$K_PROC_VALUE_NULL = 0;
literal LIB$K_INVO_HANDLE_NULL = 0;
literal LIBICB$K_INVO_HANDLE_SIZE = 4;
literal LIBICB$K_INVO_CONTEXT_VERSION = 1;
literal LIBICB$M_FFLAGS_BITS = %X'FFFFFF';
literal LIBICB$M_EXCEPTION_FRAME = %X'1';
literal LIBICB$M_AST_FRAME = %X'2';
literal LIBICB$M_BOTTOM_OF_STACK = %X'4';
literal LIBICB$M_BASE_FRAME = %X'8';
literal LIBICB$K_INVO_CONTEXT_BLK_SIZE = 544;
literal LIBICB$S_INVO_CONTEXT_BLK = 544;

macro LIBICB$R_HDR = 0,0,0,0 %;
literal LIBICB$S_HDR = 8;
macro LIBICB$Q_HDR_QUAD = 0,0,0,1 %;
literal LIBICB$S_HDR_QUAD = 8;
macro LIBICB$R_HDR_DESC = 0,0,0,0 %;
literal LIBICB$S_HDR_DESC = 8;
macro LIBICB$L_CONTEXT_LENGTH = 0,0,32,0 %;
macro LIBICB$R_FRAMEFLAGS = 4,0,24,0 %;
literal LIBICB$S_FRAMEFLAGS = 3;
macro LIBICB$V_FFLAGS_BITS = 4,0,24,0 %;
macro LIBICB$R_FFLAGS_DESC = 4,0,8,0 %;
literal LIBICB$S_FFLAGS_DESC = 1;
macro LIBICB$V_EXCEPTION_FRAME = 4,0,1,0 %;
macro LIBICB$V_AST_FRAME = 4,1,1,0 %;
macro LIBICB$V_BOTTOM_OF_STACK = 4,2,1,0 %;
macro LIBICB$V_BASE_FRAME = 4,3,1,0 %;
macro LIBICB$B_BLOCK_VERSION = 7,0,8,0 %;

macro LIBICB$PH_PROCEDURE_DESCRIPTOR = 8,0,0,1 %;
literal LIBICB$S_PROCEDURE_DESCRIPTOR = 8;

macro LIBICB$Q_PROGRAM_COUNTER = 16,0,0,1 %;
literal LIBICB$S_PROGRAM_COUNTER = 8;

macro LIBICB$Q_PROCESSOR_STATUS = 24,0,0,1 %;
literal LIBICB$S_PROCESSOR_STATUS = 8;

macro LIBICB$Q_IREG = 32,0,0,1 %;
literal LIBICB$S_IREG = 248;
macro LIBICB$Q_FREG = 280,0,0,1 %;
literal LIBICB$S_FREG = 248;

macro LIBICB$R_SYSTEM_SPECIFIC = 528,0,0,0 %;
literal LIBICB$S_SYSTEM_SPECIFIC = 16;
macro LIBICB$PH_CHFCTX_ADDR = 528,0,0,1 %;
literal LIBICB$S_CHFCTX_ADDR = 8;
macro LIBICB$Q_SYSTEM_DEFINED = 528,0,0,1 %;
literal LIBICB$S_SYSTEM_DEFINED = 16;

 

literal LIB$K_VM_FIRST_FIT = 1;         
literal LIB$K_VM_QUICK_FIT = 2;         
literal LIB$K_VM_FREQ_SIZES = 3;        
literal LIB$K_VM_FIXED = 4;             
literal LIB$M_VM_BOUNDARY_TAGS = 1;     
literal LIB$M_VM_GET_FILL0 = 2;         
literal LIB$M_VM_GET_FILL1 = 4;         
literal LIB$M_VM_FREE_FILL0 = 8;        
literal LIB$M_VM_FREE_FILL1 = 16;       
literal LIB$M_VM_EXTEND_AREA = 32;      
literal LIB$M_VM_NO_EXTEND = 64;        
literal LIB$M_VM_TAIL_LARGE = 128;      

 

literal LICENSE_FACILITY = 2708;

literal LICENSE$_SYSMGR = 177505059;

literal LICENSE$_NOAUTH = 177507058;
literal LICENSE$_NOLICENSE = 177507860;
literal LICENSE$_EXCEEDED = 177507868;
literal LICENSE$_NOT_STARTED = 177507876;
literal LICENSE$_INVALID_DATE = 177507884;
literal LICENSE$_INVALID_VERSION = 177507892;
literal LICENSE$_TERMINATED = 177507900;
literal LICENSE$_NOTINRSRVLIST = 177507908;

literal LICENSE$_BADPARAM = 177507916;
literal LICENSE$_ILLPRODUCER = 177507924;
literal LICENSE$_WRONUMARG = 177507932;
literal LICENSE$_INVALID_HW_ID = 177507940;
literal LICENSE$_INVALID_TOKEN = 177507948;

literal LICENSE$_USER_MODE = 177507956;

 

literal LOGIN$_FACILITY = 211;
literal LGI$_JBCMIXUP = 13860876;
literal LGI$_LOGDISABL = 13860884;
literal LGI$_EXQUOTA = 13860892;
literal LGI$_CLIFAIL = 13860900;
literal LGI$_CLIPROT = 13860908;
literal LGI$_CLISYMTBL = 13860916;
literal LGI$_NOTVALID = 13860924;
literal LGI$_FILEACC = 13860932;
literal LGI$_USERAUTH = 13860940;
literal LGI$_INPUTERR = 13860948;
literal LGI$_OUTPUTERR = 13860956;
literal LGI$_CMDINPUT = 13860964;
literal LGI$_OPENIN = 13860968;
literal LGI$_CAPTIVE = 13860980;
literal LGI$_BADHOUR = 13860988;
literal LGI$_USEREXC = 13860996;
literal LGI$_ACNTEXC = 13861004;
literal LGI$_BADDAY = 13861012;
literal LGI$_RESTRICT = 13861020;
literal LGI$_NETUAFACC = 13861028;
literal LGI$_SYSPWDTMO = 13861036;
literal LGI$_EVADE = 13861044;
literal LGI$_DEFCLI = 13861052;
literal LGI$_ACNTEXPIR = 13861060;
literal LGI$_PWDEXPIR = 13861068;
literal LGI$_CONNERR = 13861074;
literal LGI$_DISRECONNECT = 13861084;
literal LGI$_CLITBLFAIL = 13861092;
literal LGI$_CLITBLPROT = 13861100;
literal LGI$_NOSUCHUSER = 13861108;
literal LGI$_INVPWD = 13861116;
literal LGI$_EXLICENSE = 13861124;
literal LGI$_DISUSER = 13861132;
literal LGI$_AUTOLOGIN = 13861140;
literal LGI$_INVINPUT = 13861148;
literal LGI$_NOTMODEM = 13861156;
literal LGI$_FRCPWDERR = 13861164;
literal LGI$_LICCHKINV = 13861172;
literal LGI$_FISFAIL = 13861180;
literal LGI$_DECWCAPTIVE = 13861188;
literal LGI$_NOVAXCLUSTER = 13861196;
literal LGI$_FRCPWDHLP = 13861203;
literal LGI$_LICNOTREQ = 13861209;
literal LGI$_LOGOPRCON = 13861217;
literal LGI$_LICCHKVAL = 13861225;

literal LGI$_LOGDISABLOPR = 13861267;
literal LGI$_SKIPRELATED = 13861665;    

literal LGI$_PWD2NOTSET = 13863266;
literal LGI$_SYSPWDERR = 13863274;
literal LGI$_COUNTWRONG = 13864068;
literal LGI$_RDBACCERR = 13864076;
literal LGI$_NOTALLPRIV = 13864084;
literal LGI$_NOEXTAUTH = 13864092;
literal LGI$_NOLOCAUTH = 13864100;

literal LGI$_LOSTDEC = 13864108;
literal LGI$_LOSTLGI = 13864116;
literal LGI$_NOSYSPWD = 13864124;
literal LGI$_WRONGPRINCIPAL = 13864132;
literal LGI$_LOSTSYNC = 13864140;

literal LGI$_NULLNETUSER = 13864148;
literal LGI$_DECWRESTART = 13864156;

literal LGI$_JOBTERM = 13869057;
literal LGI$_JOBLOGOUT = 13869065;
literal LGI$_PROCEND = 13869073;
literal LGI$_ACNTINFO = 13869081;
literal LGI$_ACNTINFO1 = 13869089;
literal LGI$_ACNTINFO2 = 13869097;
literal LGI$_ACNTINFO3 = 13869105;
literal LGI$_ACNTINFO4 = 13869113;
literal LGI$_ACNTINFO5 = 13869121;
literal LGI$_PASEXP = 13869129;
literal LGI$_PRIPASEXP = 13869137;
literal LGI$_SECPASEXP = 13869145;
literal LGI$_SETPAS = 13869153;
literal LGI$_SETPRIPAS = 13869161;
literal LGI$_SETSECPAS = 13869169;
literal LGI$_EXPSETPAS = 13869177;
literal LGI$_PRISETPAS = 13869185;
literal LGI$_SECSETPAS = 13869193;

literal LGI$_USERNAME = 13869201;
literal LGI$_PASSWORD = 13869209;
literal LGI$_VAXHELLO = 13869217;
literal LGI$_ALPHAHELLO = 13869225;
literal LGI$_ONNODE = 13869233;
literal LGI$_LASINTLOG = 13869241;
literal LGI$_LASNOINTLOG = 13869249;
literal LGI$_LOGFAILS = 13869257;
literal LGI$_NEWMAILCNT = 13869265;
literal LGI$_NEWMAIL = 13869273;
literal LGI$_DISCONPROC = 13869281;
literal LGI$_DISCONPROCS = 13869289;
literal LGI$_DISCONHDR = 13869297;
literal LGI$_DISCONTXT = 13869305;
literal LGI$_CONTOTERM = 13869313;
literal LGI$_CONTOPROC = 13869321;
literal LGI$_YESRESP = 13869329;
literal LGI$_NONERESP = 13869337;
literal LGI$_TERMCONN = 13869345;
literal LGI$_MONDAY = 13869353;
literal LGI$_TUESDAY = 13869361;
literal LGI$_WEDNESDAY = 13869369;
literal LGI$_THURSDAY = 13869377;
literal LGI$_FRIDAY = 13869385;
literal LGI$_SATURDAY = 13869393;
literal LGI$_SUNDAY = 13869401;

literal LGI$_PWDSYNCH = 13869409;
literal LGI$_PWDNOSYNCH = 13869417;
literal LGI$_LOCLOGIN = 13869425;

literal LGI$_PROCSTEP = 13869433;
literal LGI$_SUBPROGRAM = 13869441;
literal LGI$_OLDPOLICY = 13869449;
literal LGI$_PWDSYNCHPRI = 13869457;
literal LGI$_PWDSYNCHSEC = 13869465;
literal LGI$_PWDNOSYNCHPRI = 13869473;
literal LGI$_PWDNOSYNCHSEC = 13869481;

literal LGI$_OLDPASS = 13869489;
literal LGI$_NEWPASS = 13869497;
literal LGI$_CHKPASS = 13869505;

literal LGI$_IA64HELLO = 13869513;

 

literal MAIL$_FACILITY = 126;
literal MAIL$_CODERR = 8290316;
literal MAIL$_UPGRADE = 8290324;
literal MAIL$_UAFGETERR = 8290330;
literal MAIL$_UAFOPNERR = 8290338;
literal MAIL$_NOSUCHUSR = 8290346;
literal MAIL$_NOTREADIN = 8290354;
literal MAIL$_LOGLINK = 8290362;
literal MAIL$_CREPRIJOB = 8290370;
literal MAIL$_SENDERR = 8290378;
literal MAIL$_NOMOREMSG = 8290386;
literal MAIL$_NOMSGS = 8290394;
literal MAIL$_USERSPEC = 8290402;
literal MAIL$_SENDABORT = 8290410;
literal MAIL$_EDITPROC = 8290418;
literal MAIL$_INVCMD = 8290426;
literal MAIL$_NOTFOUND = 8290434;
literal MAIL$_NETIOERR = 8290442;
literal MAIL$_USERDSABL = 8290450;
literal MAIL$_FORWLOOP = 8290458;
literal MAIL$_NAMTOOBIG = 8290466;
literal MAIL$_ILLCHAR = 8290474;
literal MAIL$_DATIMUSED = 8290482;
literal MAIL$_NOTISAM = 8290490;
literal MAIL$_DELMSG = 8290498;
literal MAIL$_DELWASTE = 8290506;
literal MAIL$_NOFOLDER = 8290514;
literal MAIL$_NOTEXIST = 8290522;
literal MAIL$_NOTSUBDIR = 8290530;
literal MAIL$_ILLSUBDIR = 8290538;
literal MAIL$_ILLFOLNAM = 8290546;
literal MAIL$_NOMSGPRI = 8290554;
literal MAIL$_ALTPRIJOB = 8290562;
literal MAIL$_ILLPERNAM = 8290570;
literal MAIL$_NOSUCHUSRAT = 8290578;
literal MAIL$_SENDERRAT = 8290586;
literal MAIL$_CONABORT = 8290594;
literal MAIL$_NOTCALEDT = 8290602;
literal MAIL$_FILECONFUSED = 8290610;
literal MAIL$_CAPTIVE = 8290618;
literal MAIL$_IVPROTVAL = 8290626;
literal MAIL$_RECTOBIG = 8290634;
literal MAIL$_ILLCTXADR = 8290642;
literal MAIL$_WRONGCTX = 8290650;
literal MAIL$_FAILGETVM = 8290658;
literal MAIL$_INVITMCOD = 8290666;
literal MAIL$_MISREQITM = 8290674;
literal MAIL$_INVITMLEN = 8290682;
literal MAIL$_FILEOPEN = 8290690;
literal MAIL$_NOFILEOPEN = 8290698;
literal MAIL$_CONITMCOD = 8290706;
literal MAIL$_NOMORECTX = 8290714;
literal MAIL$_WRONGFILE = 8290722;
literal MAIL$_ILLTPRT = 8290730;
literal MAIL$_INVITMVAL = 8290738;
literal MAIL$_ERACTED = 8290746;
literal MAIL$_FORMSG = 8290754;
literal MAIL$_NOTFORMSG = 8290762;
literal MAIL$_ERRACTRNS = 8290770;
literal MAIL$_BADVALUE = 8290778;
literal MAIL$_CLOSEDEL = 8290786;
literal MAIL$_FILNOTDEL = 8290794;
literal MAIL$_OPENIN = 8290802;
literal MAIL$_OPENOUT = 8290810;
literal MAIL$_PARSEFAIL = 8290818;
literal MAIL$_READERR = 8290826;
literal MAIL$_SEARCHFAIL = 8290834;
literal MAIL$_SYSERROR = 8290842;
literal MAIL$_NOSYSNAM = 8290850;
literal MAIL$_NOSYSPRV = 8290858;
literal MAIL$_PROTOCOL = 8290866;
literal MAIL$_NOACCPTMSG = 8290874;
literal MAIL$_DOTSPACK = 8290882;
literal MAIL$_DOTSUNPACK = 8290890;
literal MAIL$_NOUSERSPEC = 8290898;
literal MAIL$_INVRANGE = 8290906;
literal MAIL$_LISTTOOLONG = 8290914;
literal MAIL$_SELECTED = 8306307;
literal MAIL$_DELMSGS = 8306315;
literal MAIL$_CVTFILE = 8306323;
literal MAIL$_DELSPACE = 8306331;
literal MAIL$_NEWFOLDER = 8306339;
literal MAIL$_RECLPLSWAIT = 8306347;
literal MAIL$_REENTER = 8306355;
literal MAIL$_DELETED = 8306363;
literal MAIL$_FFMTMSG = 8306371;
literal MAIL$_MOREMSG = 8314304;
literal MAIL$_DIRHD0 = 8314312;
literal MAIL$_DIRHD10 = 8314320;
literal MAIL$_DIRHD20 = 8314328;
literal MAIL$_DIRDEL10 = 8314336;
literal MAIL$_ISUB10 = 8314344;
literal MAIL$_ISUB20 = 8314352;
literal MAIL$_ISUB30 = 8314360;
literal MAIL$_PRESRET = 8314368;
literal MAIL$_YOUHAVENEW = 8314376;
literal MAIL$_MAIL10 = 8314384;
literal MAIL$_MAIL20 = 8314392;
literal MAIL$_WANTOSEND = 8314400;
literal MAIL$_NOTIFY10 = 8314408;
literal MAIL$_NOTIFY20 = 8314416;
literal MAIL$_JOBENTERED = 8314424;
literal MAIL$_SHOW10 = 8314432;
literal MAIL$_SHOW20 = 8314440;
literal MAIL$_SHOW30 = 8314448;
literal MAIL$_SHOW40 = 8314456;
literal MAIL$_SHOW50 = 8314464;
literal MAIL$_SHOW60 = 8314472;
literal MAIL$_SHOW70 = 8314480;
literal MAIL$_SHOW80 = 8314488;
literal MAIL$_SHOW90 = 8314496;
literal MAIL$_SHOW100 = 8314504;
literal MAIL$_SHOW110 = 8314512;
literal MAIL$_EDIT10 = 8314520;
literal MAIL$_INFO10 = 8314528;
literal MAIL$_INFO20 = 8314536;
literal MAIL$_INFO30 = 8314544;
literal MAIL$_SEND = 8314552;
literal MAIL$_REPLY = 8314560;
literal MAIL$_SHOW120 = 8314568;
literal MAIL$_SHOW130 = 8314576;
literal MAIL$_INFO50 = 8314584;
literal MAIL$_SHOW140 = 8314592;
literal MAIL$_SHOW150 = 8314600;
literal MAIL$_SHOW160 = 8314608;
literal MAIL$_ISUB50 = 8314616;
literal MAIL$_MAIL30 = 8314624;
literal MAIL$_RETCONT = 8314632;
literal MAIL$_NEWSEQ = 8314640;
literal MAIL$_MAILDIR = 8314648;
literal MAIL$_MAILFILE = 8314656;
literal MAIL$_MAILFOLDER = 8314664;
literal MAIL$_MAIL40 = 8314672;
literal MAIL$_CRENEWFOLD = 8314680;
literal MAIL$_NONEWMAIL = 8314688;
literal MAIL$_SHOWKEY10 = 8314696;
literal MAIL$_SHOWKEY20 = 8314704;
literal MAIL$_SHOWKEY30 = 8314712;
literal MAIL$_SHOWKEY40 = 8314720;
literal MAIL$_SHOWKEY50 = 8314728;
literal MAIL$_SHOWKEY60 = 8314736;
literal MAIL$_SHOWKEY70 = 8314744;
literal MAIL$_NOTIFY30 = 8314752;
literal MAIL$_NOTIFY40 = 8314760;
literal MAIL$_NOPARENT = 8314768;
literal MAIL$_FILEMPTY = 8314776;
literal MAIL$_NONEFOUND = 8314784;
literal MAIL$_NOMOREREC = 8314792;      

literal MAIL$_USERFWD = 8314800;
literal MAIL$_PROMPT = 8314808;
literal MAIL$_INFO12 = 8314816;
literal MAIL$_INFO14 = 8314824;
literal MAIL$_INFO16 = 8314832;
literal MAIL$_INFO18 = 8314840;
literal MAIL$_CRENEWFILE = 8314848;
literal MAIL$_SHOW15 = 8314856;
literal MAIL$_SHOW25 = 8314864;
literal MAIL$_SHOW35 = 8314872;
literal MAIL$_FORWARD = 8314880;
literal MAIL$_SHOW200 = 8314888;
literal MAIL$_SHOW205 = 8314896;
literal MAIL$_SHOW210 = 8314904;
literal MAIL$_SHOW215 = 8314912;
literal MAIL$_CLOSEIN = 8314920;
literal MAIL$_CLOSEOUT = 8314928;
literal MAIL$_INVQUAVAL = 8314936;
literal MAIL$_WRITEERR = 8314944;
literal MAIL$_SHOW220 = 8314952;
literal MAIL$_SHOW225 = 8314960;
literal MAIL$_HPROMPT = 8314968;
literal MAIL$_SHOWNOSIG = 8314976;
literal MAIL$_SHOWSIG = 8314984;
literal MAIL$_BADLOGVAL = 8314992;
literal MAIL$_MSGTEXT = 8322305;
literal MAIL$_MSGINFO = 8322313;
literal MAIL$_MSGSENT = 8322321;
literal MAIL$_MSGSENTAT = 8322329;
literal MAIL$_YES = 8322337;
literal MAIL$_COPIEDR = 8322345;
literal MAIL$_CREATED = 8322353;
literal MAIL$_RENAMED = 8322361;
literal MAIL$_TEXT = 8322369;

literal MAIL$_MAILFOLD = 8322377;
literal MAIL$_WASTEFOLD = 8322385;
literal MAIL$_ILLEDTNAM = 8322394;
literal MAIL$_KEYNOTDEF = 8322402;
literal MAIL$_INVKEYNAM = 8322410;

 

literal MME_FACILITY = 3439;

literal MME$_NO_MME = 225411875;

literal MME$_BADARGIGN = 225412672;

literal MME$_RTNNOTDECL = 225415074;

literal MME$_BADMSGTYPE = 225415082;

literal MME$_FACMISMATCH = 225415090;

literal MME$_MBXFAOERR = 225415098;

literal MME$_MBXASNERR = 225415106;

literal MME$_MBXWRTERR = 225415114;

literal MME$_ASTNOTQED = 225415122;

literal MME$_AVRFAOERR = 225415130;

literal MME$_AVRENQERR = 225415138;

literal MME$_AVRASNERR = 225415146;

literal MME$_GETNAMERR = 225415154;

literal MME$_UICMISMATCH = 225415162;

literal MME$_MBXDVIERR = 225415170;

literal MME$_JPIUICERR = 225415178;

literal MME$_FINTERNAL = 225419076;

literal MME$_MBXRDERR = 225419084;

literal MME$_POSTMBXERR = 225419092;

literal MME$_MEMALLERR = 225419100;

 

literal MOUN$_FACILITY = 114;
literal MOUN$_BADDATCHK = 7503884;
literal MOUN$_BADDENS = 7503892;
literal MOUN$_BADPRO = 7503900;
literal MOUN$_BADUIC = 7503908;
literal MOUN$_CONFQUAL = 7503916;
literal MOUN$_ILLOPT = 7503924;
literal MOUN$_NONLOCAL = 7503932;
literal MOUN$_NOTRAN = 7503940;
literal MOUN$_UNKDEV = 7503948;
literal MOUN$_BADLABELQ = 7503956;
literal MOUN$_VALCNVERR = 7503964;
literal MOUN$_D3 = 7503972;
literal MOUN$_D4 = 7503980;
literal MOUN$_D5 = 7503988;

literal MOUN$_LOGNAME = 7503996;
literal MOUN$_MAXDEV = 7504004;
literal MOUN$_MAXLAB = 7504012;
literal MOUN$_NOACPDEV = 7504020;
literal MOUN$_MOUVOL = 7504028;
literal MOUN$_INCOMPACP = 7504036;
literal MOUN$_INCOMPAT = 7504044;
literal MOUN$_VOLALRMNT = 7504052;
literal MOUN$_BADVOL1 = 7504060;
literal MOUN$_ILLDENS = 7504068;
literal MOUN$_NOTGENDEV = 7504076;
literal MOUN$_DUPDEVSPC = 7504084;
literal MOUN$_ILLANSIBS = 7504092;
literal MOUN$_ACCERR = 7504100;
literal MOUN$_FILNOTEXP = 7504108;
literal MOUN$_NOPRIV = 7504116;
literal MOUN$_NOTANSI = 7504124;
literal MOUN$_NOTLABEL = 7504132;
literal MOUN$_NOTVOLSET = 7504140;
literal MOUN$_NOTRELVOL = 7504148;
literal MOUN$_OFFLINE = 7504156;
literal MOUN$_IOERROR = 7504164;
literal MOUN$_ILLQUAL = 7504172;
literal MOUN$_WRITLCK = 7504180;
literal MOUN$_RECGTRBL = 7504188;
literal MOUN$_ACPNAME = 7504196;
literal MOUN$_ACPTIME = 7504204;
literal MOUN$_AQBTIME = 7504212;
literal MOUN$_BADACP = 7504220;
literal MOUN$_BADEBC = 7504228;
literal MOUN$_BADOVR = 7504236;
literal MOUN$_DEVICES = 7504244;
literal MOUN$_SZTOOBIG = 7504252;
literal MOUN$_INCONSDEV = 7504260;
literal MOUN$_DEVCOUNT = 7504268;
literal MOUN$_VOLINSET = 7504276;
literal MOUN$_RVN1NOTMT = 7504284;
literal MOUN$_SETLIMIT = 7504292;
literal MOUN$_DUPVOLNAM = 7504300;
literal MOUN$_HOMBLKCHK = 7504308;
literal MOUN$_DUPRVN = 7504316;
literal MOUN$_BADCACHE = 7504324;
literal MOUN$_UNRELVOL = 7504332;
literal MOUN$_MBXCRERR = 7504340;
literal MOUN$_MBXRDERR = 7504348;
literal MOUN$_REPLYERR = 7504356;
literal MOUN$_OPRSNDERR = 7504364;
literal MOUN$_OPRABORT = 7504372;
literal MOUN$_BATCHNOOPR = 7504380;
literal MOUN$_MOUNEWVOL = 7504388;
literal MOUN$_REMOUVOL = 7504396;
literal MOUN$_OBSOLETE = 7504404;
literal MOUN$_VOLOERR = 7504412;
literal MOUN$_BADINIT = 7504420;
literal MOUN$_DISMAL = 7504428;
literal MOUN$_INCONSHR = 7504436;
literal MOUN$_INCONPROT = 7504444;
literal MOUN$_INCONQUOTA = 7504452;
literal MOUN$_INCONOWNER = 7504460;
literal MOUN$_INCONWRITE = 7504468;
literal MOUN$_INCONFOR = 7504476;
literal MOUN$_NOVOLACC = 7504484;
literal MOUN$_NOFILACC = 7504492;
literal MOUN$_TAPEPOSLOST = 7504500;
literal MOUN$_BADSHADOW = 7504508;
literal MOUN$_NOSHDWMEM = 7504516;
literal MOUN$_INVSHDWMEM = 7504524;
literal MOUN$_SHDWCOPYREQ = 7504532;
literal MOUN$_SHADOWFAIL = 7504540;
literal MOUN$_SHDWINCVOL = 7504548;
literal MOUN$_NOTSHDWDEV = 7504556;
literal MOUN$_BADMDFMT = 7504564;
literal MOUN$_NOTACLU = 7504572;
literal MOUN$_NOALOCLASS = 7504580;
literal MOUN$_BADASNUNIT = 7504588;
literal MOUN$_BADDISP = 7504596;
literal MOUN$_BADUNDFAT = 7504604;
literal MOUN$_VOLTOOBIG = 7504612;
literal MOUN$_BADSECSYS = 7504620;
literal MOUN$_DEVBUSY = 7504628;
literal MOUN$_DEVDMT = 7504636;
literal MOUN$_BADREPLY = 7504644;
literal MOUN$_MMEABORT = 7504652;
literal MOUN$_NOSHADOW = 7504660;
literal MOUN$_NOTSHDWVU = 7504668;
literal MOUN$_NOSHADLIC = 7504676;
literal MOUN$_DIFVOLMNT = 7504684;
literal MOUN$_DEVSHAMEM = 7504692;
literal MOUN$_SHADSCB = 7504700;
literal MOUN$_NOODS1 = 7504708;
literal MOUN$_WRONGVU = 7504716;
literal MOUN$_DETSHADINCON = 7504724;
literal MOUN$_NOMASTER = 7504732;
literal MOUN$_XSMBRS = 7504740;
literal MOUN$_NOVUID = 7504748;
literal MOUN$_SHADUNSTABLE = 7504756;
literal MOUN$_INCONPOOL = 7504764;
literal MOUN$_DEVBUSYMOU = 7504772;
literal MOUN$_DEVBUSYMOUDSA = 7504780;
literal MOUN$_DEVBUSYDMT = 7504788;
literal MOUN$_DEVBUSYSYS = 7504796;
literal MOUN$_DEVBUSYVOL = 7504804;
literal MOUN$_DEVBUSYORB = 7504812;
literal MOUN$_DEVBUSYINVMOS = 7504820;
literal MOUN$_DEVBUSYINSET = 7504828;
literal MOUN$_NOTALLMEM = 7504836;
literal MOUN$_BADPOLICY = 7504844;
literal MOUN$_POLICYFAIL = 7504852;
literal MOUN$_SPARE = 7504860;
literal MOUN$_REQ_WBM_MERGE = 7504868;
literal MOUN$_REQ_WBM_FAIL = 7504876;
literal MOUN$_ACPNOTPRESENT = 7504884;
literal MOUN$_BADWINDOWS = 7504892;
literal MOUN$_NOCAPABILITY = 7504900;

literal MOUN$_HOMBLKBAD = 7507968;
literal MOUN$_IDXHDRBAD = 7507976;
literal MOUN$_MAPHDRBAD = 7507984;
literal MOUN$_IDXMAPERR = 7507992;
literal MOUN$_BITMAPERR = 7508000;
literal MOUN$_BADHOMBLK = 7508008;
literal MOUN$_WRTHOMBLK = 7508016;
literal MOUN$_QUOTAFAIL = 7508024;
literal MOUN$_BITMAPINV = 7508032;
literal MOUN$_WRITESCB = 7508040;
literal MOUN$_DISMPART = 7508048;
literal MOUN$_UNUSED = 7508056;
literal MOUN$_DISMOUNTD = 7508064;
literal MOUN$_VOLSHDWMEM = 7508072;
literal MOUN$_RMTMNTFAIL = 7508080;
literal MOUN$_MNTCLUFAIL = 7508088;
literal MOUN$_QUOTAFNF = 7508096;
literal MOUN$_CBSNOTSUPTD = 7508104;
literal MOUN$_CRELNM_FAILED = 7508112;
literal MOUN$_DENIGNORED = 7508120;
literal MOUN$_ALHOMERR = 7508128;
literal MOUN$_ALHOMINV = 7508136;
literal MOUN$_INCONSTRUCT = 7508144;
literal MOUN$_INCONSET = 7508152;
literal MOUN$_OLDSHDRIVER = 7508160;
literal MOUN$_POLICYWARN = 7508168;
literal MOUN$_INCONSIZE = 7508176;
literal MOUN$_OPT_WBM_MERGE = 7508184;
literal MOUN$_WBM_NOTSTARTED = 7508192;
literal MOUN$_OPTCAPABILITY = 7508200;

literal MOUN$_MOUNTED = 7512067;
literal MOUN$_VOLIDENT = 7512075;
literal MOUN$_WRITELOCK = 7512083;
literal MOUN$_REBUILD = 7512091;
literal MOUN$_OPRQST = 7512099;
literal MOUN$_OPREPLY = 7512107;
literal MOUN$_OPRQSTCAN = 7512115;
literal MOUN$_NOOPR = 7512123;
literal MOUN$_INVLDRESP = 7512131;
literal MOUN$_MOUNTDEV = 7512139;
literal MOUN$_VOLNAME = 7512147;
literal MOUN$_NODEVAVL = 7512155;
literal MOUN$_RPLYARRIVD = 7512163;
literal MOUN$_WRONGVOL = 7512171;
literal MOUN$_RQSTDON = 7512179;
literal MOUN$_VOLSTATUS = 7512187;
literal MOUN$_VOLSETSTS = 7512195;
literal MOUN$_REDCACHE = 7512203;
literal MOUN$_REBLDREQD = 7512211;
literal MOUN$_SHDWMEMSUCC = 7512219;
literal MOUN$_SHDWMEMCOPY = 7512227;
literal MOUN$_SHDWMEMFAIL = 7512235;
literal MOUN$_MOUNT = 7512243;          
literal MOUN$_WAITINGMNT = 7512251;
literal MOUN$_RMTMNTSUCC = 7512259;
literal MOUN$_SHDWMEMERGE = 7512267;
literal MOUN$_AUTOMEMSUCC = 7512275;
literal MOUN$_AUTOMEMCOPY = 7512283;
literal MOUN$_AUTOMEMERGE = 7512291;
literal MOUN$_MOUNTVOL = 7512299;
literal MOUN$_ANYSCRATCH = 7512307;
literal MOUN$_SCRATCHCOL = 7512315;
literal MOUN$_SCRATCHLOC = 7512323;
literal MOUN$_SCRCOLLOC = 7512331;
literal MOUN$_SUITDEV = 7512339;
literal MOUN$_DEVTYPE = 7512347;
literal MOUN$_DEVICE = 7512355;
literal MOUN$_MEDIANAME = 7512363;
literal MOUN$_CARTRIDGE = 7512371;
literal MOUN$_CARTSIDE = 7512379;
literal MOUN$_CDROM_ISO = 7512387;
literal MOUN$_CDROM_HS = 7512395;
literal MOUN$_WAITDEVRDY = 7512403;
literal MOUN$_NOTODS2 = 7512411;
literal MOUN$_SRCMBRADD = 7512419;
literal MOUN$_ISACPYTRGT = 7512427;
literal MOUN$_ISAMBR = 7512435;
literal MOUN$_DOSETVOL = 7512443;
literal MOUN$_RETSTATUS = 7512451;
literal MOUN$_SHDWMEMMCPY = 7512459;
literal MOUN$_SHDWNOMCPY = 7512467;

literal MOUN$_INVQUAVAL = 7515876;
literal MOUN$_DEVNOFE = 7515884;
literal MOUN$_VOLSETALRMNT = 7515892;
 

literal RBLD$_FACILITY = 1814;
literal RBLD$_NODEVICE = 118915082;
literal RBLD$_ADDERR = 118915090;
literal RBLD$_MODIFYERR = 118915098;
literal RBLD$_CLOSERR = 118915106;
literal RBLD$_LOCKERR = 118915114;
literal RBLD$_UNLOCKERR = 118915122;
literal RBLD$_MAXVOLS = 118915130;
literal RBLD$_ACCINDEXF = 118915138;
literal RBLD$_ACCBITMAP = 118915146;
literal RBLD$_ACCQFILE = 118915154;
literal RBLD$_QUOTARERR = 118915162;
literal RBLD$_BITMAPERR = 118915170;
literal RBLD$_READSCB = 118915178;
literal RBLD$_WRITESCB = 118915186;
literal RBLD$_WRTIBMAP = 118915194;
literal RBLD$_WRTBITMAP = 118915202;
literal RBLD$_MEMALLOC = 118915210;
literal RBLD$_HOMEBLOCK = 118915218;
literal RBLD$_SYSHEADER = 118915226;
literal RBLD$_ERRORS = 118915234;
literal RBLD$_SHADSCB = 118915242;
literal RBLD$_DUALLOC = 118915248;
literal RBLD$_HEADERERR = 118915256;
literal RBLD$_WRITEHDR = 118915264;
literal RBLD$_ERASEBLKS = 118915272;
literal RBLD$_VOLNOTPRESENT = 118915280;
literal RBLD$_INVBACKLINK = 118915288;
literal RBLD$_NOREBLDREQD = 118915299;
literal RBLD$_REBLDREQD = 118915307;
literal RBLD$_REBLDDONE = 118915313;

 
literal MSC$C_MSG = 0;                  
literal MSC$C_IND = 1;                  
literal MSC$C_MAXTYPE = 2;              
literal MSC$M_MAPPED = %X'1';
literal MSC$C_SANITY = 1234;
literal MSC$K_LENGTH = 40;              
literal MSC$C_LENGTH = 40;              
literal MSC$S_MSCDEF = 40;
macro MSC$B_TYPE = 0,0,8,0 %;           
macro MSC$R_FLAGS_OVERLAY = 1,0,8,0 %;
macro MSC$B_FLAGS = 1,0,8,0 %;          
macro MSC$R_FLAGS_BITS = 1,0,8,0 %;
macro MSC$V_MAPPED = 1,0,1,0 %;         
macro MSC$W_SANITY = 2,0,16,0 %;        
macro MSC$L_SIZE = 4,0,32,0 %;          
macro MSC$L_INDEX_OFF = 8,0,32,0 %;     
macro MSC$L_FAC_OFF = 12,0,32,0 %;      
macro MSC$L_TEXT_OFF = 16,0,32,0 %;     
macro MSC$L_SUBST_OFF = 20,0,32,0 %;    
literal MSC$S_MSCDEF1 = 10;
macro MSC$B_INDNAMLEN = 8,0,8,0 %;      
macro MSC$T_INDNAME = 9,0,8,0 %;        
 

literal MIDX$C_BKTSIZ = 512;            
literal MIDX$C_SANITY = 123;
literal MIDX$K_LENGTH = 8;              
literal MIDX$C_LENGTH = 8;              
literal MIDX$K_ENTRIES = 8;             
literal MIDX$C_ENTRIES = 8;             
literal MIDX$S_MIDXDEF = 8;
macro MIDX$W_SIZE = 0,0,16,0 %;         
macro MIDX$B_SANITY = 2,0,8,0 %;        

 

literal MREC$C_ENGLISH = 0;             
literal MREC$C_GERMAN = 1;              
literal MREC$C_FRENCH = 2;              
literal MREC$K_FIXEDLEN = 9;            
literal MREC$C_FIXEDLEN = 9;            
literal MREC$S_MRECDEF = 11;
macro MREC$W_SIZE = 0,0,16,0 %;         
macro MREC$B_TYPE = 2,0,8,0 %;          
macro MREC$B_FLAGS = 3,0,8,0 %;         
macro MREC$B_LEVEL = 4,0,8,0 %;         
macro MREC$B_FAOCNT = 5,0,8,0 %;        
macro MREC$B_USERVAL = 6,0,8,0 %;       
macro MREC$B_LANG = 8,0,8,0 %;          
macro MREC$B_IDENTLEN = 9,0,8,0 %;      
macro MREC$T_IDENT = 10,0,8,0 %;        
 

literal MFAC$S_MFACDEF = 4;
macro MFAC$W_NUMBER = 0,0,16,0 %;       
macro MFAC$B_NAMELEN = 2,0,8,0 %;       
macro MFAC$T_NAME = 3,0,8,0 %;          

 

literal NSA$_FACILITY = 1072;
literal NSA$_CMKRNL_1 = 70287363;
literal NSA$_CMKRNL_2 = 70287371;
literal NSA$_CMKRNL_3 = 70287379;
literal NSA$_CMKRNL_4 = 70287387;
literal NSA$_CMKRNL_5 = 70287395;
literal NSA$_CMKRNL_6 = 70287403;
literal NSA$_CMKRNL_7 = 70287411;       
literal NSA$_CMKRNL_8 = 70287419;
literal NSA$_CMKRNL_9 = 70287427;
literal NSA$_CMKRNL_10 = 70287435;      
literal NSA$_CMKRNL_11 = 70287443;      
literal NSA$_CMKRNL_12 = 70287451;
literal NSA$_CMKRNL_13 = 70287459;
literal NSA$_CMKRNL_14 = 70287467;      
literal NSA$_CMKRNL_15 = 70287475;
literal NSA$_CMKRNL_16 = 70287483;      
literal NSA$_CMKRNL_17 = 70287491;
literal NSA$_CMKRNL_18 = 70287499;      
literal NSA$_CMKRNL_19 = 70287507;
literal NSA$_CMKRNL_20 = 70287515;      
literal NSA$_CMKRNL_21 = 70287523;      
literal NSA$_CMKRNL_22 = 70287531;
literal NSA$_CMKRNL_23 = 70287539;
literal NSA$_CMKRNL_24 = 70287547;
literal NSA$_CMKRNL_25 = 70287555;      
literal NSA$_CMKRNL_26 = 70287563;
literal NSA$_CMKRNL_27 = 70287571;      
literal NSA$_CMKRNL_28 = 70287579;
literal NSA$_CMKRNL_29 = 70287587;
literal NSA$_CMKRNL_30 = 70287595;
literal NSA$_CMKRNL_31 = 70287603;
literal NSA$_CMKRNL_32 = 70287611;
literal NSA$_CMKRNL_33 = 70287619;
literal NSA$_CMKRNL_34 = 70287627;
literal NSA$_CMKRNL_35 = 70287635;
literal NSA$_CMKRNL_36 = 70287643;
literal NSA$_CMEXEC_1 = 70287763;
literal NSA$_CMEXEC_2 = 70287771;
literal NSA$_SYSNAM_1 = 70287843;
literal NSA$_SYSNAM_2 = 70287851;
literal NSA$_SYSNAM_3 = 70287859;
literal NSA$_SYSNAM_4 = 70287867;
literal NSA$_SYSNAM_5 = 70287875;
literal NSA$_SYSNAM_6 = 70287883;
literal NSA$_SYSNAM_7 = 70287891;
literal NSA$_SYSNAM_8 = 70287899;
literal NSA$_SYSNAM_9 = 70287907;
literal NSA$_SYSNAM_10 = 70287915;
literal NSA$_SYSNAM_11 = 70287923;
literal NSA$_SYSNAM_12 = 70287931;
literal NSA$_SYSNAM_13 = 70287939;
literal NSA$_GRPNAM_1 = 70288083;
literal NSA$_GRPNAM_2 = 70288091;
literal NSA$_GRPNAM_3 = 70288099;
literal NSA$_ALLSPOOL_1 = 70288163;
literal NSA$_DETACH_1 = 70288243;
literal NSA$_DETACH_2 = 70288251;
literal NSA$_DETACH_3 = 70288259;
literal NSA$_DETACH_4 = 70288267;
literal NSA$_DETACH_5 = 70288275;
literal NSA$_DETACH_6 = 70288283;
literal NSA$_DETACH_7 = 70288291;
literal NSA$_IMPERSONATE_1 = 70288243;
literal NSA$_IMPERSONATE_2 = 70288251;
literal NSA$_IMPERSONATE_3 = 70288259;
literal NSA$_IMPERSONATE_4 = 70288267;
literal NSA$_IMPERSONATE_5 = 70288275;
literal NSA$_IMPERSONATE_6 = 70288283;
literal NSA$_IMPERSONATE_7 = 70288291;
literal NSA$_IMPERSONATE_8 = 70288299;
literal NSA$_IMPERSONATE_9 = 70288307;
literal NSA$_IMPERSONATE_10 = 70288315;
literal NSA$_DIAGNOSE_1 = 70288323;
literal NSA$_DIAGNOSE_2 = 70288331;
literal NSA$_DIAGNOSE_3 = 70288339;
literal NSA$_DIAGNOSE_4 = 70288347;     
literal NSA$_DIAGNOSE_5 = 70288355;
literal NSA$_DIAGNOSE_6 = 70288363;
literal NSA$_DIAGNOSE_7 = 70288371;
literal NSA$_DIAGNOSE_8 = 70288379;
literal NSA$_LOG_IO_1 = 70288403;
literal NSA$_LOG_IO_2 = 70288411;
literal NSA$_LOG_IO_3 = 70288419;
literal NSA$_LOG_IO_4 = 70288427;
literal NSA$_LOG_IO_5 = 70288435;       
literal NSA$_LOG_IO_6 = 70288443;
literal NSA$_LOG_IO_7 = 70288451;
literal NSA$_GROUP_1 = 70288483;
literal NSA$_GROUP_2 = 70288491;
literal NSA$_GROUP_3 = 70288499;
literal NSA$_GROUP_4 = 70288507;
literal NSA$_GROUP_5 = 70288515;
literal NSA$_GROUP_6 = 70288523;
literal NSA$_GROUP_7 = 70288531;
literal NSA$_GROUP_8 = 70288539;
literal NSA$_GROUP_9 = 70288547;
literal NSA$_GROUP_10 = 70288555;
literal NSA$_ACNT_1 = 70288643;
literal NSA$_ACNT_2 = 70288651;
literal NSA$_PRMCEB_1 = 70288723;
literal NSA$_PRMCEB_2 = 70288731;
literal NSA$_PRMMBX_1 = 70288803;
literal NSA$_PRMMBX_2 = 70288811;
literal NSA$_PRMMBX_3 = 70288819;
literal NSA$_PSWAPM_1 = 70288883;
literal NSA$_PSWAPM_2 = 70288891;
literal NSA$_PSWAPM_3 = 70288899;
literal NSA$_PSWAPM_4 = 70288907;
literal NSA$_ALTPRI_1 = 70288963;
literal NSA$_ALTPRI_2 = 70288971;
literal NSA$_ALTPRI_3 = 70288979;
literal NSA$_ALTPRI_4 = 70288987;
literal NSA$_ALTPRI_5 = 70288995;
literal NSA$_ALTPRI_6 = 70289003;
literal NSA$_ALTPRI_7 = 70289011;
literal NSA$_IMPORT_1 = 70289043;
literal NSA$_TMPMBX_1 = 70289123;
literal NSA$_TMPMBX_2 = 70289131;
literal NSA$_WORLD_1 = 70289203;
literal NSA$_WORLD_2 = 70289211;
literal NSA$_WORLD_3 = 70289219;
literal NSA$_WORLD_4 = 70289227;
literal NSA$_WORLD_5 = 70289235;
literal NSA$_MOUNT_1 = 70289283;
literal NSA$_OPER_1 = 70289363;
literal NSA$_OPER_2 = 70289371;
literal NSA$_OPER_3 = 70289379;
literal NSA$_OPER_4 = 70289387;
literal NSA$_OPER_5 = 70289395;
literal NSA$_OPER_6 = 70289403;
literal NSA$_OPER_7 = 70289411;
literal NSA$_OPER_8 = 70289419;
literal NSA$_OPER_9 = 70289427;
literal NSA$_OPER_10 = 70289435;
literal NSA$_OPER_11 = 70289443;
literal NSA$_OPER_12 = 70289451;
literal NSA$_OPER_13 = 70289459;
literal NSA$_OPER_14 = 70289467;        
literal NSA$_OPER_15 = 70289475;        
literal NSA$_OPER_16 = 70289483;
literal NSA$_OPER_17 = 70289491;        
literal NSA$_OPER_18 = 70289499;        
literal NSA$_OPER_19 = 70289507;
literal NSA$_OPER_20 = 70289515;
literal NSA$_OPER_21 = 70289523;
literal NSA$_OPER_22 = 70289531;
literal NSA$_OPER_23 = 70289539;
literal NSA$_OPER_24 = 70289547;        
literal NSA$_OPER_25 = 70289555;
literal NSA$_OPER_26 = 70289563;
literal NSA$_OPER_27 = 70289571;
literal NSA$_OPER_28 = 70289579;
literal NSA$_OPER_29 = 70289587;
literal NSA$_OPER_30 = 70289595;
literal NSA$_OPER_31 = 70289603;
literal NSA$_OPER_32 = 70289611;
literal NSA$_OPER_33 = 70289619;
literal NSA$_OPER_34 = 70289627;
literal NSA$_OPER_35 = 70289635;        
literal NSA$_OPER_36 = 70289643;
literal NSA$_OPER_37 = 70289651;
literal NSA$_OPER_38 = 70289659;
literal NSA$_OPER_39 = 70289667;
literal NSA$_OPER_40 = 70289675;
literal NSA$_OPER_41 = 70289683;
literal NSA$_OPER_42 = 70289691;
literal NSA$_OPER_43 = 70289699;
literal NSA$_OPER_44 = 70289707;
literal NSA$_OPER_45 = 70289715;
literal NSA$_OPER_46 = 70289723;
literal NSA$_OPER_47 = 70289731;
literal NSA$_OPER_48 = 70289739;
literal NSA$_OPER_49 = 70289747;
literal NSA$_OPER_50 = 70289755;
literal NSA$_OPER_51 = 70289763;
literal NSA$_OPER_52 = 70289771;
literal NSA$_OPER_53 = 70289779;
literal NSA$_OPER_54 = 70289787;
literal NSA$_OPER_55 = 70289795;
literal NSA$_OPER_56 = 70289803;        
literal NSA$_OPER_57 = 70289811;
literal NSA$_OPER_58 = 70289819;
literal NSA$_OPER_59 = 70289827;
literal NSA$_OPER_60 = 70289835;
literal NSA$_OPER_61 = 70289843;
literal NSA$_OPER_62 = 70289851;
literal NSA$_OPER_63 = 70289859;
literal NSA$_OPER_64 = 70289867;
literal NSA$_OPER_65 = 70289875;
literal NSA$_OPER_66 = 70289883;
literal NSA$_OPER_67 = 70289891;
literal NSA$_OPER_68 = 70289899;
literal NSA$_OPER_69 = 70289907;
literal NSA$_OPER_70 = 70289915;        
literal NSA$_OPER_71 = 70289923;
literal NSA$_OPER_72 = 70289931;
literal NSA$_OPER_73 = 70289939;
literal NSA$_OPER_74 = 70289947;
literal NSA$_OPER_75 = 70289955;
literal NSA$_OPER_76 = 70289963;
literal NSA$_OPER_77 = 70289971;
literal NSA$_OPER_78 = 70289979;
literal NSA$_OPER_79 = 70289987;
literal NSA$_OPER_80 = 70289995;
literal NSA$_OPER_81 = 70290003;

literal NSA$_OPER_82 = 70290011;
literal NSA$_OPER_83 = 70290019;
literal NSA$_OPER_84 = 70290027;
literal NSA$_OPER_85 = 70290035;
literal NSA$_OPER_86 = 70290043;
literal NSA$_OPER_87 = 70290051;
literal NSA$_OPER_88 = 70290059;
literal NSA$_OPER_89 = 70290067;
literal NSA$_OPER_90 = 70290075;
literal NSA$_OPER_91 = 70290083;
literal NSA$_OPER_92 = 70290091;
literal NSA$_OPER_93 = 70290099;

literal NSA$_EXQUOTA_1 = 70290323;

literal NSA$_EXQUOTA_2 = 70290331;
literal NSA$_EXQUOTA_3 = 70290339;

literal NSA$_NETMBX_1 = 70290403;
literal NSA$_NETMBX_2 = 70290411;
literal NSA$_NETMBX_3 = 70290419;
literal NSA$_VOLPRO_1 = 70290483;
literal NSA$_VOLPRO_2 = 70290491;
literal NSA$_VOLPRO_3 = 70290499;       
literal NSA$_VOLPRO_4 = 70290507;
literal NSA$_VOLPRO_5 = 70290515;
literal NSA$_VOLPRO_6 = 70290523;
literal NSA$_VOLPRO_7 = 70290531;
literal NSA$_VOLPRO_8 = 70290539;
literal NSA$_VOLPRO_9 = 70290547;
literal NSA$_VOLPRO_10 = 70290555;
literal NSA$_VOLPRO_11 = 70290563;
literal NSA$_VOLPRO_12 = 70290571;
literal NSA$_VOLPRO_13 = 70290579;
literal NSA$_VOLPRO_14 = 70290587;
literal NSA$_VOLPRO_15 = 70290595;
literal NSA$_PHY_IO_1 = 70290643;
literal NSA$_PHY_IO_2 = 70290651;
literal NSA$_PHY_IO_3 = 70290659;
literal NSA$_PHY_IO_4 = 70290667;
literal NSA$_PHY_IO_5 = 70290675;
literal NSA$_PHY_IO_6 = 70290683;
literal NSA$_PHY_IO_7 = 70290691;
literal NSA$_PHY_IO_8 = 70290699;
literal NSA$_PHY_IO_9 = 70290707;
literal NSA$_PHY_IO_10 = 70290715;
literal NSA$_PHY_IO_11 = 70290723;
literal NSA$_PHY_IO_12 = 70290731;
literal NSA$_PHY_IO_13 = 70290739;      
literal NSA$_PHY_IO_14 = 70290747;
literal NSA$_PHY_IO_15 = 70290755;
literal NSA$_BUGCHK_1 = 70290883;
literal NSA$_BUGCHK_2 = 70290891;
literal NSA$_PRMGBL_1 = 70290963;
literal NSA$_PRMGBL_2 = 70290971;
literal NSA$_SYSGBL_1 = 70291043;
literal NSA$_SYSGBL_2 = 70291051;
literal NSA$_PFNMAP_1 = 70291123;
literal NSA$_PFNMAP_2 = 70291131;
literal NSA$_PFNMAP_3 = 70291139;
literal NSA$_SHMEM_1 = 70291203;
literal NSA$_SHMEM_2 = 70291211;
literal NSA$_SHMEM_3 = 70291219;
literal NSA$_SHMEM_4 = 70291227;
literal NSA$_SHMEM_5 = 70291235;
literal NSA$_SYSPRV_1 = 70291283;
literal NSA$_SYSPRV_2 = 70291291;
literal NSA$_SYSPRV_3 = 70291299;
literal NSA$_SYSPRV_4 = 70291307;
literal NSA$_SYSPRV_5 = 70291315;
literal NSA$_SYSPRV_6 = 70291323;       
literal NSA$_SYSPRV_7 = 70291331;
literal NSA$_SYSPRV_8 = 70291339;
literal NSA$_SYSPRV_9 = 70291347;
literal NSA$_SYSPRV_10 = 70291355;
literal NSA$_SYSPRV_11 = 70291363;
literal NSA$_SYSPRV_12 = 70291371;
literal NSA$_SYSPRV_13 = 70291379;
literal NSA$_SYSPRV_14 = 70291387;      
literal NSA$_SYSPRV_15 = 70291395;
literal NSA$_SYSPRV_16 = 70291403;
literal NSA$_SYSPRV_17 = 70291411;
literal NSA$_SYSPRV_18 = 70291419;
literal NSA$_SYSPRV_19 = 70291427;
literal NSA$_SYSPRV_20 = 70291435;
literal NSA$_SYSPRV_21 = 70291443;
literal NSA$_SYSPRV_22 = 70291451;
literal NSA$_SYSPRV_23 = 70291459;
literal NSA$_SYSPRV_24 = 70291467;
literal NSA$_SYSPRV_25 = 70291475;
literal NSA$_SYSPRV_26 = 70291483;
literal NSA$_SYSPRV_27 = 70291491;
literal NSA$_SYSPRV_28 = 70291499;
literal NSA$_SYSPRV_29 = 70291507;
literal NSA$_SYSPRV_30 = 70291515;
literal NSA$_SYSPRV_31 = 70291523;
literal NSA$_SYSPRV_32 = 70291531;
literal NSA$_SYSPRV_33 = 70291539;
literal NSA$_SYSPRV_34 = 70291547;
literal NSA$_SYSPRV_35 = 70291555;
literal NSA$_SYSPRV_36 = 70291563;
literal NSA$_SYSPRV_37 = 70291571;
literal NSA$_SYSPRV_38 = 70291579;
literal NSA$_SYSPRV_39 = 70291587;
literal NSA$_SYSPRV_40 = 70291595;      
literal NSA$_BYPASS_1 = 70291603;
literal NSA$_BYPASS_2 = 70291611;
literal NSA$_BYPASS_3 = 70291619;
literal NSA$_BYPASS_4 = 70291627;
literal NSA$_BYPASS_5 = 70291635;
literal NSA$_BYPASS_6 = 70291643;
literal NSA$_BYPASS_7 = 70291651;
literal NSA$_BYPASS_8 = 70291659;
literal NSA$_BYPASS_9 = 70291667;
literal NSA$_BYPASS_10 = 70291675;
literal NSA$_BYPASS_11 = 70291683;
literal NSA$_BYPASS_12 = 70291691;
literal NSA$_BYPASS_13 = 70291699;
literal NSA$_BYPASS_14 = 70291707;
literal NSA$_BYPASS_15 = 70291715;      
literal NSA$_BYPASS_16 = 70291723;      
literal NSA$_BYPASS_17 = 70291731;
literal NSA$_BYPASS_18 = 70291739;
literal NSA$_BYPASS_19 = 70291747;
literal NSA$_BYPASS_20 = 70291755;
literal NSA$_BYPASS_21 = 70291763;
literal NSA$_BYPASS_22 = 70291771;
literal NSA$_BYPASS_23 = 70291779;
literal NSA$_BYPASS_24 = 70291787;
literal NSA$_BYPASS_25 = 70291795;
literal NSA$_BYPASS_26 = 70291803;
literal NSA$_BYPASS_27 = 70291811;
literal NSA$_BYPASS_28 = 70291819;
literal NSA$_BYPASS_29 = 70291827;
literal NSA$_BYPASS_30 = 70291835;
literal NSA$_SYSLCK_1 = 70291923;
literal NSA$_SYSLCK_2 = 70291931;
literal NSA$_SHARE_1 = 70292003;
literal NSA$_GRPPRV_1 = 70292083;
literal NSA$_GRPPRV_2 = 70292091;
literal NSA$_GRPPRV_3 = 70292099;
literal NSA$_GRPPRV_4 = 70292107;       
literal NSA$_GRPPRV_5 = 70292115;
literal NSA$_GRPPRV_6 = 70292123;
literal NSA$_GRPPRV_7 = 70292131;
literal NSA$_GRPPRV_8 = 70292139;
literal NSA$_GRPPRV_9 = 70292147;
literal NSA$_GRPPRV_10 = 70292155;
literal NSA$_GRPPRV_11 = 70292163;
literal NSA$_GRPPRV_12 = 70292171;
literal NSA$_GRPPRV_13 = 70292179;
literal NSA$_GRPPRV_14 = 70292187;
literal NSA$_GRPPRV_15 = 70292195;
literal NSA$_GRPPRV_16 = 70292203;
literal NSA$_GRPPRV_17 = 70292211;
literal NSA$_GRPPRV_18 = 70292219;
literal NSA$_READALL_1 = 70292243;
literal NSA$_READALL_2 = 70292251;
literal NSA$_READALL_3 = 70292259;      
literal NSA$_SECURITY_1 = 70292483;
literal NSA$_SECURITY_2 = 70292491;
literal NSA$_SECURITY_3 = 70292499;
literal NSA$_SECURITY_4 = 70292507;
literal NSA$_SECURITY_5 = 70292515;
literal NSA$_SECURITY_6 = 70292523;
literal NSA$_SECURITY_7 = 70292531;
literal NSA$_SECURITY_8 = 70292539;
literal NSA$_SECURITY_9 = 70292547;
literal NSA$_SECURITY_10 = 70292555;
literal NSA$_SECURITY_11 = 70292563;
literal NSA$_SECURITY_12 = 70292571;
literal NSA$_SECURITY_13 = 70292579;
literal NSA$_SECURITY_14 = 70292587;
literal NSA$_SECURITY_15 = 70292595;
literal NSA$_SECURITY_16 = 70292603;
literal NSA$_SECURITY_17 = 70292611;
literal NSA$_SECURITY_18 = 70292619;
literal NSA$_SECURITY_19 = 70292627;
literal NSA$_SECURITY_20 = 70292635;
literal NSA$_SECURITY_21 = 70292643;
literal NSA$_SECURITY_22 = 70292651;
literal NSA$_SECURITY_23 = 70292659;
literal NSA$_SECURITY_24 = 70292667;
literal NSA$_SECURITY_25 = 70292675;

literal NSA$_SECURITY_26 = 70292683;
literal NSA$_SECURITY_27 = 70292691;
literal NSA$_SECURITY_28 = 70292699;
literal NSA$_SECURITY_29 = 70292707;
literal NSA$_SECURITY_30 = 70292715;

literal NSA$_UPGRADE_1 = 70292723;
literal NSA$_UPGRADE_2 = 70292731;      
literal NSA$_DOWNGRADE_1 = 70292803;
literal NSA$_DOWNGRADE_2 = 70292811;    
literal NSA$_SETPRV_1 = 70292883;       
literal NSA$_SETPRV_2 = 70292891;
literal NSA$_SETPRV_3 = 70292899;
literal NSA$_SETPRV_4 = 70292907;
literal NSA$_SETPRV_5 = 70292915;
literal NSA$_SETPRV_6 = 70292923;
literal NSA$_AUDIT_1 = 70292963;
literal NSA$_AUDIT_2 = 70292971;
literal NSA$_AUDIT_3 = 70292979;

literal NSA$_IMP_SYSPRV_1 = 70302563;
literal NSA$_IMP_SYSPRV_2 = 70302571;
literal NSA$_IMP_SYSPRV_3 = 70302579;
literal NSA$_IMP_SYSPRV_4 = 70302587;
literal NSA$_IMP_SYSPRV_5 = 70302595;
literal NSA$_IMP_SYSPRV_6 = 70302603;
literal NSA$_IMP_SYSPRV_7 = 70302611;
literal NSA$_IMP_SYSPRV_8 = 70302619;
literal NSA$_IMP_SYSPRV_9 = 70302627;
literal NSA$_IMP_SYSPRV_10 = 70302635;
literal NSA$_IMP_SYSPRV_11 = 70302643;
literal NSA$_IMP_SYSPRV_12 = 70302651;
literal NSA$_IMP_SYSPRV_13 = 70302659;
literal NSA$_IMP_SYSPRV_14 = 70302667;
literal NSA$_IMP_SYSPRV_15 = 70302675;
literal NSA$_IMP_SYSPRV_16 = 70302683;
literal NSA$_IMP_SYSPRV_17 = 70302691;  

literal NSA$_COMB_1 = 70303363;
literal NSA$_COMB_2 = 70303371;
literal NSA$_COMB_3 = 70303379;
literal NSA$_COMB_4 = 70303387;         
literal NSA$_COMB_5 = 70303395;
literal NSA$_COMB_6 = 70303403;
literal NSA$_COMB_7 = 70303411;
literal NSA$_COMB_8 = 70303419;
literal NSA$_COMB_9 = 70303427;
literal NSA$_COMB_10 = 70303435;
literal NSA$_COMB_11 = 70303443;
literal NSA$_COMB_12 = 70303451;
literal NSA$_COMB_13 = 70303459;
literal NSA$_COMB_14 = 70303467;
literal NSA$_COMB_15 = 70303475;
literal NSA$_COMB_16 = 70303483;
literal NSA$_COMB_17 = 70303491;
literal NSA$_COMB_18 = 70303499;

literal NSA$_COMB_19 = 70303507;

literal NSA$_XQP_1 = 70303747;
literal NSA$_XQP_2 = 70303755;
literal NSA$_XQP_3 = 70303763;
literal NSA$_XQP_4 = 70303771;
literal NSA$_XQP_5 = 70303779;
literal NSA$_XQP_6 = 70303787;
literal NSA$_XQP_7 = 70303795;
literal NSA$_XQP_8 = 70303803;
literal NSA$_XQP_9 = 70303811;
literal NSA$_XQP_10 = 70303819;
literal NSA$_XQP_11 = 70303827;
literal NSA$_XQP_12 = 70303835;
literal NSA$_XQP_13 = 70303843;
literal NSA$_XQP_14 = 70303851;
literal NSA$_XQP_15 = 70303859;
literal NSA$_XQP_16 = 70303867;
literal NSA$_XQP_17 = 70303875;
literal NSA$_XQP_18 = 70303883;
literal NSA$_XQP_19 = 70303891;
literal NSA$_XQP_20 = 70303899;
literal NSA$_XQP_21 = 70303907;
literal NSA$_XQP_22 = 70303915;
literal NSA$_XQP_23 = 70303923;

literal NSA$_ALLOCATE = 70311939;
literal NSA$_ASSIGN = 70311947;
literal NSA$_SETSECURITY = 70311955;
literal NSA$_SHOSECURITY = 70311963;
literal NSA$_GSDACCESS = 70311971;
literal NSA$_KFEACCESS = 70311979;
literal NSA$_MACBYPASSED = 70311987;

literal NSA$_SYSPRV_41 = 70312163;
literal NSA$_SYSPRV_42 = 70312171;
literal NSA$_SYSPRV_43 = 70312179;
literal NSA$_SYSPRV_44 = 70312187;
literal NSA$_SYSPRV_45 = 70312195;
literal NSA$_SYSPRV_46 = 70312203;
literal NSA$_SYSPRV_47 = 70312211;
literal NSA$_SYSPRV_48 = 70312219;
literal NSA$_SYSPRV_49 = 70312227;
literal NSA$_SYSPRV_50 = 70312235;

literal NSA$_IMPERSONATE_11 = 70312483;
literal NSA$_IMPERSONATE_12 = 70312491;

literal NSA$_SECURITY_31 = 70312803;
literal NSA$_SECURITY_32 = 70312811;
literal NSA$_SECURITY_33 = 70312819;
literal NSA$_SECURITY_34 = 70312827;
literal NSA$_SECURITY_35 = 70312835;
literal NSA$_SECURITY_36 = 70312843;
literal NSA$_SECURITY_37 = 70312851;
literal NSA$_SECURITY_38 = 70312859;
literal NSA$_SECURITY_39 = 70312867;

 
literal OBJ$M_PSC_PIC = %X'1';
literal OBJ$M_PSC_LIB = %X'2';
literal OBJ$M_PSC_OVL = %X'4';
literal OBJ$M_PSC_REL = %X'8';
literal OBJ$M_PSC_GBL = %X'10';
literal OBJ$M_PSC_SHR = %X'20';
literal OBJ$M_PSC_EXE = %X'40';
literal OBJ$M_PSC_RD = %X'80';
literal OBJ$M_PSC_WRT = %X'100';
literal OBJ$M_SYM_WEAK = %X'1';
literal OBJ$M_SYM_DEF = %X'2';
literal OBJ$M_SYM_UNI = %X'4';
literal OBJ$M_SYM_REL = %X'8';
literal OBJ$M_SYMV_WEAK = %X'1';
literal OBJ$M_SYMV_DEF = %X'2';
literal OBJ$M_SYMV_UNI = %X'4';
literal OBJ$M_SYMV_REL = %X'8';
literal OBJ$M_SYMM_WEAK = %X'1';
literal OBJ$M_SYMM_DEF = %X'2';
literal OBJ$M_SYMM_UNI = %X'4';
literal OBJ$M_SYMM_REL = %X'8';
literal OBJ$S_SDADEFS = 16;
macro OBJ$B_TYPE = 0,0,8,0 %;           
macro OBJ$B_GSD_TYPE = 0,0,8,0 %;       
macro OBJ$B_PSC_ALI = 1,0,8,0 %;        
macro OBJ$W_PSC_FLAG = 2,0,16,0 %;      
macro OBJ$V_PSC_PIC = 2,0,1,0 %;        
macro OBJ$V_PSC_LIB = 2,1,1,0 %;        
macro OBJ$V_PSC_OVL = 2,2,1,0 %;        
macro OBJ$V_PSC_REL = 2,3,1,0 %;        
macro OBJ$V_PSC_GBL = 2,4,1,0 %;        
macro OBJ$V_PSC_SHR = 2,5,1,0 %;        
macro OBJ$V_PSC_EXE = 2,6,1,0 %;        
macro OBJ$V_PSC_RD = 2,7,1,0 %;         
macro OBJ$V_PSC_WRT = 2,8,1,0 %;        
macro OBJ$L_PSC_LEN = 4,0,32,0 %;       
macro OBJ$T_PSC_NAME = 8,0,8,0 %;       
macro OBJ$B_SYM_DTYPE = 1,0,8,0 %;      
macro OBJ$W_SYM_FLAGS = 2,0,16,0 %;     
macro OBJ$V_SYM_WEAK = 2,0,1,0 %;       
macro OBJ$V_SYM_DEF = 2,1,1,0 %;        
macro OBJ$V_SYM_UNI = 2,2,1,0 %;        
macro OBJ$V_SYM_REL = 2,3,1,0 %;        
macro OBJ$B_SYM_PSIND = 4,0,8,0 %;      
macro OBJ$L_SYM_VALUE = 5,0,32,0 %;     
macro OBJ$T_SYM_NAME = 9,0,8,0 %;       
macro OBJ$B_EPM_DTYPE = 1,0,8,0 %;      
macro OBJ$W_EPM_FLAGS = 2,0,16,0 %;     
macro OBJ$B_EPM_PSIND = 4,0,8,0 %;      
macro OBJ$L_EPM_VALUE = 5,0,32,0 %;     
macro OBJ$W_EPM_MASK = 9,0,16,0 %;      
macro OBJ$T_EPM_NAME = 11,0,8,0 %;      
macro OBJ$B_SYMV_DTYPE = 1,0,8,0 %;     
macro OBJ$W_SYMV_FLAGS = 2,0,16,0 %;    
macro OBJ$V_SYMV_WEAK = 2,0,1,0 %;      
macro OBJ$V_SYMV_DEF = 2,1,1,0 %;       
macro OBJ$V_SYMV_UNI = 2,2,1,0 %;       
macro OBJ$V_SYMV_REL = 2,3,1,0 %;       
macro OBJ$B_SYMV_PSIND = 4,0,8,0 %;     
macro OBJ$L_SYMV_VALUE = 5,0,32,0 %;    
macro OBJ$L_SYMV_VECTOR = 9,0,32,0 %;   
macro OBJ$T_SYMV_NAME = 13,0,8,0 %;     
macro OBJ$B_EPMV_DTYPE = 1,0,8,0 %;     
macro OBJ$W_EPMV_FLAGS = 2,0,16,0 %;    
macro OBJ$B_EPMV_PSIND = 4,0,8,0 %;     
macro OBJ$L_EPMV_VALUE = 5,0,32,0 %;    
macro OBJ$L_EPMV_VECTOR = 9,0,32,0 %;   
macro OBJ$W_EPMV_MASK = 13,0,16,0 %;    
macro OBJ$T_EPMV_NAME = 15,0,8,0 %;     
macro OBJ$B_SYMM_DTYPE = 1,0,8,0 %;     
macro OBJ$W_SYMM_FLAGS = 2,0,16,0 %;    
macro OBJ$V_SYMM_WEAK = 2,0,1,0 %;      
macro OBJ$V_SYMM_DEF = 2,1,1,0 %;       
macro OBJ$V_SYMM_UNI = 2,2,1,0 %;       
macro OBJ$V_SYMM_REL = 2,3,1,0 %;       
macro OBJ$B_SYMM_PSIND = 4,0,8,0 %;     
macro OBJ$L_SYMM_VALUE = 5,0,32,0 %;    
macro OBJ$L_SYMM_VERSION_MASK = 9,0,32,0 %; 
macro OBJ$T_SYMM_NAME = 13,0,8,0 %;     
macro OBJ$B_EPMM_DTYPE = 1,0,8,0 %;     
macro OBJ$W_EPMM_FLAGS = 2,0,16,0 %;    
macro OBJ$B_EPMM_PSIND = 4,0,8,0 %;     
macro OBJ$L_EPMM_VALUE = 5,0,32,0 %;    
macro OBJ$L_EPMM_VERSION_MASK = 9,0,32,0 %; 
macro OBJ$W_EPMM_MASK = 13,0,16,0 %;    
macro OBJ$T_EPMM_NAME = 15,0,8,0 %;     
macro OBJ$B_EOM_SEV = 1,0,8,0 %;        
macro OBJ$B_EOM_PSIND = 2,0,8,0 %;      
macro OBJ$L_EOM_TRANS = 3,0,32,0 %;     
literal OBJ$C_HDR = 0;                  
literal OBJ$C_HDR_MHD = 0;              
literal OBJ$C_HDR_LNM = 1;              
literal OBJ$C_HDR_SRC = 2;              
literal OBJ$C_HDR_TTL = 3;              
literal OBJ$C_HDR_CPR = 4;              
literal OBJ$C_HDR_MTC = 5;              
literal OBJ$C_HDR_GTX = 6;              
literal OBJ$C_GSD = 1;                  
literal OBJ$C_GSD_PSC = 0;              
literal OBJ$C_GSD_SYM = 1;              
literal OBJ$C_GSD_EPM = 2;              
literal OBJ$C_GSD_PRO = 3;              
literal OBJ$C_GSD_SYMW = 4;             
literal OBJ$C_GSD_EPMW = 5;             
literal OBJ$C_GSD_PROW = 6;             
literal OBJ$C_GSD_IDC = 7;              
literal OBJ$C_GSD_ENV = 8;              
literal OBJ$C_GSD_LSY = 9;              
literal OBJ$C_GSD_LEPM = 10;            
literal OBJ$C_GSD_LPRO = 11;            
literal OBJ$C_GSD_SPSC = 12;            
literal OBJ$C_GSD_SYMV = 13;            
literal OBJ$C_GSD_EPMV = 14;            
literal OBJ$C_GSD_PROV = 15;            
literal OBJ$C_GSD_SYMM = 16;            
literal OBJ$C_GSD_EPMM = 17;            
literal OBJ$C_GSD_PROM = 18;            
literal OBJ$C_TIR = 2;                  
literal OBJ$C_EOM = 3;                  
literal OBJ$C_DBG = 4;                  
literal OBJ$C_TBT = 5;                  
literal OBJ$C_LNK = 6;                  
literal OBJ$C_EOMW = 7;                 
literal OBJ$C_MAXRECTYP = 7;            
literal OBJ$K_SUBTYP = 1;
literal OBJ$C_SUBTYP = 1;
literal OBJ$C_MAXRECSIZ = 2048;         
literal OBJ$C_STRLVL = 0;               
literal OBJ$C_SYMSIZ = 31;              
literal OBJ$C_STOREPLIM = -1;           
literal OBJ$C_PSCALILIM = 9;            
literal OBJ$S_OBJRECDEF = 5;
macro OBJ$B_RECTYP = 0,0,8,0 %;         
macro OBJ$B_SUBTYP = 1,0,8,0 %;         
macro OBJ$B_MHD_STRLV = 2,0,8,0 %;      
macro OBJ$W_MHD_RECSZ = 3,0,16,0 %;     
macro OBJ$T_MHD_NAME = 5,0,0,0 %;       
 

literal MHD$C_MHD = 0;                  
literal MHD$C_LNM = 1;                  
literal MHD$C_SRC = 2;                  
literal MHD$C_TTL = 3;                  
literal MHD$C_CPR = 4;                  
literal MHD$C_MTC = 5;                  
literal MHD$C_GTX = 6;                  
literal MHD$C_MAXHDRTYP = 6;            
literal MHD$S_MHDEF = 37;
macro MHD$B_RECTYP = 0,0,8,0 %;         
macro MHD$B_HDRTYP = 1,0,8,0 %;         
macro MHD$B_STRLVL = 2,0,8,0 %;         
macro MHD$W_RECSIZ = 3,0,16,0 %;        
macro MHD$B_NAMLNG = 5,0,8,0 %;         
macro MHD$T_NAME = 6,0,0,0 %;
literal MHD$S_NAME = 31;                
 

literal EOM$C_SUCCESS = 0;              
literal EOM$C_WARNING = 1;              
literal EOM$C_ERROR = 2;                
literal EOM$C_ABORT = 3;                
literal EOM$K_EOMMIN = 2;               
literal EOM$C_EOMMIN = 2;               
literal EOM$K_EOMMX1 = 7;               
literal EOM$C_EOMMX1 = 7;               
literal EOM$K_EOMMAX = 8;               
literal EOM$C_EOMMAX = 8;               
literal EOM$M_WKTFR = %X'1';
literal EOM$S_EOMDEF = 8;
macro EOM$B_RECTYP = 0,0,8,0 %;         
macro EOM$B_COMCOD = 1,0,8,0 %;         
macro EOM$B_PSINDX = 2,0,8,0 %;         
macro EOM$L_TFRADR = 3,0,32,0 %;        
macro EOM$B_TFRFLG = 7,0,8,0 %;         
macro EOM$V_WKTFR = 7,0,1,0 %;          
 

literal EOMW$K_EOMMIN = 2;              
literal EOMW$C_EOMMIN = 2;              
literal EOMW$K_EOMMX1 = 8;              
literal EOMW$C_EOMMX1 = 8;              
literal EOMW$K_EOMMAX = 9;              
literal EOMW$C_EOMMAX = 9;              
literal EOMW$M_WKTFR = %X'1';
literal EOMW$S_EOMWDEF = 9;
macro EOMW$B_RECTYP = 0,0,8,0 %;        
macro EOMW$B_COMCOD = 1,0,8,0 %;        
macro EOMW$W_PSINDX = 2,0,16,0 %;       
macro EOMW$L_TFRADR = 4,0,32,0 %;       
macro EOMW$B_TFRFLG = 8,0,8,0 %;        
macro EOMW$V_WKTFR = 8,0,1,0 %;         
 

literal LNK$C_OLB = 0;                  
literal LNK$C_SHR = 1;                  
literal LNK$C_OLI = 2;                  
literal LNK$C_OBJ = 3;                  
literal LNK$C_SHA = 4;                  
literal LNK$C_MAXRECTYP = 4;            
literal LNK$M_SELSER = %X'1';
literal LNK$M_LIBSRCH = %X'2';
literal LNK$S_LNKDEF = 6;
macro LNK$B_RECTYP = 0,0,8,0 %;         
macro LNK$B_LNKTYP = 1,0,8,0 %;         
macro LNK$W_FLAGS = 2,0,16,0 %;
macro LNK$V_SELSER = 2,0,1,0 %;         
macro LNK$V_LIBSRCH = 2,1,1,0 %;
macro LNK$W_NAMLNG = 4,0,16,0 %;        
macro LNK$T_NAME = 6,0,0,0 %;           
 

literal GSD$K_ENTRIES = 1;              
literal GSD$C_ENTRIES = 1;              
literal GSD$C_PSC = 0;                  
literal GSD$C_SYM = 1;                  
literal GSD$C_EPM = 2;                  
literal GSD$C_PRO = 3;                  
literal GSD$C_SYMW = 4;                 
literal GSD$C_EPMW = 5;                 
literal GSD$C_PROW = 6;                 
literal GSD$C_IDC = 7;                  
literal GSD$C_ENV = 8;                  
literal GSD$C_LSY = 9;                  
literal GSD$C_LEPM = 10;                
literal GSD$C_LPRO = 11;                
literal GSD$C_SPSC = 12;                
literal GSD$C_VECTOR_TYPE_INCREMENT = 12;
literal GSD$C_SYMV = 13;                
literal GSD$C_EPMV = 14;                
literal GSD$C_PROV = 15;                
literal GSD$C_MASK_TYPE_INCREMENT = 15;
literal GSD$C_SYMM = 16;                
literal GSD$C_EPMM = 17;                
literal GSD$C_PROM = 18;                
literal GSD$C_MAXRECTYP = 18;           
literal GSD$S_GSDEF = 2;
macro GSD$B_RECTYP = 0,0,8,0 %;         
macro GSD$B_GSDTYP = 1,0,8,0 %;         

 

literal GPS$M_PIC = %X'1';
literal GPS$M_LIB = %X'2';
literal GPS$M_OVR = %X'4';
literal GPS$M_REL = %X'8';
literal GPS$M_GBL = %X'10';
literal GPS$M_SHR = %X'20';
literal GPS$M_EXE = %X'40';
literal GPS$M_RD = %X'80';
literal GPS$M_WRT = %X'100';
literal GPS$M_VEC = %X'200';
literal GPS$M_NOMOD = %X'400';
literal GPS$M_COM = %X'800';
literal GPS$K_NAME = 9;
literal GPS$C_NAME = 9;
literal GPS$S_GPSDEF = 40;
macro GPS$B_GSDTYP = 0,0,8,0 %;         
macro GPS$T_START = 0,0,0,0 %;
macro GPS$B_ALIGN = 1,0,8,0 %;          
macro GPS$W_FLAGS = 2,0,16,0 %;         
macro GPS$V_PIC = 2,0,1,0 %;            
macro GPS$V_LIB = 2,1,1,0 %;            
macro GPS$V_OVR = 2,2,1,0 %;            
macro GPS$V_REL = 2,3,1,0 %;            
macro GPS$V_GBL = 2,4,1,0 %;            
macro GPS$V_SHR = 2,5,1,0 %;            
macro GPS$V_EXE = 2,6,1,0 %;            
macro GPS$V_RD = 2,7,1,0 %;             
macro GPS$V_WRT = 2,8,1,0 %;            
macro GPS$V_VEC = 2,9,1,0 %;            
macro GPS$V_NOMOD = 2,10,1,0 %;         
macro GPS$V_COM = 2,11,1,0 %;           
macro GPS$L_ALLOC = 4,0,32,0 %;         
macro GPS$B_NAMLNG = 8,0,8,0 %;         
macro GPS$T_NAME = 9,0,0,0 %;
literal GPS$S_NAME = 31;                
 

literal SGPS$M_PIC = %X'1';
literal SGPS$M_LIB = %X'2';
literal SGPS$M_OVR = %X'4';
literal SGPS$M_REL = %X'8';
literal SGPS$M_GBL = %X'10';
literal SGPS$M_SHR = %X'20';
literal SGPS$M_EXE = %X'40';
literal SGPS$M_RD = %X'80';
literal SGPS$M_WRT = %X'100';
literal SGPS$M_VEC = %X'200';
literal SGPS$M_NOMOD = %X'400';
literal SGPS$M_COM = %X'800';
literal SGPS$K_NAME = 13;
literal SGPS$C_NAME = 13;
literal SGPS$S_SGPSDEF = 44;
macro SGPS$B_GSDTYP = 0,0,8,0 %;        
macro SGPS$T_START = 0,0,0,0 %;
macro SGPS$B_ALIGN = 1,0,8,0 %;         
macro SGPS$W_FLAGS = 2,0,16,0 %;        
macro SGPS$V_PIC = 2,0,1,0 %;           
macro SGPS$V_LIB = 2,1,1,0 %;           
macro SGPS$V_OVR = 2,2,1,0 %;           
macro SGPS$V_REL = 2,3,1,0 %;           
macro SGPS$V_GBL = 2,4,1,0 %;           
macro SGPS$V_SHR = 2,5,1,0 %;           
macro SGPS$V_EXE = 2,6,1,0 %;           
macro SGPS$V_RD = 2,7,1,0 %;            
macro SGPS$V_WRT = 2,8,1,0 %;           
macro SGPS$V_VEC = 2,9,1,0 %;           
macro SGPS$V_NOMOD = 2,10,1,0 %;        
macro SGPS$V_COM = 2,11,1,0 %;          
macro SGPS$L_ALLOC = 4,0,32,0 %;        
macro SGPS$L_BASE = 8,0,32,0 %;         
macro SGPS$B_NAMLNG = 12,0,8,0 %;       
macro SGPS$T_NAME = 13,0,0,0 %;
literal SGPS$S_NAME = 31;               
 

literal GSY$M_WEAK = %X'1';
literal GSY$M_DEF = %X'2';
literal GSY$M_UNI = %X'4';
literal GSY$M_REL = %X'8';
literal GSY$M_COMM = %X'10';
literal GSY$S_GSYDEF = 4;
macro GSY$B_GSDTYP = 0,0,8,0 %;         
macro GSY$T_START = 0,0,0,0 %;
macro GSY$B_DATYP = 1,0,8,0 %;          
macro GSY$W_FLAGS = 2,0,16,0 %;         
macro GSY$V_WEAK = 2,0,1,0 %;           
macro GSY$V_DEF = 2,1,1,0 %;            
macro GSY$V_UNI = 2,2,1,0 %;            
macro GSY$V_REL = 2,3,1,0 %;            
macro GSY$V_COMM = 2,4,1,0 %;           
 

literal SRF$K_NAME = 5;
literal SRF$C_NAME = 5;
literal SRF$S_SRFDEF = 36;
macro SRF$B_GSDTYP = 0,0,8,0 %;         
macro SRF$T_START = 0,0,0,0 %;
macro SRF$B_DATYP = 1,0,8,0 %;          
macro SRF$W_FLAGS = 2,0,16,0 %;         
macro SRF$B_NAMLNG = 4,0,8,0 %;         
macro SRF$T_NAME = 5,0,0,0 %;
literal SRF$S_NAME = 31;                
 

literal SDF$K_NAME = 10;
literal SDF$C_NAME = 10;
literal SDF$S_SDFDEF = 41;
macro SDF$B_GSDTYP = 0,0,8,0 %;         
macro SDF$T_START = 0,0,0,0 %;
macro SDF$B_DATYP = 1,0,8,0 %;          
macro SDF$W_FLAGS = 2,0,16,0 %;         
macro SDF$B_PSINDX = 4,0,8,0 %;         
macro SDF$L_VALUE = 5,0,32,0 %;         
macro SDF$B_NAMLNG = 9,0,8,0 %;         
macro SDF$T_NAME = 10,0,0,0 %;
literal SDF$S_NAME = 31;                
 

literal SDFV$K_NAME = 14;
literal SDFV$C_NAME = 14;
literal SDFV$S_SDFVDEF = 45;
macro SDFV$B_GSDTYP = 0,0,8,0 %;        
macro SDFV$T_START = 0,0,0,0 %;
macro SDFV$B_DATYP = 1,0,8,0 %;         
macro SDFV$W_FLAGS = 2,0,16,0 %;        
macro SDFV$B_PSINDX = 4,0,8,0 %;        
macro SDFV$L_VALUE = 5,0,32,0 %;        
macro SDFV$L_VECTOR = 9,0,32,0 %;       
macro SDFV$B_NAMLNG = 13,0,8,0 %;       
macro SDFV$T_NAME = 14,0,0,0 %;
literal SDFV$S_NAME = 31;               
 

literal SDFM$K_NAME = 14;
literal SDFM$C_NAME = 14;
literal SDFM$S_SDFMDEF = 45;
macro SDFM$B_GSDTYP = 0,0,8,0 %;        
macro SDFM$T_START = 0,0,0,0 %;
macro SDFM$B_DATYP = 1,0,8,0 %;         
macro SDFM$W_FLAGS = 2,0,16,0 %;        
macro SDFM$B_PSINDX = 4,0,8,0 %;        
macro SDFM$L_VALUE = 5,0,32,0 %;        
macro SDFM$L_VERSION_MASK = 9,0,32,0 %; 
macro SDFM$B_NAMLNG = 13,0,8,0 %;       
macro SDFM$T_NAME = 14,0,0,0 %;
literal SDFM$S_NAME = 31;               
 

literal EPM$K_NAME = 12;
literal EPM$C_NAME = 12;
literal EPM$S_EPMDEF = 43;
macro EPM$B_GSDTYP = 0,0,8,0 %;         
macro EPM$T_START = 0,0,0,0 %;
macro EPM$B_DATYP = 1,0,8,0 %;          
macro EPM$W_FLAGS = 2,0,16,0 %;         
macro EPM$B_PSINDX = 4,0,8,0 %;         
macro EPM$L_ADDRS = 5,0,32,0 %;         
macro EPM$W_MASK = 9,0,16,0 %;          
macro EPM$B_NAMLNG = 11,0,8,0 %;        
macro EPM$T_NAME = 12,0,0,0 %;
literal EPM$S_NAME = 31;                
 

literal EPMV$K_NAME = 16;
literal EPMV$C_NAME = 16;
literal EPMV$S_EPMVDEF = 47;
macro EPMV$B_GSDTYP = 0,0,8,0 %;        
macro EPMV$T_START = 0,0,0,0 %;
macro EPMV$B_DATYP = 1,0,8,0 %;         
macro EPMV$W_FLAGS = 2,0,16,0 %;        
macro EPMV$B_PSINDX = 4,0,8,0 %;        
macro EPMV$L_ADDRS = 5,0,32,0 %;        
macro EPMV$L_VECTOR = 9,0,32,0 %;       
macro EPMV$W_MASK = 13,0,16,0 %;        
macro EPMV$B_NAMLNG = 15,0,8,0 %;       
macro EPMV$T_NAME = 16,0,0,0 %;
literal EPMV$S_NAME = 31;               
 

literal EPMM$K_NAME = 16;
literal EPMM$C_NAME = 16;
literal EPMM$S_EPMMDEF = 47;
macro EPMM$B_GSDTYP = 0,0,8,0 %;        
macro EPMM$T_START = 0,0,0,0 %;
macro EPMM$B_DATYP = 1,0,8,0 %;         
macro EPMM$W_FLAGS = 2,0,16,0 %;        
macro EPMM$B_PSINDX = 4,0,8,0 %;        
macro EPMM$L_ADDRS = 5,0,32,0 %;        
macro EPMM$L_VERSION_MASK = 9,0,32,0 %; 
macro EPMM$W_MASK = 13,0,16,0 %;        
macro EPMM$B_NAMLNG = 15,0,8,0 %;       
macro EPMM$T_NAME = 16,0,0,0 %;
literal EPMM$S_NAME = 31;               
 

literal PRO$K_NAME = 12;
literal PRO$C_NAME = 12;
literal PRO$S_PRODEF = 43;
macro PRO$B_GSDTYP = 0,0,8,0 %;         
macro PRO$T_START = 0,0,0,0 %;
macro PRO$B_DATYP = 1,0,8,0 %;          
macro PRO$W_FLAGS = 2,0,16,0 %;         
macro PRO$B_PSINDX = 4,0,8,0 %;         
macro PRO$L_ADDRS = 5,0,32,0 %;         
macro PRO$W_MASK = 9,0,16,0 %;          
macro PRO$B_NAMLNG = 11,0,8,0 %;        
macro PRO$T_NAME = 12,0,0,0 %;
literal PRO$S_NAME = 31;                
 

literal PROV$K_NAME = 16;
literal PROV$C_NAME = 16;
literal PROV$S_PROVDEF = 47;
macro PROV$B_GSDTYP = 0,0,8,0 %;        
macro PROV$T_START = 0,0,0,0 %;
macro PROV$B_DATYP = 1,0,8,0 %;         
macro PROV$W_FLAGS = 2,0,16,0 %;        
macro PROV$B_PSINDX = 4,0,8,0 %;        
macro PROV$L_ADDRS = 5,0,32,0 %;        
macro PROV$L_VECTOR = 9,0,32,0 %;       
macro PROV$W_MASK = 13,0,16,0 %;        
macro PROV$B_NAMLNG = 15,0,8,0 %;       
macro PROV$T_NAME = 16,0,0,0 %;
literal PROV$S_NAME = 31;               
 

literal PROM$K_NAME = 16;
literal PROM$C_NAME = 16;
literal PROM$S_PROMDEF = 47;
macro PROM$B_GSDTYP = 0,0,8,0 %;        
macro PROM$T_START = 0,0,0,0 %;
macro PROM$B_DATYP = 1,0,8,0 %;         
macro PROM$W_FLAGS = 2,0,16,0 %;        
macro PROM$B_PSINDX = 4,0,8,0 %;        
macro PROM$L_ADDRS = 5,0,32,0 %;        
macro PROM$L_VERSION_MASK = 9,0,32,0 %; 
macro PROM$W_MASK = 13,0,16,0 %;        
macro PROM$B_NAMLNG = 15,0,8,0 %;       
macro PROM$T_NAME = 16,0,0,0 %;
literal PROM$S_NAME = 31;               
 

literal FML$K_SIZE = 2;
literal FML$C_SIZE = 2;
literal FML$S_FMLDEF = 2;
macro FML$B_MINARGS = 0,0,8,0 %;        
macro FML$B_MAXARGS = 1,0,8,0 %;        
 

literal ARG$C_UNKNOWN = 0;              
literal ARG$C_VALUE = 1;                
literal ARG$C_REF = 2;                  
literal ARG$C_DESC = 3;                 
literal ARG$K_SIZE = 2;
literal ARG$C_SIZE = 2;
literal ARG$S_ARGDEF = 2;
macro ARG$B_VALCTL = 0,0,8,0 %;         
macro ARG$V_PASSMECH = 0,0,2,0 %;
literal ARG$S_PASSMECH = 2;             
macro ARG$B_BYTECNT = 1,0,8,0 %;        
 

literal SDFW$K_NAME = 11;
literal SDFW$C_NAME = 11;
literal SDFW$S_SDFWDEF = 42;
macro SDFW$B_GSDTYP = 0,0,8,0 %;        
macro SDFW$T_START = 0,0,0,0 %;
macro SDFW$B_DATYP = 1,0,8,0 %;         
macro SDFW$W_FLAGS = 2,0,16,0 %;        
macro SDFW$W_PSINDX = 4,0,16,0 %;       
macro SDFW$L_VALUE = 6,0,32,0 %;        
macro SDFW$B_NAMLNG = 10,0,8,0 %;       
macro SDFW$T_NAME = 11,0,0,0 %;
literal SDFW$S_NAME = 31;               
 

literal EPMW$K_NAME = 13;
literal EPMW$C_NAME = 13;
literal EPMW$S_EPMWDEF = 44;
macro EPMW$B_GSDTYP = 0,0,8,0 %;        
macro EPMW$T_START = 0,0,0,0 %;
macro EPMW$B_DATYP = 1,0,8,0 %;         
macro EPMW$W_FLAGS = 2,0,16,0 %;        
macro EPMW$W_PSINDX = 4,0,16,0 %;       
macro EPMW$L_ADDRS = 6,0,32,0 %;        
macro EPMW$W_MASK = 10,0,16,0 %;        
macro EPMW$B_NAMLNG = 12,0,8,0 %;       
macro EPMW$T_NAME = 13,0,0,0 %;
literal EPMW$S_NAME = 31;               
 

literal PROW$K_NAME = 13;
literal PROW$C_NAME = 13;
literal PROW$S_PROWDEF = 44;
macro PROW$B_GSDTYP = 0,0,8,0 %;        
macro PROW$T_START = 0,0,0,0 %;
macro PROW$B_DATYP = 1,0,8,0 %;         
macro PROW$W_FLAGS = 2,0,16,0 %;        
macro PROW$W_PSINDX = 4,0,16,0 %;       
macro PROW$L_ADDRS = 6,0,32,0 %;        
macro PROW$W_MASK = 10,0,16,0 %;        
macro PROW$B_NAMLNG = 12,0,8,0 %;       
macro PROW$T_NAME = 13,0,0,0 %;
literal PROW$S_NAME = 31;               
 

literal IDC$C_LEQ = 0;
literal IDC$C_EQUAL = 1;
literal IDC$S_IDCDEF = 4;
macro IDC$B_GSDTYP = 0,0,8,0 %;         
macro IDC$W_FLAGS = 1,0,16,0 %;         
macro IDC$V_BINIDENT = 1,0,1,0 %;       
macro IDC$V_IDMATCH = 1,1,2,0 %;
literal IDC$S_IDMATCH = 2;              
macro IDC$V_ERRSEV = 1,3,3,0 %;
literal IDC$S_ERRSEV = 3;               
macro IDC$B_NAMLNG = 3,0,8,0 %;         
macro IDC$T_NAME = 4,0,0,0 %;           

 

literal ENV$M_DEF = %X'1';
literal ENV$M_NESTED = %X'2';
literal ENV$S_ENVDEF = 37;
macro ENV$B_GSDTYP = 0,0,8,0 %;         
macro ENV$W_FLAGS = 1,0,16,0 %;         
macro ENV$V_DEF = 1,0,1,0 %;            
macro ENV$V_NESTED = 1,1,1,0 %;         
macro ENV$W_ENVINDX = 3,0,16,0 %;       
macro ENV$B_NAMLNG = 5,0,8,0 %;         
macro ENV$T_NAME = 6,0,0,0 %;
literal ENV$S_NAME = 31;                
 

literal LSY$M_WEAK = %X'1';
literal LSY$M_DEF = %X'2';
literal LSY$M_UNI = %X'4';
literal LSY$M_REL = %X'8';
literal LSY$S_LSYDEF = 6;
macro LSY$B_GSDTYP = 0,0,8,0 %;         
macro LSY$T_START = 0,0,0,0 %;
macro LSY$B_DATYP = 1,0,8,0 %;          
macro LSY$W_FLAGS = 2,0,16,0 %;         
macro LSY$V_WEAK = 2,0,1,0 %;           
macro LSY$V_DEF = 2,1,1,0 %;            
macro LSY$V_UNI = 2,2,1,0 %;            
macro LSY$V_REL = 2,3,1,0 %;            
macro LSY$W_ENVINDX = 4,0,16,0 %;       
 

literal LSRF$K_NAME = 7;
literal LSRF$C_NAME = 7;
literal LSRF$S_LSRFDEF = 38;
macro LSRF$B_GSDTYP = 0,0,8,0 %;        
macro LSRF$T_START = 0,0,0,0 %;
macro LSRF$B_DATYP = 1,0,8,0 %;         
macro LSRF$W_FLAGS = 2,0,16,0 %;        
macro LSRF$W_ENVINDX = 4,0,16,0 %;      
macro LSRF$B_NAMLNG = 6,0,8,0 %;        
macro LSRF$T_NAME = 7,0,0,0 %;
literal LSRF$S_NAME = 31;               
 

literal LSDF$K_NAME = 13;
literal LSDF$C_NAME = 13;
literal LSDF$S_LSDFDEF = 44;
macro LSDF$B_GSDTYP = 0,0,8,0 %;        
macro LSDF$T_START = 0,0,0,0 %;
macro LSDF$B_DATYP = 1,0,8,0 %;         
macro LSDF$W_FLAGS = 2,0,16,0 %;        
macro LSDF$W_ENVINDX = 4,0,16,0 %;      
macro LSDF$W_PSINDX = 6,0,16,0 %;       
macro LSDF$L_VALUE = 8,0,32,0 %;        
macro LSDF$B_NAMLNG = 12,0,8,0 %;       
macro LSDF$T_NAME = 13,0,0,0 %;
literal LSDF$S_NAME = 31;               
 

literal LEPM$K_NAME = 15;
literal LEPM$C_NAME = 15;
literal LEPM$S_LEPMDEF = 46;
macro LEPM$B_GSDTYP = 0,0,8,0 %;        
macro LEPM$T_START = 0,0,0,0 %;
macro LEPM$B_DATYP = 1,0,8,0 %;         
macro LEPM$W_FLAGS = 2,0,16,0 %;        
macro LEPM$W_ENVINDX = 4,0,16,0 %;      
macro LEPM$W_PSINDX = 6,0,16,0 %;       
macro LEPM$L_ADDRS = 8,0,32,0 %;        
macro LEPM$W_MASK = 12,0,16,0 %;        
macro LEPM$B_NAMLNG = 14,0,8,0 %;       
macro LEPM$T_NAME = 15,0,0,0 %;
literal LEPM$S_NAME = 31;               
 

literal LPRO$K_NAME = 15;
literal LPRO$C_NAME = 15;
literal LPRO$S_LPRODEF = 46;
macro LPRO$B_GSDTYP = 0,0,8,0 %;        
macro LPRO$T_START = 0,0,0,0 %;
macro LPRO$B_DATYP = 1,0,8,0 %;         
macro LPRO$W_FLAGS = 2,0,16,0 %;        
macro LPRO$W_ENVINDX = 4,0,16,0 %;      
macro LPRO$W_PSINDX = 6,0,16,0 %;       
macro LPRO$L_ADDRS = 8,0,32,0 %;        
macro LPRO$W_MASK = 12,0,16,0 %;        
macro LPRO$B_NAMLNG = 14,0,8,0 %;       
macro LPRO$T_NAME = 15,0,0,0 %;
literal LPRO$S_NAME = 31;               
 

literal TIR$C_STA_GBL = 0;              
literal TIR$C_STA_SB = 1;               
literal TIR$C_STA_SW = 2;               
literal TIR$C_STA_LW = 3;               
literal TIR$C_STA_PB = 4;               
literal TIR$C_STA_PW = 5;               
literal TIR$C_STA_PL = 6;               
literal TIR$C_STA_UB = 7;               
literal TIR$C_STA_UW = 8;               
literal TIR$C_STA_BFI = 9;              
literal TIR$C_STA_WFI = 10;             
literal TIR$C_STA_LFI = 11;             
literal TIR$C_STA_EPM = 12;             
literal TIR$C_STA_CKARG = 13;           
literal TIR$C_STA_WPB = 14;             
literal TIR$C_STA_WPW = 15;             
literal TIR$C_STA_WPL = 16;             
literal TIR$C_STA_LSY = 17;             
literal TIR$C_STA_LIT = 18;             
literal TIR$C_STA_LEPM = 19;            
literal TIR$C_MAXSTACOD = 19;           
literal TIR$C_MINSTOCOD = 20;           
literal TIR$C_STO_SB = 20;              
literal TIR$C_STO_SW = 21;              
literal TIR$C_STO_L = 22;               
literal TIR$C_STO_BD = 23;              
literal TIR$C_STO_WD = 24;              
literal TIR$C_STO_LD = 25;              
literal TIR$C_STO_LI = 26;              
literal TIR$C_STO_PIDR = 27;            
literal TIR$C_STO_PICR = 28;            
literal TIR$C_STO_RSB = 29;             
literal TIR$C_STO_RSW = 30;             
literal TIR$C_STO_RL = 31;              
literal TIR$C_STO_VPS = 32;             
literal TIR$C_STO_USB = 33;             
literal TIR$C_STO_USW = 34;             
literal TIR$C_STO_RUB = 35;             
literal TIR$C_STO_RUW = 36;             
literal TIR$C_STO_B = 37;               
literal TIR$C_STO_W = 38;               
literal TIR$C_STO_RB = 39;              
literal TIR$C_STO_RW = 40;              
literal TIR$C_STO_RIVB = 41;            
literal TIR$C_STO_PIRR = 42;            
literal TIR$C_MAXSTOCOD = 42;           
literal TIR$C_MINOPRCOD = 50;           
literal TIR$C_OPR_NOP = 50;             
literal TIR$C_OPR_ADD = 51;             
literal TIR$C_OPR_SUB = 52;             
literal TIR$C_OPR_MUL = 53;             
literal TIR$C_OPR_DIV = 54;             
literal TIR$C_OPR_AND = 55;             
literal TIR$C_OPR_IOR = 56;             
literal TIR$C_OPR_EOR = 57;             
literal TIR$C_OPR_NEG = 58;             
literal TIR$C_OPR_COM = 59;             
literal TIR$C_OPR_INSV = 60;            
literal TIR$C_OPR_ASH = 61;             
literal TIR$C_OPR_USH = 62;             
literal TIR$C_OPR_ROT = 63;             
literal TIR$C_OPR_SEL = 64;             
literal TIR$C_OPR_REDEF = 65;           
literal TIR$C_OPR_DFLIT = 66;           
literal TIR$C_MAXOPRCOD = 66;           
literal TIR$C_MINCTLCOD = 80;           
literal TIR$C_CTL_SETRB = 80;           
literal TIR$C_CTL_AUGRB = 81;           
literal TIR$C_CTL_DFLOC = 82;           
literal TIR$C_CTL_STLOC = 83;           
literal TIR$C_CTL_STKDL = 84;           
literal TIR$C_MAXCTLCOD = 84;           
literal TIR$S_TIRDEF = 1;
macro TIR$B_RECTYP = 0,0,8,0 %;         

 

literal EOBJ$C_EMH = 8;                 
literal EOBJ$C_EEOM = 9;                
literal EOBJ$C_EGSD = 10;               
literal EOBJ$C_ETIR = 11;               
literal EOBJ$C_EDBG = 12;               
literal EOBJ$C_ETBT = 13;               
literal EOBJ$C_MAXRECTYP = 13;          
literal EOBJ$K_SUBTYP = 4;
literal EOBJ$C_SUBTYP = 4;
literal EOBJ$C_MAXRECSIZ = 8192;        
literal EOBJ$C_STRLVL = 2;              
literal EOBJ$C_STRLVL64 = 3;            
literal EOBJ$C_SYMSIZ = 64;             
literal EOBJ$C_STOREPLIM = -1;          
literal EOBJ$C_PSCALILIM = 16;          
literal EOBJ$S_EOBJRECDEF = 10;

macro EOBJ$W_RECTYP = 0,0,16,0 %;       
macro EOBJ$W_SIZE = 2,0,16,0 %;         
macro EOBJ$W_SUBTYP = 4,0,16,0 %;       
macro EOBJ$B_MHD_STRLV = 6,0,8,0 %;     
macro EOBJ$B_MHD_HOLD = 7,0,8,0 %;      
macro EOBJ$W_MHD_RECSZ = 8,0,16,0 %;    
macro EOBJ$T_MHD_NAME = 10,0,0,0 %;     
 

literal EMH$C_MHD = 0;                  
literal EMH$C_LNM = 1;                  
literal EMH$C_SRC = 2;                  
literal EMH$C_TTL = 3;                  
literal EMH$C_CPR = 4;                  
literal EMH$C_MTC = 5;                  
literal EMH$C_GTX = 6;                  
literal EMH$C_MAXHDRTYP = 6;            
literal EMH$S_EMHDEF = 52;
macro EMH$W_RECTYP = 0,0,16,0 %;        
macro EMH$W_SIZE = 2,0,16,0 %;          
macro EMH$W_HDRTYP = 4,0,16,0 %;        
macro EMH$B_STRLVL = 6,0,8,0 %;         
macro EMH$B_TEMP = 7,0,8,0 %;           
macro EMH$L_ARCH1 = 8,0,32,1 %;         
macro EMH$L_ARCH2 = 12,0,32,1 %;        
macro EMH$L_RECSIZ = 16,0,32,0 %;       
macro EMH$B_NAMLNG = 20,0,8,0 %;        
macro EMH$T_NAME = 21,0,0,0 %;
literal EMH$S_NAME = 31;                
 

literal EEOM$C_SUCCESS = 0;             
literal EEOM$C_WARNING = 1;             
literal EEOM$C_ERROR = 2;               
literal EEOM$C_ABORT = 3;               
literal EEOM$K_EOMMIN = 10;             
literal EEOM$C_EOMMIN = 10;             
literal EEOM$K_EOMMX1 = 10;             
literal EEOM$C_EOMMX1 = 10;             
literal EEOM$M_WKTFR = %X'1';
literal EEOM$K_EOMMAX = 24;             
literal EEOM$C_EOMMAX = 24;             
literal EEOM$S_EEOMDEF = 24;
macro EEOM$W_RECTYP = 0,0,16,0 %;       
macro EEOM$W_SIZE = 2,0,16,0 %;         
macro EEOM$L_TOTAL_LPS = 4,0,32,0 %;    
macro EEOM$W_COMCOD = 8,0,16,0 %;       
macro EEOM$B_TFRFLG = 10,0,8,0 %;       
macro EEOM$V_WKTFR = 10,0,1,0 %;        
macro EEOM$B_TEMP = 11,0,8,0 %;         
macro EEOM$L_PSINDX = 12,0,32,0 %;      
macro EEOM$Q_TFRADR = 16,0,0,0 %;
literal EEOM$S_TFRADR = 8;              
macro EEOM$L_TFRADR = 16,0,32,0 %;      
 

literal EGSD$K_ENTRIES = 2;             
literal EGSD$C_ENTRIES = 2;             
literal EGSD$C_PSC = 0;                 
literal EGSD$C_SYM = 1;                 
literal EGSD$C_IDC = 2;                 
literal EGSD$C_SPSC = 5;                
literal EGSD$C_SYMV = 6;                
literal EGSD$C_SYMM = 7;                
literal EGSD$C_SYMG = 8;                
literal EGSD$C_PSC64 = 9;               
literal EGSD$C_SPSC64 = 10;             
literal EGSD$C_MAXRECTYP = 10;          
literal EGSD$S_EGSDEF = 12;
macro EGSD$W_RECTYP = 0,0,16,0 %;       
macro EGSD$W_RECSIZ = 2,0,16,0 %;       
macro EGSD$L_ALIGNLW = 4,0,32,0 %;      
macro EGSD$W_GSDTYP = 8,0,16,0 %;       
macro EGSD$W_GSDSIZ = 10,0,16,0 %;      
 

literal EGPS$M_PIC = %X'1';
literal EGPS$M_LIB = %X'2';
literal EGPS$M_OVR = %X'4';
literal EGPS$M_REL = %X'8';
literal EGPS$M_GBL = %X'10';
literal EGPS$M_SHR = %X'20';
literal EGPS$M_EXE = %X'40';
literal EGPS$M_RD = %X'80';
literal EGPS$M_WRT = %X'100';
literal EGPS$M_VEC = %X'200';
literal EGPS$M_NOMOD = %X'400';
literal EGPS$M_COM = %X'800';
literal EGPS$M_ALLOC_64BIT = %X'1000';
literal EGPS$K_NAME = 12;
literal EGPS$C_NAME = 12;
literal EGPS$S_EGPSDEF = 44;
macro EGPS$W_GSDTYP = 0,0,16,0 %;       
macro EGPS$T_START = 0,0,0,0 %;
macro EGPS$W_SIZE = 2,0,16,0 %;         
macro EGPS$B_ALIGN = 4,0,8,0 %;         
macro EGPS$B_TEMP = 5,0,8,0 %;          
macro EGPS$W_FLAGS = 6,0,16,0 %;        
macro EGPS$V_PIC = 6,0,1,0 %;           
macro EGPS$V_LIB = 6,1,1,0 %;           
macro EGPS$V_OVR = 6,2,1,0 %;           
macro EGPS$V_REL = 6,3,1,0 %;           
macro EGPS$V_GBL = 6,4,1,0 %;           
macro EGPS$V_SHR = 6,5,1,0 %;           
macro EGPS$V_EXE = 6,6,1,0 %;           
macro EGPS$V_RD = 6,7,1,0 %;            
macro EGPS$V_WRT = 6,8,1,0 %;           
macro EGPS$V_VEC = 6,9,1,0 %;           
macro EGPS$V_NOMOD = 6,10,1,0 %;        
macro EGPS$V_COM = 6,11,1,0 %;          
macro EGPS$V_ALLOC_64BIT = 6,12,1,0 %;  
macro EGPS$L_ALLOC = 8,0,32,0 %;        
macro EGPS$B_NAMLNG = 12,0,8,0 %;       
macro EGPS$T_NAME = 13,0,0,0 %;
literal EGPS$S_NAME = 31;               

literal EGPS64$M_PIC = %X'1';
literal EGPS64$M_LIB = %X'2';
literal EGPS64$M_OVR = %X'4';
literal EGPS64$M_REL = %X'8';
literal EGPS64$M_GBL = %X'10';
literal EGPS64$M_SHR = %X'20';
literal EGPS64$M_EXE = %X'40';
literal EGPS64$M_RD = %X'80';
literal EGPS64$M_WRT = %X'100';
literal EGPS64$M_VEC = %X'200';
literal EGPS64$M_NOMOD = %X'400';
literal EGPS64$M_COM = %X'800';
literal EGPS64$M_ALLOC_64BIT = %X'1000';
literal EGPS64$K_NAME = 16;
literal EGPS64$C_NAME = 16;
literal EGPS64$S_EGPS64DEF = 48;
macro EGPS64$W_GSDTYP = 0,0,16,0 %;     
macro EGPS64$T_START = 0,0,0,0 %;
macro EGPS64$W_SIZE = 2,0,16,0 %;       
macro EGPS64$B_ALIGN = 4,0,8,0 %;       
macro EGPS64$B_TEMP = 5,0,8,0 %;        
macro EGPS64$W_FLAGS = 6,0,16,0 %;      
macro EGPS64$V_PIC = 6,0,1,0 %;         
macro EGPS64$V_LIB = 6,1,1,0 %;         
macro EGPS64$V_OVR = 6,2,1,0 %;         
macro EGPS64$V_REL = 6,3,1,0 %;         
macro EGPS64$V_GBL = 6,4,1,0 %;         
macro EGPS64$V_SHR = 6,5,1,0 %;         
macro EGPS64$V_EXE = 6,6,1,0 %;         
macro EGPS64$V_RD = 6,7,1,0 %;          
macro EGPS64$V_WRT = 6,8,1,0 %;         
macro EGPS64$V_VEC = 6,9,1,0 %;         
macro EGPS64$V_NOMOD = 6,10,1,0 %;      
macro EGPS64$V_COM = 6,11,1,0 %;        
macro EGPS64$V_ALLOC_64BIT = 6,12,1,0 %; 
macro EGPS64$Q_ALLOC = 8,0,0,0 %;
literal EGPS64$S_ALLOC = 8;             
macro EGPS64$L_ALLOC = 8,0,32,0 %;      
macro EGPS64$B_NAMLNG = 16,0,8,0 %;     
macro EGPS64$T_NAME = 17,0,0,0 %;
literal EGPS64$S_NAME = 31;             
 

literal ESGPS$M_PIC = %X'1';
literal ESGPS$M_LIB = %X'2';
literal ESGPS$M_OVR = %X'4';
literal ESGPS$M_REL = %X'8';
literal ESGPS$M_GBL = %X'10';
literal ESGPS$M_SHR = %X'20';
literal ESGPS$M_EXE = %X'40';
literal ESGPS$M_RD = %X'80';
literal ESGPS$M_WRT = %X'100';
literal ESGPS$M_VEC = %X'200';
literal ESGPS$M_NOMOD = %X'400';
literal ESGPS$M_COM = %X'800';
literal ESGPS$M_ALLOC_64BIT = %X'1000';
literal ESGPS$K_NAME = 25;
literal ESGPS$C_NAME = 25;
literal ESGPS$S_ESGPSDEF = 56;
macro ESGPS$W_GSDTYP = 0,0,16,0 %;      
macro ESGPS$T_START = 0,0,0,0 %;
macro ESGPS$W_SIZE = 2,0,16,0 %;        
macro ESGPS$B_ALIGN = 4,0,8,0 %;        
macro ESGPS$B_TEMP = 5,0,8,0 %;         
macro ESGPS$W_FLAGS = 6,0,16,0 %;       
macro ESGPS$V_PIC = 6,0,1,0 %;          
macro ESGPS$V_LIB = 6,1,1,0 %;          
macro ESGPS$V_OVR = 6,2,1,0 %;          
macro ESGPS$V_REL = 6,3,1,0 %;          
macro ESGPS$V_GBL = 6,4,1,0 %;          
macro ESGPS$V_SHR = 6,5,1,0 %;          
macro ESGPS$V_EXE = 6,6,1,0 %;          
macro ESGPS$V_RD = 6,7,1,0 %;           
macro ESGPS$V_WRT = 6,8,1,0 %;          
macro ESGPS$V_VEC = 6,9,1,0 %;          
macro ESGPS$V_NOMOD = 6,10,1,0 %;       
macro ESGPS$V_COM = 6,11,1,0 %;         
macro ESGPS$V_ALLOC_64BIT = 6,12,1,0 %; 
macro ESGPS$L_ALLOC = 8,0,32,0 %;       
macro ESGPS$L_BASE = 12,0,32,0 %;       
macro ESGPS$Q_VALUE = 16,0,0,0 %;
literal ESGPS$S_VALUE = 8;
macro ESGPS$L_VALUE = 16,0,32,0 %;
macro ESGPS$B_NAMLNG = 24,0,8,0 %;      
macro ESGPS$T_NAME = 25,0,0,0 %;
literal ESGPS$S_NAME = 31;              

literal ESGPS64$M_PIC = %X'1';
literal ESGPS64$M_LIB = %X'2';
literal ESGPS64$M_OVR = %X'4';
literal ESGPS64$M_REL = %X'8';
literal ESGPS64$M_GBL = %X'10';
literal ESGPS64$M_SHR = %X'20';
literal ESGPS64$M_EXE = %X'40';
literal ESGPS64$M_RD = %X'80';
literal ESGPS64$M_WRT = %X'100';
literal ESGPS64$M_VEC = %X'200';
literal ESGPS64$M_NOMOD = %X'400';
literal ESGPS64$M_COM = %X'800';
literal ESGPS64$M_ALLOC_64BIT = %X'1000';
literal ESGPS64$K_NAME = 33;
literal ESGPS64$C_NAME = 33;
literal ESGPS64$S_ESGPS64DEF = 64;
macro ESGPS64$W_GSDTYP = 0,0,16,0 %;    
macro ESGPS64$T_START = 0,0,0,0 %;
macro ESGPS64$W_SIZE = 2,0,16,0 %;      
macro ESGPS64$B_ALIGN = 4,0,8,0 %;      
macro ESGPS64$B_TEMP = 5,0,8,0 %;       
macro ESGPS64$W_FLAGS = 6,0,16,0 %;     
macro ESGPS64$V_PIC = 6,0,1,0 %;        
macro ESGPS64$V_LIB = 6,1,1,0 %;        
macro ESGPS64$V_OVR = 6,2,1,0 %;        
macro ESGPS64$V_REL = 6,3,1,0 %;        
macro ESGPS64$V_GBL = 6,4,1,0 %;        
macro ESGPS64$V_SHR = 6,5,1,0 %;        
macro ESGPS64$V_EXE = 6,6,1,0 %;        
macro ESGPS64$V_RD = 6,7,1,0 %;         
macro ESGPS64$V_WRT = 6,8,1,0 %;        
macro ESGPS64$V_VEC = 6,9,1,0 %;        
macro ESGPS64$V_NOMOD = 6,10,1,0 %;     
macro ESGPS64$V_COM = 6,11,1,0 %;       
macro ESGPS64$V_ALLOC_64BIT = 6,12,1,0 %; 
macro ESGPS64$Q_ALLOC = 8,0,0,0 %;
literal ESGPS64$S_ALLOC = 8;            
macro ESGPS64$L_ALLOC = 8,0,32,0 %;     
macro ESGPS64$Q_BASE = 16,0,0,0 %;
literal ESGPS64$S_BASE = 8;             
macro ESGPS64$L_BASE = 16,0,32,0 %;     
macro ESGPS64$Q_VALUE = 24,0,0,0 %;
literal ESGPS64$S_VALUE = 8;
macro ESGPS64$L_VALUE = 24,0,32,0 %;
macro ESGPS64$B_NAMLNG = 32,0,8,0 %;    
macro ESGPS64$T_NAME = 33,0,0,0 %;
literal ESGPS64$S_NAME = 31;            
 

literal EGSY$M_WEAK = %X'1';
literal EGSY$M_DEF = %X'2';
literal EGSY$M_UNI = %X'4';
literal EGSY$M_REL = %X'8';
literal EGSY$M_COMM = %X'10';
literal EGSY$M_VECEP = %X'20';
literal EGSY$M_NORM = %X'40';
literal EGSY$M_QUAD_VAL = %X'80';
literal EGSY$S_EGSYDEF = 8;
macro EGSY$W_GSDTYP = 0,0,16,0 %;       
macro EGSY$T_START = 0,0,0,0 %;
macro EGSY$W_SIZE = 2,0,16,0 %;         
macro EGSY$B_DATYP = 4,0,8,0 %;         
macro EGSY$B_TEMP = 5,0,8,0 %;          
macro EGSY$W_FLAGS = 6,0,16,0 %;        
macro EGSY$V_WEAK = 6,0,1,0 %;          
macro EGSY$V_DEF = 6,1,1,0 %;           
macro EGSY$V_UNI = 6,2,1,0 %;           
macro EGSY$V_REL = 6,3,1,0 %;           
macro EGSY$V_COMM = 6,4,1,0 %;          
macro EGSY$V_VECEP = 6,5,1,0 %;         
macro EGSY$V_NORM = 6,6,1,0 %;          
macro EGSY$V_QUAD_VAL = 6,7,1,0 %;      
 

literal EGST$K_NAME = 37;
literal EGST$C_NAME = 37;
literal EGST$S_EGSTDEF = 68;
macro EGST$W_GSDTYP = 0,0,16,0 %;       
macro EGST$T_START = 0,0,0,0 %;
macro EGST$W_SIZE = 2,0,16,0 %;         
macro EGST$B_DATYP = 4,0,8,0 %;         
macro EGST$B_TEMP = 5,0,8,0 %;          
macro EGST$W_FLAGS = 6,0,16,0 %;        
macro EGST$Q_VALUE = 8,0,0,0 %;
literal EGST$S_VALUE = 8;
macro EGST$L_VALUE = 8,0,32,0 %;
macro EGST$Q_LP_1 = 16,0,0,0 %;
literal EGST$S_LP_1 = 8;
macro EGST$L_LP_1 = 16,0,32,0 %;
macro EGST$Q_LP_2 = 24,0,0,0 %;
literal EGST$S_LP_2 = 8;
macro EGST$L_LP_2 = 24,0,32,0 %;
macro EGST$L_PSINDX = 32,0,32,0 %;      
macro EGST$B_NAMLNG = 36,0,8,0 %;       
macro EGST$T_NAME = 37,0,0,0 %;
literal EGST$S_NAME = 31;               
 

literal ESDF$K_NAME = 33;
literal ESDF$C_NAME = 33;
literal ESDF$S_ESDFDEF = 64;
macro ESDF$W_GSDTYP = 0,0,16,0 %;       
macro ESDF$T_START = 0,0,0,0 %;
macro ESDF$W_SIZE = 2,0,16,0 %;         
macro ESDF$B_DATYP = 4,0,8,0 %;         
macro ESDF$B_TEMP = 5,0,8,0 %;          
macro ESDF$W_FLAGS = 6,0,16,0 %;        
macro ESDF$Q_VALUE = 8,0,0,0 %;
literal ESDF$S_VALUE = 8;
macro ESDF$L_VALUE = 8,0,32,0 %;
macro ESDF$Q_CODE_ADDRESS = 16,0,0,0 %;
literal ESDF$S_CODE_ADDRESS = 8;
macro ESDF$L_CODE_ADDRESS = 16,0,32,0 %;
macro ESDF$L_CA_PSINDX = 24,0,32,0 %;   
macro ESDF$L_PSINDX = 28,0,32,0 %;      
macro ESDF$B_NAMLNG = 32,0,8,0 %;       
macro ESDF$T_NAME = 33,0,0,0 %;
literal ESDF$S_NAME = 31;               
 

literal ESDFV$K_NAME = 25;
literal ESDFV$C_NAME = 25;
literal ESDFV$S_ESDFVDEF = 56;
macro ESDFV$W_GSDTYP = 0,0,16,0 %;      
macro ESDFV$T_START = 0,0,0,0 %;
macro ESDFV$W_SIZE = 2,0,16,0 %;        
macro ESDFV$B_DATYP = 4,0,8,0 %;        
macro ESDFV$B_TEMP = 5,0,8,0 %;         
macro ESDFV$W_FLAGS = 6,0,16,0 %;       
macro ESDFV$Q_VALUE = 8,0,0,0 %;
literal ESDFV$S_VALUE = 8;
macro ESDFV$L_VALUE = 8,0,32,0 %;
macro ESDFV$L_PSINDX = 16,0,32,0 %;     
macro ESDFV$L_VECTOR = 20,0,32,0 %;     
macro ESDFV$B_NAMLNG = 24,0,8,0 %;      
macro ESDFV$T_NAME = 25,0,0,0 %;
literal ESDFV$S_NAME = 31;              
 

literal ESDFM$K_NAME = 25;
literal ESDFM$C_NAME = 25;
literal ESDFM$S_ESDFMDEF = 56;
macro ESDFM$W_GSDTYP = 0,0,16,0 %;      
macro ESDFM$T_START = 0,0,0,0 %;
macro ESDFM$W_SIZE = 2,0,16,0 %;        
macro ESDFM$B_DATYP = 4,0,8,0 %;        
macro ESDFM$B_TEMP = 5,0,8,0 %;         
macro ESDFM$W_FLAGS = 6,0,16,0 %;       
macro ESDFM$Q_VALUE = 8,0,0,0 %;
literal ESDFM$S_VALUE = 8;
macro ESDFM$L_VALUE = 8,0,32,0 %;
macro ESDFM$L_PSINDX = 16,0,32,0 %;     
macro ESDFM$L_VERSION_MASK = 20,0,32,0 %; 
macro ESDFM$B_NAMLNG = 24,0,8,0 %;      
macro ESDFM$T_NAME = 25,0,0,0 %;
literal ESDFM$S_NAME = 31;              
 

literal ESRF$K_NAME = 9;
literal ESRF$C_NAME = 9;
literal ESRF$S_ESRFDEF = 40;
macro ESRF$W_GSDTYP = 0,0,16,0 %;       
macro ESRF$T_START = 0,0,0,0 %;
macro ESRF$W_SIZE = 2,0,16,0 %;         
macro ESRF$B_DATYP = 4,0,8,0 %;         
macro ESRF$B_TEMP = 5,0,8,0 %;          
macro ESRF$W_FLAGS = 6,0,16,0 %;        
macro ESRF$B_NAMLNG = 8,0,8,0 %;        
macro ESRF$T_NAME = 9,0,0,0 %;
literal ESRF$S_NAME = 31;               
 

literal EIDC$C_LEQ = 0;
literal EIDC$C_EQUAL = 1;
literal EIDC$S_EIDCDEF = 9;
macro EIDC$W_GSDTYP = 0,0,16,0 %;       
macro EIDC$W_SIZE = 2,0,16,0 %;         
macro EIDC$L_FLAGS = 4,0,32,0 %;        
macro EIDC$V_BINIDENT = 4,0,1,0 %;      
macro EIDC$V_IDMATCH = 4,1,2,0 %;
literal EIDC$S_IDMATCH = 2;             
macro EIDC$V_ERRSEV = 4,3,3,0 %;
literal EIDC$S_ERRSEV = 3;              
macro EIDC$B_NAMLNG = 8,0,8,0 %;        
macro EIDC$T_NAME = 9,0,0,0 %;          

 

literal ETIR$C_MINSTACOD = 0;           
literal ETIR$C_STA_GBL = 0;             
literal ETIR$C_STA_LW = 1;              
literal ETIR$C_STA_QW = 2;              
literal ETIR$C_STA_PQ = 3;              
literal ETIR$C_STA_LI = 4;              
literal ETIR$C_STA_MOD = 5;             
literal ETIR$C_STA_CKARG = 6;           
literal ETIR$C_MAXSTACOD = 6;           
literal ETIR$C_MINSTOCOD = 50;          
literal ETIR$C_STO_B = 50;              
literal ETIR$C_STO_W = 51;              
literal ETIR$C_STO_LW = 52;             
literal ETIR$C_STO_QW = 53;             
literal ETIR$C_STO_IMMR = 54;           
literal ETIR$C_STO_GBL = 55;            
literal ETIR$C_STO_CA = 56;             
literal ETIR$C_STO_RB = 57;             
literal ETIR$C_STO_AB = 58;             
literal ETIR$C_STO_OFF = 59;            
literal ETIR$C_STO_IMM = 61;            
literal ETIR$C_STO_GBL_LW = 62;         
literal ETIR$C_STO_BR_GBL = 64;         
literal ETIR$C_STO_BR_PS = 65;          
literal ETIR$C_MAXSTOCOD = 65;          
literal ETIR$C_MINOPRCOD = 100;         
literal ETIR$C_OPR_NOP = 100;           
literal ETIR$C_OPR_ADD = 101;           
literal ETIR$C_OPR_SUB = 102;           
literal ETIR$C_OPR_MUL = 103;           
literal ETIR$C_OPR_DIV = 104;           
literal ETIR$C_OPR_AND = 105;           
literal ETIR$C_OPR_IOR = 106;           
literal ETIR$C_OPR_EOR = 107;           
literal ETIR$C_OPR_NEG = 108;           
literal ETIR$C_OPR_COM = 109;           
literal ETIR$C_OPR_INSV = 110;          
literal ETIR$C_OPR_ASH = 111;           
literal ETIR$C_OPR_USH = 112;           
literal ETIR$C_OPR_ROT = 113;           
literal ETIR$C_OPR_SEL = 114;           
literal ETIR$C_OPR_REDEF = 115;         
literal ETIR$C_OPR_DFLIT = 116;         
literal ETIR$C_MAXOPRCOD = 116;         
literal ETIR$C_MINCTLCOD = 150;         
literal ETIR$C_CTL_SETRB = 150;         
literal ETIR$C_CTL_AUGRB = 151;         
literal ETIR$C_CTL_DFLOC = 152;         
literal ETIR$C_CTL_STLOC = 153;         
literal ETIR$C_CTL_STKDL = 154;         
literal ETIR$C_MAXCTLCOD = 154;         
literal ETIR$C_MINSTCCOD = 200;         
literal ETIR$C_STC_LP = 200;            
literal ETIR$C_STC_LP_PSB = 201;        
literal ETIR$C_STC_GBL = 202;           
literal ETIR$C_STC_GCA = 203;           
literal ETIR$C_STC_PS = 204;            
literal ETIR$C_STC_NOP_GBL = 205;       
literal ETIR$C_STC_NOP_PS = 206;        
literal ETIR$C_STC_BSR_GBL = 207;       
literal ETIR$C_STC_BSR_PS = 208;        
literal ETIR$C_STC_LDA_GBL = 209;       
literal ETIR$C_STC_LDA_PS = 210;        
literal ETIR$C_STC_BOH_GBL = 211;       
literal ETIR$C_STC_BOH_PS = 212;        
literal ETIR$C_STC_NBH_GBL = 213;       
literal ETIR$C_STC_NBH_PS = 214;        
literal ETIR$C_MAXSTCCOD = 214;         
literal ETIR$S_ETIRDEF = 4;
macro ETIR$W_RECTYP = 0,0,16,0 %;       
macro ETIR$W_SIZE = 2,0,16,0 %;         

 
literal OPC$_RQ_TERME = 1;              
literal OPC$_RQ_LOGI = 2;               
literal OPC$_RQ_RQST = 3;               
literal OPC$_RQ_REPLY = 4;              
literal OPC$_RQ_CANCEL = 5;             
literal OPC$_RQ_STATUS = 6;             
literal OPC$_RQ_SECURITY = 7;           
literal OPC$_RQ_LICENSE = 8;            
literal OPC$M_RQ_NOOCS = 128;
literal OPC$M_NM_CENTRL = %X'1';
literal OPC$M_NM_PRINT = %X'2';
literal OPC$M_NM_TAPES = %X'4';
literal OPC$M_NM_DISKS = %X'8';
literal OPC$M_NM_DEVICE = %X'10';
literal OPC$M_NM_CARDS = %X'20';
literal OPC$M_NM_NTWORK = %X'40';
literal OPC$M_NM_CLUSTER = %X'80';
literal OPC$M_NM_SECURITY = %X'100';
literal OPC$M_NM_REPLY = %X'200';
literal OPC$M_NM_SOFTWARE = %X'400';
literal OPC$M_NM_LICENSE = %X'800';
literal OPC$M_NM_OPER1 = %X'1000';
literal OPC$M_NM_OPER2 = %X'2000';
literal OPC$M_NM_OPER3 = %X'4000';
literal OPC$M_NM_OPER4 = %X'8000';
literal OPC$M_NM_OPER5 = %X'10000';
literal OPC$M_NM_OPER6 = %X'20000';
literal OPC$M_NM_OPER7 = %X'40000';
literal OPC$M_NM_OPER8 = %X'80000';
literal OPC$M_NM_OPER9 = %X'100000';
literal OPC$M_NM_OPER10 = %X'200000';
literal OPC$M_NM_OPER11 = %X'400000';
literal OPC$M_NM_OPER12 = %X'800000';
literal OPC$S_OPCDEF = 158;
macro OPC$B_MS_TYPE = 0,0,8,0 %;        
macro OPC$R_MS_C_T_S_OVERLAY = 1,0,24,0 %; 
macro OPC$R_MS_TARG_STAT_OVERLAY = 1,0,24,0 %;
macro OPC$R_MS_TARGET_OVERLAY = 1,0,8,0 %;
macro OPC$B_MS_TARGET = 1,0,8,0 %;      
macro OPC$B_MS_ENAB = 1,0,8,0 %;        
macro OPC$W_MS_STATUS = 2,0,16,0 %;     
macro OPC$Z_MS_TARGET_CLASSES = 1,0,24,0 %;
literal OPC$S_MS_TARGET_CLASSES = 3;
macro OPC$Z_MS_ENAB_TERMINALS = 1,0,24,0 %;
literal OPC$S_MS_ENAB_TERMINALS = 3;
macro OPC$R_MS_RPLYID_OVERLAY = 4,0,32,0 %;
macro OPC$L_MS_RPLYID = 4,0,32,0 %;     
macro OPC$R_MS_MASK_OVERLAY = 4,0,32,0 %;
macro OPC$L_MS_MASK = 4,0,32,0 %;       
macro OPC$L_MS_RQSTID = 4,0,32,0 %;     
macro OPC$R_MS_TEXT_OVERLAY = 8,0,32,0 %;
macro OPC$L_MS_TEXT = 8,0,32,0 %;       
macro OPC$R_MS_TEXT_FIELDS = 8,0,24,0 %;
macro OPC$W_MS_OUNIT = 8,0,16,0 %;      
macro OPC$T_MS_ONAME = 10,0,8,0 %;      
macro OPC$L_MS_OTEXT = 26,0,0,0 %;
literal OPC$S_MS_OTEXT = 128;           
macro OPC$R_MS_MAXSZ_OVERLAY = 154,0,32,0 %;
macro OPC$L_MS_MAXSZ = 154,0,32,0 %;    
macro OPC$R_MS_MAXSZ_BITS = 154,0,24,0 %;
macro OPC$V_NM_CENTRL = 154,0,1,0 %;    
macro OPC$V_NM_PRINT = 154,1,1,0 %;
macro OPC$V_NM_TAPES = 154,2,1,0 %;
macro OPC$V_NM_DISKS = 154,3,1,0 %;
macro OPC$V_NM_DEVICE = 154,4,1,0 %;
macro OPC$V_NM_CARDS = 154,5,1,0 %;
macro OPC$V_NM_NTWORK = 154,6,1,0 %;
macro OPC$V_NM_CLUSTER = 154,7,1,0 %;
macro OPC$V_NM_SECURITY = 154,8,1,0 %;
macro OPC$V_NM_REPLY = 154,9,1,0 %;
macro OPC$V_NM_SOFTWARE = 154,10,1,0 %;
macro OPC$V_NM_LICENSE = 154,11,1,0 %;
macro OPC$V_NM_OPER1 = 154,12,1,0 %;
macro OPC$V_NM_OPER2 = 154,13,1,0 %;
macro OPC$V_NM_OPER3 = 154,14,1,0 %;
macro OPC$V_NM_OPER4 = 154,15,1,0 %;
macro OPC$V_NM_OPER5 = 154,16,1,0 %;
macro OPC$V_NM_OPER6 = 154,17,1,0 %;
macro OPC$V_NM_OPER7 = 154,18,1,0 %;
macro OPC$V_NM_OPER8 = 154,19,1,0 %;
macro OPC$V_NM_OPER9 = 154,20,1,0 %;
macro OPC$V_NM_OPER10 = 154,21,1,0 %;
macro OPC$V_NM_OPER11 = 154,22,1,0 %;
macro OPC$V_NM_OPER12 = 154,23,1,0 %;
literal OPC$M_OPR_CENTRAL = %X'1';
literal OPC$M_OPR_PRINTER = %X'2';
literal OPC$M_OPR_TAPES = %X'4';
literal OPC$M_OPR_DISKS = %X'8';
literal OPC$M_OPR_DEVICES = %X'10';
literal OPC$M_OPR_CARDS = %X'20';
literal OPC$M_OPR_NETWORK = %X'40';
literal OPC$M_OPR_CLUSTER = %X'80';
literal OPC$M_OPR_SECURITY = %X'100';
literal OPC$M_OPR_REPLY = %X'200';
literal OPC$M_OPR_SOFTWARE = %X'400';
literal OPC$M_OPR_LICENSE = %X'800';
literal OPC$M_OPR_USER1 = %X'1000';
literal OPC$M_OPR_USER2 = %X'2000';
literal OPC$M_OPR_USER3 = %X'4000';
literal OPC$M_OPR_USER4 = %X'8000';
literal OPC$M_OPR_USER5 = %X'10000';
literal OPC$M_OPR_USER6 = %X'20000';
literal OPC$M_OPR_USER7 = %X'40000';
literal OPC$M_OPR_USER8 = %X'80000';
literal OPC$M_OPR_USER9 = %X'100000';
literal OPC$M_OPR_USER10 = %X'200000';
literal OPC$M_OPR_USER11 = %X'400000';
literal OPC$M_OPR_USER12 = %X'800000';
literal OPC$S_OPC_OPRDEF = 3;
macro OPC$V_OPR_CENTRAL = 0,0,1,0 %;
macro OPC$V_OPR_PRINTER = 0,1,1,0 %;
macro OPC$V_OPR_TAPES = 0,2,1,0 %;
macro OPC$V_OPR_DISKS = 0,3,1,0 %;
macro OPC$V_OPR_DEVICES = 0,4,1,0 %;
macro OPC$V_OPR_CARDS = 0,5,1,0 %;
macro OPC$V_OPR_NETWORK = 0,6,1,0 %;
macro OPC$V_OPR_CLUSTER = 0,7,1,0 %;
macro OPC$V_OPR_SECURITY = 0,8,1,0 %;
macro OPC$V_OPR_REPLY = 0,9,1,0 %;
macro OPC$V_OPR_SOFTWARE = 0,10,1,0 %;
macro OPC$V_OPR_LICENSE = 0,11,1,0 %;
macro OPC$V_OPR_USER1 = 0,12,1,0 %;
macro OPC$V_OPR_USER2 = 0,13,1,0 %;
macro OPC$V_OPR_USER3 = 0,14,1,0 %;
macro OPC$V_OPR_USER4 = 0,15,1,0 %;
macro OPC$V_OPR_USER5 = 0,16,1,0 %;
macro OPC$V_OPR_USER6 = 0,17,1,0 %;
macro OPC$V_OPR_USER7 = 0,18,1,0 %;
macro OPC$V_OPR_USER8 = 0,19,1,0 %;
macro OPC$V_OPR_USER9 = 0,20,1,0 %;
macro OPC$V_OPR_USER10 = 0,21,1,0 %;
macro OPC$V_OPR_USER11 = 0,22,1,0 %;
macro OPC$V_OPR_USER12 = 0,23,1,0 %;
literal OPC$K_SYSTEM = 1;
literal OPC$K_GROUP = 2;
literal OPC$K_USER = 3;
literal OPC$K_UNSPEC = 4;
literal OPC$C_SYSTEM = 1;
literal OPC$C_GROUP = 2;
literal OPC$C_USER = 3;
literal OPC$C_UNSPEC = 4;
literal OPC$K_SW_VERSION = 9;
literal OPC$K_MAXREAD = 2560;
literal OPC$K_MAXMESSAGE = 2048;
literal OPC$K_COMHDRSIZ = 38;
literal OPC$_OPCOMERROR = 99999;        
literal OPC$_X_OPRENABLE = 10;
literal OPC$_X_LOGFILE = 11;
literal OPC$_X_REQUEST = 12;
literal OPC$_X_REPLY = 13;
literal OPC$_X_CANCEL = 14;
literal OPC$_X_STATUS = 15;
literal OPC$_X_SHUTDOWN = 16;
literal OPC$_X_TIMESTAMP = 17;
literal OPC$_X_SECURITY = 18;
literal OPC$_X_CLUSMSG = 19;
literal OPC$_X_DEBUG = 20;
literal OPC$_X_CNXMAN = 21;
literal OPC$_X_REQUEST_END_MARK = 22;
literal OPC$K_CLM__ACKNOWLEDGEMENT = 1; 
literal OPC$K_CLM__ACKNOWLEDGE_PLEASE = 2; 
literal OPC$K_CLM__CANCEL = 3;          
literal OPC$K_CLM__CHECK_OPERATOR = 4;  
literal OPC$K_CLM__CHECK_REQUEST = 5;   
literal OPC$K_CLM__CLUMBX = 6;          
literal OPC$K_CLM__CLUSTER = 7;         
literal OPC$K_CLM__DEVICE = 8;          
literal OPC$K_CLM__IMP_CANCEL = 9;      
literal OPC$K_CLM__IMP_DISABLE = 10;    
literal OPC$K_CLM__OPRENABLE = 11;      
literal OPC$K_CLM__REPLY = 12;          
literal OPC$K_CLM__REPLY_COMPLETE = 13; 
literal OPC$K_CLM__REQUEST = 14;        
literal OPC$K_CLM__RPYBRD = 15;         
literal OPC$K_CLM__RPYBRD_LOCAL = 16;   
literal OPC$K_CLM__RPYNOT = 17;         
literal OPC$K_CLM__SECURITY = 18;       
literal OPC$K_CLM__SHUTDOWN = 19;       
literal OPC$K_CLM__LOGFILE = 20;        
literal OPC$K_CLM__REQUEST_END_MARK = 21;
literal OPC$K_HDR_SIZE = 26;            
literal OPC$S_HEADER_MESSAGE = 26;
macro OPC$B_RQSTCODE = 0,0,8,0 %;       
macro OPC$B_SCOPE = 1,0,8,0 %;          
macro OPC$L_OPTIONS = 2,0,32,0 %;       
macro OPC$L_RQ_OPTIONS = 6,0,32,0 %;    
macro OPC$B_RQOPT_CODE = 6,0,8,0 %;     
macro OPC$L_ATTNMASK1 = 10,0,32,0 %;    
macro OPC$L_ATTNMASK2 = 14,0,32,0 %;    
macro OPC$L_RQSTID = 18,0,32,0 %;       
macro OPC$L_UIC = 22,0,32,0 %;          
literal OPC$M_NOLOG = %X'1';
literal OPC$M_NOBRD = %X'2';
literal OPC$M_NOCLUSTER = %X'4';
literal OPC$S_FILL_0_ = 4;
macro OPC$V_NOLOG = 0,0,1,0 %;          
macro OPC$V_NOBRD = 0,1,1,0 %;          
macro OPC$V_NOCLUSTER = 0,2,1,0 %;      
literal OPC$K_OPRENABLE_MIN_SIZE = 30;  
literal OPC$S_OPRENABLE_MESSAGE = 26;
macro OPC$T_OPRENABLE_OPR = 26,0,0,0 %; 
literal OPC$M_DISABLE = %X'1';
literal OPC$M_PERMOPER = %X'2';
literal OPC$M_NOREMIND = %X'4';
literal OPC$S_FILL_3_ = 4;
macro OPC$V_DISABLE = 0,0,1,0 %;
macro OPC$V_PERMOPER = 0,1,1,0 %;
macro OPC$V_NOREMIND = 0,2,1,0 %;
literal OPC$K_LOGFILE_MIN_SIZE = 30;    
literal OPC$K_INITLOG = 0;              
literal OPC$K_CLOSELOG = 1;             
literal OPC$K_ENABLELOG = 2;            
literal OPC$K_DISABLELOG = 3;           
literal OPC$K_MAX_LOGOPT = 4;           
literal OPC$S_LOGFILE_MESSAGE = 26;
macro OPC$T_LOGFILE_OPR = 26,0,0,0 %;   
literal OPC$K_REQUEST_MIN_SIZE = 28;    
literal OPC$S_REQUEST_MESSAGE = 28;
macro OPC$W_REQUEST_LENGTH = 26,0,16,0 %; 
macro OPC$T_REQUEST_TEXT = 28,0,0,0 %;  
literal OPC$K_SECURITY_MIN_SIZE = 28;   
literal OPC$S_SECURITY_MESSAGE = 28;
macro OPC$W_SECURITY_LENGTH = 26,0,16,0 %; 
macro OPC$T_SECURITY_TEXT = 28,0,0,0 %; 
literal OPC$K_REPLY_MIN_SIZE = 32;
literal OPC$S_REPLY_MESSAGE = 26;
macro OPC$T_REPLY_OPR = 26,0,0,0 %;
literal OPC$K_STATUS_MIN_SIZE = 30;     
literal OPC$S_STATUS_MESSAGE = 26;
macro OPC$T_STATUS_OPR = 26,0,0,0 %;    
literal OPC$K_TIMESTAMP_MIN_SIZE = 26;  
literal OPC$S_TIMESTAMP_MESSAGE = 26;
literal OPC$K_SHUTDOWN_MIN_SIZE = 26;   
literal OPC$S_SHUTDOWN_MESSAGE = 26;
literal OPC$M_CLUSTER = %X'1';
literal OPC$S_FILL_6_ = 4;
macro OPC$V_CLUSTER = 0,0,1,0 %;
literal OPC$K_CANCEL_MIN_SIZE = 26;     
literal OPC$S_CANCEL_MESSAGE = 26;
literal OPC$M_RQSTDONE = %X'1';
literal OPC$S_FILL_9_ = 4;
macro OPC$V_RQSTDONE = 0,0,1,0 %;
literal OPCF_ARG$S_OPCF_ARG = 4;
macro OPCF_ARG$l_arg_data = 0,0,32,1 %; 
macro OPCF_ARG$r_arg_desc = 0,0,32,0 %;
literal OPCF_ARG$s_arg_desc = 4;
macro OPCF_ARG$w_arg_offset = 0,0,16,0 %; 
macro OPCF_ARG$w_arg_cntrl = 2,0,16,0 %; 
literal OPCF$S_OPCFAO = 256;
macro OPCF$w_msgtype = 0,0,16,0 %;      
macro OPCF$w_spare_1 = 2,0,16,0 %;      
macro OPCF$l_opc_msg = 4,0,32,0 %;      
macro OPCF$l_opc_class_msk = 8,0,32,0 %; 
macro OPCF$l_arg_count = 12,0,32,0 %;   
macro OPCF$r_variable_data = 16,0,0,0 %;
literal OPCF$s_variable_data = 240;
macro OPCF$r_item_arg = 16,0,0,0 %;
literal OPCF$s_item_arg = 240;          
macro OPCF$t_item_cd = 16,0,0,0 %;
literal OPCF$s_item_cd = 240;           
macro OPCF$l_item_ld = 16,0,0,0 %;
literal OPCF$s_item_ld = 240;           

literal OPCF$K_AC = 1;
literal OPCF$K_AD = 2;
literal OPCF$K_AF = 3;
literal OPCF$K_AS = 4;
literal OPCF$K_AS_DEVICE_NAME = 5;      
literal OPCF$K_AZ = 6;
literal OPCF$K_D = 7;
literal OPCF$K_I = 8;
literal OPCF$K_OA = 9;
literal OPCF$K_OB = 10;
literal OPCF$K_OH = 11;
literal OPCF$K_OI = 12;
literal OPCF$K_OJ = 13;
literal OPCF$K_OL = 14;
literal OPCF$K_OQ = 15;
literal OPCF$K_OW = 16;
literal OPCF$K_SA = 17;
literal OPCF$K_SB = 18;
literal OPCF$K_SH = 19;
literal OPCF$K_SI = 20;
literal OPCF$K_SJ = 21;
literal OPCF$K_SL = 22;
literal OPCF$K_SQ = 23;
literal OPCF$K_SW = 24;
literal OPCF$K_T = 25;
literal OPCF$K_U = 26;
literal OPCF$K_UA = 27;
literal OPCF$K_UB = 28;
literal OPCF$K_UH = 29;
literal OPCF$K_UI = 30;
literal OPCF$K_UJ = 31;
literal OPCF$K_UL = 32;
literal OPCF$K_UQ = 33;
literal OPCF$K_UW = 34;
literal OPCF$K_XA = 35;
literal OPCF$K_XB = 36;
literal OPCF$K_XH = 37;
literal OPCF$K_XI = 38;
literal OPCF$K_XJ = 39;
literal OPCF$K_XL = 40;
literal OPCF$K_XQ = 41;
literal OPCF$K_XW = 42;
literal OPCF$K_ZA = 43;
literal OPCF$K_ZB = 44;
literal OPCF$K_ZH = 45;
literal OPCF$K_ZI = 46;
literal OPCF$K_ZJ = 47;
literal OPCF$K_ZL = 48;
literal OPCF$K_ZQ = 49;
literal OPCF$K_ZW = 50;
literal OPCF$K_MIN_OPCFAO_CNTRL = 1;
literal OPCF$K_MAX_OPCFAO_CNTRL = 50;
literal OPCF$K_BY_REF = 1;              
literal OPCF$K_BY_VAL = 2;              
literal OPCF$K_BY_DESC = 3;             

 

literal OPC$_FACILITY = 5;
literal OPC$_TERMENAB = 360449;
literal OPC$_LOGINIT = 360457;
literal OPC$_TERMDSBL = 360465;
literal OPC$_RQSTABORT = 360476;
literal OPC$_RQSTPEND = 360481;
literal OPC$_RQSTCMPLTE = 360489;
literal OPC$_LOGFAIL = 360500;
literal OPC$_TERMFAIL = 360508;
literal OPC$_NOSUCHRQST = 360516;
literal OPC$_DEVOFFLINE = 360524;
literal OPC$_DEVONLINE = 360532;
literal OPC$_NOCLI = 360540;
literal OPC$_NOPERATOR = 360545;
literal OPC$_UNKNOPR = 360556;
literal OPC$_DEVNOTERM = 360564;
literal OPC$_ILLRQST = 360572;
literal OPC$_RQSTCAN = 360580;
literal OPC$_OPRNOTIF = 360585;
literal OPC$_OPREPLY = 360593;
literal OPC$_LOGTIME = 360601;
literal OPC$_LOGCLOS = 360612;
literal OPC$_USERQST = 360619;
literal OPC$_USERMSG = 360627;
literal OPC$_LOGSTS = 360635;
literal OPC$_OPERSTS = 360643;
literal OPC$_RQSTSTST = 360651;
literal OPC$_SHUTDOWN = 360659;
literal OPC$_SYSTEMOPER = 360667;
literal OPC$_GROUPOPER = 360675;
literal OPC$_USEROPER = 360683;
literal OPC$_NOTENABLED = 360691;

literal OPC$_CENTRL = 360699;
literal OPC$_PRINT = 360707;
literal OPC$_TAPES = 360715;
literal OPC$_DISKS = 360723;
literal OPC$_DEVICE = 360731;
literal OPC$_CARDS = 360739;
literal OPC$_NTWORK = 360747;
literal OPC$_CLUSTER = 360755;
literal OPC$_SECURITY = 360763;
literal OPC$_REPLY = 360771;
literal OPC$_SOFTWARE = 360779;
literal OPC$_LICENSE = 360787;
literal OPC$_OPER1 = 360795;
literal OPC$_OPER2 = 360803;
literal OPC$_OPER3 = 360811;
literal OPC$_OPER4 = 360819;
literal OPC$_OPER5 = 360827;
literal OPC$_OPER6 = 360835;
literal OPC$_OPER7 = 360843;
literal OPC$_OPER8 = 360851;
literal OPC$_OPER9 = 360859;
literal OPC$_OPER10 = 360867;
literal OPC$_OPER11 = 360875;
literal OPC$_OPER12 = 360883;
literal OPC$_DEVOFFLINX = 360891;
literal OPC$_WRONGVOL = 360899;
literal OPC$_DEVWRTLCK = 360907;
literal OPC$_INITAPE = 360915;
literal OPC$_RQSTDONE = 360923;
literal OPC$_BLANKTAPE = 360931;
literal OPC$_MVCOMPLETE = 360939;
literal OPC$_MVABORTED = 360947;
literal OPC$_CTLRUCODE = 360955;
literal OPC$_DUPUNITNO = 360963;
literal OPC$_SECUR_ALARM = 360971;
literal OPC$_COUNTERFEIT = 360979;
literal OPC$_NODE_ACTIVE = 360987;
literal OPC$_NODE_DELETE = 360995;
literal OPC$_NODE_DEPARTED = 361003;
literal OPC$_NODE_INIT = 361011;
literal OPC$_NODE_RETRY = 361019;
literal OPC$_NODE_START = 361027;
literal OPC$_UNKNOWN = 361035;
literal OPC$_CLUSCOMM = 361043;
literal OPC$_VALUERR = 361052;
literal OPC$_NOTRQCB = 361060;
literal OPC$_REPLY_GENERAL = 361067;
literal OPC$_REPLY_SHUTDOWN = 361075;
literal OPC$_REPLY_URGENT = 361083;
literal OPC$_REPLY_NOTALL = 361091;
literal OPC$_REPLY_NOTALLN = 361099;
literal OPC$_REPLY_NOTDEV = 361107;
literal OPC$_REPLY_NOTUSE = 361115;
literal OPC$_REPLY_NOTUSEN = 361123;
literal OPC$_ON_NODE = 361131;          
literal OPC$_HEADER = 361139;
literal OPC$_RQST_PROMPT = 361147;
literal OPC$_NOLCLBROAD = 361152;
literal OPC$_NOREMBROAD = 361160;
literal OPC$_NOREMWAIT = 361168;

literal OPC$_CLU_NEWSYS = 361179;
literal OPC$_CLU_CNX = 361187;
literal OPC$_CLU_RECNX = 361195;
literal OPC$_CLU_LOSTCNX = 361203;
literal OPC$_CLU_TIMCNX = 361211;
literal OPC$_CLU_INIFORM = 361219;
literal OPC$_CLU_INIADD = 361227;
literal OPC$_CLU_INIRECNFIG = 361235;
literal OPC$_CLU_MEMREQ = 361243;
literal OPC$_CLU_ABORT = 361251;
literal OPC$_CLU_ADD = 361259;
literal OPC$_CLU_DROPNODE = 361267;
literal OPC$_CLU_FORNCLUS = 361275;
literal OPC$_CLU_INQUORUM = 361283;
literal OPC$_CLU_LOSTDISK = 361291;
literal OPC$_CLU_GAINDISK = 361299;
literal OPC$_CLU_DISKRDERR = 361307;
literal OPC$_CLU_DISKWRERR = 361315;
literal OPC$_CLU_DISKINVDAT = 361323;
literal OPC$_CLU_DISKTIMEOUT = 361331;
literal OPC$_CLU_LOSTMSG = 361339;
literal OPC$_CLU_NOQUORUM = 361347;
literal OPC$_CLU_FORNDISK = 361355;
literal OPC$_CLU_COMPLETE = 361363;
literal OPC$_CLU_QUORUM = 361371;
literal OPC$_CLU_ECNX = 361379;
literal OPC$_CLU_HAVEDISK = 361387;
literal OPC$_CLU_REMOTE = 361395;
literal OPC$_CLU_LOCAL = 361403;
literal OPC$_CLU_WTCHTIMEOUT = 361411;
literal OPC$_CLU_NOTRUST = 361419;      

literal OPC$_SHACHASTA = 361427;
literal OPC$_SHAMEMFAL = 361435;
literal OPC$_SHARDUCED = 361443;
literal OPC$_SHACOPCOM = 361451;
literal OPC$_SHACOPBEG = 361459;
literal OPC$_SHAALLCOM = 361467;
literal OPC$_SHAWROMEM = 361475;
literal OPC$_SHAREDZER = 361483;
literal OPC$_SHAPOSMEM = 361491;
literal OPC$_SHAORGMEM = 361499;
literal OPC$_NOOPCOM = 361504;

literal OPC$_SHAADPBAD = 361515;
literal OPC$_SHAEMUPTH = 361523;
literal OPC$_SHABENODMP = 361531;
literal OPC$_SHABNODMP = 361539;
literal OPC$_SHALOCDEV = 361547;
literal OPC$_SHANOBPOK = 361555;
literal OPC$_SHABDMPOK = 361563;
literal OPC$_BOOTDMPOK = 361571;
literal OPC$_SHABDBCK = 361579;
literal OPC$_SHANODMP = 361587;
literal OPC$_SHADMPOK = 361595;         
literal OPC$_PATHNOTAVL = 361603;
literal OPC$_PATHAVL = 361611;
literal OPC$_PATHUSERD = 361619;
literal OPC$_PATHAUTSW = 361627;
literal OPC$_PATHMANSW = 361635;
literal OPC$_OPA0CLERR = 361640;
literal OPC$_LOGFCLERR = 361648;
literal OPC$_WSINCLUSTER = 361659;
literal OPC$_LOGIN_REJECTED = 361664;
literal OPC$_MVSUPMSG = 361675;

 

literal PPL$K_ABNORMAL_EXIT = -2;       
literal PPL$K_NORMAL_EXIT = -1;         

literal PPL$M_NOZERO = %X'1';
literal PPL$M_NOWRT = %X'2';
literal PPL$M_FLUSH = %X'4';
literal PPL$M_NOUNI = %X'8';
literal PPL$m_mopt_spare = %X'FFFFFFF0';
literal PPL$S_mem_options = 4;
macro PPL$V_NOZERO = 0,0,1,0 %;         
macro PPL$V_NOWRT = 0,1,1,0 %;          
macro PPL$V_FLUSH = 0,2,1,0 %;          
macro PPL$V_NOUNI = 0,3,1,0 %;          
macro PPL$v_mopt_spare = 0,4,28,0 %;
literal PPL$s_mopt_spare = 28;          

literal PPL$M_INIT_SYNCH = %X'1';
literal PPL$M_NODEBUG = %X'2';
literal PPL$M_STOP_CHILDREN = %X'4';
literal PPL$M_NON_BLOCKING = %X'8';
literal PPL$M_NOTIFY_ONE = %X'10';
literal PPL$M_SPIN_WAIT = %X'20';
literal PPL$M_FORMONLY = %X'40';
literal PPL$M_JOINONLY = %X'80';
literal PPL$M_PERM = %X'100';
literal PPL$M_SYSTEM = %X'200';
literal PPL$M_DELETEALL = %X'400';
literal PPL$M_TAILFIRST = %X'800';
literal PPL$M_ATHEAD = %X'1000';
literal PPL$M_FROMTAIL = %X'2000';
literal PPL$M_FORCEDEL = %X'4000';
literal PPL$M_NOCLISYM = %X'8000';
literal PPL$M_NOLOGNAM = %X'10000';
literal PPL$M_NOKEYPAD = %X'20000';
literal PPL$M_NOTIFY = %X'40000';
literal PPL$M_NOCONTROL = %X'80000';
literal PPL$M_CALL_UNIQUE = %X'100000';
literal PPL$M_PROC_UNIQUE = %X'200000';
literal PPL$M_SPIN_COUNTED = %X'400000';
literal PPL$M_NOSAVE_PROC_INFO = %X'800000';
literal PPL$M_IGNORE_EXITS = %X'1000000';
literal PPL$m_popt_spare = %X'FE000000';
literal PPL$S_proc_options = 4;
macro PPL$V_INIT_SYNCH = 0,0,1,0 %;     
macro PPL$V_NODEBUG = 0,1,1,0 %;        
macro PPL$V_STOP_CHILDREN = 0,2,1,0 %;  
macro PPL$V_NON_BLOCKING = 0,3,1,0 %;   
macro PPL$V_NOTIFY_ONE = 0,4,1,0 %;     
macro PPL$V_SPIN_WAIT = 0,5,1,0 %;      
macro PPL$V_FORMONLY = 0,6,1,0 %;       
macro PPL$V_JOINONLY = 0,7,1,0 %;       
macro PPL$V_PERM = 0,8,1,0 %;           
macro PPL$V_SYSTEM = 0,9,1,0 %;         
macro PPL$V_DELETEALL = 0,10,1,0 %;     
macro PPL$V_TAILFIRST = 0,11,1,0 %;     
macro PPL$V_ATHEAD = 0,12,1,0 %;        
macro PPL$V_FROMTAIL = 0,13,1,0 %;      
macro PPL$V_FORCEDEL = 0,14,1,0 %;      
macro PPL$V_NOCLISYM = 0,15,1,0 %;      
macro PPL$V_NOLOGNAM = 0,16,1,0 %;      
macro PPL$V_NOKEYPAD = 0,17,1,0 %;      
macro PPL$V_NOTIFY = 0,18,1,0 %;        
macro PPL$V_NOCONTROL = 0,19,1,0 %;     
macro PPL$V_CALL_UNIQUE = 0,20,1,0 %;   
macro PPL$V_PROC_UNIQUE = 0,21,1,0 %;   
macro PPL$V_SPIN_COUNTED = 0,22,1,0 %;  
macro PPL$V_NOSAVE_PROC_INFO = 0,23,1,0 %;
macro PPL$V_IGNORE_EXITS = 0,24,1,0 %;
macro PPL$v_popt_spare = 0,25,7,0 %;
literal PPL$s_popt_spare = 7;           

 

literal FAL$_FACILITY = 503;

literal FAL$_OFFSET_A = 1024;
literal FAL$_DAPFAIL = 33005572;
literal FAL$_RMSABO = 33005580;
literal FAL$_RMSAST = 33005644;
literal FAL$_RMSBPA = 33005652;
literal FAL$_RMSBPS = 33005660;
literal FAL$_RMSCLS = 33005748;
literal FAL$_RMSFID = 33005940;
literal FAL$_RMSINI = 33006028;
literal FAL$_RMSLBL = 33006100;
literal FAL$_RMSLBY = 33006108;
literal FAL$_RMSLCH = 33006116;
literal FAL$_RMSLOC = 33006132;
literal FAL$_RMSMAP = 33006140;
literal FAL$_RMSNID = 33006188;
literal FAL$_RMSOPN = 33006204;
literal FAL$_RMSPRM = 33006244;
literal FAL$_RMSSTK = 33006428;
literal FAL$_RMSVOL = 33006484;
literal FAL$_RMSCAA = 33006532;
literal FAL$_RMSBLK = 33006796;
literal FAL$_RMSBSZ = 33006804;
literal FAL$_RMSCDR = 33006812;
literal FAL$_RMSCGJ = 33006820;
literal FAL$_RMSCOF = 33006828;
literal FAL$_RMSJFN = 33006836;
literal FAL$_RMSPEF = 33006844;
literal FAL$_RMSTRU = 33006852;
literal FAL$_RMSUDF = 33006860;
literal FAL$_RMSXCL = 33006868;
literal FAL$_DAPDIRFUL = 33006876;
literal FAL$_FCSHWR = 33006884;
literal FAL$_FCSFHE = 33006892;
literal FAL$_DAPWRTEOF = 33006900;
literal FAL$_FCSONP = 33006908;
literal FAL$_FCSDNA = 33006916;
literal FAL$_FCSDAA = 33006924;
literal FAL$_FCSDUN = 33006932;
literal FAL$_FCSRSU = 33006940;
literal FAL$_FCSOVR = 33006948;
literal FAL$_FCSBCC = 33006956;
literal FAL$_FCSNOD = 33006964;
literal FAL$_FCSIFU = 33006972;
literal FAL$_FCSHFU = 33006980;
literal FAL$_FCSWAC = 33006988;
literal FAL$_FCSCKS = 33006996;
literal FAL$_FCSWAT = 33007004;
literal FAL$_FCSALN = 33007012;
literal FAL$_FCSBTF = 33007020;
literal FAL$_FCSILL = 33007028;
literal FAL$_FCS2DV = 33007036;
literal FAL$_FCSFEX = 33007044;
literal FAL$_FCSRNM = 33007052;
literal FAL$_FCSFOP = 33007060;
literal FAL$_FCSVER = 33007068;
literal FAL$_FCSEOV = 33007076;
literal FAL$_FCSDAO = 33007084;
literal FAL$_FCSBBE = 33007092;
literal FAL$_FCSEOT = 33007100;
literal FAL$_FCSNBF = 33007108;
literal FAL$_FCSNBK = 33007116;
literal FAL$_FCSNST = 33007124;
literal FAL$_FCSULK = 33007132;
literal FAL$_FCSNLN = 33007140;
literal FAL$_FCSSRE = 33007148;
literal FAL$_DAPQUOEXC = 33007180;
literal FAL$_DAPDIRCAF = 33007412;
literal FAL$_DAPDIRCRA = 33007420;
literal FAL$_DAPDIRPRO = 33007428;
literal FAL$_DAPDIRPRA = 33007436;
literal FAL$_DAPDIRNFA = 33007444;
literal FAL$_DAPDIRCON = 33007452;
literal FAL$_TENFILMOD = 33007732;
literal FAL$_TENDEVNA = 33007740;
literal FAL$_TENDEVNF = 33007748;
literal FAL$_TENPARALL = 33007756;
literal FAL$_TENBNFREE = 33007764;
literal FAL$_TENCSDF = 33007772;
literal FAL$_TENCDDF = 33007780;
literal FAL$_TENSFDNF = 33007788;
literal FAL$_TENSLE = 33007796;
literal FAL$_TENSFDCNT = 33007804;
literal FAL$_TENNCESL = 33007812;
literal FAL$_TENCUPFIL = 33007820;
literal FAL$_TENNETCAP = 33007828;
literal FAL$_TENTSKNA = 33007836;
literal FAL$_TENNODNF = 33007844;
literal FAL$_TENSFDREN = 33007852;
literal FAL$_TENCDFNDR = 33007860;
literal FAL$_TENJCREAD = 33007868;
literal FAL$_TENRENSFD = 33007876;
literal FAL$_TENDEVDWN = 33007884;
literal FAL$_TENDEVRES = 33007892;
literal FAL$_TENDEVMDA = 33007900;
literal FAL$_TENDEVALL = 33007908;
literal FAL$_TENILLDM = 33007916;
literal FAL$_TENLPTPAG = 33007924;
literal FAL$_TENLPTVFU = 33007932;
literal FAL$_TENLPTCHR = 33007940;
literal FAL$_TENLPTRAM = 33007948;
literal FAL$_TENFILSPC = 33007956;
literal FAL$_TENNSNOD = 33007964;
literal FAL$_TENANODI = 33007972;
literal FAL$_TENSNODI = 33007980;
literal FAL$_TENNSDEV = 33007988;
literal FAL$_TENADEVI = 33007996;
literal FAL$_TENSDEVI = 33008004;
literal FAL$_TENNSDIR = 33008012;
literal FAL$_TENADIRI = 33008020;
literal FAL$_TENSDIRI = 33008028;
literal FAL$_TENNSFIL = 33008036;
literal FAL$_TENAFILI = 33008044;
literal FAL$_TENSFILI = 33008052;
literal FAL$_TENAFILR = 33008060;
literal FAL$_TENSFILR = 33008068;
literal FAL$_DTFFALSHT = 33008108;
literal FAL$_DTFNOFIL = 33008116;
literal FAL$_DTFNOREC = 33008124;
literal FAL$_DTFNOTREG = 33008132;
literal FAL$_DTFOPRABO = 33008140;
literal FAL$_DTFRDCKP = 33008164;

literal FAL$_OFFSET_B = 2048;
literal FAL$_ORG = 33014932;
literal FAL$_RFM = 33014940;
literal FAL$_RAT = 33014948;
literal FAL$_BLS = 33014956;
literal FAL$_MRS = 33014964;
literal FAL$_ALQ1 = 33014972;
literal FAL$_BKS = 33014980;
literal FAL$_FSZ = 33014988;
literal FAL$_MRN = 33014996;
literal FAL$_DEQ1 = 33015012;
literal FAL$_FOP1 = 33015020;
literal FAL$_LRL = 33015052;
literal FAL$_ACCFUNC = 33015428;
literal FAL$_FAC = 33015452;
literal FAL$_SHR = 33015460;
literal FAL$_CTLFUNC = 33015940;
literal FAL$_RAC = 33015956;
literal FAL$_KEY = 33015964;
literal FAL$_KRF = 33015972;
literal FAL$_ROP = 33015980;
literal FAL$_CONFUNC = 33016452;
literal FAL$_CMPFUNC = 33017476;
literal FAL$_FOP2 = 33017484;
literal FAL$_FLG = 33019020;
literal FAL$_DFL = 33019028;
literal FAL$_IFL = 33019036;
literal FAL$_POS = 33019052;
literal FAL$_SIZ = 33019060;
literal FAL$_REF = 33019068;
literal FAL$_KNM = 33019076;
literal FAL$_NUL = 33019084;
literal FAL$_IAN = 33019092;
literal FAL$_LAN = 33019100;
literal FAL$_DAN = 33019108;
literal FAL$_DTP = 33019116;
literal FAL$_VOL = 33019532;
literal FAL$_ALN = 33019540;
literal FAL$_AOP = 33019548;
literal FAL$_LOC = 33019556;
literal FAL$_ALQ2 = 33019572;
literal FAL$_AID = 33019580;
literal FAL$_BKZ = 33019588;
literal FAL$_DEQ2 = 33019596;
literal FAL$_CDT = 33020556;
literal FAL$_RDT = 33020564;
literal FAL$_EDT = 33020572;
literal FAL$_RVN = 33020580;
literal FAL$_OWNER = 33021068;
literal FAL$_PROTSYS = 33021076;
literal FAL$_PROTOWN = 33021084;
literal FAL$_PROTGRP = 33021092;
literal FAL$_PROTWLD = 33021100;

 

literal RMS$_FACILITY = 1;
literal RMS$V_STVSTATUS = 14;           

literal RMS$_SUC = 65537;
literal RMS$_NORMAL = 65537;

literal RMS$_STALL = 98305;
literal RMS$_PENDING = 98313;
literal RMS$_OK_DUP = 98321;
literal RMS$_OK_IDX = 98329;

literal RMS$_OK_RLK = 98337;
literal RMS$_OK_RRL = 98345;

literal RMS$_KFF = 98353;
literal RMS$_OK_ALK = 98361;
literal RMS$_OK_DEL = 98369;
literal RMS$_OK_RNF = 98377;
literal RMS$_OK_LIM = 98385;
literal RMS$_OK_NOP = 98393;
literal RMS$_OK_WAT = 98401;

literal RMS$_CRE_STM = 98409;
literal RMS$_OK_RULK = 98417;
literal RMS$_SYNCH = 98425;
literal RMS$_OK_ACT = 98433;
literal RMS$_OK_NOCURTID = 98441;

literal RMS$_CONTROLC = 67153;          
literal RMS$_CONTROLO = 67081;
literal RMS$_CONTROLY = 67089;
literal RMS$_CREATED = 67097;
literal RMS$_SUPERSEDE = 67121;
literal RMS$_OVRDSKQUOTA = 67177;
literal RMS$_FILEPURGED = 67193;

literal RMS$_BOF = 98712;
literal RMS$_RNL = 98720;
literal RMS$_RTB = 98728;
literal RMS$_TMO = 98736;
literal RMS$_TNS = 98744;
literal RMS$_BES = 98752;
literal RMS$_PES = 98760;

literal RMS$_ACT = 98906;
literal RMS$_DEL = 98914;
literal RMS$_INCOMPSHR = 98922;
literal RMS$_DNR = 98930;
literal RMS$_EOF = 98938;
literal RMS$_FEX = 98946;
literal RMS$_FLK = 98954;
literal RMS$_FNF = 98962;
literal RMS$_PRV = 98970;
literal RMS$_REX = 98978;
literal RMS$_RLK = 98986;
literal RMS$_RNF = 98994;
literal RMS$_WLK = 99002;
literal RMS$_EXP = 99010;
literal RMS$_NMF = 99018;
literal RMS$_SUP = 99026;

literal RMS$_RSA = 99034;
literal RMS$_CRC = 99042;
literal RMS$_WCC = 99050;
literal RMS$_IDR = 99058;
literal RMS$_LWC = 99066;
literal RMS$_UNUSED1 = 99074;
literal RMS$_NOVALPRS = 99082;
literal RMS$_KEY_MISMATCH = 99090;
literal RMS$_RUH = 99098;
literal RMS$_JND = 99106;
literal RMS$_BADPHASE = 99114;
literal RMS$_TOWDR = 99122;
literal RMS$_NEXDR = 99130;
literal RMS$_INVDRMSG = 99138;
literal RMS$_RU_ACTIVE = 99146;
literal RMS$_UNKRUFAC = 99154;
literal RMS$_LIMBO = 99162;
literal RMS$_IVATRACE = 99170;
literal RMS$_OPNOTSUP = 99178;
literal RMS$_EXTNOTFOU = 99186;
literal RMS$_EXT_ERR = 99194;
literal RMS$_SEMANTICS = 99202;
literal RMS$_LSCAN = 99210;
literal RMS$_ROOTSRCH = 99218;
literal RMS$_IDXSEARCH = 99226;
literal RMS$_NETBTS = 99234;
literal RMS$_NXR = 99242;

literal RMS$_EOFASY_SYNCH = 99250;

literal RMS$_ACC = 114690;
literal RMS$_CRE = 114698;
literal RMS$_DAC = 114706;
literal RMS$_ENT = 114714;
literal RMS$_EXT = 114722;
literal RMS$_FND = 114730;
literal RMS$_MKD = 114738;
literal RMS$_DPE = 114746;
literal RMS$_SPL = 114754;
literal RMS$_DNF = 114762;
literal RMS$_RUF = 114770;
literal RMS$_WRTJNL_AIJ = 114778;
literal RMS$_WRTJNL_BIJ = 114786;
literal RMS$_WRTJNL_ATJ = 114794;
literal RMS$_WRTJNL_RUJ = 114802;
literal RMS$_RRF = 114810;
literal RMS$_DDTM_ERR = 114818;

literal RMS$_DTFCDDREC = 99308;
literal RMS$_AID = 99316;
literal RMS$_ALN = 99324;
literal RMS$_ALQ = 99332;
literal RMS$_ANI = 99340;
literal RMS$_AOP = 99348;
literal RMS$_BKS = 99356;
literal RMS$_BKZ = 99364;
literal RMS$_BLN = 99372;
literal RMS$_BUG = 99380;
literal RMS$_BUG_DDI = 99388;
literal RMS$_BUG_DAP = 99396;
literal RMS$_BUG_RU_ACTIVE = 99404;
literal RMS$_BUG_RURECERR = 99412;
literal RMS$_BUG_FLUSH_JNL_FAILED = 99420;
literal RMS$_BUG_RU_ABORT_FAIL = 99428;
literal RMS$_BUG_RU_COMMIT_FAIL = 99436;
literal RMS$_BUG_XX6 = 99444;
literal RMS$_BUG_XX7 = 99452;
literal RMS$_BUG_XX8 = 99460;
literal RMS$_BUSY = 99468;
literal RMS$_CCR = 99476;
literal RMS$_CHG = 99484;
literal RMS$_CHK = 99492;
literal RMS$_COD = 99500;
literal RMS$_CUR = 99508;
literal RMS$_DAN = 99516;
literal RMS$_DEV = 99524;
literal RMS$_DIR = 99532;
literal RMS$_DME = 99540;
literal RMS$_DNA = 99548;
literal RMS$_DTP = 99556;
literal RMS$_DUP = 99564;
literal RMS$_DVI = 99572;
literal RMS$_ESA = 99580;
literal RMS$_ESS = 99588;
literal RMS$_FAB = 99596;
literal RMS$_FAC = 99604;
literal RMS$_FLG = 99612;
literal RMS$_FNA = 99620;
literal RMS$_FNM = 99628;
literal RMS$_FSZ = 99636;
literal RMS$_FOP = 99644;
literal RMS$_FUL = 99652;
literal RMS$_IAL = 99660;
literal RMS$_IAN = 99668;
literal RMS$_IDX = 99676;
literal RMS$_IFI = 99684;
literal RMS$_IMX = 99692;
literal RMS$_IOP = 99700;
literal RMS$_IRC = 99708;
literal RMS$_ISI = 99716;
literal RMS$_KBF = 99724;
literal RMS$_KEY = 99732;
literal RMS$_KRF = 99740;
literal RMS$_KSZ = 99748;
literal RMS$_LAN = 99756;
literal RMS$_RUNDOWN = 99764;
literal RMS$_LNE = 99772;
literal RMS$_DTFCVT = 99780;
literal RMS$_MRN = 99788;
literal RMS$_MRS = 99796;
literal RMS$_NAM = 99804;
literal RMS$_NEF = 99812;
literal RMS$_DTFQUASYN = 99820;
literal RMS$_NOD = 99828;
literal RMS$_NPK = 99836;
literal RMS$_ORD = 99844;               
literal RMS$_ORG = 99852;
literal RMS$_PBF = 99860;
literal RMS$_PLG = 99868;
literal RMS$_POS = 99876;
literal RMS$_DTFQUAVAL = 99884;
literal RMS$_QUO = 99892;
literal RMS$_RAB = 99900;
literal RMS$_RAC = 99908;
literal RMS$_RAT = 99916;
literal RMS$_RBF = 99924;
literal RMS$_RFA = 99932;
literal RMS$_RFM = 99940;
literal RMS$_RHB = 99948;
literal RMS$_RLF = 99956;
literal RMS$_ROP = 99964;
literal RMS$_RRV = 99972;
literal RMS$_RVU = 99980;
literal RMS$_RSS = 99988;
literal RMS$_RST = 99996;
literal RMS$_RSZ = 100004;
literal RMS$_SEQ = 100012;
literal RMS$_SHR = 100020;
literal RMS$_SIZ = 100028;
literal RMS$_SQO = 100036;
literal RMS$_DTFSESEST = 100044;
literal RMS$_SYN = 100052;
literal RMS$_TRE = 100060;
literal RMS$_TYP = 100068;
literal RMS$_UBF = 100076;
literal RMS$_USZ = 100084;
literal RMS$_VER = 100092;
literal RMS$_XNF = 100100;
literal RMS$_XAB = 100108;
literal RMS$_ESL = 100116;
literal RMS$_DTFSESTER = 100124;
literal RMS$_ENV = 100132;
literal RMS$_PLV = 100140;
literal RMS$_MBC = 100148;
literal RMS$_RSL = 100156;
literal RMS$_WLD = 100164;
literal RMS$_NET = 100172;              
literal RMS$_IBF = 100180;
literal RMS$_REF = 100188;
literal RMS$_IFL = 100196;
literal RMS$_DFL = 100204;
literal RMS$_KNM = 100212;
literal RMS$_IBK = 100220;
literal RMS$_KSI = 100228;
literal RMS$_LEX = 100236;
literal RMS$_SEG = 100244;
literal RMS$_SNE = 100252;              
literal RMS$_SPE = 100260;              
literal RMS$_UPI = 100268;
literal RMS$_ACS = 100276;
literal RMS$_STR = 100284;
literal RMS$_FTM = 100292;
literal RMS$_GBC = 100300;
literal RMS$_DEADLOCK = 100308;
literal RMS$_EXENQLM = 100316;
literal RMS$_JOP = 100324;
literal RMS$_RUM = 100332;
literal RMS$_JNS = 100340;
literal RMS$_NRU = 100348;
literal RMS$_IFF = 100356;
literal RMS$_DTFTRATBL = 100364;
literal RMS$_DTFUNSTYP = 100372;
literal RMS$_DTFVERMIS = 100380;

literal RMS$_DTFACC = 100386;

literal RMS$_BOGUSCOL = 100396;
literal RMS$_ERRREADCOL = 100404;
literal RMS$_ERRWRITECOL = 100412;
literal RMS$_SNS = 100420;
literal RMS$_NOEXTEND = 100428;         

literal RMS$_DTFCRE = 100434;

literal RMS$_DELJNS = 100444;
literal RMS$_NOTSAMEJNL = 100452;
literal RMS$_SNPPF = 100460;
literal RMS$_NAML = 100468;
literal RMS$_NAMLESS = 100476;
literal RMS$_NAMLRSS = 100484;
literal RMS$_NAMLFSSIZ = 100492;
literal RMS$_NAMLFSINV = 100500;
literal RMS$_BADGBH = 100508;
literal RMS$_BADGBD = 100516;

literal RMS$_ATR = 114892;
literal RMS$_ATW = 114900;
literal RMS$_CCF = 114908;
literal RMS$_CDA = 114916;
literal RMS$_CHN = 114924;
literal RMS$_RER = 114932;
literal RMS$_RMV = 114940;
literal RMS$_RPL = 114948;
literal RMS$_SYS = 114956;
literal RMS$_WER = 114964;
literal RMS$_WPL = 114972;
literal RMS$_IFA = 114980;
literal RMS$_WBE = 114988;
literal RMS$_ENQ = 114996;
literal RMS$_NETFAIL = 115004;
literal RMS$_SUPPORT = 115012;
literal RMS$_CRMP = 115020;
literal RMS$_DTFCFGFIL = 115028;
literal RMS$_REENT = 115036;
literal RMS$_ACC_RUJ = 115044;
literal RMS$_TMR = 115052;
literal RMS$_ACC_AIJ = 115060;
literal RMS$_ACC_BIJ = 115068;
literal RMS$_ACC_ATJ = 115076;
literal RMS$_DTFDEFFIL = 115084;
literal RMS$_DTFREGFIL = 115092;
literal RMS$_JNLNOTAUTH = 115100;
literal RMS$_CRBUFOBJ = 115108;
literal RMS$_RSESTK_ALLOC = 115116;

 

literal CVTFNM$M_WORD_CHARS = %X'1';
literal CVTFNM$M_NO_DELIMITERS = %X'2';
literal CVTFNM$M_FORCE_UPCASE = %X'4';
literal CVTFNM$S_INOUTFLAGS = 4;
macro CVTFNM$V_WORD_CHARS = 0,0,1,0 %;  
macro CVTFNM$V_NO_DELIMITERS = 0,1,1,0 %; 
macro CVTFNM$V_FORCE_UPCASE = 0,2,1,0 %; 

literal CVTFNM$C_RMS_TO_ACPQIO = 1;
literal CVTFNM$C_ACPQIO_TO_RMS = 2;
literal CVTFNM$K_RMS_TO_ACPQIO = 1;
literal CVTFNM$K_ACPQIO_TO_RMS = 2;
 

literal FAB$C_BID = 3;                  
literal FAB$M_PPF_RAT = %X'3FC0';
literal FAB$M_PPF_IND = %X'4000';
literal FAB$M_PPIFI = %X'8000';
literal FAB$M_ASY = %X'1';
literal FAB$M_MXV = %X'2';
literal FAB$M_SUP = %X'4';
literal FAB$M_TMP = %X'8';
literal FAB$M_TMD = %X'10';
literal FAB$M_DFW = %X'20';
literal FAB$M_SQO = %X'40';
literal FAB$M_RWO = %X'80';
literal FAB$M_POS = %X'100';
literal FAB$M_WCK = %X'200';
literal FAB$M_NEF = %X'400';
literal FAB$M_RWC = %X'800';
literal FAB$M_DMO = %X'1000';
literal FAB$M_SPL = %X'2000';
literal FAB$M_SCF = %X'4000';
literal FAB$M_DLT = %X'8000';
literal FAB$M_NFS = %X'10000';
literal FAB$M_UFO = %X'20000';
literal FAB$M_PPF = %X'40000';
literal FAB$M_INP = %X'80000';
literal FAB$M_CTG = %X'100000';
literal FAB$M_CBT = %X'200000';
literal FAB$M_SYNCSTS = %X'400000';
literal FAB$M_RCK = %X'800000';
literal FAB$M_NAM = %X'1000000';
literal FAB$M_CIF = %X'2000000';
literal FAB$M_ESC = %X'8000000';
literal FAB$M_TEF = %X'10000000';
literal FAB$M_OFP = %X'20000000';
literal FAB$M_KFO = %X'40000000';
literal FAB$M_ERL = %X'8000';
literal FAB$M_PUT = %X'1';
literal FAB$M_GET = %X'2';
literal FAB$M_DEL = %X'4';
literal FAB$M_UPD = %X'8';
literal FAB$M_TRN = %X'10';
literal FAB$M_BIO = %X'20';
literal FAB$M_BRO = %X'40';
literal FAB$M_EXE = %X'80';
literal FAB$M_SHRPUT = %X'1';
literal FAB$M_SHRGET = %X'2';
literal FAB$M_SHRDEL = %X'4';
literal FAB$M_SHRUPD = %X'8';
literal FAB$M_MSE = %X'10';
literal FAB$M_NIL = %X'20';
literal FAB$M_UPI = %X'40';
literal FAB$M_NQL = %X'80';
literal FAB$M_ORG = %X'F0';
literal FAB$C_SEQ = 0;                  
literal FAB$C_REL = 16;                 
literal FAB$C_IDX = 32;                 
literal FAB$C_HSH = 48;                 
literal FAB$C_SPECIAL = 64;             
literal FAB$M_FTN = %X'1';
literal FAB$M_CR = %X'2';
literal FAB$M_PRN = %X'4';
literal FAB$M_BLK = %X'8';
literal FAB$M_MSB = %X'10';
literal FAB$C_FIFO = 1;                 
literal FAB$C_CHAR_SPECIAL = 2;         
literal FAB$C_BLOCK_SPECIAL = 3;        
literal FAB$C_SYMLINK = 4;              
literal FAB$C_RFM_DFLT = 2;             
literal FAB$C_UDF = 0;                  
literal FAB$C_FIX = 1;                  
literal FAB$C_VAR = 2;                  
literal FAB$C_VFC = 3;                  
literal FAB$C_STM = 4;                  
literal FAB$C_STMLF = 5;                
literal FAB$C_STMCR = 6;                
literal FAB$C_MAXRFM = 6;               
literal FAB$M_ONLY_RU = %X'1';
literal FAB$M_RU = %X'2';
literal FAB$M_BI = %X'4';
literal FAB$M_AI = %X'8';
literal FAB$M_AT = %X'10';
literal FAB$M_NEVER_RU = %X'20';
literal FAB$M_JOURNAL_FILE = %X'40';
literal FAB$M_RCF_RU = %X'1';
literal FAB$M_RCF_AI = %X'2';
literal FAB$M_RCF_BI = %X'4';
literal FAB$S_FABDEF = 80;
macro FAB$B_BID = 0,0,8,0 %;            
macro FAB$B_BLN = 1,0,8,0 %;            
macro FAB$R_IFI_OVERLAY = 2,0,16,0 %;
macro FAB$W_IFI = 2,0,16,0 %;           
macro FAB$R_IFI_BITS = 2,0,16,0 %;
macro FAB$V_PPF_RAT = 2,6,8,0 %;
literal FAB$S_PPF_RAT = 8;              
macro FAB$V_PPF_IND = 2,14,1,0 %;       
macro FAB$V_PPIFI = 2,15,1,0 %;         
macro FAB$R_FOP_OVERLAY = 4,0,32,0 %;
macro FAB$L_FOP = 4,0,32,0 %;           
macro FAB$R_FOP_BITS = 4,0,32,0 %;
macro FAB$V_ASY = 4,0,1,0 %;            
macro FAB$V_MXV = 4,1,1,0 %;            
macro FAB$V_SUP = 4,2,1,0 %;            
macro FAB$V_TMP = 4,3,1,0 %;            
macro FAB$V_TMD = 4,4,1,0 %;            
macro FAB$V_DFW = 4,5,1,0 %;            
macro FAB$V_SQO = 4,6,1,0 %;            
macro FAB$V_RWO = 4,7,1,0 %;            
macro FAB$V_POS = 4,8,1,0 %;            
macro FAB$V_WCK = 4,9,1,0 %;            
macro FAB$V_NEF = 4,10,1,0 %;           
macro FAB$V_RWC = 4,11,1,0 %;           
macro FAB$V_DMO = 4,12,1,0 %;           
macro FAB$V_SPL = 4,13,1,0 %;           
macro FAB$V_SCF = 4,14,1,0 %;           
macro FAB$V_DLT = 4,15,1,0 %;           
macro FAB$V_NFS = 4,16,1,0 %;           
macro FAB$V_UFO = 4,17,1,0 %;           
macro FAB$V_PPF = 4,18,1,0 %;           
macro FAB$V_INP = 4,19,1,0 %;           
macro FAB$V_CTG = 4,20,1,0 %;           
macro FAB$V_CBT = 4,21,1,0 %;           
macro FAB$V_SYNCSTS = 4,22,1,0 %;       
macro FAB$V_RCK = 4,23,1,0 %;           
macro FAB$V_NAM = 4,24,1,0 %;           
macro FAB$V_CIF = 4,25,1,0 %;           
macro FAB$V_ESC = 4,27,1,0 %;           
macro FAB$V_TEF = 4,28,1,0 %;           
macro FAB$V_OFP = 4,29,1,0 %;           
macro FAB$V_KFO = 4,30,1,0 %;           
macro FAB$R_FOP_BITS_OVERLAY = 4,0,32,0 %;
macro FAB$V_ERL = 4,15,1,0 %;           
macro FAB$L_STS = 8,0,32,0 %;           
macro FAB$L_STV = 12,0,32,0 %;          
macro FAB$L_ALQ = 16,0,32,0 %;          
macro FAB$W_DEQ = 20,0,16,0 %;          
macro FAB$R_FAC_OVERLAY = 22,0,8,0 %;
macro FAB$B_FAC = 22,0,8,0 %;           
macro FAB$R_FAC_BITS = 22,0,8,0 %;
macro FAB$V_PUT = 22,0,1,0 %;           
macro FAB$V_GET = 22,1,1,0 %;           
macro FAB$V_DEL = 22,2,1,0 %;           
macro FAB$V_UPD = 22,3,1,0 %;           
macro FAB$V_TRN = 22,4,1,0 %;           
macro FAB$V_BIO = 22,5,1,0 %;           
macro FAB$V_BRO = 22,6,1,0 %;           
macro FAB$V_EXE = 22,7,1,0 %;           
macro FAB$R_SHR_OVERLAY = 23,0,8,0 %;
macro FAB$B_SHR = 23,0,8,0 %;           
macro FAB$R_SHR_BITS = 23,0,8,0 %;
macro FAB$V_SHRPUT = 23,0,1,0 %;        
macro FAB$V_SHRGET = 23,1,1,0 %;        
macro FAB$V_SHRDEL = 23,2,1,0 %;        
macro FAB$V_SHRUPD = 23,3,1,0 %;        
macro FAB$V_MSE = 23,4,1,0 %;           
macro FAB$V_NIL = 23,5,1,0 %;           
macro FAB$V_UPI = 23,6,1,0 %;           
macro FAB$V_NQL = 23,7,1,0 %;           
macro FAB$L_CTX = 24,0,32,0 %;          
macro FAB$B_RTV = 28,0,8,1 %;           
macro FAB$R_ORG_OVERLAY = 29,0,8,0 %;
macro FAB$B_ORG = 29,0,8,0 %;           
macro FAB$R_ORG_BITS = 29,0,8,0 %;
macro FAB$V_ORG = 29,4,4,0 %;
literal FAB$S_ORG = 4;
macro FAB$R_RAT_OVERLAY = 30,0,8,0 %;
macro FAB$B_RAT = 30,0,8,0 %;           
macro FAB$R_RAT_BITS = 30,0,8,0 %;
macro FAB$V_FTN = 30,0,1,0 %;           
macro FAB$V_CR = 30,1,1,0 %;            
macro FAB$V_PRN = 30,2,1,0 %;           
macro FAB$V_BLK = 30,3,1,0 %;           
macro FAB$V_MSB = 30,4,1,0 %;           
macro FAB$B_SPECIAL_TYPE = 30,0,8,0 %;  
macro FAB$B_RFM = 31,0,8,0 %;           
macro FAB$R_JOURNAL_OVERLAY = 32,0,8,0 %;
macro FAB$B_JOURNAL = 32,0,8,0 %;       
macro FAB$R_JOURNAL_BITS = 32,0,8,0 %;  
macro FAB$V_ONLY_RU = 32,0,1,0 %;       
macro FAB$V_RU = 32,1,1,0 %;            
macro FAB$V_BI = 32,2,1,0 %;            
macro FAB$V_AI = 32,3,1,0 %;            
macro FAB$V_AT = 32,4,1,0 %;            
macro FAB$V_NEVER_RU = 32,5,1,0 %;      
macro FAB$V_JOURNAL_FILE = 32,6,1,0 %;  
macro FAB$B_RU_FACILITY = 33,0,8,0 %;   
macro FAB$L_XAB = 36,0,32,1 %;          
macro FAB$R_NAM_OVERLAY = 40,0,32,0 %;
macro FAB$L_NAM = 40,0,32,1 %;          
macro FAB$L_NAML = 40,0,32,1 %;         
macro FAB$L_FNA = 44,0,32,1 %;          
macro FAB$L_DNA = 48,0,32,1 %;          
macro FAB$B_FNS = 52,0,8,0 %;           
macro FAB$B_DNS = 53,0,8,0 %;           
macro FAB$W_MRS = 54,0,16,0 %;          
macro FAB$L_MRN = 56,0,32,1 %;          
macro FAB$W_BLS = 60,0,16,0 %;          
macro FAB$B_BKS = 62,0,8,0 %;           
macro FAB$B_FSZ = 63,0,8,0 %;           
macro FAB$L_DEV = 64,0,32,0 %;          
macro FAB$L_SDC = 68,0,32,0 %;          
macro FAB$W_GBC = 72,0,16,0 %;          
macro FAB$R_ACMODES_OVERLAY = 74,0,8,0 %;
macro FAB$B_ACMODES = 74,0,8,0 %;       
macro FAB$R_ACMODES_BITS = 74,0,8,0 %;
macro FAB$V_LNM_MODE = 74,0,2,0 %;
literal FAB$S_LNM_MODE = 2;             
macro FAB$V_CHAN_MODE = 74,2,2,0 %;
literal FAB$S_CHAN_MODE = 2;            
macro FAB$V_FILE_MODE = 74,4,2,0 %;
literal FAB$S_FILE_MODE = 2;            
macro FAB$V_CALLERS_MODE = 74,6,2,0 %;
literal FAB$S_CALLERS_MODE = 2;         
macro FAB$R_RCF_OVERLAY = 75,0,8,0 %;   
macro FAB$B_RCF = 75,0,8,0 %;           
macro FAB$R_RCF_BITS = 75,0,8,0 %;
macro FAB$V_RCF_RU = 75,0,1,0 %;        
macro FAB$V_RCF_AI = 75,1,1,0 %;        
macro FAB$V_RCF_BI = 75,2,1,0 %;        
literal FAB$K_BLN = 80;                 
literal FAB$C_BLN = 80;                 
 

literal RAB$C_BID = 1;                  
literal RAB$M_PPF_RAT = %X'3FC0';
literal RAB$M_PPF_IND = %X'4000';
literal RAB$M_PPISI = %X'8000';
literal RAB$M_ASY = %X'1';
literal RAB$M_TPT = %X'2';
literal RAB$M_REA = %X'4';
literal RAB$M_RRL = %X'8';
literal RAB$M_UIF = %X'10';
literal RAB$M_MAS = %X'20';
literal RAB$M_FDL = %X'40';
literal RAB$M_REV = %X'80';
literal RAB$M_EOF = %X'100';
literal RAB$M_RAH = %X'200';
literal RAB$M_WBH = %X'400';
literal RAB$M_BIO = %X'800';
literal RAB$M_CDK = %X'1000';
literal RAB$M_LOA = %X'2000';
literal RAB$M_LIM = %X'4000';
literal RAB$M_SYNCSTS = %X'8000';
literal RAB$M_LOC = %X'10000';
literal RAB$M_WAT = %X'20000';
literal RAB$M_ULK = %X'40000';
literal RAB$M_RLK = %X'80000';
literal RAB$M_NLK = %X'100000';
literal RAB$M_KGE = %X'200000';
literal RAB$M_KGT = %X'400000';
literal RAB$M_NXR = %X'800000';
literal RAB$M_RNE = %X'1000000';
literal RAB$M_TMO = %X'2000000';
literal RAB$M_CVT = %X'4000000';
literal RAB$M_RNF = %X'8000000';
literal RAB$M_ETO = %X'10000000';
literal RAB$M_PTA = %X'20000000';
literal RAB$M_PMT = %X'40000000';
literal RAB$M_CCO = %X'80000000';
literal RAB$M_EQNXT = %X'200000';
literal RAB$M_NXT = %X'400000';
literal RAB$M_NQL = %X'1';
literal RAB$M_NODLCKWT = %X'2';
literal RAB$M_NODLCKBLK = %X'4';
literal RAB$C_SEQ = 0;                  
literal RAB$C_KEY = 1;                  
literal RAB$C_RFA = 2;                  
literal RAB$C_STM = 3;                  
literal RAB$C_MAXRAC = 2;               
literal RAB$S_RABDEF = 68;
macro RAB$B_BID = 0,0,8,0 %;            
macro RAB$B_BLN = 1,0,8,0 %;            
macro RAB$R_ISI_OVERLAY = 2,0,16,0 %;
macro RAB$W_ISI = 2,0,16,0 %;           
macro RAB$R_ISI_BITS = 2,0,16,0 %;
macro RAB$V_PPF_RAT = 2,6,8,0 %;
literal RAB$S_PPF_RAT = 8;              
macro RAB$V_PPF_IND = 2,14,1,0 %;       
macro RAB$V_PPISI = 2,15,1,0 %;         
macro RAB$R_ROP_OVERLAY = 4,0,32,0 %;
macro RAB$L_ROP = 4,0,32,0 %;           
macro RAB$R_ROP_BITS0 = 4,0,32,0 %;
macro RAB$V_ASY = 4,0,1,0 %;            
macro RAB$V_TPT = 4,1,1,0 %;            

macro RAB$V_REA = 4,2,1,0 %;            
macro RAB$V_RRL = 4,3,1,0 %;            
macro RAB$V_UIF = 4,4,1,0 %;            
macro RAB$V_MAS = 4,5,1,0 %;            
macro RAB$V_FDL = 4,6,1,0 %;            
macro RAB$V_REV = 4,7,1,0 %;            
macro RAB$V_EOF = 4,8,1,0 %;            
macro RAB$V_RAH = 4,9,1,0 %;            
macro RAB$V_WBH = 4,10,1,0 %;           
macro RAB$V_BIO = 4,11,1,0 %;           
macro RAB$V_CDK = 4,12,1,0 %;           
macro RAB$V_LOA = 4,13,1,0 %;           
macro RAB$V_LIM = 4,14,1,0 %;           
macro RAB$V_SYNCSTS = 4,15,1,0 %;       

macro RAB$V_LOC = 4,16,1,0 %;           
macro RAB$V_WAT = 4,17,1,0 %;           
macro RAB$V_ULK = 4,18,1,0 %;           
macro RAB$V_RLK = 4,19,1,0 %;           
macro RAB$V_NLK = 4,20,1,0 %;           
macro RAB$V_KGE = 4,21,1,0 %;           
macro RAB$V_KGT = 4,22,1,0 %;           
macro RAB$V_NXR = 4,23,1,0 %;           

macro RAB$V_RNE = 4,24,1,0 %;           
macro RAB$V_TMO = 4,25,1,0 %;           
macro RAB$V_CVT = 4,26,1,0 %;           
macro RAB$V_RNF = 4,27,1,0 %;           
macro RAB$V_ETO = 4,28,1,0 %;           
macro RAB$V_PTA = 4,29,1,0 %;           
macro RAB$V_PMT = 4,30,1,0 %;           
macro RAB$V_CCO = 4,31,1,0 %;           
macro RAB$R_ROP_BITS1 = 4,0,24,0 %;
macro RAB$V_EQNXT = 4,21,1,0 %;         
macro RAB$V_NXT = 4,22,1,0 %;           

macro RAB$R_ROP_FIELDS = 4,0,32,0 %;
macro RAB$B_ROP1 = 5,0,8,0 %;           
macro RAB$B_ROP2 = 6,0,8,0 %;           
macro RAB$B_ROP3 = 7,0,8,0 %;           
macro RAB$L_STS = 8,0,32,0 %;           
macro RAB$R_STV_OVERLAY = 12,0,32,0 %;
macro RAB$L_STV = 12,0,32,0 %;          
macro RAB$R_STV_FIELDS = 12,0,32,0 %;
macro RAB$W_STV0 = 12,0,16,0 %;         
macro RAB$W_STV2 = 14,0,16,0 %;         
macro RAB$R_RFA_OVERLAY = 16,0,0,0 %;
macro RAB$W_RFA = 16,0,0,0 %;
literal RAB$S_RFA = 6;                  
macro RAB$R_RFA_FIELDS = 16,0,0,0 %;
macro RAB$L_RFA0 = 16,0,32,0 %;
macro RAB$W_RFA4 = 20,0,16,0 %;

macro RAB$L_CTX = 24,0,32,0 %;          
macro RAB$R_ROP_2_OVERLAY = 28,0,16,0 %; 
macro RAB$W_ROP_2 = 28,0,16,0 %;        
macro RAB$R_ROP_2_BITS0 = 28,0,16,0 %;
macro RAB$V_NQL = 28,0,1,0 %;           
macro RAB$V_NODLCKWT = 28,1,1,0 %;      
macro RAB$V_NODLCKBLK = 28,2,1,0 %;     
macro RAB$B_RAC = 30,0,8,0 %;           
macro RAB$B_TMO = 31,0,8,0 %;           
macro RAB$W_USZ = 32,0,16,0 %;          
macro RAB$W_RSZ = 34,0,16,0 %;          
macro RAB$L_UBF = 36,0,32,1 %;          
macro RAB$L_RBF = 40,0,32,1 %;          
macro RAB$L_RHB = 44,0,32,1 %;          
macro RAB$R_KBF_OVERLAY = 48,0,32,0 %;
macro RAB$L_KBF = 48,0,32,1 %;          
macro RAB$L_PBF = 48,0,32,1 %;          
macro RAB$R_KSZ_OVERLAY = 52,0,8,0 %;
macro RAB$B_KSZ = 52,0,8,0 %;           
macro RAB$B_PSZ = 52,0,8,0 %;           
macro RAB$B_KRF = 53,0,8,0 %;           
macro RAB$B_MBF = 54,0,8,1 %;           
macro RAB$B_MBC = 55,0,8,0 %;           
macro RAB$R_BKT_OVERLAY = 56,0,32,0 %;
macro RAB$L_BKT = 56,0,32,0 %;          
macro RAB$L_DCT = 56,0,32,0 %;          
macro RAB$L_FAB = 60,0,32,1 %;          
macro RAB$L_XAB = 64,0,32,1 %;          
literal RAB$K_BLN = 68;                 
literal RAB$C_BLN = 68;                 

literal RAB64$C_BID = 1;                
literal RAB64$M_PPF_RAT = %X'3FC0';
literal RAB64$M_PPF_IND = %X'4000';
literal RAB64$M_PPISI = %X'8000';
literal RAB64$M_ASY = %X'1';
literal RAB64$M_TPT = %X'2';
literal RAB64$M_REA = %X'4';
literal RAB64$M_RRL = %X'8';
literal RAB64$M_UIF = %X'10';
literal RAB64$M_MAS = %X'20';
literal RAB64$M_FDL = %X'40';
literal RAB64$M_REV = %X'80';
literal RAB64$M_EOF = %X'100';
literal RAB64$M_RAH = %X'200';
literal RAB64$M_WBH = %X'400';
literal RAB64$M_BIO = %X'800';
literal RAB64$M_CDK = %X'1000';
literal RAB64$M_LOA = %X'2000';
literal RAB64$M_LIM = %X'4000';
literal RAB64$M_SYNCSTS = %X'8000';
literal RAB64$M_LOC = %X'10000';
literal RAB64$M_WAT = %X'20000';
literal RAB64$M_ULK = %X'40000';
literal RAB64$M_RLK = %X'80000';
literal RAB64$M_NLK = %X'100000';
literal RAB64$M_KGE = %X'200000';
literal RAB64$M_KGT = %X'400000';
literal RAB64$M_NXR = %X'800000';
literal RAB64$M_RNE = %X'1000000';
literal RAB64$M_TMO = %X'2000000';
literal RAB64$M_CVT = %X'4000000';
literal RAB64$M_RNF = %X'8000000';
literal RAB64$M_ETO = %X'10000000';
literal RAB64$M_PTA = %X'20000000';
literal RAB64$M_PMT = %X'40000000';
literal RAB64$M_CCO = %X'80000000';
literal RAB64$M_EQNXT = %X'200000';
literal RAB64$M_NXT = %X'400000';
literal RAB64$M_NQL = %X'1';
literal RAB64$M_NODLCKWT = %X'2';
literal RAB64$M_NODLCKBLK = %X'4';
literal RAB64$C_SEQ = 0;                
literal RAB64$C_KEY = 1;                
literal RAB64$C_RFA = 2;                
literal RAB64$C_STM = 3;                
literal RAB64$C_MAXRAC = 2;             
literal RAB64$M_RESERVED29 = %X'20000000';
literal RAB64$M_RESERVED30 = %X'40000000';
literal RAB64$M_RESERVED31 = %X'80000000';
literal RAB$M_RESERVED29 = 536870912;
literal RAB$M_RESERVED30 = 1073741824;
literal RAB$M_RESERVED31 = -2147483648;
literal RAB64$S_RAB64DEF = 144;
macro RAB64$B_BID = 0,0,8,0 %;          
macro RAB64$B_BLN = 1,0,8,0 %;          
macro RAB64$R_ISI_OVERLAY = 2,0,16,0 %;
macro RAB64$W_ISI = 2,0,16,0 %;         
macro RAB64$R_ISI_BITS = 2,0,16,0 %;
macro RAB64$V_PPF_RAT = 2,6,8,0 %;
literal RAB64$S_PPF_RAT = 8;            
macro RAB64$V_PPF_IND = 2,14,1,0 %;     
macro RAB64$V_PPISI = 2,15,1,0 %;       
macro RAB64$R_ROP_OVERLAY = 4,0,32,0 %;
macro RAB64$L_ROP = 4,0,32,0 %;         
macro RAB64$R_ROP_BITS0 = 4,0,32,0 %;
macro RAB64$V_ASY = 4,0,1,0 %;          
macro RAB64$V_TPT = 4,1,1,0 %;          

macro RAB64$V_REA = 4,2,1,0 %;          
macro RAB64$V_RRL = 4,3,1,0 %;          
macro RAB64$V_UIF = 4,4,1,0 %;          
macro RAB64$V_MAS = 4,5,1,0 %;          
macro RAB64$V_FDL = 4,6,1,0 %;          
macro RAB64$V_REV = 4,7,1,0 %;          
macro RAB64$V_EOF = 4,8,1,0 %;          
macro RAB64$V_RAH = 4,9,1,0 %;          
macro RAB64$V_WBH = 4,10,1,0 %;         
macro RAB64$V_BIO = 4,11,1,0 %;         
macro RAB64$V_CDK = 4,12,1,0 %;         
macro RAB64$V_LOA = 4,13,1,0 %;         
macro RAB64$V_LIM = 4,14,1,0 %;         
macro RAB64$V_SYNCSTS = 4,15,1,0 %;     

macro RAB64$V_LOC = 4,16,1,0 %;         
macro RAB64$V_WAT = 4,17,1,0 %;         
macro RAB64$V_ULK = 4,18,1,0 %;         
macro RAB64$V_RLK = 4,19,1,0 %;         
macro RAB64$V_NLK = 4,20,1,0 %;         
macro RAB64$V_KGE = 4,21,1,0 %;         
macro RAB64$V_KGT = 4,22,1,0 %;         
macro RAB64$V_NXR = 4,23,1,0 %;         

macro RAB64$V_RNE = 4,24,1,0 %;         
macro RAB64$V_TMO = 4,25,1,0 %;         
macro RAB64$V_CVT = 4,26,1,0 %;         
macro RAB64$V_RNF = 4,27,1,0 %;         
macro RAB64$V_ETO = 4,28,1,0 %;         
macro RAB64$V_PTA = 4,29,1,0 %;         
macro RAB64$V_PMT = 4,30,1,0 %;         
macro RAB64$V_CCO = 4,31,1,0 %;         
macro RAB64$R_ROP_BITS1 = 4,0,24,0 %;
macro RAB64$V_EQNXT = 4,21,1,0 %;       
macro RAB64$V_NXT = 4,22,1,0 %;         

macro RAB64$R_ROP_FIELDS = 4,0,32,0 %;
macro RAB64$B_ROP1 = 5,0,8,0 %;         
macro RAB64$B_ROP2 = 6,0,8,0 %;         
macro RAB64$B_ROP3 = 7,0,8,0 %;         
macro RAB64$L_STS = 8,0,32,0 %;         
macro RAB64$R_STV_OVERLAY = 12,0,32,0 %;
macro RAB64$L_STV = 12,0,32,0 %;        
macro RAB64$R_STV_FIELDS = 12,0,32,0 %;
macro RAB64$W_STV0 = 12,0,16,0 %;       
macro RAB64$W_STV2 = 14,0,16,0 %;       
macro RAB64$R_RFA_OVERLAY = 16,0,0,0 %;
macro RAB64$W_RFA = 16,0,0,0 %;
literal RAB64$S_RFA = 6;                
macro RAB64$R_RFA_FIELDS = 16,0,0,0 %;
macro RAB64$L_RFA0 = 16,0,32,0 %;
macro RAB64$W_RFA4 = 20,0,16,0 %;

macro RAB64$L_CTX = 24,0,32,0 %;        
macro RAB64$R_ROP_2_OVERLAY = 28,0,16,0 %; 
macro RAB64$W_ROP_2 = 28,0,16,0 %;      
macro RAB64$R_ROP_2_BITS0 = 28,0,16,0 %;
macro RAB64$V_NQL = 28,0,1,0 %;         
macro RAB64$V_NODLCKWT = 28,1,1,0 %;    
macro RAB64$V_NODLCKBLK = 28,2,1,0 %;   
macro RAB64$B_RAC = 30,0,8,0 %;         
macro RAB64$B_TMO = 31,0,8,0 %;         
macro RAB64$W_USZ = 32,0,16,0 %;        
macro RAB64$W_RSZ = 34,0,16,0 %;        
macro RAB64$L_UBF = 36,0,32,1 %;        
macro RAB64$L_RBF = 40,0,32,1 %;        
macro RAB64$L_RHB = 44,0,32,1 %;        
macro RAB64$R_KBF_OVERLAY = 48,0,32,0 %;
macro RAB64$L_KBF = 48,0,32,1 %;        
macro RAB64$L_PBF = 48,0,32,1 %;        
macro RAB64$R_KSZ_OVERLAY = 52,0,8,0 %;
macro RAB64$B_KSZ = 52,0,8,0 %;         
macro RAB64$B_PSZ = 52,0,8,0 %;         
macro RAB64$B_KRF = 53,0,8,0 %;         
macro RAB64$B_MBF = 54,0,8,1 %;         
macro RAB64$B_MBC = 55,0,8,0 %;         
macro RAB64$R_BKT_OVERLAY = 56,0,32,0 %;
macro RAB64$L_BKT = 56,0,32,0 %;        
macro RAB64$L_DCT = 56,0,32,0 %;        
macro RAB64$L_FAB = 60,0,32,1 %;        
macro RAB64$L_XAB = 64,0,32,1 %;        
macro RAB64$R_VERSION64_OVERLAY = 68,0,32,0 %;
macro RAB64$L_VERSION = 68,0,32,0 %;    
macro RAB$L_VERSION = 68,0,32,0 %;      
macro RAB64$R_VERSION_FIELDS_1 = 68,0,32,0 %;
macro RAB64$W_VERMINOR = 68,0,16,0 %;   
macro RAB64$W_VERMAJOR = 70,0,16,0 %;   
macro RAB64$R_VERSION_FIELDS_2 = 68,0,32,0 %;
macro RAB$W_VERMINOR = 68,0,16,0 %;     
macro RAB$W_VERMAJOR = 70,0,16,0 %;     
macro RAB64$R_UBF64_OVERLAY = 72,0,0,0 %;
macro RAB64$PQ_UBF = 72,0,0,1 %;
literal RAB64$S_UBF = 8;                
macro RAB$PQ_UBF = 72,0,0,1 %;
literal RAB$S_UBF = 8;                  
macro RAB64$R_USZ64_OVERLAY = 80,0,0,0 %;
macro RAB64$Q_USZ = 80,0,0,0 %;
literal RAB64$S_USZ = 8;                
macro RAB$Q_USZ = 80,0,0,0 %;
literal RAB$S_USZ = 8;                  
macro RAB64$R_RBF64_OVERLAY = 88,0,0,0 %;
macro RAB64$PQ_RBF = 88,0,0,1 %;
literal RAB64$S_RBF = 8;                
macro RAB$PQ_RBF = 88,0,0,1 %;
literal RAB$S_RBF = 8;                  
macro RAB64$R_RSZ64_OVERLAY = 96,0,0,0 %;
macro RAB64$Q_RSZ = 96,0,0,0 %;
literal RAB64$S_RSZ = 8;                
macro RAB$Q_RSZ = 96,0,0,0 %;
literal RAB$S_RSZ = 8;                  
macro RAB64$R_KBF64_OVERLAY = 104,0,0,0 %;
macro RAB64$PQ_KBF = 104,0,0,1 %;
literal RAB64$S_KBF = 8;                
macro RAB$PQ_KBF = 104,0,0,1 %;
literal RAB$S_KBF = 8;                  
macro RAB64$R_RHB64_OVERLAY = 112,0,0,0 %;
macro RAB64$PQ_RHB = 112,0,0,1 %;
literal RAB64$S_RHB = 8;                
macro RAB$PQ_RHB = 112,0,0,1 %;
literal RAB$S_RHB = 8;                  
macro RAB64$R_CTX64_OVERLAY = 120,0,0,0 %;
macro RAB64$Q_CTX = 120,0,0,0 %;
literal RAB64$S_CTX = 8;                
macro RAB$Q_CTX = 120,0,0,0 %;
literal RAB$S_CTX = 8;                  
macro RAB64$R_ROPEXT_OVERLAY_RAB64 = 128,0,32,0 %;
macro RAB64$L_ROPEXT = 128,0,32,0 %;    
macro RAB$L_ROPEXT = 128,0,32,0 %;      
macro RAB64$R_ROPEXT_BITS0_1 = 128,0,32,0 %;
macro RAB64$V_RESERVED29 = 128,29,1,0 %; 
macro RAB64$V_RESERVED30 = 128,30,1,0 %; 
macro RAB64$V_RESERVED31 = 128,31,1,0 %; 
macro RAB64$R_ROPEXT_BITS0_2 = 128,0,32,0 %;
macro RAB$V_RESERVED29 = 128,29,1,0 %;  
macro RAB$V_RESERVED30 = 128,30,1,0 %;  
macro RAB$V_RESERVED31 = 128,31,1,0 %;  
macro RAB64$R_MBF_OVERLAY = 132,0,32,0 %;
macro RAB64$L_MBF = 132,0,32,0 %;       
macro RAB$L_MBF = 132,0,32,0 %;         
macro RAB64$R_MBC_OVERLAY = 136,0,32,0 %;
macro RAB64$L_MBC = 136,0,32,0 %;       
macro RAB$L_MBC = 136,0,32,0 %;         
macro RAB64$R_RESERVED_1_OVERLAY = 140,0,32,0 %;
macro RAB64$L_RESERVED_1 = 140,0,32,0 %; 
macro RAB$L_RESERVED_1 = 140,0,32,0 %;  
literal RAB64$K_BLN64 = 144;            
literal RAB64$C_BLN64 = 144;            
literal RAB$K_BLN64 = 144;              
literal RAB$C_BLN64 = 144;              
literal RAB$K_MAXBLN = 144;             
literal RAB$C_MAXBLN = 144;             
 

literal NAM$C_BID = 2;                  
literal NAM$C_MAXRSS = 255;             
literal NAM$C_MAXRSSLCL = 255;          
literal NAM$M_PWD = %X'1';
literal NAM$M_FILL_1 = %X'2';
literal NAM$M_FILL_2 = %X'4';
literal NAM$M_SYNCHK = %X'8';
literal NAM$M_NOCONCEAL = %X'10';
literal NAM$M_SLPARSE = %X'20';
literal NAM$M_SRCHXABS = %X'40';
literal NAM$M_NO_SHORT_UPCASE = %X'80';
literal NAM$C_UFS = 0;                  
literal NAM$C_NO_RFS = 0;               
literal NAM$C_RMS11 = 1;                
literal NAM$C_RMS20 = 2;                
literal NAM$C_RMS32 = 3;                
literal NAM$C_FCS11 = 4;                
literal NAM$C_RT11FS = 5;               
literal NAM$C_TOPS20FS = 7;             
literal NAM$C_TOPS10FS = 8;             
literal NAM$C_RMS32S = 10;              
literal NAM$C_CPMFS = 11;               
literal NAM$C_MS_DOSFS = 12;            
literal NAM$C_ULTRIX32_FS = 13;         
literal NAM$C_ULTRIX11_FS = 14;         
literal DAP$K_SNADTF_FS = 15;           
literal NAM$C_DVI = 16;                 
literal NAM$M_IFI = %X'10000';
literal NAM$M_SRCHNMF = %X'40000000';
literal NAM$M_SVCTX = %X'80000000';
literal NAM$K_BLN_V2 = 56;              
literal NAM$C_BLN_V2 = 56;              
literal NAM$M_EXP_VER = %X'1';
literal NAM$M_EXP_TYPE = %X'2';
literal NAM$M_EXP_NAME = %X'4';
literal NAM$M_WILD_VER = %X'8';
literal NAM$M_WILD_TYPE = %X'10';
literal NAM$M_WILD_NAME = %X'20';
literal NAM$M_EXP_DIR = %X'40';
literal NAM$M_EXP_DEV = %X'80';
literal NAM$M_WILDCARD = %X'100';
literal NAM$M_DIR_LVLS_G7 = %X'200';
literal NAM$M_WILD_SFDG7 = %X'400';
literal NAM$M_SEARCH_LIST = %X'800';
literal NAM$M_CNCL_DEV = %X'1000';
literal NAM$M_ROOT_DIR = %X'2000';
literal NAM$M_LOWVER = %X'4000';
literal NAM$M_HIGHVER = %X'8000';
literal NAM$M_PPF = %X'10000';
literal NAM$M_NODE = %X'20000';
literal NAM$M_QUOTED = %X'40000';
literal NAM$M_GRP_MBR = %X'80000';
literal NAM$M_WILD_DIR = %X'100000';
literal NAM$M_DIR_LVLS = %X'E00000';
literal NAM$M_WILD_UFD = %X'1000000';
literal NAM$M_WILD_SFD1 = %X'2000000';
literal NAM$M_WILD_SFD2 = %X'4000000';
literal NAM$M_WILD_SFD3 = %X'8000000';
literal NAM$M_WILD_SFD4 = %X'10000000';
literal NAM$M_WILD_SFD5 = %X'20000000';
literal NAM$M_WILD_SFD6 = %X'40000000';
literal NAM$M_WILD_SFD7 = %X'80000000';
literal NAM$M_WILD_GRP = %X'1000000';
literal NAM$M_WILD_MBR = %X'2000000';
literal NAM$M_DID = %X'1';
literal NAM$M_FID = %X'2';
literal NAM$M_RES_DID = %X'4';
literal NAM$M_RES_FID = %X'8';
literal NAM$M_RES_ESCAPE = %X'10';
literal NAM$M_RES_UNICODE = %X'20';
literal NAM$S_NAMDEF = 96;
macro NAM$B_BID = 0,0,8,0 %;            
macro NAM$B_BLN = 1,0,8,0 %;            

macro NAM$B_RSS = 2,0,8,0 %;            
macro NAM$B_RSL = 3,0,8,0 %;            
macro NAM$L_RSA = 4,0,32,1 %;           
macro NAM$R_NOP_OVERLAY = 8,0,8,0 %;
macro NAM$B_NOP = 8,0,8,0 %;            
macro NAM$R_NOP_BITS = 8,0,8,0 %;
macro NAM$V_PWD = 8,0,1,0 %;            

macro NAM$V_FILL_1 = 8,1,1,0 %;         
macro NAM$V_FILL_2 = 8,2,1,0 %;         
macro NAM$V_SYNCHK = 8,3,1,0 %;         
macro NAM$V_NOCONCEAL = 8,4,1,0 %;      
macro NAM$V_SLPARSE = 8,5,1,0 %;        
macro NAM$V_SRCHXABS = 8,6,1,0 %;       
macro NAM$V_NO_SHORT_UPCASE = 8,7,1,0 %; 
macro NAM$B_RFS = 9,0,8,0 %;            

macro NAM$B_ESS = 10,0,8,0 %;           
macro NAM$B_ESL = 11,0,8,0 %;           
macro NAM$L_ESA = 12,0,32,1 %;          
macro NAM$R_RLF_OVERLAY = 16,0,32,0 %;
macro NAM$L_RLF = 16,0,32,1 %;          
macro NAM$L_RLF_NAML = 16,0,32,1 %;     
macro NAM$T_DVI = 20,0,0,0 %;
literal NAM$S_DVI = 16;                 

macro NAM$R_FID_OVERLAY = 36,0,0,0 %;
macro NAM$W_FID = 36,0,0,0 %;
literal NAM$S_FID = 6;                  
macro NAM$R_FID_FIELDS = 36,0,0,0 %;
macro NAM$W_FID_NUM = 36,0,16,0 %;      
macro NAM$W_FID_SEQ = 38,0,16,0 %;      
macro NAM$R_FID_RVN_OVERLAY = 40,0,16,0 %;
macro NAM$W_FID_RVN = 40,0,16,0 %;      
macro NAM$R_FID_RVN_FIELDS = 40,0,16,0 %;
macro NAM$B_FID_RVN = 40,0,8,0 %;       
macro NAM$B_FID_NMX = 41,0,8,0 %;       
macro NAM$R_DID_OVERLAY = 42,0,0,0 %;
macro NAM$W_DID = 42,0,0,0 %;
literal NAM$S_DID = 6;                  
macro NAM$R_DID_FIELDS = 42,0,0,0 %;
macro NAM$W_DID_NUM = 42,0,16,0 %;      
macro NAM$W_DID_SEQ = 44,0,16,0 %;      
macro NAM$R_DID_RVN_OVERLAY = 46,0,16,0 %;
macro NAM$W_DID_RVN = 46,0,16,0 %;      
macro NAM$R_DID_RVN_FIELDS = 46,0,16,0 %;
macro NAM$B_DID_RVN = 46,0,8,0 %;       
macro NAM$B_DID_NMX = 47,0,8,0 %;       
macro NAM$R_WCC_OVERLAY = 48,0,32,0 %;
macro NAM$L_WCC = 48,0,32,0 %;          
macro NAM$R_WCC_BITS = 48,0,32,0 %;
macro NAM$V_IFI = 48,16,1,0 %;          
macro NAM$V_SRCHNMF = 48,30,1,0 %;      
macro NAM$V_SVCTX = 48,31,1,0 %;        
macro NAM$R_FNB_OVERLAY = 52,0,32,0 %;
macro NAM$L_FNB = 52,0,32,0 %;          
macro NAM$R_FNB_BITS0 = 52,0,24,0 %;
macro NAM$V_EXP_VER = 52,0,1,0 %;       
macro NAM$V_EXP_TYPE = 52,1,1,0 %;      
macro NAM$V_EXP_NAME = 52,2,1,0 %;      
macro NAM$V_WILD_VER = 52,3,1,0 %;      
macro NAM$V_WILD_TYPE = 52,4,1,0 %;     
macro NAM$V_WILD_NAME = 52,5,1,0 %;     
macro NAM$V_EXP_DIR = 52,6,1,0 %;       
macro NAM$V_EXP_DEV = 52,7,1,0 %;       
macro NAM$V_WILDCARD = 52,8,1,0 %;      
macro NAM$V_DIR_LVLS_G7 = 52,9,1,0 %;   
macro NAM$V_WILD_SFDG7 = 52,10,1,0 %;   
macro NAM$V_SEARCH_LIST = 52,11,1,0 %;  
macro NAM$V_CNCL_DEV = 52,12,1,0 %;     
macro NAM$V_ROOT_DIR = 52,13,1,0 %;     
macro NAM$V_LOWVER = 52,14,1,0 %;       
macro NAM$V_HIGHVER = 52,15,1,0 %;      
macro NAM$V_PPF = 52,16,1,0 %;          
macro NAM$V_NODE = 52,17,1,0 %;         
macro NAM$V_QUOTED = 52,18,1,0 %;       
macro NAM$V_GRP_MBR = 52,19,1,0 %;      
macro NAM$V_WILD_DIR = 52,20,1,0 %;     
macro NAM$V_DIR_LVLS = 52,21,3,0 %;
literal NAM$S_DIR_LVLS = 3;             
macro NAM$R_FNB_BITS1 = 52,0,32,0 %;
macro NAM$V_WILD_UFD = 52,24,1,0 %;     
macro NAM$V_WILD_SFD1 = 52,25,1,0 %;    
macro NAM$V_WILD_SFD2 = 52,26,1,0 %;    
macro NAM$V_WILD_SFD3 = 52,27,1,0 %;    
macro NAM$V_WILD_SFD4 = 52,28,1,0 %;    
macro NAM$V_WILD_SFD5 = 52,29,1,0 %;    
macro NAM$V_WILD_SFD6 = 52,30,1,0 %;    
macro NAM$V_WILD_SFD7 = 52,31,1,0 %;    
macro NAM$R_FNB_BITS2 = 52,0,32,0 %;
macro NAM$V_WILD_GRP = 52,24,1,0 %;     
macro NAM$V_WILD_MBR = 52,25,1,0 %;     

macro NAM$B_NODE = 56,0,8,0 %;          
macro NAM$B_DEV = 57,0,8,0 %;           
macro NAM$B_DIR = 58,0,8,0 %;           
macro NAM$B_NAME = 59,0,8,0 %;          
macro NAM$B_TYPE = 60,0,8,0 %;          
macro NAM$B_VER = 61,0,8,0 %;           
macro NAM$R_NMC_OVERLAY = 62,0,8,0 %;   
macro NAM$B_NMC = 62,0,8,0 %;
macro NAM$R_NMC_BITS = 62,0,8,0 %;
macro NAM$V_DID = 62,0,1,0 %;           
macro NAM$V_FID = 62,1,1,0 %;           
macro NAM$V_RES_DID = 62,2,1,0 %;       
macro NAM$V_RES_FID = 62,3,1,0 %;       
macro NAM$V_RES_ESCAPE = 62,4,1,0 %;    
macro NAM$V_RES_UNICODE = 62,5,1,0 %;   
macro NAM$L_NODE = 64,0,32,1 %;         
macro NAM$L_DEV = 68,0,32,1 %;          
macro NAM$L_DIR = 72,0,32,1 %;          
macro NAM$L_NAME = 76,0,32,1 %;         
macro NAM$L_TYPE = 80,0,32,1 %;         
macro NAM$L_VER = 84,0,32,1 %;          
macro NAM$W_FIRST_WILD_DIR = 88,0,16,0 %; 
macro NAM$W_LONG_DIR_LEVELS = 90,0,16,0 %; 
literal NAM$K_BLN_DIRWC = 96;           
literal NAM$C_BLN_DIRWC = 96;           
literal NAM$K_BLN = 96;                 
literal NAM$C_BLN = 96;                 

literal NAML$C_BID = 4;                 
literal NAML$C_MAXRSS = 4095;           
literal NAML$M_PWD = %X'1';
literal NAML$M_FILL_1 = %X'2';
literal NAML$M_FILL_2 = %X'4';
literal NAML$M_SYNCHK = %X'8';
literal NAML$M_NOCONCEAL = %X'10';
literal NAML$M_SLPARSE = %X'20';
literal NAML$M_SRCHXABS = %X'40';
literal NAML$M_NO_SHORT_UPCASE = %X'80';
literal NAML$C_UFS = 0;                 
literal NAML$C_NO_RFS = 0;              
literal NAML$C_RMS11 = 1;               
literal NAML$C_RMS20 = 2;               
literal NAML$C_RMS32 = 3;               
literal NAML$C_FCS11 = 4;               
literal NAML$C_RT11FS = 5;              
literal NAML$C_TOPS20FS = 7;            
literal NAML$C_TOPS10FS = 8;            
literal NAML$C_RMS32S = 10;             
literal NAML$C_CPMFS = 11;              
literal NAML$C_MS_DOSFS = 12;           
literal NAML$C_ULTRIX32_FS = 13;        
literal NAML$C_ULTRIX11_FS = 14;        
literal NAML$C_DVI = 16;                
literal NAML$M_IFI = %X'10000';
literal NAML$M_SRCHNMF = %X'40000000';
literal NAML$M_SVCTX = %X'80000000';
literal NAML$K_BLN_V2 = 56;             
literal NAML$C_BLN_V2 = 56;             
literal NAML$M_EXP_VER = %X'1';
literal NAML$M_EXP_TYPE = %X'2';
literal NAML$M_EXP_NAME = %X'4';
literal NAML$M_WILD_VER = %X'8';
literal NAML$M_WILD_TYPE = %X'10';
literal NAML$M_WILD_NAME = %X'20';
literal NAML$M_EXP_DIR = %X'40';
literal NAML$M_EXP_DEV = %X'80';
literal NAML$M_WILDCARD = %X'100';
literal NAML$M_DIR_LVLS_G7 = %X'200';
literal NAML$M_WILD_SFDG7 = %X'400';
literal NAML$M_SEARCH_LIST = %X'800';
literal NAML$M_CNCL_DEV = %X'1000';
literal NAML$M_ROOT_DIR = %X'2000';
literal NAML$M_LOWVER = %X'4000';
literal NAML$M_HIGHVER = %X'8000';
literal NAML$M_PPF = %X'10000';
literal NAML$M_NODE = %X'20000';
literal NAML$M_QUOTED = %X'40000';
literal NAML$M_GRP_MBR = %X'80000';
literal NAML$M_WILD_DIR = %X'100000';
literal NAML$M_DIR_LVLS = %X'E00000';
literal NAML$M_WILD_UFD = %X'1000000';
literal NAML$M_WILD_SFD1 = %X'2000000';
literal NAML$M_WILD_SFD2 = %X'4000000';
literal NAML$M_WILD_SFD3 = %X'8000000';
literal NAML$M_WILD_SFD4 = %X'10000000';
literal NAML$M_WILD_SFD5 = %X'20000000';
literal NAML$M_WILD_SFD6 = %X'40000000';
literal NAML$M_WILD_SFD7 = %X'80000000';
literal NAML$M_WILD_GRP = %X'1000000';
literal NAML$M_WILD_MBR = %X'2000000';
literal NAML$M_DID = %X'1';
literal NAML$M_FID = %X'2';
literal NAML$M_RES_DID = %X'4';
literal NAML$M_RES_FID = %X'8';
literal NAML$M_RES_ESCAPE = %X'10';
literal NAML$M_RES_UNICODE = %X'20';
literal NAML$M_LONG_RESULT_ESCAPE = %X'1';
literal NAML$M_FILESYS_NAME_UCS2 = %X'2';
literal NAML$M_LONG_RESULT_DID = %X'4';
literal NAML$M_LONG_RESULT_FID = %X'8';
literal NAML$M_LONG_RESULT_UNICODE = %X'10';
literal NAML$M_MP_IN_PATH = %X'20';
literal NAML$M_SYMLNK_IN_PATH = %X'40';
literal NAML$M_OBJECT_SYMLINK = %X'80';
literal NAML$M_NO_SHORT_OUTPUT = %X'1';
literal NAML$C_CASE_LOOKUP_BLIND = 2;   
literal NAML$C_CASE_LOOKUP_SENSITIVE = 3; 
literal NAML$M_OPEN_SPECIAL = %X'8';
literal NAML$M_SEARCH_SYMLINK = %X'10';
literal NAML$S_NAMLDEF = 248;
macro NAML$B_BID = 0,0,8,0 %;           
macro NAML$B_BLN = 1,0,8,0 %;           

macro NAML$B_RSS = 2,0,8,0 %;           
macro NAML$B_RSL = 3,0,8,0 %;           
macro NAML$L_RSA = 4,0,32,1 %;          
macro NAML$R_NOP_OVERLAY = 8,0,8,0 %;
macro NAML$B_NOP = 8,0,8,0 %;           
macro NAML$R_NOP_BITS = 8,0,8,0 %;
macro NAML$V_PWD = 8,0,1,0 %;           

macro NAML$V_FILL_1 = 8,1,1,0 %;        
macro NAML$V_FILL_2 = 8,2,1,0 %;        
macro NAML$V_SYNCHK = 8,3,1,0 %;        
macro NAML$V_NOCONCEAL = 8,4,1,0 %;     
macro NAML$V_SLPARSE = 8,5,1,0 %;       
macro NAML$V_SRCHXABS = 8,6,1,0 %;      
macro NAML$V_NO_SHORT_UPCASE = 8,7,1,0 %; 
macro NAML$B_RFS = 9,0,8,0 %;           

macro NAML$B_ESS = 10,0,8,0 %;          
macro NAML$B_ESL = 11,0,8,0 %;          
macro NAML$L_ESA = 12,0,32,1 %;         
macro NAML$R_RLF_OVERLAY = 16,0,32,0 %;
macro NAML$L_RLF = 16,0,32,1 %;         
macro NAML$L_RLF_NAML = 16,0,32,1 %;    
macro NAML$T_DVI = 20,0,0,0 %;
literal NAML$S_DVI = 16;                

macro NAML$R_FID_OVERLAY = 36,0,0,0 %;
macro NAML$W_FID = 36,0,0,0 %;
literal NAML$S_FID = 6;                 
macro NAML$R_FID_FIELDS = 36,0,0,0 %;
macro NAML$W_FID_NUM = 36,0,16,0 %;     
macro NAML$W_FID_SEQ = 38,0,16,0 %;     
macro NAML$R_FID_RVN_OVERLAY = 40,0,16,0 %;
macro NAML$W_FID_RVN = 40,0,16,0 %;     
macro NAML$R_FID_RVN_FIELDS = 40,0,16,0 %;
macro NAML$B_FID_RVN = 40,0,8,0 %;      
macro NAML$B_FID_NMX = 41,0,8,0 %;      
macro NAML$R_DID_OVERLAY = 42,0,0,0 %;
macro NAML$W_DID = 42,0,0,0 %;
literal NAML$S_DID = 6;                 
macro NAML$R_DID_FIELDS = 42,0,0,0 %;
macro NAML$W_DID_NUM = 42,0,16,0 %;     
macro NAML$W_DID_SEQ = 44,0,16,0 %;     
macro NAML$R_DID_RVN_OVERLAY = 46,0,16,0 %;
macro NAML$W_DID_RVN = 46,0,16,0 %;     
macro NAML$R_DID_RVN_FIELDS = 46,0,16,0 %;
macro NAML$B_DID_RVN = 46,0,8,0 %;      
macro NAML$B_DID_NMX = 47,0,8,0 %;      
macro NAML$R_WCC_OVERLAY = 48,0,32,0 %;
macro NAML$L_WCC = 48,0,32,0 %;         
macro NAML$R_WCC_BITS = 48,0,32,0 %;
macro NAML$V_IFI = 48,16,1,0 %;         
macro NAML$V_SRCHNMF = 48,30,1,0 %;     
macro NAML$V_SVCTX = 48,31,1,0 %;       
macro NAML$R_FNB_OVERLAY = 52,0,32,0 %;
macro NAML$L_FNB = 52,0,32,0 %;         
macro NAML$R_FNB_BITS0 = 52,0,24,0 %;
macro NAML$V_EXP_VER = 52,0,1,0 %;      
macro NAML$V_EXP_TYPE = 52,1,1,0 %;     
macro NAML$V_EXP_NAME = 52,2,1,0 %;     
macro NAML$V_WILD_VER = 52,3,1,0 %;     
macro NAML$V_WILD_TYPE = 52,4,1,0 %;    
macro NAML$V_WILD_NAME = 52,5,1,0 %;    
macro NAML$V_EXP_DIR = 52,6,1,0 %;      
macro NAML$V_EXP_DEV = 52,7,1,0 %;      
macro NAML$V_WILDCARD = 52,8,1,0 %;     
macro NAML$V_DIR_LVLS_G7 = 52,9,1,0 %;  
macro NAML$V_WILD_SFDG7 = 52,10,1,0 %;  
macro NAML$V_SEARCH_LIST = 52,11,1,0 %; 
macro NAML$V_CNCL_DEV = 52,12,1,0 %;    
macro NAML$V_ROOT_DIR = 52,13,1,0 %;    
macro NAML$V_LOWVER = 52,14,1,0 %;      
macro NAML$V_HIGHVER = 52,15,1,0 %;     
macro NAML$V_PPF = 52,16,1,0 %;         
macro NAML$V_NODE = 52,17,1,0 %;        
macro NAML$V_QUOTED = 52,18,1,0 %;      
macro NAML$V_GRP_MBR = 52,19,1,0 %;     
macro NAML$V_WILD_DIR = 52,20,1,0 %;    
macro NAML$V_DIR_LVLS = 52,21,3,0 %;
literal NAML$S_DIR_LVLS = 3;            
macro NAML$R_FNB_BITS1 = 52,0,32,0 %;
macro NAML$V_WILD_UFD = 52,24,1,0 %;    
macro NAML$V_WILD_SFD1 = 52,25,1,0 %;   
macro NAML$V_WILD_SFD2 = 52,26,1,0 %;   
macro NAML$V_WILD_SFD3 = 52,27,1,0 %;   
macro NAML$V_WILD_SFD4 = 52,28,1,0 %;   
macro NAML$V_WILD_SFD5 = 52,29,1,0 %;   
macro NAML$V_WILD_SFD6 = 52,30,1,0 %;   
macro NAML$V_WILD_SFD7 = 52,31,1,0 %;   
macro NAML$R_FNB_BITS2 = 52,0,32,0 %;
macro NAML$V_WILD_GRP = 52,24,1,0 %;    
macro NAML$V_WILD_MBR = 52,25,1,0 %;    
macro NAML$B_NODE = 56,0,8,0 %;         
macro NAML$B_DEV = 57,0,8,0 %;          
macro NAML$B_DIR = 58,0,8,0 %;          
macro NAML$B_NAME = 59,0,8,0 %;         
macro NAML$B_TYPE = 60,0,8,0 %;         
macro NAML$B_VER = 61,0,8,0 %;          
macro NAML$R_NMC_OVERLAY = 62,0,8,0 %;  
macro NAML$B_NMC = 62,0,8,0 %;
macro NAML$R_NMC_BITS = 62,0,8,0 %;
macro NAML$V_DID = 62,0,1,0 %;          
macro NAML$V_FID = 62,1,1,0 %;          
macro NAML$V_RES_DID = 62,2,1,0 %;      
macro NAML$V_RES_FID = 62,3,1,0 %;      
macro NAML$V_RES_ESCAPE = 62,4,1,0 %;   
macro NAML$V_RES_UNICODE = 62,5,1,0 %;  
macro NAML$L_NODE = 64,0,32,1 %;        
macro NAML$L_DEV = 68,0,32,1 %;         
macro NAML$L_DIR = 72,0,32,1 %;         
macro NAML$L_NAME = 76,0,32,1 %;        
macro NAML$L_TYPE = 80,0,32,1 %;        
macro NAML$L_VER = 84,0,32,1 %;         
macro NAML$W_FIRST_WILD_DIR = 88,0,16,0 %; 
macro NAML$W_LONG_DIR_LEVELS = 90,0,16,0 %; 
macro NAML$L_LONG_DEFNAME_SIZE = 96,0,32,0 %; 
macro NAML$L_LONG_DEFNAME = 100,0,32,1 %; 
macro NAML$L_LONG_FILENAME_SIZE = 104,0,32,0 %; 
macro NAML$L_LONG_FILENAME = 108,0,32,1 %; 
macro NAML$L_LONG_NODE_SIZE = 112,0,32,0 %; 
macro NAML$L_LONG_NODE = 116,0,32,1 %;  
macro NAML$L_LONG_DEV_SIZE = 120,0,32,0 %; 
macro NAML$L_LONG_DEV = 124,0,32,1 %;   
macro NAML$L_LONG_DIR_SIZE = 128,0,32,0 %; 
macro NAML$L_LONG_DIR = 132,0,32,1 %;   
macro NAML$L_LONG_NAME_SIZE = 136,0,32,0 %; 
macro NAML$L_LONG_NAME = 140,0,32,1 %;  
macro NAML$L_LONG_TYPE_SIZE = 144,0,32,0 %; 
macro NAML$L_LONG_TYPE = 148,0,32,1 %;  
macro NAML$L_LONG_VER_SIZE = 152,0,32,0 %; 
macro NAML$L_LONG_VER = 156,0,32,1 %;   
macro NAML$L_LONG_EXPAND_SIZE = 160,0,32,0 %; 
macro NAML$L_LONG_EXPAND = 164,0,32,1 %; 
macro NAML$L_LONG_EXPAND_ALLOC = 168,0,32,0 %; 
macro NAML$L_RESERVED_MBZ_9 = 172,0,32,1 %;
macro NAML$L_LONG_RESULT_SIZE = 176,0,32,0 %; 
macro NAML$L_LONG_RESULT = 180,0,32,1 %; 
macro NAML$L_LONG_RESULT_ALLOC = 184,0,32,0 %; 
macro NAML$L_RESERVED_MBZ_8 = 188,0,32,1 %; 
macro NAML$L_FILESYS_NAME_SIZE = 192,0,32,0 %;
macro NAML$L_FILESYS_NAME = 196,0,32,1 %;
macro NAML$L_FILESYS_NAME_ALLOC = 200,0,32,0 %;
macro NAML$R_OUTPUT_FLAGS_OVERLAY = 204,0,32,0 %; 
macro NAML$L_OUTPUT_FLAGS = 204,0,32,0 %;
macro NAML$R_OUTPUT_FLAGS_BITS = 204,0,8,0 %;
macro NAML$V_LONG_RESULT_ESCAPE = 204,0,1,0 %; 
macro NAML$V_FILESYS_NAME_UCS2 = 204,1,1,0 %; 
macro NAML$V_LONG_RESULT_DID = 204,2,1,0 %; 
macro NAML$V_LONG_RESULT_FID = 204,3,1,0 %; 
macro NAML$V_LONG_RESULT_UNICODE = 204,4,1,0 %; 
macro NAML$V_MP_IN_PATH = 204,5,1,0 %;  
macro NAML$V_SYMLNK_IN_PATH = 204,6,1,0 %; 
macro NAML$V_OBJECT_SYMLINK = 204,7,1,0 %; 
macro NAML$R_INPUT_FLAGS_OVERLAY = 208,0,32,0 %; 
macro NAML$L_INPUT_FLAGS = 208,0,32,0 %;
macro NAML$R_INPUT_FLAGS_BITS = 208,0,8,0 %;
macro NAML$V_NO_SHORT_OUTPUT = 208,0,1,0 %; 
macro NAML$V_CASE_LOOKUP = 208,1,2,0 %;
literal NAML$S_CASE_LOOKUP = 2;         
macro NAML$V_OPEN_SPECIAL = 208,3,1,0 %; 
macro NAML$V_SEARCH_SYMLINK = 208,4,1,0 %; 

macro NAML$L_RESERVED_MBZ_7 = 212,0,32,1 %; 
macro NAML$Q_USER_CONTEXT = 216,0,0,0 %;
literal NAML$S_USER_CONTEXT = 8;
macro NAML$L_RESERVED_MBZ_6 = 224,0,32,1 %; 
macro NAML$L_RESERVED_MBZ_5 = 228,0,32,1 %; 
macro NAML$L_RESERVED_MBZ_4 = 232,0,32,1 %; 
macro NAML$L_RESERVED_MBZ_3 = 236,0,32,1 %; 
macro NAML$L_RESERVED_MBZ_2 = 240,0,32,1 %; 
macro NAML$L_RESERVED_MBZ_1 = 244,0,32,1 %; 
literal NAML$K_BLN = 248;               
literal NAML$C_BLN = 248;               
 

literal XAB$S_XABDEF = 20;
macro XAB$B_COD = 0,0,8,0 %;            
macro XAB$B_BLN = 1,0,8,0 %;            
macro XAB$L_NXT = 4,0,32,1 %;           
macro XAB$W_RVN = 8,0,16,0 %;
macro XAB$R_RDT_OVERLAY = 12,0,0,0 %;
macro XAB$Q_RDT = 12,0,0,1 %;
literal XAB$S_RDT = 8;
macro XAB$R_RDT_FIELDS = 12,0,0,0 %;
macro XAB$L_RDT0 = 12,0,32,0 %;
macro XAB$L_RDT4 = 16,0,32,0 %;
literal XAB$S_XABDEF1 = 23;
macro XAB$B_BKZ = 22,0,8,0 %;           
literal XAB$C_CXT_VER1 = 1;             
 

literal XAB$C_FHC = 29;                 
literal XAB$M_FTN = %X'1';
literal XAB$M_CR = %X'2';
literal XAB$M_PRN = %X'4';
literal XAB$M_BLK = %X'8';
literal XAB$S_XABFHCDEF = 44;

macro XAB$B_RFO = 8,0,8,0 %;            
macro XAB$B_ATR = 9,0,8,0 %;            
macro XAB$V_FTN = 9,0,1,0 %;            
macro XAB$V_CR = 9,1,1,0 %;             
macro XAB$V_PRN = 9,2,1,0 %;            
macro XAB$V_BLK = 9,3,1,0 %;            
macro XAB$W_LRL = 10,0,16,0 %;          
macro XAB$R_HBK_OVERLAY = 12,0,32,0 %;
macro XAB$L_HBK = 12,0,32,0 %;          
macro XAB$R_HBK_FIELDS = 12,0,32,0 %;
macro XAB$W_HBK0 = 12,0,16,0 %;
macro XAB$W_HBK2 = 14,0,16,0 %;
macro XAB$R_EBK_OVERLAY = 16,0,32,0 %;
macro XAB$L_EBK = 16,0,32,0 %;          
macro XAB$R_EBK_FIELDS = 16,0,32,0 %;
macro XAB$W_EBK0 = 16,0,16,0 %;
macro XAB$W_EBK2 = 18,0,16,0 %;
macro XAB$W_FFB = 20,0,16,0 %;          

macro XAB$B_HSZ = 23,0,8,0 %;           
macro XAB$W_MRZ = 24,0,16,0 %;          
macro XAB$W_DXQ = 26,0,16,0 %;          
macro XAB$W_GBC = 28,0,16,0 %;          
macro XAB$W_VERLIMIT = 38,0,16,0 %;     
macro XAB$L_SBN = 40,0,32,0 %;          
literal XAB$K_FHCLEN = 44;              
literal XAB$C_FHCLEN = 44;              
 

literal XAB$C_ALL = 20;                 
literal XAB$M_HRD = %X'1';
literal XAB$M_ONC = %X'2';
literal XAB$M_CBT = %X'20';
literal XAB$M_CTG = %X'80';
literal XAB$C_ANY = 0;                  
literal XAB$C_CYL = 1;                  
literal XAB$C_LBN = 2;                  
literal XAB$C_VBN = 3;                  
literal XAB$C_RFI = 4;                  
literal XAB$S_XABALLDEF = 32;

macro XAB$R_AOP_OVERLAY = 8,0,8,0 %;
macro XAB$B_AOP = 8,0,8,0 %;            
macro XAB$R_AOP_BITS = 8,0,8,0 %;
macro XAB$V_HRD = 8,0,1,0 %;            
macro XAB$V_ONC = 8,1,1,0 %;            
macro XAB$V_CBT = 8,5,1,0 %;            
macro XAB$V_CTG = 8,7,1,0 %;            
macro XAB$B_ALN = 9,0,8,0 %;            
macro XAB$W_VOL = 10,0,16,0 %;          
macro XAB$L_LOC = 12,0,32,0 %;          
macro XAB$L_ALQ = 16,0,32,0 %;          
macro XAB$W_DEQ = 20,0,16,0 %;          

macro XAB$B_AID = 23,0,8,0 %;           
macro XAB$R_RFI_OVERLAY = 24,0,0,0 %;
macro XAB$W_RFI = 24,0,0,0 %;
literal XAB$S_RFI = 6;                  
macro XAB$R_RFI_FIELDS = 24,0,0,0 %;
macro XAB$W_RFI0 = 24,0,16,0 %;         
macro XAB$W_RFI2 = 26,0,16,0 %;         
macro XAB$W_RFI4 = 28,0,16,0 %;         
literal XAB$K_ALLLEN = 32;              
literal XAB$C_ALLLEN = 32;              
 

literal XAB$C_DAT = 18;                 
literal XAB$K_DATLEN_V2 = 36;           
literal XAB$C_DATLEN_V2 = 36;           
literal XAB$K_DATLEN_V54 = 44;          
literal XAB$C_DATLEN_V54 = 44;          
literal XAB$K_DATLEN_PRE_ACCDATES = 60; 
literal XAB$C_DATLEN_PRE_ACCDATES = 60; 
literal XAB$K_DATLEN_POST_ACCDATES = 84; 
literal XAB$C_DATLEN_POST_ACCDATES = 84; 
literal XAB$S_XABDATDEF = 84;

macro XAB$R_CDT_OVERLAY = 20,0,0,0 %;
macro XAB$Q_CDT = 20,0,0,1 %;
literal XAB$S_CDT = 8;                  
macro XAB$R_CDT_FIELDS = 20,0,0,0 %;
macro XAB$L_CDT0 = 20,0,32,0 %;
macro XAB$L_CDT4 = 24,0,32,0 %;
macro XAB$R_EDT_OVERLAY = 28,0,0,0 %;
macro XAB$Q_EDT = 28,0,0,1 %;
literal XAB$S_EDT = 8;                  
macro XAB$R_EDT_FIELDS = 28,0,0,0 %;
macro XAB$L_EDT0 = 28,0,32,0 %;
macro XAB$L_EDT4 = 32,0,32,0 %;
macro XAB$R_BDT_OVERLAY = 36,0,0,0 %;
macro XAB$Q_BDT = 36,0,0,1 %;
literal XAB$S_BDT = 8;                  
macro XAB$R_BDT_FIELDS = 36,0,0,0 %;
macro XAB$L_BDT0 = 36,0,32,0 %;
macro XAB$L_BDT4 = 40,0,32,0 %;
macro XAB$R_RCD_OVERLAY = 44,0,0,0 %;
macro XAB$Q_RCD = 44,0,0,1 %;
literal XAB$S_RCD = 8;                  
macro XAB$R_RCD_FIELDS = 44,0,0,0 %;
macro XAB$L_RCD0 = 44,0,32,0 %;
macro XAB$L_RCD4 = 48,0,32,0 %;
macro XAB$R_EFF_OVERLAY = 52,0,0,0 %;
macro XAB$Q_EFF = 52,0,0,1 %;
literal XAB$S_EFF = 8;                  
macro XAB$R_EFF_FIELDS = 52,0,0,0 %;
macro XAB$L_EFF0 = 52,0,32,0 %;
macro XAB$L_EFF4 = 56,0,32,0 %;
macro XAB$R_ACC_OVERLAY = 60,0,0,0 %;
macro XAB$Q_ACC = 60,0,0,1 %;
literal XAB$S_ACC = 8;                  
macro XAB$R_ACC_FIELDS = 60,0,0,0 %;
macro XAB$L_ACC0 = 60,0,32,0 %;
macro XAB$L_ACC4 = 64,0,32,0 %;
macro XAB$R_ATT_OVERLAY = 68,0,0,0 %;
macro XAB$Q_ATT = 68,0,0,1 %;
literal XAB$S_ATT = 8;                  
macro XAB$R_ATT_FIELDS = 68,0,0,0 %;
macro XAB$L_ATT0 = 68,0,32,0 %;
macro XAB$L_ATT4 = 72,0,32,0 %;
macro XAB$R_MOD_OVERLAY = 76,0,0,0 %;
macro XAB$Q_MOD = 76,0,0,1 %;
literal XAB$S_MOD = 8;                  
macro XAB$R_MOD_FIELDS = 76,0,0,0 %;
macro XAB$L_MOD0 = 76,0,32,0 %;
macro XAB$L_MOD4 = 80,0,32,0 %;
literal XAB$K_DATLEN = 84;              
literal XAB$C_DATLEN = 84;              
 

literal XAB$C_RDT = 30;                 
literal XAB$S_XABRDTDEF = 20;

literal XAB$K_RDTLEN = 20;              
literal XAB$C_RDTLEN = 20;              
 

literal XAB$C_PRO = 19;                 
literal XAB$M_NOREAD = %X'1';
literal XAB$M_NOWRITE = %X'2';
literal XAB$M_NOEXE = %X'4';
literal XAB$M_NODEL = %X'8';
literal XAB$S_XABPRODEF = 1;
macro XAB$R_XABPRODEF_BITS = 0,0,8,0 %;
macro XAB$V_NOREAD = 0,0,1,0 %;         
macro XAB$V_NOWRITE = 0,1,1,0 %;        
macro XAB$V_NOEXE = 0,2,1,0 %;          
macro XAB$V_NODEL = 0,3,1,0 %;          
literal XAB$M_PROPAGATE = %X'1';
literal XAB$K_PROLEN_V3 = 16;           
literal XAB$C_PROLEN_V3 = 16;           
literal XAB$S_XABPRODEF1 = 88;

macro XAB$R_PRO_OVERLAY = 8,0,16,0 %;
macro XAB$W_PRO = 8,0,16,0 %;           
macro XAB$R_PRO_BITS = 8,0,16,0 %;
macro XAB$V_SYS = 8,0,4,0 %;
literal XAB$S_SYS = 4;                  
macro XAB$V_OWN = 8,4,4,0 %;
literal XAB$S_OWN = 4;                  
macro XAB$V_GRP = 8,8,4,0 %;
literal XAB$S_GRP = 4;                  
macro XAB$V_WLD = 8,12,4,0 %;
literal XAB$S_WLD = 4;                  
macro XAB$B_MTACC = 10,0,8,0 %;         
macro XAB$R_PROT_OPT_OVERLAY = 11,0,8,0 %;
macro XAB$B_PROT_OPT = 11,0,8,0 %;      
macro XAB$R_PROT_OPT_FIELDS = 11,0,8,0 %;
macro XAB$V_PROPAGATE = 11,0,1,0 %;     
macro XAB$R_UIC_OVERLAY = 12,0,32,0 %;
macro XAB$L_UIC = 12,0,32,0 %;          
macro XAB$R_UIC_FIELDS = 12,0,32,0 %;
macro XAB$W_MBM = 12,0,16,0 %;          
macro XAB$W_GRP = 14,0,16,0 %;          
macro XAB$R_PROT_MODE_OVERLAY = 16,0,0,0 %; 
macro XAB$Q_PROT_MODE = 16,0,0,1 %;
literal XAB$S_PROT_MODE = 8;            
macro XAB$R_PROT_MODE_FIELDS = 16,0,8,0 %;
macro XAB$B_PROT_MODE = 16,0,8,0 %;     
macro XAB$L_ACLBUF = 24,0,32,1 %;       
macro XAB$W_ACLSIZ = 28,0,16,0 %;       
macro XAB$W_ACLLEN = 30,0,16,0 %;       
macro XAB$L_ACLCTX = 32,0,32,0 %;       
macro XAB$L_ACLSTS = 36,0,32,0 %;       
literal XAB$K_PROLEN = 88;              
literal XAB$C_PROLEN = 88;              
 

literal XAB$C_TRM = 31;                 
literal XAB$S_XABTRMDEF = 36;

macro XAB$L_ITMLST = 8,0,32,1 %;        
macro XAB$W_ITMLST_LEN = 12,0,16,0 %;   
literal XAB$K_TRMLEN = 36;              
literal XAB$C_TRMLEN = 36;              
 

literal XAB$C_SUM = 22;                 
literal XAB$S_XABSUMDEF = 12;

macro XAB$B_NOA = 8,0,8,0 %;            
macro XAB$B_NOK = 9,0,8,0 %;            
macro XAB$W_PVN = 10,0,16,0 %;          
literal XAB$K_SUMLEN = 12;              
literal XAB$C_SUMLEN = 12;              
 

literal XAB$C_KEY = 21;                 
literal XAB$M_DUP = %X'1';
literal XAB$M_CHG = %X'2';
literal XAB$M_NUL = %X'4';
literal XAB$M_IDX_NCMPR = %X'8';
literal XAB$M_KEY_NCMPR = %X'40';
literal XAB$M_DAT_NCMPR = %X'80';
literal XAB$C_STG = 0;                  
literal XAB$C_IN2 = 1;                  
literal XAB$C_BN2 = 2;                  
literal XAB$C_IN4 = 3;                  
literal XAB$C_BN4 = 4;                  
literal XAB$C_PAC = 5;                  
literal XAB$C_IN8 = 6;                  
literal XAB$C_BN8 = 7;                  
literal XAB$C_COL = 8;                  
literal XAB$C_MAX_ASCEND = 8;           
literal XAB$C_DSTG = 32;                
literal XAB$C_DIN2 = 33;                
literal XAB$C_DBN2 = 34;                
literal XAB$C_DIN4 = 35;                
literal XAB$C_DBN4 = 36;                
literal XAB$C_DPAC = 37;                
literal XAB$C_DIN8 = 38;                
literal XAB$C_DBN8 = 39;                
literal XAB$C_DCOL = 40;                
literal XAB$C_MAXDTP = 40;              
literal XAB$K_KEYLEN_V2 = 64;           
literal XAB$C_KEYLEN_V2 = 64;           
literal XAB$C_PRG3 = 3;                 
literal XAB$C_PRG2 = 2;                 
literal XAB$C_PRG1 = 1;                 
literal XAB$K_KEYLEN_V4 = 76;           
literal XAB$C_KEYLEN_V4 = 76;           
literal XAB$S_XABKEYDEF = 100;

macro XAB$B_IAN = 8,0,8,0 %;            
macro XAB$B_LAN = 9,0,8,0 %;            
macro XAB$B_DAN = 10,0,8,0 %;           
macro XAB$B_LVL = 11,0,8,0 %;           
macro XAB$B_IBS = 12,0,8,0 %;           
macro XAB$B_DBS = 13,0,8,0 %;           
macro XAB$L_RVB = 14,0,32,0 %;          
macro XAB$R_FLG_OVERLAY = 18,0,8,0 %;
macro XAB$B_FLG = 18,0,8,0 %;           
macro XAB$R_FLG_BITS0 = 18,0,8,0 %;
macro XAB$V_DUP = 18,0,1,0 %;           
macro XAB$V_CHG = 18,1,1,0 %;           
macro XAB$V_NUL = 18,2,1,0 %;           
macro XAB$V_IDX_NCMPR = 18,3,1,0 %;     
macro XAB$V_KEY_NCMPR = 18,6,1,0 %;     
macro XAB$R_FLG_BITS1 = 18,0,8,0 %;
macro XAB$V_DAT_NCMPR = 18,7,1,0 %;     
macro XAB$B_DTP = 19,0,8,0 %;           
macro XAB$B_NSG = 20,0,8,0 %;           
macro XAB$B_NUL = 21,0,8,0 %;           
macro XAB$B_TKS = 22,0,8,0 %;           
macro XAB$B_REF = 23,0,8,0 %;           
macro XAB$W_MRL = 24,0,16,0 %;          
macro XAB$W_IFL = 26,0,16,0 %;          
macro XAB$W_DFL = 28,0,16,0 %;          
macro XAB$R_POS_OVERLAY = 30,0,0,0 %;
macro XAB$W_POS = 30,0,0,0 %;
literal XAB$S_POS = 16;                 
macro XAB$R_POS_FIELDS = 30,0,0,0 %;
macro XAB$W_POS0 = 30,0,16,0 %;         
macro XAB$W_POS1 = 32,0,16,0 %;         
macro XAB$W_POS2 = 34,0,16,0 %;         
macro XAB$W_POS3 = 36,0,16,0 %;         
macro XAB$W_POS4 = 38,0,16,0 %;         
macro XAB$W_POS5 = 40,0,16,0 %;         
macro XAB$W_POS6 = 42,0,16,0 %;         
macro XAB$W_POS7 = 44,0,16,0 %;         
macro XAB$R_SIZ_OVERLAY = 46,0,0,0 %;
macro XAB$B_SIZ = 46,0,0,0 %;
literal XAB$S_SIZ = 8;                  
macro XAB$R_SIZ_FIELDS = 46,0,0,0 %;
macro XAB$B_SIZ0 = 46,0,8,0 %;          
macro XAB$B_SIZ1 = 47,0,8,0 %;          
macro XAB$B_SIZ2 = 48,0,8,0 %;          
macro XAB$B_SIZ3 = 49,0,8,0 %;          
macro XAB$B_SIZ4 = 50,0,8,0 %;          
macro XAB$B_SIZ5 = 51,0,8,0 %;          
macro XAB$B_SIZ6 = 52,0,8,0 %;          
macro XAB$B_SIZ7 = 53,0,8,0 %;          

macro XAB$L_KNM = 56,0,32,1 %;          
macro XAB$L_DVB = 60,0,32,0 %;          

macro XAB$R_TYP_OVERLAY = 64,0,0,0 %;
macro XAB$B_TYP = 64,0,0,0 %;
literal XAB$S_TYP = 8;                  
macro XAB$R_TYP_FIELDS = 64,0,0,0 %;
macro XAB$B_TYP0 = 64,0,8,0 %;          
macro XAB$B_TYP1 = 65,0,8,0 %;          
macro XAB$B_TYP2 = 66,0,8,0 %;          
macro XAB$B_TYP3 = 67,0,8,0 %;          
macro XAB$B_TYP4 = 68,0,8,0 %;          
macro XAB$B_TYP5 = 69,0,8,0 %;          
macro XAB$B_TYP6 = 70,0,8,0 %;          
macro XAB$B_TYP7 = 71,0,8,0 %;          
macro XAB$B_PROLOG = 72,0,8,0 %;        
macro XAB$L_COLTBL = 76,0,32,1 %;       
macro XAB$L_COLSIZ = 80,0,32,0 %;       
macro XAB$L_COLNAM = 84,0,32,0 %;       

literal XAB$K_KEYLEN = 100;             
literal XAB$C_KEYLEN = 100;             
 

literal XAB$C_CXF = 32;                 
literal XAB$M_CXFRST = %X'1';
literal XAB$S_XABCXFDEF = 60;

macro XAB$L_CXFSTS = 8,0,32,0 %;        
macro XAB$L_CXFSTV = 12,0,32,0 %;       

macro XAB$R_CXFCOP_OVERLAY = 16,0,32,0 %;
macro XAB$L_CXFCOP = 16,0,32,0 %;       
macro XAB$R_CXFCOP_BITS = 16,0,8,0 %;
macro XAB$V_CXFRST = 16,0,1,0 %;        
macro XAB$L_CXFBKP = 20,0,32,0 %;       
macro XAB$W_CXFIFI = 24,0,16,0 %;       
macro XAB$B_CXFVER = 26,0,8,0 %;        

macro XAB$W_CXFDEQ = 32,0,16,0 %;       
macro XAB$B_CXFFAC = 34,0,8,0 %;        
macro XAB$B_CXFSHR = 35,0,8,0 %;        
macro XAB$W_CXFRTE = 36,0,16,0 %;       
macro XAB$B_CXFORG = 39,0,8,0 %;        
macro XAB$W_CXFGBC = 40,0,16,0 %;       
macro XAB$B_CXFRTV = 42,0,8,0 %;        
literal XAB$K_CXFLEN = 60;              
literal XAB$C_CXFLEN = 60;              
 

literal XAB$C_CXR = 33;                 
literal XAB$M_CXRRST = %X'1';
literal XAB$C_CXB_VER1 = 1;
literal XAB$C_CXRBLEN = 512;            
literal XAB$S_XABCXRDEF = 84;

macro XAB$L_CXRSTS = 8,0,32,0 %;        
macro XAB$L_CXRSTV = 12,0,32,0 %;       
macro XAB$R_CXRCOP_OVERLAY = 16,0,32,0 %;
macro XAB$L_CXRCOP = 16,0,32,0 %;       
macro XAB$R_CXRCOP_BITS = 16,0,32,0 %;
macro XAB$V_CXRRST = 16,0,1,0 %;        
macro XAB$V_CXRBVER = 16,28,4,0 %;
literal XAB$S_CXRBVER = 4;              
macro XAB$L_CXRBKP = 20,0,32,0 %;       
macro XAB$W_CXRISI = 24,0,16,0 %;       
macro XAB$B_CXRVER = 26,0,8,0 %;        

macro XAB$B_CXRMBF = 32,0,8,0 %;        
macro XAB$B_CXRMBC = 33,0,8,0 %;        
macro XAB$W_CXRBFZ = 34,0,16,0 %;       

macro XAB$L_CXRVBN = 36,0,32,0 %;       
macro XAB$W_CXROFF = 40,0,16,0 %;       
macro XAB$W_FILL_8 = 42,0,16,0 %;       

macro XAB$L_CXRPOS0 = 44,0,32,0 %;      
macro XAB$W_CXRPOS4 = 48,0,16,0 %;
macro XAB$L_CXRCUR0 = 52,0,32,0 %;      
macro XAB$W_CXRCUR4 = 56,0,16,0 %;
macro XAB$L_CXRSID0 = 60,0,32,0 %;      
macro XAB$W_CXRSID4 = 64,0,16,0 %;
macro XAB$W_CXRCNT = 68,0,16,0 %;       
macro XAB$B_CXRKREF = 70,0,8,0 %;       
macro XAB$B_CXRKLEN = 71,0,8,0 %;       
macro XAB$L_CXRBUF = 72,0,32,1 %;       
literal XAB$K_CXRLEN = 84;              
literal XAB$C_CXRLEN = 84;              
 

literal XAB$C_JNL = 34;                 
literal XAB$C_JNL_TYPE_NONE = 0;
literal XAB$C_AI = 1;                   
literal XAB$C_BI = 2;                   
literal XAB$C_AT = 3;                   
literal XAB$C_RU_DEFAULT = 4;           
literal XAB$M_JOURNAL_DISABLED = %X'1';
literal XAB$M_BACKUP_DONE = %X'2';
literal XAB$S_XABJNLDEF = 80;

macro XAB$B_XABJNL_TYPE = 8,0,8,0 %;    
macro XAB$R_JNL_FLAGS_OVERLAY = 10,0,16,0 %;
macro XAB$W_JNL_FLAGS = 10,0,16,0 %;    
macro XAB$R_JNL_FLAGS_BITS = 10,0,8,0 %;
macro XAB$V_JOURNAL_DISABLED = 10,0,1,0 %; 
macro XAB$V_BACKUP_DONE = 10,1,1,0 %;   
macro XAB$L_JNL_FAB = 12,0,32,1 %;      
macro XAB$L_VOLNAM_BUF = 16,0,32,1 %;   
macro XAB$W_VOLNAM_SIZ = 20,0,16,0 %;   
macro XAB$W_VOLNAM_LEN = 22,0,16,0 %;   
macro XAB$Q_JNL_VERIFY_CDATE = 24,0,0,0 %;
literal XAB$S_JNL_VERIFY_CDATE = 8;     
macro XAB$L_JNLIDX = 32,0,32,0 %;       
macro XAB$L_BACKUP_SEQNO = 36,0,32,0 %; 
macro XAB$Q_JNL_MOD_TIME = 40,0,0,0 %;
literal XAB$S_JNL_MOD_TIME = 8;         

literal XAB$K_JNLLEN = 80;
literal XAB$C_JNLLEN = 80;
 

literal XAB$C_ITM = 36;                 

literal XAB$M_WASCONTIG = %X'1';
literal XAB$M_NOBACKUP = %X'2';
literal XAB$M_WRITEBACK = %X'4';
literal XAB$M_READCHECK = %X'8';
literal XAB$M_WRITCHECK = %X'10';
literal XAB$M_CONTIGB = %X'20';
literal XAB$M_LOCKED = %X'40';
literal XAB$M_CONTIG = %X'80';
literal XAB$M_RESERVED1 = %X'100';
literal XAB$M_RESERVED2 = %X'200';
literal XAB$M_RESERVED3 = %X'400';
literal XAB$M_BADACL = %X'800';
literal XAB$M_SPOOL = %X'1000';
literal XAB$M_DIRECTORY = %X'2000';
literal XAB$M_BADBLOCK = %X'4000';
literal XAB$M_MARKDEL = %X'8000';
literal XAB$M_NOCHARGE = %X'10000';
literal XAB$M_ERASE = %X'20000';
literal XAB$M_RESERVED4 = %X'40000';
literal XAB$M_SHELVED = %X'80000';
literal XAB$M_RESERVED6 = %X'100000';
literal XAB$M_NOMOVE = %X'200000';
literal XAB$M_NOSHELVABLE = %X'400000';
literal XAB$M_PRESHELVED = %X'800000';
literal XAB$S_UCHAR_FLAGS = 3;          
macro XAB$V_WASCONTIG = 0,0,1,0 %;
macro XAB$V_NOBACKUP = 0,1,1,0 %;
macro XAB$V_WRITEBACK = 0,2,1,0 %;
macro XAB$V_READCHECK = 0,3,1,0 %;
macro XAB$V_WRITCHECK = 0,4,1,0 %;
macro XAB$V_CONTIGB = 0,5,1,0 %;
macro XAB$V_LOCKED = 0,6,1,0 %;
macro XAB$V_CONTIG = 0,7,1,0 %;
macro XAB$V_RESERVED1 = 0,8,1,0 %;
macro XAB$V_RESERVED2 = 0,9,1,0 %;
macro XAB$V_RESERVED3 = 0,10,1,0 %;
macro XAB$V_BADACL = 0,11,1,0 %;
macro XAB$V_SPOOL = 0,12,1,0 %;
macro XAB$V_DIRECTORY = 0,13,1,0 %;
macro XAB$V_BADBLOCK = 0,14,1,0 %;
macro XAB$V_MARKDEL = 0,15,1,0 %;
macro XAB$V_NOCHARGE = 0,16,1,0 %;
macro XAB$V_ERASE = 0,17,1,0 %;
macro XAB$V_RESERVED4 = 0,18,1,0 %;
macro XAB$V_SHELVED = 0,19,1,0 %;
macro XAB$V_RESERVED6 = 0,20,1,0 %;
macro XAB$V_NOMOVE = 0,21,1,0 %;
macro XAB$V_NOSHELVABLE = 0,22,1,0 %;
macro XAB$V_PRESHELVED = 0,23,1,0 %;
literal XAB$_NET_BUFFER_SIZE = 1;       
literal XAB$_NET_BLOCK_COUNT = 2;       
literal XAB$_NET_REMOTE_SYSTEM = 3;     
literal XAB$_NET_REMOTE_FILE_SYSTEM = 4; 
literal XAB$_NET_EXTPROT = 5;           
literal XAB$_NET_SYSCAP_LOCAL = 6;      
literal XAB$_NET_SYSCAP_REMOTE = 7;     
literal XAB$_NET_DAPVER_LOCAL = 8;      
literal XAB$_NET_DAPVER_REMOTE = 9;     
literal XAB$_NET_LINK_TIMEOUT = 10;     
literal XAB$_NET_DATA_CRC_ENABLE = 11;  
literal XAB$_NET_LINK_CACHE_ENABLE = 12; 
literal XAB$K_NET_MIN = 1;
literal XAB$K_NET_MAX = 12;
literal XAB$_STAT_ENABLE = 64;          
literal XAB$_FILE_LENGTH_HINT = 65;     
literal XAB$K_STAT_MIN = 64;
literal XAB$K_STAT_MAX = 65;
literal XAB$_UCHAR = 128;               
literal XAB$_UCHAR_WASCONTIG = 129;     
literal XAB$_UCHAR_NOBACKUP = 130;      
literal XAB$_UCHAR_WRITEBACK = 131;     
literal XAB$_UCHAR_READCHECK = 132;     
literal XAB$_UCHAR_WRITECHECK = 133;    
literal XAB$_UCHAR_CONTIGB = 134;       
literal XAB$_UCHAR_LOCKED = 135;        
literal XAB$_UCHAR_CONTIG = 136;        
literal XAB$_UCHAR_BADACL = 137;        
literal XAB$_UCHAR_SPOOL = 138;         
literal XAB$_UCHAR_DIRECTORY = 139;     
literal XAB$_UCHAR_BADBLOCK = 140;      
literal XAB$_UCHAR_MARKDEL = 141;       
literal XAB$_UCHAR_NOCHARGE = 142;      
literal XAB$_UCHAR_ERASE = 143;         
literal XAB$_UCHAR_NOMOVE = 144;        
literal XAB$_UCHAR_SHELVED = 145;       
literal XAB$_UCHAR_NOSHELVABLE = 146;   
literal XAB$_UCHAR_PRESHELVED = 147;    
literal XAB$K_UCHAR_MIN = 128;
literal XAB$K_UCHAR_MAX = 147;
literal XAB$_STORED_SEMANTICS = 192;    
literal XAB$_ACCESS_SEMANTICS = 193;    
literal XAB$_RMS_EXTENSION = 194;       
literal XAB$K_XLATE_MIN = 192;
literal XAB$K_XLATE_MAX = 194;
literal XAB$C_SEMANTICS_MAX_LEN = 64;   
literal XAB$K_SEMANTICS_MAX_LEN = 64;   
literal XAB$_MULTIBUFFER_COUNT = 256;   
literal XAB$_NORECORD = 257;            
literal XAB$_RECOVERY = 258;            
literal XAB$_RUJVOLNAM = 259;           
literal XAB$_GBC_LONG = 260;            
literal XAB$_LINKCOUNT = 261;           
literal XAB$K_MISC_MIN = 256;
literal XAB$K_MISC_MAX = 261;
literal XAB$_TID = 320;                 
literal XAB$K_TID_MIN = 320;
literal XAB$K_TID_MAX = 320;
literal XAB$_CACHING_OPTIONS = 384;     
literal XAB$_CACHING_ATTRIBUTE = 385;   
literal XAB$K_CACHING_OPTIONS_MIN = 384;
literal XAB$K_CACHING_OPTIONS_MAX = 385;
literal XAB$_ACCDATE = 448;             
literal XAB$_ATTDATE = 449;             
literal XAB$_MODDATE = 450;             
literal XAB$K_DATE_MIN = 448;
literal XAB$K_DATE_MAX = 450;
literal XAB$K_SENSEMODE = 1;
literal XAB$K_SETMODE = 2;
literal XAB$S_XABITMDEF = 32;

macro XAB$L_ITEMLIST = 8,0,32,1 %;      

macro XAB$B_MODE = 12,0,8,0 %;          
literal XAB$K_ITMLEN = 32;
literal XAB$C_ITMLEN = 32;

literal XAB$M_FILE_ATTRIBUTES = %X'F';
literal XAB$M_FILE_CONTENTS = %X'F0';
literal XAB$K_DEFAULT = 0;
literal XAB$K_WRITETHROUGH = 1;
literal XAB$K_WRITEBEHIND = 2;
literal XAB$K_NOCACHING = 3;
literal XAB$M_FLUSH_ON_CLOSE = %X'F00';
literal XAB$K_FLUSH = 1;
literal XAB$K_NOFLUSH = 2;
literal XAB$M_CACHECTL_MBZ = %X'FFFFF000';
literal XAB$S_XAB_CACHING_OPTIONS_FLAGS = 4;
macro XAB$V_FILE_ATTRIBUTES = 0,0,4,0 %;
literal XAB$S_FILE_ATTRIBUTES = 4;
macro XAB$V_FILE_CONTENTS = 0,4,4,0 %;
literal XAB$S_FILE_CONTENTS = 4;
macro XAB$V_FLUSH_ON_CLOSE = 0,8,4,0 %;
literal XAB$S_FLUSH_ON_CLOSE = 4;
macro XAB$V_CACHECTL_MBZ = 0,12,20,0 %;
literal XAB$S_CACHECTL_MBZ = 20;

literal XAB$M_RCF_RU = %X'1';
literal XAB$M_RCF_AI = %X'2';
literal XAB$M_RCF_BI = %X'4';
literal XAB$M_RCF_NOPAD = %X'8';
literal XAB$S_XAB_RCF_FLAGS = 1;
macro XAB$V_RCF_RU = 0,0,1,0 %;
macro XAB$V_RCF_AI = 0,1,1,0 %;
macro XAB$V_RCF_BI = 0,2,1,0 %;
macro XAB$V_RCF_NOPAD = 0,3,1,0 %;
literal XAB$K_DISABLE = 0;
literal XAB$K_ENABLE = 1;
literal XAB$K_RT11 = 1;
literal XAB$K_RSTS = 2;
literal XAB$K_RSX11S = 3;
literal XAB$K_RSX11M = 4;
literal XAB$K_RSX11D = 5;
literal XAB$K_IAS = 6;
literal XAB$K_VAXVMS = 7;
literal XAB$K_TOPS20 = 8;
literal XAB$K_TOPS10 = 9;
literal XAB$K_RTS8 = 10;
literal XAB$K_OS8 = 11;
literal XAB$K_RSX11MP = 12;
literal XAB$K_COPOS11 = 13;
literal XAB$K_P_OS = 14;
literal XAB$K_VAXELN = 15;
literal XAB$K_CPM = 16;
literal XAB$K_MS_DOS = 17;
literal XAB$K_ULTRIX_32 = 18;
literal XAB$K_ULTRIX_11 = 19;
literal XAB$K_RMS11 = 1;
literal XAB$K_RMS20 = 2;
literal XAB$K_RMS32 = 3;
literal XAB$K_FCS11 = 4;
literal XAB$K_RT11FS = 5;
literal XAB$K_NO_FS = 6;
literal XAB$K_TOPS20FS = 7;
literal XAB$K_TOPS10FS = 8;
literal XAB$K_OS8FS = 9;
literal XAB$K_RMS32S = 10;
literal XAB$K_CPMFS = 11;
literal XAB$K_MS_DOSFS = 12;
literal XAB$K_ULTRIX32_FS = 13;
literal XAB$K_ULTRIX11_FS = 14;
literal XAB$M_NET_NOREAD = %X'1';
literal XAB$M_NET_NOWRITE = %X'2';
literal XAB$M_NET_NOEXECUTE = %X'4';
literal XAB$M_NET_NODELETE = %X'8';
literal XAB$M_NET_NOAPPEND = %X'10';
literal XAB$M_NET_NODIRECTORY = %X'20';
literal XAB$M_NET_NOUPDATE = %X'40';
literal XAB$M_NET_NOCHANGE = %X'80';
literal XAB$M_NET_NOEXTEND = %X'100';
literal XAB$S_XABNETEXTPROT = 8;
macro XAB$W_SYSTEM_ACC = 0,0,16,0 %;
macro XAB$V_NET_NOREAD = 0,0,1,0 %;
macro XAB$V_NET_NOWRITE = 0,1,1,0 %;
macro XAB$V_NET_NOEXECUTE = 0,2,1,0 %;
macro XAB$V_NET_NODELETE = 0,3,1,0 %;
macro XAB$V_NET_NOAPPEND = 0,4,1,0 %;
macro XAB$V_NET_NODIRECTORY = 0,5,1,0 %;
macro XAB$V_NET_NOUPDATE = 0,6,1,0 %;
macro XAB$V_NET_NOCHANGE = 0,7,1,0 %;
macro XAB$V_NET_NOEXTEND = 0,8,1,0 %;
macro XAB$W_OWNER_ACC = 2,0,16,0 %;
macro XAB$W_GROUP_ACC = 4,0,16,0 %;
macro XAB$W_WORLD_ACC = 6,0,16,0 %;
literal XAB$S_XABNETDAPVER = 5;
macro XAB$B_VER_DAP = 0,0,8,0 %;
macro XAB$B_VER_ECO = 1,0,8,0 %;
macro XAB$B_VER_CUS = 2,0,8,0 %;
macro XAB$B_VER_DSV = 3,0,8,0 %;
macro XAB$B_VER_CSV = 4,0,8,0 %;
literal XAB$S_XABNETCAPDEF = 7;
macro XAB$V_CAP_FILALL = 0,0,1,0 %;
macro XAB$V_CAP_SEQORG = 0,1,1,0 %;
macro XAB$V_CAP_RELORG = 0,2,1,0 %;
macro XAB$V_CAP_EXTEND = 0,4,1,0 %;
macro XAB$V_CAP_SEQFIL = 0,5,1,0 %;
macro XAB$V_CAP_RANRRN = 0,6,1,0 %;
macro XAB$V_CAP_RANVBN = 0,7,1,0 %;
macro XAB$V_CAP_RANKEY = 0,8,1,0 %;
macro XAB$V_CAP_RANRFA = 0,10,1,0 %;
macro XAB$V_CAP_IDXORG = 0,11,1,0 %;
macro XAB$V_CAP_SWMODE = 0,12,1,0 %;
macro XAB$V_CAP_APPEND = 0,13,1,0 %;
macro XAB$V_CAP_SUBMIT = 0,14,1,0 %;
macro XAB$V_CAP_MDS = 0,16,1,0 %;
macro XAB$V_CAP_DISPLAY = 0,17,1,0 %;
macro XAB$V_CAP_MSGBLK = 0,18,1,0 %;
macro XAB$V_CAP_UNRBLK = 0,19,1,0 %;
macro XAB$V_CAP_BIGBLK = 0,20,1,0 %;
macro XAB$V_CAP_DAPCRC = 0,21,1,0 %;
macro XAB$V_CAP_KEYXAB = 0,22,1,0 %;
macro XAB$V_CAP_ALLXAB = 0,23,1,0 %;
macro XAB$V_CAP_SUMXAB = 0,24,1,0 %;
macro XAB$V_CAP_DIRECTORY = 0,25,1,0 %;
macro XAB$V_CAP_TIMXAB = 0,26,1,0 %;
macro XAB$V_CAP_PROXAB = 0,27,1,0 %;
macro XAB$V_CAP_FOPSPL = 0,29,1,0 %;
macro XAB$V_CAP_FOPSCF = 0,30,1,0 %;
macro XAB$V_CAP_FOPDLT = 0,31,1,0 %;
macro XAB$V_CAP_SEQRAC = 4,1,1,0 %;
macro XAB$V_CAP_BITOPT = 4,3,1,0 %;
macro XAB$V_CAP_WARNING = 4,4,1,0 %;
macro XAB$V_CAP_RENAME = 4,5,1,0 %;
macro XAB$V_CAP_WILDCARD = 4,6,1,0 %;
macro XAB$V_CAP_GNGOPT = 4,7,1,0 %;
macro XAB$V_CAP_NAMMSG = 4,8,1,0 %;
macro XAB$V_CAP_SEGMSG = 4,9,1,0 %;
macro XAB$V_CAP_CHGATTCLS = 4,10,1,0 %;
macro XAB$V_CAP_CHGTIMCLS = 4,11,1,0 %;
macro XAB$V_CAP_CHGPROCLS = 4,12,1,0 %;
macro XAB$V_CAP_CHGNAMCLS = 4,13,1,0 %;
macro XAB$V_CAP_MODATTCRE = 4,14,1,0 %;
macro XAB$V_CAP_NAM3PART = 4,15,1,0 %;
macro XAB$V_CAP_CHGATTREN = 4,16,1,0 %;
macro XAB$V_CAP_CHGTIMREN = 4,17,1,0 %;
macro XAB$V_CAP_CHGPROREN = 4,18,1,0 %;
macro XAB$V_CAP_CTLBLKCNT = 4,19,1,0 %;
macro XAB$V_CAP_OCTALVER = 4,20,1,0 %;
literal XAB$S_BUFFER_SIZE = 4;
literal XAB$S_NETWORK_BLOCK_COUNT = 4;
literal XAB$S_REMOTE_SYSTEM = 4;
literal XAB$S_REMOTE_FILE_SYSTEM = 4;
literal XAB$S_EXTPROT_LOCAL = 8;
literal XAB$S_EXTPROT_REMOTE = 8;
literal XAB$S_CAPABIL_LOCAL = 8;
literal XAB$S_CAPABIL_REMOTE = 8;
literal XAB$S_DAPVER_LOCAL = 5;
literal XAB$S_DAPVER_REMOTE = 5;
literal XAB$S_CACHE_TMO = 4;
literal XAB$S_HINT_LENGTH = 16;
literal XAB$S_GBC_LONG_LENGTH = 4;
 

literal XAB$C_RU = 35;                  
literal XAB$M_NOJOIN = %X'1';
literal XAB$S_XABRUDEF = 48;

macro XAB$R_RU_FLAGS_OVERLAY = 8,0,16,0 %;
macro XAB$W_RU_FLAGS = 8,0,16,0 %;      
macro XAB$R_RU_FLAGS_BITS = 8,0,8,0 %;
macro XAB$V_NOJOIN = 8,0,1,0 %;         
macro XAB$L_RU_HANDLE = 12,0,32,0 %;    
macro XAB$L_RU_HANDLE_JOINED = 16,0,32,0 %; 
literal XAB$K_RULEN = 48;
literal XAB$C_RULEN = 48;
 

literal FSCN$M_NODE = %X'1';
literal FSCN$M_DEVICE = %X'2';
literal FSCN$M_ROOT = %X'4';
literal FSCN$M_DIRECTORY = %X'8';
literal FSCN$M_NAME = %X'10';
literal FSCN$M_TYPE = %X'20';
literal FSCN$M_VERSION = %X'40';
literal FSCN$M_NODE_PRIMARY = %X'80';
literal FSCN$M_NODE_ACS = %X'100';
literal FSCN$M_NODE_SECONDARY = %X'200';
literal FSCN$S_FLDFLAGS = 4;
macro FSCN$V_NODE = 0,0,1,0 %;          
macro FSCN$V_DEVICE = 0,1,1,0 %;        
macro FSCN$V_ROOT = 0,2,1,0 %;          
macro FSCN$V_DIRECTORY = 0,3,1,0 %;     
macro FSCN$V_NAME = 0,4,1,0 %;          
macro FSCN$V_TYPE = 0,5,1,0 %;          
macro FSCN$V_VERSION = 0,6,1,0 %;       
macro FSCN$V_NODE_PRIMARY = 0,7,1,0 %;  
macro FSCN$V_NODE_ACS = 0,8,1,0 %;      
macro FSCN$V_NODE_SECONDARY = 0,9,1,0 %; 
literal FSCN$_FILESPEC = 1;             
literal FSCN$_NODE = 2;                 
literal FSCN$_DEVICE = 3;               
literal FSCN$_ROOT = 4;                 
literal FSCN$_DIRECTORY = 5;            
literal FSCN$_NAME = 6;                 
literal FSCN$_TYPE = 7;                 
literal FSCN$_VERSION = 8;              
literal FSCN$_NODE_PRIMARY = 9;         
literal FSCN$_NODE_ACS = 10;            
literal FSCN$_NODE_SECONDARY = 11;      
literal FSCN$S_ITEM_LEN = 8;
literal FSCN$S_FSCNDEF = 8;
macro FSCN$W_LENGTH = 0,0,16,0 %;       
macro FSCN$W_ITEM_CODE = 2,0,16,0 %;    
macro FSCN$L_ADDR = 4,0,32,1 %;         
 
literal RME$C_SETRFM = 1;
literal RME$C_PPFECHO = 2;
literal RME$C_SETRCF = 3;
literal RME$C_KEEP_LOCK_ON = 4;
literal RME$C_KEEP_LOCK_OFF = 5;

 

%if not %declared(%quote SDL$STARLET_REQ) %then

macro
SDL$STARLET_REQ(ARG1, arg2) =
    %IF not %NULL(ARG1) %THEN ARG1
    %else
	%warn(%string('REQUIRED ARGUMENT ', %NAME(ARG2), ' MISSING')) 0
    %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_OPT) %then

macro
SDL$STARLET_OPT[ARG] =
    %IF %NULL(ARG)
    %THEN
	%IF NOT %NULL(%REMAINING)
	%THEN
	    0
	%FI
    %ELSE
	ARG
    %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_LIST_0_REQ) %then

macro
SDL$STARLET_LIST_0_REQ(ARG) =
    %IF NOT %NULL(ARG) %THEN %REMOVE(ARG) %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_LIST_1_REQ) %then

macro
SDL$STARLET_LIST_1_REQ(ARG, ARG2) =
    %IF %NULL(ARG) %THEN
	 %warn(%string('REQUIRED ARGUMENT ', %NAME(ARG2), ' MISSING')) 0
    %ELSE
        SDL$STARLET_LIST_0_REQ(ARG) %FI %;
%fi
 
%if not %declared(%quote SDL$STARLET_CONCAT) %then

macro
SDL$STARLET_CONCAT[ARG] =
    %IF NOT %NULL(ARG) %THEN ARG %FI %;
%fi
 
 
KEYWORDMACRO $ABORT_RU (RU_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$ABORT_RU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$ABORT_RU (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RU_HANDLE, %QUOTE RU_HANDLE) ))
   END %;
 

KEYWORDMACRO $CANRUH (HANDLER_ID=0,ACCESS_MODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$CANRUH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$CANRUH (SDL$STARLET_CONCAT( HANDLER_ID, ACCESS_MODE))
   END %;
 

KEYWORDMACRO $COMMIT_RU (RU_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$COMMIT_RU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$COMMIT_RU (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RU_HANDLE, %QUOTE RU_HANDLE) ))
   END %;
 

KEYWORDMACRO $DCLRUH (HANDLER_ADDRESS,HANDLER_ID,ACCESS_MODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$DCLRUH : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$DCLRUH (SDL$STARLET_CONCAT( SDL$STARLET_REQ(HANDLER_ADDRESS, %QUOTE HANDLER_ADDRESS) , 
	   SDL$STARLET_REQ(HANDLER_ID, %QUOTE HANDLER_ID) , ACCESS_MODE))
   END %;
 

KEYWORDMACRO $END_RU (RU_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$END_RU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$END_RU (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RU_HANDLE, %QUOTE RU_HANDLE) ))
   END %;
 

KEYWORDMACRO $GET_RUID (RU_HANDLE,RUID,ACCESS_MODE=0,FLAG=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$GET_RUID : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$GET_RUID (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RU_HANDLE, %QUOTE RU_HANDLE) , 
	   SDL$STARLET_REQ(RUID, %QUOTE RUID) , ACCESS_MODE, FLAG))
   END %;
 

KEYWORDMACRO $JOIN_RU (RU_HANDLE,HANDLER_ID,OBJECT_ID) =
   BEGIN
   EXTERNAL ROUTINE SYS$JOIN_RU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$JOIN_RU (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RU_HANDLE, %QUOTE RU_HANDLE) , 
	   SDL$STARLET_REQ(HANDLER_ID, %QUOTE HANDLER_ID) , SDL$STARLET_REQ(OBJECT_ID, %QUOTE OBJECT_ID) ))
   END %;
 

KEYWORDMACRO $PREPARE_RU (RU_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$PREPARE_RU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$PREPARE_RU (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RU_HANDLE, %QUOTE RU_HANDLE) ))
   END %;
 

KEYWORDMACRO $RUNDOWN_RU (ACCESS_MODE=0) =
   BEGIN
   EXTERNAL ROUTINE SYS$RUNDOWN_RU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$RUNDOWN_RU (SDL$STARLET_CONCAT( ACCESS_MODE))
   END %;
 

KEYWORDMACRO $START_RU (RU_HANDLE) =
   BEGIN
   EXTERNAL ROUTINE SYS$START_RU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$START_RU (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RU_HANDLE, %QUOTE RU_HANDLE) ))
   END %;
 

KEYWORDMACRO $UNJOIN_RU (RU_HANDLE,HANDLER_ID,OBJECT_ID) =
   BEGIN
   EXTERNAL ROUTINE SYS$UNJOIN_RU : BLISS ADDRESSING_MODE (GENERAL);
	   SYS$UNJOIN_RU (SDL$STARLET_CONCAT( SDL$STARLET_REQ(RU_HANDLE, %QUOTE RU_HANDLE) , 
	   SDL$STARLET_REQ(HANDLER_ID, %QUOTE HANDLER_ID) , SDL$STARLET_REQ(OBJECT_ID, %QUOTE OBJECT_ID) ))
   END %;
 

 

literal RUF$_FACILITY = 15;
literal RUF$_RUREAONL = 1015809;
literal RUF$_RUHOBJ = 1017859;
literal RUF$_NOSUCHRU = 1019904;
literal RUF$_RUABO = 1019912;
literal RUF$_NOSUCHOBJ = 1019920;
literal RUF$_RUNOTCOM = 1019928;
literal RUF$_RUNOTABO = 1019936;
literal RUF$_HANACTRU = 1021954;
literal RUF$_RUALRABO = 1021962;
literal RUF$_RUALRCOM = 1021970;
literal RUF$_RUALRPRE = 1021978;
literal RUF$_RUNOTPRE = 1021986;
literal RUF$_ERRRUHSTA = 1021994;
literal RUF$_ERRRUHPRE = 1022002;
literal RUF$_ERRRUHCOM = 1022010;
literal RUF$_ERRRUHABO = 1022018;
literal RUF$_INVHANID = 1024004;
literal RUF$_INVRUHAN = 1024012;
literal RUF$_KERMODINV = 1024020;
literal RUF$_SUPMODINV = 1024028;
literal RUF$_USEMODINV = 1024036;

 

literal RUF$K_TID_LENGTH = 16;          
literal RUF$K_RU_MIN = 0;               
literal RUF$K_RU_TO_TID = 0;
literal RUF$K_TID_TO_RU = 1;
literal RUF$K_DEFAULT = 2;
literal RUF$K_RU_MAX = 2;               
literal RUFRUH$K_START = 1;             
literal RUFRUH$K_PREPARE = 2;           
literal RUFRUH$K_COMMIT = 3;            
literal RUFRUH$K_ABORT = 4;             
literal RUFRUH$K_MIN_CODE = 1;          
literal RUFRUH$K_MAX_CODE = 4;          
literal RUFRUH$S_RUFRUHDEF = 24;
macro RUFRUH$B_ARGCOUNT = 0,0,8,0 %;    
macro RUFRUH$A_ACTION = 4,0,32,0 %;     
macro RUFRUH$A_RU_HANDLE = 8,0,32,0 %;  
macro RUFRUH$A_RUID = 12,0,32,0 %;      
macro RUFRUH$A_HANDLER_ID = 16,0,32,0 %; 
macro RUFRUH$A_OBJECT_ID = 20,0,32,0 %; 

 

literal SCR$C_PUT_SCREEN = 0;           
literal SCR$C_GET_SCREEN = 1;           
literal SCR$C_ERASE_PAGE = 2;           
literal SCR$C_ERASE_LINE = 3;           
literal SCR$C_SET_CURSOR = 4;           
literal SCR$C_DOWN_SCROLL = 5;          
literal SCR$C_SCREEN_INFO = 6;          
literal SCR$C_PUT_LINE = 7;             
literal SCR$C_MOVE_CURSOR = 8;          
literal SCR$C_SET_SCROLL = 9;           
literal SCR$C_UP_SCROLL = 10;           

literal SCR$M_BOLD = %X'1';
literal SCR$M_REVERSE = %X'2';
literal SCR$M_BLINK = %X'4';
literal SCR$M_UNDERLINE = %X'8';
literal SCR$M_NORMAL = 0;               
literal SCR$S_SCRDEF = 1;
macro SCR$R_SCRDEF_BITS = 0,0,8,0 %;
macro SCR$V_BOLD = 0,0,1,0 %;
macro SCR$V_REVERSE = 0,1,1,0 %;
macro SCR$V_BLINK = 0,2,1,0 %;
macro SCR$V_UNDERLINE = 0,3,1,0 %;

literal SCR$M_SCREEN = %X'1';
literal SCR$M_ANSICRT = %X'2';
literal SCR$M_REGIS = %X'4';
literal SCR$M_BLOCK = %X'8';
literal SCR$M_AVO = %X'10';
literal SCR$M_EDIT = %X'20';
literal SCR$M_DECCRT = %X'40';
literal SCR$K_LENGTH = 20;              
literal SCR$C_LENGTH = 20;              
literal SCR$S_SCRDEF1 = 20;
macro SCR$R_FLAGS_OVERLAY = 0,0,32,0 %;
macro SCR$L_FLAGS = 0,0,32,0 %;         
macro SCR$R_FLAGS_BITS = 0,0,8,0 %;
macro SCR$V_SCREEN = 0,0,1,0 %;         
macro SCR$V_ANSICRT = 0,1,1,0 %;        
macro SCR$V_REGIS = 0,2,1,0 %;          
macro SCR$V_BLOCK = 0,3,1,0 %;          
macro SCR$V_AVO = 0,4,1,0 %;            
macro SCR$V_EDIT = 0,5,1,0 %;           
macro SCR$V_DECCRT = 0,6,1,0 %;         
macro SCR$W_WIDTH = 4,0,16,0 %;         
macro SCR$W_PAGESIZE = 6,0,16,0 %;      
macro SCR$B_DEVTYPE = 8,0,8,0 %;        

 

literal SECSRV$_FACILITY = 1774;
literal SECSRV$_SERVERRADIOACTIVE = 116299635;
literal SECSRV$_SERVERRESTART = 116299643;
literal SECSRV$_SERVERSHUTDOWN = 116299651;
literal SECSRV$_COULDNTSTART = 116299659;
literal SECSRV$_COULDNTRESTART = 116299667;
literal SECSRV$_PROXYSHUTDOWN = 116299675;
literal SECSRV$_CIASHUTDOWN = 116299683;
literal SECSRV$_SERVERSTARTINGUP = 116299691;
literal SECSRV$_PROXYSTARTINGUP = 116299699;
literal SECSRV$_CIASTARTINGUP = 116299707;
literal SECSRV$_INTRUDER = 116299715;
literal SECSRV$_SUSPECT = 116299723;
literal SECSRV$_CREATEPROXYDB = 116299731;
literal SECSRV$_PROXYMODIFIED = 116299739;
literal SECSRV$_NOSCANNEDINTRUDER = 116299747;
literal SECSRV$_INVALIDTERMNAME = 116299755;
literal SECSRV$_CIACRECLUDB = 116299763;
literal SECSRV$_CIACRELOCDB = 116299771;
literal SECSRV$_CIAEXISTCLU = 116299779;
literal SECSRV$_CIAEXISTLOC = 116299787;
literal SECSRV$_NORDPROXYREC = 116305632;
literal SECSRV$_NOSUCHUSER = 116311634;
literal SECSRV$_DUPLICATEUSER = 116311642;
literal SECSRV$_INVALIDDELETE = 116311650;
literal SECSRV$_UPDATEFAILED = 116311658;
literal SECSRV$_NOSUCHPROXY = 116311666;
literal SECSRV$_DBALREADYEXISTS = 116311674;
literal SECSRV$_TOOMANYUSERS = 116311682;
literal SECSRV$_BADNODENAMELEN = 116311690;
literal SECSRV$_BADREMUSERLEN = 116311698;
literal SECSRV$_BADLOCALUSERLEN = 116311706;
literal SECSRV$_PROXYACTIVE = 116311714;
literal SECSRV$_PROXYNOTACTIVE = 116311722;
literal SECSRV$_NOPROXYDB = 116311730;
literal SECSRV$_NOSUCHINTRUDER = 116311738; 
literal SECSRV$_CIADBEMPTY = 116311746; 
literal SECSRV$_INSUFINFO = 116311754;
literal SECSRV$_AUDITFAILED = 116311762;
literal SECSRV$_ASSIGNFAILED = 116311770;
literal SECSRV$_QIOFAILED = 116311778;
literal SECSRV$_DASSGNFAILED = 116311786;
literal SECSRV$_BADJOBTYPE = 116311794;
literal SECSRV$_SERVERNOTACTIVE = 116311802;
literal SECSRV$_PROXYNOTOPEN = 116311810;
literal SECSRV$_PROXYTERMINATED = 116317636;
literal SECSRV$_CIATERMINATED = 116317644;
literal SECSRV$_SERVERTERMINATED = 116317652;
literal SECSRV$_CREMBXFAILED = 116317660;
literal SECSRV$_RUNNING = 116317668;
literal SECSRV$_CONSTERROR = 116317676;
literal SECSRV$_TASKERROR = 116317684;
literal SECSRV$_OUTCOMTERMINATED = 116317692;
literal SECSRV$_SRVREPLYTIMEOUT = 116317700; 

literal SECSRV$_CONVERT = 116323635;
literal SECSRV$_VERIFY_CONVERSION = 116323643;
literal SECSRV$_CONVERT_SUCCESS = 116323651;

 

literal SHR$_FACILITY = 0;
literal SHR$_APPENDEDB = 4096;
literal SHR$_APPENDEDR = 4104;
literal SHR$_BADBYTE = 4112;
literal SHR$_BADFIELD = 4120;
literal SHR$_BADLONG = 4128;
literal SHR$_BADWORD = 4136;
literal SHR$_BEGIN = 4144;
literal SHR$_BEGIND = 4152;
literal SHR$_BEGINT = 4160;
literal SHR$_CLICB = 4168;
literal SHR$_CLOSEIN = 4176;
literal SHR$_CLOSEOUT = 4184;
literal SHR$_COPIEDB = 4192;
literal SHR$_COPIEDR = 4200;
literal SHR$_CREATED = 4208;
literal SHR$_ENDED = 4216;
literal SHR$_ENDEDD = 4224;
literal SHR$_ENDEDT = 4232;
literal SHR$_NEWFILES = 4240;
literal SHR$_OPENIN = 4248;
literal SHR$_OPENOUT = 4256;
literal SHR$_OVERLAY = 4264;
literal SHR$_READERR = 4272;
literal SHR$_REPLACED = 4280;
literal SHR$_WILDCONCAT = 4288;
literal SHR$_WILDOUTVER = 4296;
literal SHR$_WRITEERR = 4304;
literal SHR$_ABEND = 4312;
literal SHR$_ABENDD = 4320;
literal SHR$_ABENDT = 4328;
literal SHR$_SYSERRORPC = 4336;
literal SHR$_SYNTAX = 4344;
literal SHR$_NOVALUE = 4352;
literal SHR$_BADKEY = 4360;
literal SHR$_BADVALUE = 4368;
literal SHR$_BADDELIM = 4376;
literal SHR$_BADLOGIC = 4384;
literal SHR$_NOWILD = 4392;
literal SHR$_TEXT = 4400;
literal SHR$_IDXCONCAT = 4408;
literal SHR$_RELCONCAT = 4416;
literal SHR$_HIGHVER = 4424;
literal SHR$_BADLOGICPC = 4432;
literal SHR$_ATPC = 4440;
literal SHR$_BADCOPIES = 4448;
literal SHR$_BADFORM = 4456;
literal SHR$_BADJOBID = 4464;
literal SHR$_BADJOBNAME = 4472;
literal SHR$_BADPRTY = 4480;
literal SHR$_BADQNAME = 4488;
literal SHR$_BADTIME = 4496;
literal SHR$_NOQUEUE = 4504;
literal SHR$_NOJOBID = 4512;
literal SHR$_NOJOBNAME = 4520;
literal SHR$_SYSERROR = 4528;
literal SHR$_NOTCOPIED = 4536;
literal SHR$_NOTCMPLT = 4544;
literal SHR$_RMSERROR = 4552;
literal SHR$_UNXPCTSTS = 4560;
literal SHR$_HASHCONCAT = 4568;
literal SHR$_INCOMPAT = 4576;
literal SHR$_VALERR = 4584;
literal SHR$_FILNOTDEL = 4592;
literal SHR$_CONFDEL = 4600;
literal SHR$_DELETED = 4608;
literal SHR$_DELVER = 4616;
literal SHR$_PURGEVER = 4624;
literal SHR$_CLOSEDEL = 4632;
literal SHR$_DIRTOOBUS = 4640;
literal SHR$_NOFILPURG = 4648;
literal SHR$_FILNOTPUR = 4656;
literal SHR$_SEARCHFAIL = 4664;
literal SHR$_DELINTERR = 4672;
literal SHR$_PARSEFAIL = 4680;
literal SHR$_FILPURGED = 4688;
literal SHR$_ENDABORT = 4696;
literal SHR$_ENDDIAGS = 4704;
literal SHR$_ENDNOOBJ = 4712;
literal SHR$_HALTED = 4720;
literal SHR$_NOCMDMEM = 4728;
literal SHR$_QEMPTY = 4736;
literal SHR$_CBT = 4744;
literal SHR$_EXISTS = 4752;
literal SHR$_UNLOCKED = 4760;
literal SHR$_RENAMED = 4768;
literal SHR$_PROTECTED = 4776;
literal SHR$_NOTLOCKED = 4784;
literal SHR$_ACTIMAGE = 4792;
literal SHR$_DIRNOTCRE = 4800;
literal SHR$_NODESTQUE = 4808;
literal SHR$_ILLDESQUE = 4816;
literal SHR$_NOTTERM = 4824;
literal SHR$_CONFQUAL = 4832;
literal SHR$_ILLDIRCOPY = 4840;
literal SHR$_INSVIRMEM = 4848;
literal SHR$_CREATEDSTM = 4856;
literal SHR$_NOTRUNC = 4864;
literal SHR$_PRODNOTINS = 4872;
literal SHR$_TOTAL = 4880;
literal SHR$_FILPURG = 4888;
literal SHR$_FILDEL = 4896;
literal SHR$_INVQUAVAL = 4904;
literal SHR$_NOFILES = 4912;
literal SHR$_FILNOTACC = 4920;
literal SHR$_QUALMISS = 4928;
literal SHR$_FILSPCSRCH = 4936;
literal SHR$_NOSRCHLST = 4944;
literal SHR$_NOSUCHID = 4952;
literal SHR$_AMBIGANS = 4960;
literal SHR$_INVALANS = 4968;
literal SHR$_PRDCONT = 4976;
literal SHR$_NOTDELETED = 4984;
literal SHR$_NOMEANING = 4992;
literal SHR$_OPENERR = 5000;
literal SHR$_CLOSEERR = 5008;
literal SHR$_BADFORMAT = 5016;
literal SHR$_FILDID = 5024;
literal SHR$_FILFID = 5032;
literal SHR$_FILDIDFID = 5040;
literal SHR$_NOFIDS = 5048;
literal SHR$_FILPURGBYT = 5056;
literal SHR$_FILDELBYT = 5064;
literal SHR$_TOTALBYT = 5072;
literal SHR$_COPIEDBYT = 5080;
literal SHR$_APPENDEDBYT = 5088;

 

literal SMG$K_TRM_NULL_CHAR = 0;        
literal SMG$K_TRM_CTRLA = 1;            
literal SMG$K_TRM_CTRLB = 2;            
literal SMG$K_TRM_CTRLC = 3;            
literal SMG$K_TRM_CTRLD = 4;            
literal SMG$K_TRM_CTRLE = 5;            
literal SMG$K_TRM_CTRLF = 6;            
literal SMG$K_TRM_CTRLG = 7;            
literal SMG$K_TRM_CTRLH = 8;            
literal SMG$K_TRM_CTRLI = 9;            
literal SMG$K_TRM_CTRLJ = 10;           
literal SMG$K_TRM_CTRLK = 11;           
literal SMG$K_TRM_CTRLL = 12;           
literal SMG$K_TRM_CTRLM = 13;           
literal SMG$K_TRM_CTRLN = 14;           
literal SMG$K_TRM_CTRLO = 15;           
literal SMG$K_TRM_CTRLP = 16;           
literal SMG$K_TRM_CTRLQ = 17;           
literal SMG$K_TRM_CTRLR = 18;           
literal SMG$K_TRM_CTRLS = 19;           
literal SMG$K_TRM_CTRLT = 20;           
literal SMG$K_TRM_CTRLU = 21;           
literal SMG$K_TRM_CTRLV = 22;           
literal SMG$K_TRM_CTRLW = 23;           
literal SMG$K_TRM_CTRLX = 24;           
literal SMG$K_TRM_CTRLY = 25;           
literal SMG$K_TRM_CTRLZ = 26;           
literal SMG$K_TRM_ESCAPE = 27;          
literal SMG$K_TRM_FS = 28;              
literal SMG$K_TRM_GS = 29;              
literal SMG$K_TRM_RS = 30;              
literal SMG$K_TRM_US = 31;              
literal SMG$K_TRM_SPACE = 32;           
literal SMG$K_TRM_EXCLAMATION_POINT = 33; 
literal SMG$K_TRM_DOUBLE_QUOTE = 34;    
literal SMG$K_TRM_NUMBER_SIGN = 35;     
literal SMG$K_TRM_DOLLAR_SIGN = 36;     
literal SMG$K_TRM_PERCENT_SIGN = 37;    
literal SMG$K_TRM_AMPERSAND = 38;       
literal SMG$K_TRM_QUOTE = 39;           
literal SMG$K_TRM_LEFT_PAREN = 40;      
literal SMG$K_TRM_RIGHT_PAREN = 41;     
literal SMG$K_TRM_ASTERISK = 42;        
literal SMG$K_TRM_PLUS_SIGN = 43;       
literal SMG$K_TRM_COMMA_CHAR = 44;      
literal SMG$K_TRM_DASH = 45;            
literal SMG$K_TRM_DOT = 46;             
literal SMG$K_TRM_SLASH = 47;           
literal SMG$K_TRM_ZERO = 48;            
literal SMG$K_TRM_ONE = 49;             
literal SMG$K_TRM_TWO = 50;             
literal SMG$K_TRM_THREE = 51;           
literal SMG$K_TRM_FOUR = 52;            
literal SMG$K_TRM_FIVE = 53;            
literal SMG$K_TRM_SIX = 54;             
literal SMG$K_TRM_SEVEN = 55;           
literal SMG$K_TRM_EIGHT = 56;           
literal SMG$K_TRM_NINE = 57;            
literal SMG$K_TRM_COLON = 58;           
literal SMG$K_TRM_SEMICOLON = 59;       
literal SMG$K_TRM_LESS_THAN = 60;       
literal SMG$K_TRM_EQUAL = 61;           
literal SMG$K_TRM_GREATER_THAN = 62;    
literal SMG$K_TRM_QUESTION_MARK = 63;   
literal SMG$K_TRM_AT_SIGN = 64;         
literal SMG$K_TRM_UPPERCASE_A = 65;     
literal SMG$K_TRM_UPPERCASE_B = 66;     
literal SMG$K_TRM_UPPERCASE_C = 67;     
literal SMG$K_TRM_UPPERCASE_D = 68;     
literal SMG$K_TRM_UPPERCASE_E = 69;     
literal SMG$K_TRM_UPPERCASE_F = 70;     
literal SMG$K_TRM_UPPERCASE_G = 71;     
literal SMG$K_TRM_UPPERCASE_H = 72;     
literal SMG$K_TRM_UPPERCASE_I = 73;     
literal SMG$K_TRM_UPPERCASE_J = 74;     
literal SMG$K_TRM_UPPERCASE_K = 75;     
literal SMG$K_TRM_UPPERCASE_L = 76;     
literal SMG$K_TRM_UPPERCASE_M = 77;     
literal SMG$K_TRM_UPPERCASE_N = 78;     
literal SMG$K_TRM_UPPERCASE_O = 79;     
literal SMG$K_TRM_UPPERCASE_P = 80;     
literal SMG$K_TRM_UPPERCASE_Q = 81;     
literal SMG$K_TRM_UPPERCASE_R = 82;     
literal SMG$K_TRM_UPPERCASE_S = 83;     
literal SMG$K_TRM_UPPERCASE_T = 84;     
literal SMG$K_TRM_UPPERCASE_U = 85;     
literal SMG$K_TRM_UPPERCASE_V = 86;     
literal SMG$K_TRM_UPPERCASE_W = 87;     
literal SMG$K_TRM_UPPERCASE_X = 88;     
literal SMG$K_TRM_UPPERCASE_Y = 89;     
literal SMG$K_TRM_UPPERCASE_Z = 90;     
literal SMG$K_TRM_LEFT_BRACKET = 91;    
literal SMG$K_TRM_BACKSLASH = 92;       
literal SMG$K_TRM_RIGHT_BRACKET = 93;   
literal SMG$K_TRM_CARET = 94;           
literal SMG$K_TRM_UNDERLINE = 95;       
literal SMG$K_TRM_GRAVE_ACCENT = 96;    
literal SMG$K_TRM_LOWERCASE_A = 97;     
literal SMG$K_TRM_LOWERCASE_B = 98;     
literal SMG$K_TRM_LOWERCASE_C = 99;     
literal SMG$K_TRM_LOWERCASE_D = 100;    
literal SMG$K_TRM_LOWERCASE_E = 101;    
literal SMG$K_TRM_LOWERCASE_F = 102;    
literal SMG$K_TRM_LOWERCASE_G = 103;    
literal SMG$K_TRM_LOWERCASE_H = 104;    
literal SMG$K_TRM_LOWERCASE_I = 105;    
literal SMG$K_TRM_LOWERCASE_J = 106;    
literal SMG$K_TRM_LOWERCASE_K = 107;    
literal SMG$K_TRM_LOWERCASE_L = 108;    
literal SMG$K_TRM_LOWERCASE_M = 109;    
literal SMG$K_TRM_LOWERCASE_N = 110;    
literal SMG$K_TRM_LOWERCASE_O = 111;    
literal SMG$K_TRM_LOWERCASE_P = 112;    
literal SMG$K_TRM_LOWERCASE_Q = 113;    
literal SMG$K_TRM_LOWERCASE_R = 114;    
literal SMG$K_TRM_LOWERCASE_S = 115;    
literal SMG$K_TRM_LOWERCASE_T = 116;    
literal SMG$K_TRM_LOWERCASE_U = 117;    
literal SMG$K_TRM_LOWERCASE_V = 118;    
literal SMG$K_TRM_LOWERCASE_W = 119;    
literal SMG$K_TRM_LOWERCASE_X = 120;    
literal SMG$K_TRM_LOWERCASE_Y = 121;    
literal SMG$K_TRM_LOWERCASE_Z = 122;    
literal SMG$K_TRM_LEFT_BRACE = 123;     
literal SMG$K_TRM_VERTICAL_LINE = 124;  
literal SMG$K_TRM_RIGHT_BRACE = 125;    
literal SMG$K_TRM_TILDE = 126;          
literal SMG$K_TRM_DELETE = 127;         

literal SMG$K_TRM_BS = 8;
literal SMG$K_TRM_HT = 9;
literal SMG$K_TRM_LF = 10;
literal SMG$K_TRM_VT = 11;
literal SMG$K_TRM_FF = 12;
literal SMG$K_TRM_CR = 13;

literal SMG$K_TRM_PF1 = 256;
literal SMG$K_TRM_PF2 = 257;
literal SMG$K_TRM_PF3 = 258;
literal SMG$K_TRM_PF4 = 259;
literal SMG$K_TRM_KP0 = 260;
literal SMG$K_TRM_KP1 = 261;
literal SMG$K_TRM_KP2 = 262;
literal SMG$K_TRM_KP3 = 263;
literal SMG$K_TRM_KP4 = 264;
literal SMG$K_TRM_KP5 = 265;
literal SMG$K_TRM_KP6 = 266;
literal SMG$K_TRM_KP7 = 267;
literal SMG$K_TRM_KP8 = 268;
literal SMG$K_TRM_KP9 = 269;
literal SMG$K_TRM_ENTER = 270;
literal SMG$K_TRM_MINUS = 271;
literal SMG$K_TRM_COMMA = 272;
literal SMG$K_TRM_PERIOD = 273;

literal SMG$K_TRM_UP = 274;
literal SMG$K_TRM_DOWN = 275;
literal SMG$K_TRM_LEFT = 276;
literal SMG$K_TRM_RIGHT = 277;

literal SMG$K_TRM_F1 = 281;
literal SMG$K_TRM_F2 = 282;
literal SMG$K_TRM_F3 = 283;
literal SMG$K_TRM_F4 = 284;
literal SMG$K_TRM_F5 = 285;
literal SMG$K_TRM_F6 = 286;
literal SMG$K_TRM_F7 = 287;
literal SMG$K_TRM_F8 = 288;
literal SMG$K_TRM_F9 = 289;
literal SMG$K_TRM_F10 = 290;
literal SMG$K_TRM_F11 = 291;
literal SMG$K_TRM_F12 = 292;
literal SMG$K_TRM_F13 = 293;
literal SMG$K_TRM_F14 = 294;
literal SMG$K_TRM_F15 = 295;
literal SMG$K_TRM_F16 = 296;
literal SMG$K_TRM_F17 = 297;
literal SMG$K_TRM_F18 = 298;
literal SMG$K_TRM_F19 = 299;
literal SMG$K_TRM_F20 = 300;

literal SMG$K_TRM_HELP = 295;
literal SMG$K_TRM_DO = 296;

literal SMG$K_TRM_E1 = 311;             
literal SMG$K_TRM_E2 = 312;             
literal SMG$K_TRM_E3 = 313;             
literal SMG$K_TRM_E4 = 314;             
literal SMG$K_TRM_E5 = 315;             
literal SMG$K_TRM_E6 = 316;             

literal SMG$K_TRM_FIND = 311;           
literal SMG$K_TRM_INSERT_HERE = 312;    
literal SMG$K_TRM_REMOVE = 313;         
literal SMG$K_TRM_SELECT = 314;         
literal SMG$K_TRM_PREV_SCREEN = 315;    
literal SMG$K_TRM_NEXT_SCREEN = 316;    

literal SMG$K_TRM_FIRST_DOWN = 321;     
literal SMG$K_TRM_SECOND_DOWN = 322;    
literal SMG$K_TRM_THIRD_DOWN = 323;     
literal SMG$K_TRM_FOURTH_DOWN = 324;    
literal SMG$K_TRM_FIRST_UP = 325;       
literal SMG$K_TRM_SECOND_UP = 326;      
literal SMG$K_TRM_THIRD_UP = 327;       
literal SMG$K_TRM_FOURTH_UP = 328;      

literal SMG$K_TRM_CANCELLED = 508;      
literal SMG$K_TRM_TIMEOUT = 509;        
literal SMG$K_TRM_BUFFER_FULL = 510;    
literal SMG$K_TRM_UNKNOWN = 511;        

literal SMG$C_CHANGE_RENDITION = 10;
literal SMG$C_DELETE_CHARS = 11;
literal SMG$C_ERASE_DISPLAY = 12;
literal SMG$C_ERASE_LINE = 13;
literal SMG$C_HOME_CURSOR = 14;
literal SMG$C_INSERT_CHARS = 15;
literal SMG$C_INSERT_LINE = 16;
literal SMG$C_PUT_CHARS = 17;
literal SMG$C_PUT_LINE = 18;
literal SMG$C_PUT_DISPLAY_ENCODED = 19;
literal SMG$C_RETURN_CURSOR_POS = 20;
literal SMG$C_PUT_WITH_SCROLL = 21;
literal SMG$C_SET_CURSOR_ABS = 22;
literal SMG$C_SET_CURSOR_REL = 23;
literal SMG$C_DELETE_LINE = 24;
literal SMG$C_ERASE_CHARS = 25;
literal SMG$C_SCROLL_DISPLAY_AREA = 26;
literal SMG$C_CHANGE_VIRTUAL_DISPLAY = 27;
literal SMG$C_LABEL_BORDER = 28;
literal SMG$C_END_DISPLAY_UPDATE = 29;
literal SMG$C_MOVE_TEXT = 30;

literal SMG$C_UNITED_KINGDOM = 0;       
literal SMG$C_ASCII = 1;                
literal SMG$C_SPEC_GRAPHICS = 2;        
literal SMG$C_ALT_CHAR = 3;             
literal SMG$C_ALT_GRAPHICS = 4;         
literal SMG$C_UNKNOWN = 5;
literal SMG$C_SUPPLEMENTAL = 6;
literal SMG$C_JIS_ROMAN = 7;
literal SMG$C_JIS_KANA = 8;
literal SMG$C_KANJI = 9;
literal SMG$C_HANZI = 10;
literal SMG$C_HANYU = 11;
literal SMG$C_HANGUL = 12;
literal SMG$C_KS_ROMAN = 13;

literal SMG$C_UPPER_LEFT = 0;           
literal SMG$C_LOWER_LEFT = 1;           
literal SMG$C_UPPER_RIGHT = 2;          
literal SMG$C_LOWER_RIGHT = 3;          

literal SMG$K_TOP = 0;                  
literal SMG$K_BOTTOM = 1;               
literal SMG$K_LEFT = 2;                 
literal SMG$K_RIGHT = 3;                

literal SMG$K_BLOCK = 0;                
literal SMG$K_VERTICAL = 1;             
literal SMG$K_HORIZONTAL = 2;           

literal SMG$C_COLOR_UNKNOWN = 0;        
literal SMG$C_COLOR_WHITE = 1;          
literal SMG$C_COLOR_BLACK = 2;          
literal SMG$C_COLOR_BLUE = 3;           
literal SMG$C_COLOR_CYAN = 4;           
literal SMG$C_COLOR_GREEN = 5;          
literal SMG$C_COLOR_MAGENTA = 6;        
literal SMG$C_COLOR_RED = 7;            
literal SMG$C_COLOR_YELLOW = 8;         
literal SMG$C_COLOR_LIGHT = 9;          
literal SMG$C_COLOR_DARK = 10;          
literal SMG$C_COLOR_USER1 = 11;         
literal SMG$C_COLOR_USER2 = 12;         
literal SMG$C_COLOR_USER3 = 13;         
literal SMG$C_COLOR_USER4 = 14;         
literal SMG$C_COLOR_USER5 = 15;         
literal SMG$C_COLOR_USER6 = 16;         
literal SMG$C_COLOR_USER7 = 17;         
literal SMG$C_COLOR_USER8 = 18;         

literal SMG$K_UNKNOWN = 0;              
literal SMG$K_VT05 = 1;                 
literal SMG$K_VT52 = 2;                 
literal SMG$K_VT100 = 3;                
literal SMG$K_VTFOREIGN = 4;            
literal SMG$K_HARDCOPY = 5;             
literal SMG$K_VTTERMTABLE = 6;          
literal SMG$K_FIRST_PRIV_TYPE = 191;    

literal SMG$K_BUF_ENABLED = 0;          
literal SMG$K_MINUPD = 1;               
literal SMG$K_CLEAR_SCREEN = 2;         
literal SMG$K_NOTABS = 3;               
literal SMG$K_PROTECT = 4;              
literal SMG$K_IGNORE = 5;               
literal SMG$K_RELEASE_PBD = 6;          
literal SMG$M_BUF_ENABLED = %X'1';
literal SMG$M_MINUPD = %X'2';
literal SMG$M_CLEAR_SCREEN = %X'4';
literal SMG$M_NOTABS = %X'8';
literal SMG$M_PROTECT = %X'10';
literal SMG$M_IGNORE = %X'20';
literal SMG$M_RELEASE_PBD = %X'40';
literal SMG$m_spare15 = %X'FFFFFF80';
literal SMG$S_SMGMODE_BITS = 4;
macro SMG$V_BUF_ENABLED = 0,0,1,0 %;    
macro SMG$V_MINUPD = 0,1,1,0 %;         
macro SMG$V_CLEAR_SCREEN = 0,2,1,0 %;   
macro SMG$V_NOTABS = 0,3,1,0 %;         
macro SMG$V_PROTECT = 0,4,1,0 %;        
macro SMG$V_IGNORE = 0,5,1,0 %;         
macro SMG$V_RELEASE_PBD = 0,6,1,0 %;    
macro SMG$v_spare15 = 0,7,25,0 %;
literal SMG$s_spare15 = 25;             

literal SMG$M_KEY_NOECHO = %X'1';
literal SMG$M_KEY_TERMINATE = %X'2';
literal SMG$M_KEY_LOCK = %X'4';
literal SMG$M_KEY_PROTECTED = %X'8';
literal SMG$M_KEY_SETSTATE = %X'10';
literal SMG$m_spare18 = %X'FFFFFFE0';
literal SMG$S_KEY_DEF_ATTR = 4;
macro SMG$V_KEY_NOECHO = 0,0,1,0 %;     
macro SMG$V_KEY_TERMINATE = 0,1,1,0 %;  
macro SMG$V_KEY_LOCK = 0,2,1,0 %;       
macro SMG$V_KEY_PROTECTED = 0,3,1,0 %;  
macro SMG$V_KEY_SETSTATE = 0,4,1,0 %;   
macro SMG$v_spare18 = 0,5,27,0 %;
literal SMG$s_spare18 = 27;             

literal SMG$M_BOLD = %X'1';
literal SMG$M_REVERSE = %X'2';
literal SMG$M_BLINK = %X'4';
literal SMG$M_UNDERLINE = %X'8';
literal SMG$M_INVISIBLE = %X'10';
literal SMG$M_USER1 = %X'100';
literal SMG$M_USER2 = %X'200';
literal SMG$M_USER3 = %X'400';
literal SMG$M_USER4 = %X'800';
literal SMG$M_USER5 = %X'1000';
literal SMG$M_USER6 = %X'2000';
literal SMG$M_USER7 = %X'4000';
literal SMG$M_USER8 = %X'8000';
literal SMG$m_spare14 = %X'FFFF0000';
literal SMG$S_SMGDEF_BITS = 4;
macro SMG$V_BOLD = 0,0,1,0 %;           
macro SMG$V_REVERSE = 0,1,1,0 %;        
macro SMG$V_BLINK = 0,2,1,0 %;          
macro SMG$V_UNDERLINE = 0,3,1,0 %;      
macro SMG$V_INVISIBLE = 0,4,1,0 %;      
macro SMG$V_USER1 = 0,8,1,0 %;          
macro SMG$V_USER2 = 0,9,1,0 %;          
macro SMG$V_USER3 = 0,10,1,0 %;         
macro SMG$V_USER4 = 0,11,1,0 %;         
macro SMG$V_USER5 = 0,12,1,0 %;         
macro SMG$V_USER6 = 0,13,1,0 %;         
macro SMG$V_USER7 = 0,14,1,0 %;         
macro SMG$V_USER8 = 0,15,1,0 %;         
macro SMG$v_spare14 = 0,16,16,0 %;
literal SMG$s_spare14 = 16;             
literal SMG$M_NORMAL = 0;               

literal SMG$M_BORDER = %X'1';
literal SMG$M_TRUNC_ICON = %X'2';
literal SMG$M_DISPLAY_CONTROLS = %X'4';
literal SMG$M_USER_DISPLAY = %X'8';
literal SMG$M_BLOCK_BORDER = %X'10';
literal SMG$M_PROTECT_DISPLAY = %X'20';
literal SMG$m_spare12 = %X'FFFFFFC0';
literal SMG$S_DISPLAY_ATTRIBUTES = 4;
macro SMG$V_BORDER = 0,0,1,0 %;         
macro SMG$V_TRUNC_ICON = 0,1,1,0 %;     
macro SMG$V_DISPLAY_CONTROLS = 0,2,1,0 %; 
macro SMG$V_USER_DISPLAY = 0,3,1,0 %;   
macro SMG$V_BLOCK_BORDER = 0,4,1,0 %;   
macro SMG$V_PROTECT_DISPLAY = 0,5,1,0 %; 
macro SMG$v_spare12 = 0,6,26,0 %;
literal SMG$s_spare12 = 26;             

literal SMG$M_TRUSTED = %X'1';
literal SMG$M_AUTHPRIV = %X'2';
literal SMG$M_SUBSYSTEM = %X'4';
literal SMG$m_spare20 = %X'FFFFFFF8';
literal SMG$S_CREATE_SUBPROCESS_FLAGS = 4;
macro SMG$V_TRUSTED = 0,0,1,0 %;        
macro SMG$V_AUTHPRIV = 0,1,1,0 %;       
macro SMG$V_SUBSYSTEM = 0,2,1,0 %;      
macro SMG$v_spare20 = 0,3,29,0 %;
literal SMG$s_spare20 = 29;             

literal SMG$M_DATA_FOLLOWS = %X'1';
literal SMG$M_SEND_EOF = %X'2';
literal SMG$M_NO_PRINT = %X'4';
literal SMG$m_spare11 = %X'FFFFFFF8';
literal SMG$S_SUBPROCESS_FLAGS = 4;
macro SMG$V_DATA_FOLLOWS = 0,0,1,0 %;   
macro SMG$V_SEND_EOF = 0,1,1,0 %;       
macro SMG$V_NO_PRINT = 0,2,1,0 %;       
macro SMG$v_spare11 = 0,3,29,0 %;
literal SMG$s_spare11 = 29;             

literal SMG$M_ERASE_PBD = %X'1';
literal SMG$M_IGNORE_BATCHED = %X'2';
literal SMG$m_spare10 = %X'FFFFFFFC';
literal SMG$S_DELETE_PBD_FLAGS = 4;
macro SMG$V_ERASE_PBD = 0,0,1,0 %;      
macro SMG$V_IGNORE_BATCHED = 0,1,1,0 %; 
macro SMG$v_spare10 = 0,2,30,0 %;
literal SMG$s_spare10 = 30;             

literal SMG$M_KEEP_CONTENTS = %X'1';
literal SMG$M_WORKSTATION = %X'2';
literal SMG$m_spare9 = %X'FFFFFFFC';
literal SMG$S_CREATE_PBD_FLAGS = 4;
macro SMG$V_KEEP_CONTENTS = 0,0,1,0 %;  
macro SMG$V_WORKSTATION = 0,1,1,0 %;    
macro SMG$v_spare9 = 0,2,30,0 %;
literal SMG$s_spare9 = 30;              

literal SMG$M_FUNC_KEYS = %X'1';
literal SMG$M_NOKEEP = %X'2';
literal SMG$M_NORECALL = %X'4';
literal SMG$m_spare8 = %X'FFFFFFF8';
literal SMG$S_READ_FLAGS = 4;
macro SMG$V_FUNC_KEYS = 0,0,1,0 %;      
macro SMG$V_NOKEEP = 0,1,1,0 %;         
macro SMG$V_NORECALL = 0,2,1,0 %;       
macro SMG$v_spare8 = 0,3,29,0 %;
literal SMG$s_spare8 = 29;              

literal SMG$M_CURSOR_OFF = %X'1';
literal SMG$M_CURSOR_ON = %X'2';
literal SMG$M_SCROLL_JUMP = %X'4';
literal SMG$M_SCROLL_SMOOTH = %X'8';
literal SMG$m_spare16 = %X'FFFFFFF0';
literal SMG$S_SET_CURSOR_FLAGS = 4;
macro SMG$V_CURSOR_OFF = 0,0,1,0 %;     
macro SMG$V_CURSOR_ON = 0,1,1,0 %;      
macro SMG$V_SCROLL_JUMP = 0,2,1,0 %;    
macro SMG$V_SCROLL_SMOOTH = 0,3,1,0 %;  
macro SMG$v_spare16 = 0,4,28,0 %;
literal SMG$s_spare16 = 28;             

literal SMG$M_VIEWPORT = %X'1';
literal SMG$M_SUBPROCESS = %X'2';
literal SMG$M_MENU = %X'4';
literal SMG$m_spare7 = %X'FFFFFFF8';
literal SMG$S_GET_DISPLAY_FLAGS = 4;
macro SMG$V_VIEWPORT = 0,0,1,0 %;       
macro SMG$V_SUBPROCESS = 0,1,1,0 %;     
macro SMG$V_MENU = 0,2,1,0 %;           
macro SMG$v_spare7 = 0,3,29,0 %;
literal SMG$s_spare7 = 29;              

literal SMG$M_ERASE_LINE = %X'1';
literal SMG$M_ERASE_TO_EOL = %X'2';
literal SMG$m_spare6 = %X'FFFFFFFC';
literal SMG$S_PUT_CHARS_FLAGS = 4;
macro SMG$V_ERASE_LINE = 0,0,1,0 %;     
macro SMG$V_ERASE_TO_EOL = 0,1,1,0 %;   
macro SMG$v_spare6 = 0,2,30,0 %;
literal SMG$s_spare6 = 30;              

literal SMG$M_TEXT_SAVE = %X'1';
literal SMG$M_TEXT_ONLY = %X'2';
literal SMG$m_spare17 = %X'FFFFFFFC';
literal SMG$S_MOVE_TEXT_FLAGS = 4;
macro SMG$V_TEXT_SAVE = 0,0,1,0 %;      
macro SMG$V_TEXT_ONLY = 0,1,1,0 %;      
macro SMG$v_spare17 = 0,2,30,0 %;
literal SMG$s_spare17 = 30;             

literal SMG$M_FORM_FEED = %X'1';
literal SMG$m_spare5 = %X'FFFFFFFE';
literal SMG$S_SNAPSHOT_FLAGS = 4;
macro SMG$V_FORM_FEED = 0,0,1,0 %;      
macro SMG$v_spare5 = 0,1,31,0 %;
literal SMG$s_spare5 = 31;              

literal SMG$M_WRAP_CHAR = %X'1';
literal SMG$M_WRAP_WORD = %X'2';
literal SMG$m_spare4 = %X'FFFFFFFC';
literal SMG$S_PUT_LINE_FLAGS = 4;
macro SMG$V_WRAP_CHAR = 0,0,1,0 %;      
macro SMG$V_WRAP_WORD = 0,1,1,0 %;      
macro SMG$v_spare4 = 0,2,30,0 %;
literal SMG$s_spare4 = 30;              

literal SMG$M_KEYPAD_APPLICATION = %X'1';
literal SMG$M_KEYPAD_NUMERIC = %X'2';
literal SMG$m_spare3 = %X'FFFFFFFC';
literal SMG$S_KEYPAD_MODES = 4;
macro SMG$V_KEYPAD_APPLICATION = 0,0,1,0 %; 
macro SMG$V_KEYPAD_NUMERIC = 0,1,1,0 %; 
macro SMG$v_spare3 = 0,2,30,0 %;
literal SMG$s_spare3 = 30;              

literal SMG$M_DISPLAY_PASTED = %X'1';
literal SMG$m_spare19 = %X'FFFFFFFE';
literal SMG$S_PASTING_INFO_FLAGS = 4;
macro SMG$V_DISPLAY_PASTED = 0,0,1,0 %; 
macro SMG$v_spare19 = 0,1,31,0 %;
literal SMG$s_spare19 = 31;             

literal SMG$M_REMOVE_ITEM = %X'1';
literal SMG$M_FIXED_FORMAT = %X'2';
literal SMG$M_DOUBLE_SPACE = %X'4';
literal SMG$M_RETURN_IMMED = %X'8';
literal SMG$M_ERASE_MENU = %X'10';
literal SMG$M_WIDE_MENU = %X'20';
literal SMG$M_WRAP_MENU = %X'40';
literal SMG$M_FULL_FIELD = %X'80';
literal SMG$m_spare2 = %X'FFFFFF00';
literal SMG$S_MENU_FLAGS = 4;
macro SMG$V_REMOVE_ITEM = 0,0,1,0 %;    
macro SMG$V_FIXED_FORMAT = 0,1,1,0 %;   
macro SMG$V_DOUBLE_SPACE = 0,2,1,0 %;   
macro SMG$V_RETURN_IMMED = 0,3,1,0 %;   
macro SMG$V_ERASE_MENU = 0,4,1,0 %;     
macro SMG$V_WIDE_MENU = 0,5,1,0 %;      
macro SMG$V_WRAP_MENU = 0,6,1,0 %;      
macro SMG$V_FULL_FIELD = 0,7,1,0 %;     

macro SMG$v_spare2 = 0,8,24,0 %;
literal SMG$s_spare2 = 24;              

literal SMG$M_UP = %X'1';
literal SMG$M_DOWN = %X'2';
literal SMG$M_RIGHT = %X'4';
literal SMG$M_LEFT = %X'8';
literal SMG$m_spare1 = %X'FFFFFFF0';
literal SMG$S_SCROLL_DIRS = 4;
macro SMG$V_UP = 0,0,1,0 %;             
macro SMG$V_DOWN = 0,1,1,0 %;           
macro SMG$V_RIGHT = 0,2,1,0 %;          
macro SMG$V_LEFT = 0,3,1,0 %;           
macro SMG$v_spare1 = 0,4,28,0 %;
literal SMG$s_spare1 = 28;              

literal SMG$C_BAND_INFORMATION_TABLE = 12; 
literal SMG$C_PASTEBOARD_INFO_BLOCK = 36; 
literal SMG$C_KEYBOARD_INFO_BLOCK = 36; 
literal SMG$S_SMGDEF = 36;

macro SMG$R_BAND_INFORMATION_TABLE = 0,0,0,0 %;
literal SMG$S_BAND_INFORMATION_TABLE = 12;
macro SMG$L_PASTEBOARD_ID = 0,0,32,0 %; 
macro SMG$L_ARG = 4,0,32,0 %;           
macro SMG$R_CHARACTER_OVERLAY = 8,0,32,0 %;
macro SMG$B_CHARACTER = 8,0,8,0 %;      
macro SMG$L_CHARACTER = 8,0,32,0 %;     

macro SMG$R_PASTEBOARD_INFO_BLOCK = 0,0,0,0 %;
literal SMG$S_PASTEBOARD_INFO_BLOCK = 36;
macro SMG$L_DEVCHAR = 0,0,32,0 %;       
macro SMG$L_DEVDEPEND = 4,0,32,0 %;     
macro SMG$L_DEVDEPEND2 = 8,0,32,0 %;    
macro SMG$B_DEVCLASS = 12,0,8,0 %;      
macro SMG$B_SMG_DEVTYPE = 13,0,8,0 %;   
macro SMG$B_PHY_DEVTYPE = 14,0,8,0 %;   
macro SMG$B_ROWS = 15,0,8,0 %;          
macro SMG$W_WIDTH = 16,0,16,0 %;        
macro SMG$B_COLOR = 18,0,8,0 %;         
macro SMG$B_PARITY = 19,0,8,0 %;        
macro SMG$W_SPEED = 20,0,16,0 %;        
macro SMG$W_FILL = 22,0,16,0 %;         
macro SMG$W_CURSOR_ROW = 24,0,16,0 %;   
macro SMG$W_CURSOR_COL = 26,0,16,0 %;   
macro SMG$L_CURSOR_DID = 28,0,32,0 %;   

macro SMG$L_DEVDEPEND3 = 32,0,32,0 %;   

macro SMG$R_KEYBOARD_INFO_BLOCK = 0,0,0,0 %;
literal SMG$S_KEYBOARD_INFO_BLOCK = 36;
macro SMG$B_RECALL_SIZE = 13,0,8,0 %;   
macro SMG$B_TYPEAHEAD_CHAR = 15,0,8,0 %; 
macro SMG$W_TYPEAHEAD_COUNT = 18,0,16,0 %; 

literal SMG$S_OUT_OF_BAND_TABLE = 12;
macro SMG$L_PBD_ID = 0,0,32,0 %;        
macro SMG$L_USER_ARG = 4,0,32,0 %;      
macro SMG$R_CHAR_OVERLAY = 8,0,32,0 %;
macro SMG$B_CHAR = 8,0,8,0 %;           
macro SMG$L_CHAR = 8,0,32,0 %;          
literal SMG$C_OUT_OF_BAND_TABLE = 12;   

literal SMG$S_SUBPROCESS_INFO_TABLE = 12;
macro SMG$L_DISP_ID = 0,0,32,0 %;       
macro SMG$L_USR_ARG = 4,0,32,0 %;       
macro SMG$L_STATUS = 8,0,32,0 %;        
literal SMG$C_SUBPROCESS_INFO_TABLE = 12; 

literal SMG$S_ATTRIBUTE_INFO_BLOCK = 36;
macro SMG$L_DEV_CHAR = 0,0,32,0 %;      
macro SMG$L_DEV_DEPEND = 4,0,32,0 %;    
macro SMG$L_DEV_DEPEND2 = 8,0,32,0 %;   
macro SMG$B_DEV_CLASS = 12,0,8,0 %;     
macro SMG$R_DEV_OVERLAY = 13,0,8,0 %;
macro SMG$B_PBD_TYPE = 13,0,8,0 %;      
macro SMG$B_RECALL_NUM = 13,0,8,0 %;    
macro SMG$B_DEV_TYPE = 14,0,8,0 %;      
macro SMG$R_ROW_OVERLAY = 15,0,8,0 %;
macro SMG$B_NUM_ROWS = 15,0,8,0 %;      
macro SMG$B_TYPEAHD_CHAR = 15,0,8,0 %;  
macro SMG$W_NUM_COLUMNS = 16,0,16,0 %;  
macro SMG$R_COUNT_OVERLAY = 18,0,16,0 %;
macro SMG$W_TYPEAHD_CNT = 18,0,16,0 %;  
macro SMG$R_COUNT_STRUCT = 18,0,16,0 %;
literal SMG$S_COUNT_STRUCT = 2;
macro SMG$B_PBD_COLOR = 18,0,8,0 %;     
macro SMG$B_DEV_PARITY = 19,0,8,0 %;    
macro SMG$W_DEV_SPEED = 20,0,16,0 %;    
macro SMG$W_DEV_FILL = 22,0,16,0 %;     
macro SMG$W_PHYS_CURSOR_ROW = 24,0,16,0 %; 
macro SMG$W_PHYS_CURSOR_COL = 26,0,16,0 %; 
macro SMG$L_DISPLAY_ID = 28,0,32,0 %;   
macro SMG$L_DEV_DEPEND3 = 32,0,32,0 %;  
literal SMG$C_ATTRIBUTE_INFO_BLOCK = 36; 

 

literal SMG$K_ADVANCED_VIDEO = 1;
literal SMG$K_ANSI_CRT = 2;
literal SMG$K_AUTO_MARGIN = 3;
literal SMG$K_BACKSPACE = 4;
literal SMG$K_BLOCK_MODE = 5;
literal SMG$K_DEC_CRT = 6;
literal SMG$K_EDIT = 7;
literal SMG$K_EIGHT_BIT = 8;
literal SMG$K_FULLDUP = 9;
literal SMG$K_IGNORE_NEWLINE = 10;
literal SMG$K_INSERT_MODE_NULLS = 11;
literal SMG$K_LOWERCASE = 12;
literal SMG$K_NO_ERASE = 13;
literal SMG$K_NO_SCROLL = 14;
literal SMG$K_OVERSTRIKE = 15;
literal SMG$K_PRINTER_PORT = 16;
literal SMG$K_REGIS = 17;
literal SMG$K_SCOPE = 18;
literal SMG$K_SIXEL_GRAPHICS = 19;
literal SMG$K_SOFT_CHARACTERS = 20;
literal SMG$K_PHYSICAL_TABS = 21;
literal SMG$K_PHYSICAL_FF = 22;
literal SMG$K_UNDERLINE = 23;
literal SMG$K_CURSOR_REPORT_ANSI = 24;
literal SMG$K_DEC_CRT_2 = 25;
literal SMG$K_DEC_CRT_3 = 26;
literal SMG$K_SET_CURSOR_COL_ROW = 27;
literal SMG$K_TEXT16 = 28;
literal SMG$K_DEC_CRT_4 = 29;
literal SMG$K_DEC_CRT_5 = 30;
literal SMG$K_ANSI_COLOR = 31;

literal SMG$K_PRIVATE_BOO_1 = 211;
literal SMG$K_PRIVATE_BOO_2 = 212;
literal SMG$K_PRIVATE_BOO_3 = 213;
literal SMG$K_PRIVATE_BOO_4 = 214;
literal SMG$K_PRIVATE_BOO_5 = 215;
literal SMG$K_PRIVATE_BOO_6 = 216;
literal SMG$K_PRIVATE_BOO_7 = 217;
literal SMG$K_PRIVATE_BOO_8 = 218;
literal SMG$K_PRIVATE_BOO_9 = 219;
literal SMG$K_PRIVATE_BOO_10 = 220;
literal SMG$K_MAX_BOOLEAN_CODE = 220;

literal SMG$K_COLUMNS = 221;
literal SMG$K_CR_FILL = 222;
literal SMG$K_FRAME = 223;
literal SMG$K_LF_FILL = 224;
literal SMG$K_NUMBER_FN_KEYS = 225;
literal SMG$K_ROWS = 226;
literal SMG$K_VMS_TERMINAL_NUMBER = 227;
literal SMG$K_WIDE_SCREEN_COLUMNS = 228;

literal SMG$K_PRIVATE_NUM_1 = 431;
literal SMG$K_PRIVATE_NUM_2 = 432;
literal SMG$K_PRIVATE_NUM_3 = 433;
literal SMG$K_PRIVATE_NUM_4 = 434;
literal SMG$K_PRIVATE_NUM_5 = 435;
literal SMG$K_PRIVATE_NUM_6 = 436;
literal SMG$K_PRIVATE_NUM_7 = 437;
literal SMG$K_PRIVATE_NUM_8 = 438;
literal SMG$K_PRIVATE_NUM_9 = 439;
literal SMG$K_PRIVATE_NUM_10 = 440;
literal SMG$K_MAX_NUMERIC_CODE = 440;

literal SMG$K_BEGIN_ALTERNATE_CHAR = 441;
literal SMG$K_BEGIN_BLINK = 442;
literal SMG$K_BEGIN_BOLD = 443;
literal SMG$K_BEGIN_DELETE_MODE = 444;
literal SMG$K_BEGIN_INSERT_MODE = 445;
literal SMG$K_BEGIN_LINE_DRAWING_CHAR = 446;
literal SMG$K_BEGIN_REVERSE = 447;
literal SMG$K_BEGIN_UNDERSCORE = 448;
literal SMG$K_BOTTOM_T_CHAR = 449;
literal SMG$K_CLEAR_TAB = 450;
literal SMG$K_CROSS_CHAR = 451;
literal SMG$K_CURSOR_DOWN = 452;
literal SMG$K_CURSOR_LEFT = 453;
literal SMG$K_CURSOR_RIGHT = 454;
literal SMG$K_CURSOR_UP = 455;
literal SMG$K_DARK_SCREEN = 456;
literal SMG$K_DELETE_CHAR = 457;
literal SMG$K_DELETE_LINE = 458;
literal SMG$K_DEVICE_ATTRIBUTES = 459;
literal SMG$K_DOUBLE_HIGH_BOTTOM = 460;
literal SMG$K_DOUBLE_HIGH_TOP = 461;
literal SMG$K_DOUBLE_WIDE = 462;
literal SMG$K_DUPLICATE = 463;
literal SMG$K_END_ALTERNATE_CHAR = 464;
literal SMG$K_END_BLINK = 465;
literal SMG$K_END_BOLD = 466;
literal SMG$K_END_DELETE_MODE = 467;
literal SMG$K_END_INSERT_MODE = 468;
literal SMG$K_END_LINE_DRAWING_CHAR = 469;
literal SMG$K_END_REVERSE = 470;
literal SMG$K_END_UNDERSCORE = 471;
literal SMG$K_ERASE_TO_END_DISPLAY = 472;
literal SMG$K_ERASE_TO_END_LINE = 473;
literal SMG$K_ERASE_WHOLE_DISPLAY = 474;
literal SMG$K_ERASE_WHOLE_LINE = 475;
literal SMG$K_HOME = 476;
literal SMG$K_HORIZONTAL_BAR = 477;
literal SMG$K_INIT_STRING = 478;
literal SMG$K_INSERT_CHAR = 479;
literal SMG$K_INSERT_LINE = 480;
literal SMG$K_INSERT_PAD = 481;
literal SMG$K_KEY_0 = 482;
literal SMG$K_KEY_1 = 483;
literal SMG$K_KEY_2 = 484;
literal SMG$K_KEY_3 = 485;
literal SMG$K_KEY_4 = 486;
literal SMG$K_KEY_5 = 487;
literal SMG$K_KEY_6 = 488;
literal SMG$K_KEY_7 = 489;
literal SMG$K_KEY_8 = 490;
literal SMG$K_KEY_9 = 491;
literal SMG$K_KEY_BACKSPACE = 492;
literal SMG$K_KEY_COMMA = 493;
literal SMG$K_KEY_DOWN_ARROW = 494;
literal SMG$K_KEY_E1 = 495;
literal SMG$K_KEY_E2 = 496;
literal SMG$K_KEY_E3 = 497;
literal SMG$K_KEY_E4 = 498;
literal SMG$K_KEY_E5 = 499;
literal SMG$K_KEY_E6 = 500;
literal SMG$K_KEY_ENTER = 501;
literal SMG$K_KEY_F1 = 502;
literal SMG$K_KEY_F2 = 503;
literal SMG$K_KEY_F3 = 504;
literal SMG$K_KEY_F4 = 505;
literal SMG$K_KEY_F5 = 506;
literal SMG$K_KEY_F6 = 507;
literal SMG$K_KEY_F7 = 508;
literal SMG$K_KEY_F8 = 509;
literal SMG$K_KEY_F9 = 510;
literal SMG$K_KEY_F10 = 511;
literal SMG$K_KEY_F11 = 512;
literal SMG$K_KEY_F12 = 513;
literal SMG$K_KEY_F13 = 514;
literal SMG$K_KEY_F14 = 515;
literal SMG$K_KEY_F15 = 516;
literal SMG$K_KEY_F16 = 517;
literal SMG$K_KEY_F17 = 518;
literal SMG$K_KEY_F18 = 519;
literal SMG$K_KEY_F19 = 520;
literal SMG$K_KEY_F20 = 521;
literal SMG$K_KEY_LEFT_ARROW = 522;
literal SMG$K_KEY_MINUS = 523;
literal SMG$K_KEY_PERIOD = 524;
literal SMG$K_KEY_PF1 = 525;
literal SMG$K_KEY_PF2 = 526;
literal SMG$K_KEY_PF3 = 527;
literal SMG$K_KEY_PF4 = 528;
literal SMG$K_KEY_RIGHT_ARROW = 529;
literal SMG$K_KEY_UP_ARROW = 530;
literal SMG$K_LABEL_F1 = 531;
literal SMG$K_LABEL_F2 = 532;
literal SMG$K_LABEL_F3 = 533;
literal SMG$K_LABEL_F4 = 534;
literal SMG$K_LABEL_F5 = 535;
literal SMG$K_LABEL_F6 = 536;
literal SMG$K_LABEL_F7 = 537;
literal SMG$K_LABEL_F8 = 538;
literal SMG$K_LABEL_F9 = 539;
literal SMG$K_LABEL_F10 = 540;
literal SMG$K_LABEL_F11 = 541;
literal SMG$K_LABEL_F12 = 542;
literal SMG$K_LABEL_F13 = 543;
literal SMG$K_LABEL_F14 = 544;
literal SMG$K_LABEL_F15 = 545;
literal SMG$K_LABEL_F16 = 546;
literal SMG$K_LABEL_F17 = 547;
literal SMG$K_LABEL_F18 = 548;
literal SMG$K_LABEL_F19 = 549;
literal SMG$K_LABEL_F20 = 550;
literal SMG$K_LEFT_T_CHAR = 551;
literal SMG$K_LIGHT_SCREEN = 552;
literal SMG$K_LOWER_LEFT_CORNER = 553;
literal SMG$K_LOWER_RIGHT_CORNER = 554;
literal SMG$K_NAME = 555;
literal SMG$K_NEWLINE_CHAR = 556;
literal SMG$K_PAD_CHAR = 557;
literal SMG$K_RESTORE_CURSOR = 558;
literal SMG$K_RIGHT_T_CHAR = 559;
literal SMG$K_SAVE_CURSOR = 560;
literal SMG$K_SCROLL_FORWARD = 561;
literal SMG$K_SCROLL_REVERSE = 562;
literal SMG$K_SEL_ERASE_TO_END_DISPLAY = 563;
literal SMG$K_SEL_ERASE_TO_END_LINE = 564;
literal SMG$K_SEL_ERASE_WHOLE_DISPLAY = 565;
literal SMG$K_SEL_ERASE_WHOLE_LINE = 566;
literal SMG$K_SET_APPLICATION_KEYPAD = 567;
literal SMG$K_SET_CHAR_NOT_SEL_ERASE = 568;
literal SMG$K_SET_CHAR_SEL_ERASE = 569;
literal SMG$K_SET_CURSOR_ABS = 570;
literal SMG$K_SET_NUMERIC_KEYPAD = 571;
literal SMG$K_SET_SCROLL_REGION = 572;
literal SMG$K_SET_TAB = 573;
literal SMG$K_SINGLE_HIGH = 574;
literal SMG$K_TAB_CHAR = 575;
literal SMG$K_TOP_T_CHAR = 576;
literal SMG$K_UNDERLINE_CHAR = 577;
literal SMG$K_UPPER_LEFT_CORNER = 578;
literal SMG$K_UPPER_RIGHT_CORNER = 579;
literal SMG$K_VERTICAL_BAR = 580;
literal SMG$K_WIDTH_NARROW = 581;
literal SMG$K_WIDTH_WIDE = 582;
literal SMG$K_CURSOR_POSITION_REPORT = 583;
literal SMG$K_REQUEST_CURSOR_POSITION = 584;
literal SMG$K_CR_GRAPHIC = 585;
literal SMG$K_FF_GRAPHIC = 586;
literal SMG$K_LF_GRAPHIC = 587;
literal SMG$K_HT_GRAPHIC = 588;
literal SMG$K_VT_GRAPHIC = 589;
literal SMG$K_TRUNCATION_ICON = 590;
literal SMG$K_CURSOR_NEXT_LINE = 591;
literal SMG$K_CURSOR_PRECEDING_LINE = 592;
literal SMG$K_INDEX = 593;
literal SMG$K_REVERSE_INDEX = 594;
literal SMG$K_BEGIN_NORMAL_RENDITION = 595;
literal SMG$K_BEGIN_AUTOWRAP_MODE = 596;
literal SMG$K_END_AUTOWRAP_MODE = 597;
literal SMG$K_BEGIN_AUTOREPEAT_MODE = 598;
literal SMG$K_END_AUTOREPEAT_MODE = 599;
literal SMG$K_SET_ORIGIN_RELATIVE = 600;
literal SMG$K_SET_ORIGIN_ABSOLUTE = 601;
literal SMG$K_ERASE_LINE_TO_CURSOR = 602;
literal SMG$K_NEXT_LINE = 603;
literal SMG$K_BEGIN_AUTOPRINT_MODE = 604;
literal SMG$K_END_AUTOPRINT_MODE = 605;
literal SMG$K_PRINT_SCREEN = 606;
literal SMG$K_SET_CURSOR_ON = 607;
literal SMG$K_SET_CURSOR_OFF = 608;
literal SMG$K_SET_PRINTER_OUTPUT = 609;
literal SMG$K_SET_SCREEN_OUTPUT = 610;
literal SMG$K_ERASE_DISPLAY_TO_CURSOR = 611;
literal SMG$K_REQUEST_PRINTER_STATUS = 612;
literal SMG$K_PRINTER_READY = 613;
literal SMG$K_PRINTER_NOT_READY = 614;
literal SMG$K_NO_PRINTER = 615;
literal SMG$K_SET_JUMP_SCROLL = 616;
literal SMG$K_SET_SMOOTH_SCROLL = 617;
literal SMG$K_ERROR_ICON = 618;
literal SMG$K_PAGE_LENGTH = 619;

literal SMG$K_PRIVATE_STR_1 = 651;
literal SMG$K_PRIVATE_STR_2 = 652;
literal SMG$K_PRIVATE_STR_3 = 653;
literal SMG$K_PRIVATE_STR_4 = 654;
literal SMG$K_PRIVATE_STR_5 = 655;
literal SMG$K_PRIVATE_STR_6 = 656;
literal SMG$K_PRIVATE_STR_7 = 657;
literal SMG$K_PRIVATE_STR_8 = 658;
literal SMG$K_PRIVATE_STR_9 = 659;
literal SMG$K_PRIVATE_STR_10 = 660;
literal SMG$K_MAX_STRING_CODE = 660;

literal SMG$K_BEGIN_USER1 = 661;
literal SMG$K_BEGIN_USER2 = 662;
literal SMG$K_BEGIN_USER3 = 663;
literal SMG$K_BEGIN_USER4 = 664;
literal SMG$K_BEGIN_USER5 = 665;
literal SMG$K_BEGIN_USER6 = 666;
literal SMG$K_BEGIN_USER7 = 667;
literal SMG$K_BEGIN_USER8 = 668;
literal SMG$K_END_USER1 = 669;
literal SMG$K_END_USER2 = 670;
literal SMG$K_END_USER3 = 671;
literal SMG$K_END_USER4 = 672;
literal SMG$K_END_USER5 = 673;
literal SMG$K_END_USER6 = 674;
literal SMG$K_END_USER7 = 675;
literal SMG$K_END_USER8 = 676;
literal SMG$K_BLACK_SCREEN = 677;
literal SMG$K_BLUE_SCREEN = 678;
literal SMG$K_CYAN_SCREEN = 679;
literal SMG$K_MAGENTA_SCREEN = 680;
literal SMG$K_GREEN_SCREEN = 681;
literal SMG$K_RED_SCREEN = 682;
literal SMG$K_WHITE_SCREEN = 683;
literal SMG$K_YELLOW_SCREEN = 684;
literal SMG$K_USER1_SCREEN = 685;
literal SMG$K_USER2_SCREEN = 686;
literal SMG$K_BEGIN_STATUS_LINE = 687;
literal SMG$K_END_STATUS_LINE = 688;
literal SMG$K_BEGIN_LOCATOR = 689;
literal SMG$K_END_LOCATOR = 690;
literal SMG$K_KEY_FIRST_DOWN = 691;
literal SMG$K_KEY_SECOND_DOWN = 692;
literal SMG$K_KEY_THIRD_DOWN = 693;
literal SMG$K_KEY_FOURTH_DOWN = 694;
literal SMG$K_KEY_FIRST_UP = 695;
literal SMG$K_KEY_SECOND_UP = 696;
literal SMG$K_KEY_THIRD_UP = 697;
literal SMG$K_KEY_FOURTH_UP = 698;
literal SMG$K_USER3_SCREEN = 699;
literal SMG$K_USER4_SCREEN = 700;
literal SMG$K_USER5_SCREEN = 701;
literal SMG$K_USER6_SCREEN = 702;
literal SMG$K_USER7_SCREEN = 703;
literal SMG$K_USER8_SCREEN = 704;
literal SMG$K_SET_ASCII = 705;
literal SMG$K_SET_SPEC_GRAPHICS = 706;
literal SMG$K_SET_SUPPLEMENTAL = 707;
literal SMG$K_SET_JIS_KANA = 708;
literal SMG$K_SET_KANJI = 709;
literal SMG$K_SET_JIS_ROMAN = 710;
literal SMG$K_SET_HANZI = 711;
literal SMG$K_SET_HANYU = 712;
literal SMG$K_SET_HANGUL = 713;
literal SMG$K_SET_KS_ROMAN = 714;
literal SMG$K_MAX_STRING2_CODE = 880;

 

literal DSC$K_DTYPE_Z = 0;              
literal DSC64$K_DTYPE_Z = 0;            

literal DSC$K_DTYPE_BU = 2;             
literal DSC64$K_DTYPE_BU = 2;
literal DSC$K_DTYPE_WU = 3;             
literal DSC64$K_DTYPE_WU = 3;
literal DSC$K_DTYPE_LU = 4;             
literal DSC64$K_DTYPE_LU = 4;           
literal DSC$K_DTYPE_QU = 5;             
literal DSC64$K_DTYPE_QU = 5;           
literal DSC$K_DTYPE_OU = 25;            
literal DSC64$K_DTYPE_OU = 25;          
literal DSC$K_DTYPE_B = 6;              
literal DSC64$K_DTYPE_B = 6;            
literal DSC$K_DTYPE_W = 7;              
literal DSC64$K_DTYPE_W = 7;            
literal DSC$K_DTYPE_L = 8;              
literal DSC64$K_DTYPE_L = 8;            
literal DSC$K_DTYPE_Q = 9;              
literal DSC64$K_DTYPE_Q = 9;            
literal DSC$K_DTYPE_O = 26;             
literal DSC64$K_DTYPE_O = 26;           
literal DSC$K_DTYPE_F = 10;             
literal DSC64$K_DTYPE_F = 10;           
literal DSC$K_DTYPE_D = 11;             
literal DSC64$K_DTYPE_D = 11;           
literal DSC$K_DTYPE_G = 27;             
literal DSC64$K_DTYPE_G = 27;           
literal DSC$K_DTYPE_H = 28;             
literal DSC64$K_DTYPE_H = 28;           
literal DSC$K_DTYPE_FC = 12;            
literal DSC64$K_DTYPE_FC = 12;          

literal DSC$K_DTYPE_DC = 13;            
literal DSC64$K_DTYPE_DC = 13;          

literal DSC$K_DTYPE_GC = 29;            
literal DSC64$K_DTYPE_GC = 29;          

literal DSC$K_DTYPE_HC = 30;            
literal DSC64$K_DTYPE_HC = 30;          

literal DSC$K_DTYPE_FS = 52;            
literal DSC64$K_DTYPE_FS = 52;          
literal DSC$K_DTYPE_FT = 53;            
literal DSC64$K_DTYPE_FT = 53;          
literal DSC$K_DTYPE_FSC = 54;           
literal DSC64$K_DTYPE_FSC = 54;         

literal DSC$K_DTYPE_FTC = 55;           
literal DSC64$K_DTYPE_FTC = 55;         

literal DSC$K_DTYPE_FX = 57;            
literal DSC64$K_DTYPE_FX = 57;          
literal DSC$K_DTYPE_FXC = 58;           
literal DSC64$K_DTYPE_FXC = 58;         

literal DSC$K_DTYPE_CIT = 31;           
literal DSC64$K_DTYPE_CIT = 31;         

literal DSC$K_DTYPE_T = 14;             
literal DSC64$K_DTYPE_T = 14;           
literal DSC$K_DTYPE_VT = 37;            
literal DSC64$K_DTYPE_VT = 37;
literal DSC$K_DTYPE_T2 = 38;            
literal DSC64$K_DTYPE_T2 = 38;
literal DSC$K_DTYPE_NU = 15;            
literal DSC64$K_DTYPE_NU = 15;
literal DSC$K_DTYPE_NL = 16;            
literal DSC64$K_DTYPE_NL = 16;
literal DSC$K_DTYPE_NLO = 17;           
literal DSC64$K_DTYPE_NLO = 17;
literal DSC$K_DTYPE_NR = 18;            
literal DSC64$K_DTYPE_NR = 18;
literal DSC$K_DTYPE_NRO = 19;           
literal DSC64$K_DTYPE_NRO = 19;
literal DSC$K_DTYPE_NZ = 20;            
literal DSC64$K_DTYPE_NZ = 20;
literal DSC$K_DTYPE_P = 21;             
literal DSC64$K_DTYPE_P = 21;
literal DSC$K_DTYPE_V = 1;              
literal DSC64$K_DTYPE_V = 1;
literal DSC$K_DTYPE_VU = 34;            
literal DSC64$K_DTYPE_VU = 34;
literal DSC$K_DTYPE_ZI = 22;            
literal DSC64$K_DTYPE_ZI = 22;
literal DSC$K_DTYPE_ZEM = 23;           
literal DSC64$K_DTYPE_ZEM = 23;
literal DSC$K_DTYPE_DSC = 24;           
literal DSC64$K_DTYPE_DSC = 24;         
literal DSC$K_DTYPE_BPV = 32;           
literal DSC64$K_DTYPE_BPV = 32;         

literal DSC$K_DTYPE_BLV = 33;           
literal DSC64$K_DTYPE_BLV = 33;
literal DSC$K_DTYPE_ADT = 35;           
literal DSC64$K_DTYPE_ADT = 35;

literal DSC$K_DTYPE_CAD = 178;          
literal DSC64$K_DTYPE_CAD = 178;
literal DSC$K_DTYPE_ENT = 179;          
literal DSC64$K_DTYPE_ENT = 179;
literal DSC$K_DTYPE_GBL = 180;          
literal DSC64$K_DTYPE_GBL = 180;
literal DSC$K_DTYPE_EPT = 181;          
literal DSC64$K_DTYPE_EPT = 181;
literal DSC$K_DTYPE_R11 = 182;          
literal DSC64$K_DTYPE_R11 = 182;        
literal DSC$K_DTYPE_FLD = 183;          
literal DSC64$K_DTYPE_FLD = 183;
literal DSC$K_DTYPE_PCT = 184;          
literal DSC64$K_DTYPE_PCT = 184;
literal DSC$K_DTYPE_DPC = 185;          
literal DSC64$K_DTYPE_DPC = 185;
literal DSC$K_DTYPE_LBL = 186;          
literal DSC64$K_DTYPE_LBL = 186;
literal DSC$K_DTYPE_SLB = 187;          
literal DSC64$K_DTYPE_SLB = 187;
literal DSC$K_DTYPE_MOD = 188;          
literal DSC64$K_DTYPE_MOD = 188;
literal DSC$K_DTYPE_EOM = 189;          
literal DSC64$K_DTYPE_EOM = 189;
literal DSC$K_DTYPE_RTN = 190;          
literal DSC64$K_DTYPE_RTN = 190;
literal DSC$K_DTYPE_EOR = 191;          
literal DSC64$K_DTYPE_EOR = 191;

literal DSC$K_CLASS_Z = 0;              
literal DSC64$K_CLASS_Z = 0;            
literal DSC$K_CLASS_S = 1;              
literal DSC64$K_CLASS_S = 1;            
literal DSC$K_CLASS_D = 2;              
literal DSC64$K_CLASS_D = 2;            
literal DSC$K_CLASS_V = 3;              
literal DSC64$K_CLASS_V = 3;            
literal DSC$K_CLASS_A = 4;              
literal DSC64$K_CLASS_A = 4;            
literal DSC$K_CLASS_P = 5;              
literal DSC64$K_CLASS_P = 5;            
literal DSC$K_CLASS_PI = 6;             
literal DSC64$K_CLASS_PI = 6;           
literal DSC$K_CLASS_J = 7;              
literal DSC64$K_CLASS_J = 7;            
literal DSC$K_CLASS_JI = 8;             
literal DSC$K_CLASS_SD = 9;             
literal DSC64$K_CLASS_SD = 9;           
literal DSC$K_CLASS_NCA = 10;           
literal DSC64$K_CLASS_NCA = 10;         
literal DSC$K_CLASS_VS = 11;            
literal DSC64$K_CLASS_VS = 11;          
literal DSC$K_CLASS_VSA = 12;           
literal DSC64$K_CLASS_VSA = 12;         
literal DSC$K_CLASS_UBS = 13;           
literal DSC64$K_CLASS_UBS = 13;         
literal DSC$K_CLASS_UBA = 14;           
literal DSC64$K_CLASS_UBA = 14;         
literal DSC$K_CLASS_SB = 15;            
literal DSC64$K_CLASS_SB = 15;          
literal DSC$K_CLASS_UBSB = 16;          
literal DSC64$K_CLASS_UBSB = 16;        

literal DSC$K_CLASS_BFA = 191;          

literal DSC$S_DSCDEF = 14;
macro DSC$A_HANDLE = -12,0,32,1 %;      

macro DSC$L_BYTEOFF = -8,0,32,0 %;      

macro DSC$L_LOGUNIT = -4,0,32,0 %;      

macro DSC$W_LENGTH = 0,0,16,0 %;        
literal DSC$S_DSCDEF1 = 8;
macro DSC$W_MAXSTRLEN = 0,0,16,0 %;     

macro DSC$B_DTYPE = 2,0,8,0 %;          

macro DSC$B_CLASS = 3,0,8,0 %;          

macro DSC$A_POINTER = 8,0,64,1 %;       
literal DSC$K_Z_BLN = 16;                
literal DSC$C_Z_BLN = 16;                
literal DSC$K_S_BLN = 16;                
literal DSC$C_S_BLN = 16;                
literal DSC$K_D_BLN = 16;                
literal DSC$C_D_BLN = 16;                
literal DSC$K_P_BLN = 16;                
literal DSC$C_P_BLN = 16;                
literal DSC$K_J_BLN = 16;                
literal DSC$C_J_BLN = 16;                
literal DSC$K_VS_BLN = 16;               
literal DSC$C_VS_BLN = 16;               
literal DSC$S_DSCDEF2 = 16;
macro DSC$A_BASE = 4,0,32,1 %;          

literal DSC$K_UBS_BLN = 12;             
literal DSC$C_UBS_BLN = 12;             
literal DSC$S_DSCDEF3 = 12;
macro DSC$L_POS = 8,0,32,1 %;           

literal DSC$S_DSCDEF4 = 12;
macro DSC$W_MAXLEN = 8,0,16,0 %;        

literal DSC$K_SD_BLN = 12;              
literal DSC$C_SD_BLN = 12;              
literal DSC$S_DSCDEF5 = 20;
macro DSC$B_SCALE = 8,0,8,1 %;          

macro DSC$B_DIGITS = 9,0,8,0 %;         

macro DSC$B_AFLAGS = 10,0,8,0 %;        
macro DSC$V_FL_REDIM = 10,4,1,0 %;      

macro DSC$V_FL_COLUMN = 10,5,1,0 %;     

macro DSC$V_FL_COEFF = 10,6,1,0 %;      
macro DSC$V_FL_BOUNDS = 10,7,1,0 %;     
macro DSC$B_DIMCT = 11,0,8,0 %;         
macro DSC$L_ARSIZE = 12,0,32,0 %;       
macro DSC$A_A0 = 16,0,32,1 %;           

literal DSC$S_DSCDEF6 = 28;
macro DSC$L_V0 = 16,0,32,1 %;           

macro DSC$L_S1 = 20,0,32,0 %;           

macro DSC$L_S2 = 24,0,32,0 %;           
literal DSC$S_DSCDEF7 = 28;
macro DSC$L_M1 = 20,0,32,0 %;           
macro DSC$L_M2 = 24,0,32,0 %;           

literal DSC$K_PI_BLN = 12;              
literal DSC$C_PI_BLN = 12;              
literal DSC$K_JI_BLN = 12;              
literal DSC$C_JI_BLN = 12;              
literal DSC$S_DSCDEF8 = 12;
macro DSC$A_FRAME = 8,0,32,1 %;         

literal DSC$S_DSCDEF9 = 16;
macro DSC$L_SB_L1 = 8,0,32,1 %;         
macro DSC$L_SB_U1 = 12,0,32,1 %;        

literal DSC$S_DSCDEF10 = 20;
macro DSC$L_UBSB_L1 = 12,0,32,1 %;      
macro DSC$L_UBSB_U1 = 16,0,32,1 %;      

literal DSC64$S_DSCDEF64 = 16;
macro DSC64$Q_LENGTH = 8,0,0,0 %;
literal DSC64$S_LENGTH = 8;             
literal DSC64$S_DSCDEF1_64 = 24;
macro DSC64$W_MBO = 0,0,16,0 %;         
macro DSC64$B_DTYPE = 2,0,8,0 %;        
macro DSC64$B_CLASS = 3,0,8,0 %;        
macro DSC64$L_MBMO = 4,0,32,1 %;        
macro DSC64$Q_MAXSTRLEN = 8,0,0,0 %;
literal DSC64$S_MAXSTRLEN = 8;          
macro DSC64$PQ_POINTER = 16,0,0,1 %;
literal DSC64$S_POINTER = 8;            
literal DSC64$K_Z_BLN = 24;             
literal DSC64$C_Z_BLN = 24;             
literal DSC64$K_S_BLN = 24;             
literal DSC64$C_S_BLN = 24;             
literal DSC64$K_D_BLN = 24;             
literal DSC64$C_D_BLN = 24;             
literal DSC64$K_P_BLN = 24;             
literal DSC64$C_P_BLN = 24;             
literal DSC64$K_J_BLN = 24;             
literal DSC64$C_J_BLN = 24;             
literal DSC64$K_VS_BLN = 24;            
literal DSC64$C_VS_BLN = 24;            
literal DSC64$S_DSCDEF2_64 = 24;
macro DSC64$PQ_BASE = 16,0,0,1 %;
literal DSC64$S_BASE = 8;               

literal DSC64$K_UBS_BLN = 32;           
literal DSC64$C_UBS_BLN = 32;           
literal DSC64$S_DSCDEF3_64 = 32;
macro DSC64$Q_POS = 24,0,0,1 %;
literal DSC64$S_POS = 8;                

literal DSC64$K_SD_BLN = 32;            
literal DSC64$C_SD_BLN = 32;            
literal DSC64$S_DSCDEF5_64 = 48;
macro DSC64$B_SCALE = 24,0,8,1 %;       
macro DSC64$B_DIGITS = 25,0,8,0 %;      
macro DSC64$B_AFLAGS = 26,0,8,0 %;      
macro DSC64$V_FL_REDIM = 26,4,1,0 %;
macro DSC64$V_FL_COLUMN = 26,5,1,0 %;
macro DSC64$V_FL_COEFF = 26,6,1,0 %;
macro DSC64$V_FL_BOUNDS = 26,7,1,0 %;
macro DSC64$B_DIMCT = 27,0,8,0 %;       
macro DSC64$L_MBZ = 28,0,32,0 %;        
macro DSC64$Q_ARSIZE = 32,0,0,0 %;
literal DSC64$S_ARSIZE = 8;             
macro DSC64$PQ_A0 = 40,0,0,1 %;
literal DSC64$S_A0 = 8;                 
literal DSC64$S_DSCDEF6_64 = 64;
macro DSC64$Q_V0 = 40,0,0,1 %;
literal DSC64$S_V0 = 8;                 
macro DSC64$Q_S1 = 48,0,0,0 %;
literal DSC64$S_S1 = 8;                 
macro DSC64$Q_S2 = 56,0,0,0 %;
literal DSC64$S_S2 = 8;                 
literal DSC64$S_DSCDEF7_64 = 64;
macro DSC64$Q_M1 = 48,0,0,0 %;
literal DSC64$S_M1 = 8;                 
macro DSC64$Q_M2 = 56,0,0,0 %;
literal DSC64$S_M2 = 8;                 
literal DSC64$K_PI_BLN = 32;            
literal DSC64$C_PI_BLN = 32;            
literal DSC64$K_JI_BLN = 32;            
literal DSC64$C_JI_BLN = 32;            
literal DSC64$S_DSCDEF8_64 = 32;
macro DSC64$PQ_FRAME = 24,0,0,1 %;
literal DSC64$S_FRAME = 8;              
literal DSC64$S_DSCDEF9_64 = 40;
macro DSC64$Q_SB_L1 = 24,0,0,1 %;
literal DSC64$S_SB_L1 = 8;              
macro DSC64$Q_SB_U1 = 32,0,0,1 %;
literal DSC64$S_SB_U1 = 8;              
literal DSC64$S_DSCDEF10_64 = 48;
macro DSC64$Q_UBSB_L1 = 32,0,0,1 %;
literal DSC64$S_UBSB_L1 = 8;            
macro DSC64$Q_UBSB_U1 = 40,0,0,1 %;
literal DSC64$S_UBSB_U1 = 8;            
 

literal SRM$K_INT_OVF_T = 1;            
literal SRM$K_INT_DIV_T = 2;            
literal SRM$K_FLT_OVF_T = 3;            
literal SRM$K_FLT_DIV_T = 4;            
literal SRM$K_FLT_UND_T = 5;            
literal SRM$K_DEC_OVF_T = 6;            
literal SRM$K_SUB_RNG_T = 7;            
literal SRM$K_FLT_OVF_F = 8;            
literal SRM$K_FLT_DIV_F = 9;            
literal SRM$K_FLT_UND_F = 10;           
literal SRM$M_EXC_SUM_SWC = %X'1';
literal SRM$M_EXC_SUM_INV = %X'2';
literal SRM$M_EXC_SUM_DZE = %X'4';
literal SRM$M_EXC_SUM_OVF = %X'8';
literal SRM$M_EXC_SUM_UNF = %X'10';
literal SRM$M_EXC_SUM_INE = %X'20';
literal SRM$M_EXC_SUM_IOV = %X'40';
literal SRM$S_SRM = 4;
macro SRM$L_EXC_SUM = 0,0,32,0 %;
macro SRM$V_EXC_SUM_SWC = 0,0,1,0 %;
macro SRM$V_EXC_SUM_INV = 0,1,1,0 %;
macro SRM$V_EXC_SUM_DZE = 0,2,1,0 %;
macro SRM$V_EXC_SUM_OVF = 0,3,1,0 %;
macro SRM$V_EXC_SUM_UNF = 0,4,1,0 %;
macro SRM$V_EXC_SUM_INE = 0,5,1,0 %;
macro SRM$V_EXC_SUM_IOV = 0,6,1,0 %;

 

literal SYSTEM$_FACILITY = 0;
literal SS$_NORMAL = 1;

literal SS$_CONTINUE = 1;
literal SS$_WASCLR = 1;
literal SS$_WASSET = 9;
literal SS$_REMEMBER = 1;

literal SS$_ACCVIO = 12;
literal SS$_BADPARAM = 20;
literal SS$_EXQUOTA = 28;
literal SS$_NOPRIV = 36;
literal SS$_ABORT = 44;
literal SS$_BADATTRIB = 52;
literal SS$_BADESCAPE = 60;
literal SS$_BADIMGHDR = 68;
literal SS$_CHANINTLK = 76;
literal SS$_CTRLERR = 84;
literal SS$_DATACHECK = 92;
literal SS$_DEVFOREIGN = 100;
literal SS$_DEVMOUNT = 108;
literal SS$_DEVNOTMBX = 116;
literal SS$_DEVNOTMOUNT = 124;
literal SS$_DEVOFFLINE = 132;
literal SS$_DRVERR = 140;
literal SS$_DUPLNAM = 148;
literal SS$_FILACCERR = 156;
literal SS$_FILALRACC = 164;
literal SS$_FILNOTACC = 172;
literal SS$_FILNOTEXP = 180;
literal SS$_FORMAT = 188;
literal SS$_GPTFULL = 196;
literal SS$_GSDFULL = 204;
literal SS$_LCKPAGFUL = 212;
literal SS$_ILLBLKNUM = 220;
literal SS$_ILLCNTRFUNC = 228;
literal SS$_ILLEFC = 236;
literal SS$_ILLIOFUNC = 244;
literal SS$_ILLPAGCNT = 252;
literal SS$_ILLSER = 260;
literal SS$_INCVOLLABEL = 268;
literal SS$_INSFARG = 276;
literal SS$_INSFWSL = 284;
literal SS$_INSFMEM = 292;
literal SS$_INSFRAME = 300;
literal SS$_IVADDR = 308;
literal SS$_IVCHAN = 316;
literal SS$_IVDEVNAM = 324;
literal SS$_IVGSDNAM = 332;
literal SS$_IVLOGNAM = 340;
literal SS$_IVLOGTAB = 348;
literal SS$_IVQUOTAL = 356;
literal SS$_IVSECFLG = 364;
literal SS$_IVSSRQ = 372;
literal SS$_IVSTSFLG = 380;
literal SS$_IVTIME = 388;
literal SS$_LENVIO = 396;
literal SS$_LKWSETFUL = 404;
literal SS$_MBTOOSML = 412;
literal SS$_MEDOFL = 420;
literal SS$_NODATA = 428;
literal SS$_NOIOCHAN = 436;
literal SS$_NOLOGNAM = 444;
literal SS$_NONEXDRV = 452;
literal SS$_NOTFILEDEV = 460;
literal SS$_NOTINTBLSZ = 468;
literal SS$_NOTLABELMT = 476;
literal SS$_NOTSQDEV = 484;
literal SS$_PAGOWNVIO = 492;
literal SS$_PARITY = 500;
literal SS$_PARTESCAPE = 508;
literal SS$_PFMBSY = 516;
literal SS$_PSTFULL = 524;
literal SS$_RESULTOVF = 532;
literal SS$_SECTBLFUL = 540;
literal SS$_TAPEPOSLOST = 548;
literal SS$_TIMEOUT = 556;
literal SS$_UNASEFC = 564;
literal SS$_UNSAFE = 572;
literal SS$_VASFULL = 580;
literal SS$_VECINUSE = 588;
literal SS$_VOLINV = 596;
literal SS$_WRITLCK = 604;
literal SS$_NOTAPEOP = 612;
literal SS$_IVCHNLSEC = 620;
literal SS$_NOMBX = 628;
literal SS$_NOLINKS = 636;
literal SS$_NOSOLICIT = 644;
literal SS$_NOSUCHNODE = 652;
literal SS$_REJECT = 660;
literal SS$_TOOMUCHDATA = 668;
literal SS$_BUGCHECK = 676;
literal SS$_FILNOTCNTG = 684;
literal SS$_BADSTACK = 692;
literal SS$_MCHECK = 700;
literal SS$_DEVACTIVE = 708;
literal SS$_HANGUP = 716;
literal SS$_OPINCOMPL = 724;
literal SS$_ILLSEQOP = 732;
literal SS$_IVSECIDCTL = 740;
literal SS$_NOTNETDEV = 748;
literal SS$_IVPROTECT = 756;
literal SS$_ACPVAFUL = 764;
literal SS$_MTLBLLONG = 772;
literal SS$_BUFBYTALI = 780;
literal SS$_NOAQB = 788;
literal SS$_WRONGACP = 796;
literal SS$_BUFNOTALIGN = 804;
literal SS$_DEVCMDERR = 812;
literal SS$_DEVREQERR = 820;
literal SS$_INSFBUFDP = 828;
literal SS$_INSFMAPREG = 836;
literal SS$_IVBUFLEN = 844;
literal SS$_IVMODE = 852;
literal SS$_MCNOTVALID = 860;
literal SS$_POWERFAIL = 868;
literal SS$_SHMGSNOTMAP = 876;
literal SS$_TOOMANYLNAM = 884;
literal SS$_SHMNOTCNCT = 892;
literal SS$_NOTCREATOR = 900;
literal SS$_INTERLOCK = 908;
literal SS$_BADQUEUEHDR = 916;
literal SS$_NOSLOT = 924;
literal SS$_SUSPENDED = 932;
literal SS$_EXPORTQUOTA = 940;
literal SS$_NOSHMBLOCK = 948;
literal SS$_BADQFILE = 956;
literal SS$_NOQFILE = 964;
literal SS$_QFACTIVE = 972;
literal SS$_QFNOTACT = 980;
literal SS$_DUPDSKQUOTA = 988;
literal SS$_NODISKQUOTA = 996;
literal SS$_EXDISKQUOTA = 1004;
literal SS$_IDMISMATCH = 1012;
literal SS$_NOWRT = 1020;

literal SS$_BADISD = 8196;
literal SS$_RELINK = 8204;
literal SS$_NOTINSTALL = 8212;
literal SS$_SHARTOOBIG = 8220;
literal SS$_NOP1VA = 8228;
literal SS$_MULTRMS = 8236;
literal SS$_VECFULL = 8244;
literal SS$_IVLVEC = 8252;
literal SS$_INSFSPTS = 8260;
literal SS$_DISCONNECT = 8268;
literal SS$_PRIVINSTALL = 8276;
literal SS$_PROTINSTALL = 8284;
literal SS$_BADVEC = 8292;
literal SS$_REMRSRC = 8300;
literal SS$_PROTOCOL = 8308;
literal SS$_THIRDPARTY = 8316;
literal SS$_NOSUCHUSER = 8324;
literal SS$_SHUT = 8332;
literal SS$_UNREACHABLE = 8340;
literal SS$_INVLOGIN = 8348;
literal SS$_NOSUCHOBJ = 8356;
literal SS$_EXCPUTIM = 8364;
literal SS$_OPRABORT = 8372;
literal SS$_SHRIDMISMAT = 8380;
literal SS$_COMMHARD = 8388;
literal SS$_IVCHAR = 8396;
literal SS$_DEVINACT = 8404;
literal SS$_CONNECFAIL = 8412;
literal SS$_LINKABORT = 8420;
literal SS$_LINKDISCON = 8428;
literal SS$_LINKEXIT = 8436;
literal SS$_PATHLOST = 8444;
literal SS$_CLEARED = 8452;
literal SS$_RESET = 8460;
literal SS$_UNSOLICIT = 8468;
literal SS$_TOOMANYREDS = 8476;
literal SS$_IVLOCKID = 8484;
literal SS$_SUBLOCKS = 8492;
literal SS$_PARNOTGRANT = 8500;
literal SS$_CVTUNGRANT = 8508;
literal SS$_FORCEDERROR = 8516;
literal SS$_ILLSELF = 8524;
literal SS$_ILLCDTST = 8532;
literal SS$_NOLISTENER = 8540;
literal SS$_EXGBLPAGFIL = 8548;
literal SS$_BADRCT = 8556;
literal SS$_DIRNOTEMPTY = 8564;
literal SS$_FORCEDEXIT = 8572;
literal SS$_NOTPRINTED = 8580;
literal SS$_JBCERROR = 8588;
literal SS$_NOLICENSE = 8596;
literal SS$_VCBROKEN = 8604;
literal SS$_VCCLOSED = 8612;
literal SS$_INSFCDT = 8620;
literal SS$_DEVNOTDISM = 8628;
literal SS$_NOSHRIMG = 8636;
literal SS$_DUPUNIT = 8644;
literal SS$_BADACLCTX = 8652;
literal SS$_SERIOUSEXCP = 8660;
literal SS$_TEMPLATEDEV = 8668;
literal SS$_IVACL = 8676;
literal SS$_NOSUCHID = 8684;
literal SS$_NOLCLMEDA = 8692;
literal SS$_NOREGAVIL = 8700;
literal SS$_NOREGSUIT = 8708;
literal SS$_NOSUCHPGM = 8716;
literal SS$_PGMLDFAIL = 8724;
literal SS$_PGMSTDALN = 8732;
literal SS$_IVIDENT = 8740;
literal SS$_DUPIDENT = 8748;
literal SS$_INCSEGTRA = 8756;
literal SS$_NODELEAVE = 8764;
literal SS$_KERNELINV = 8772;
literal SS$_EXLNMQUOTA = 8780;
literal SS$_PARENT_DEL = 8788;
literal SS$_PARNOTSYS = 8796;
literal SS$_INSSWAPSPACE = 8804;
literal SS$_VOLOERR = 8812;
literal SS$_DATALATE = 8820;
literal SS$_OVRMAXARG = 8828;
literal SS$_SHACHASTA = 8836;
literal SS$_TERMNETDEV = 8844;
literal SS$_NOLOGTAB = 8852;
literal SS$_WRONGNAME = 8860;
literal SS$_NOVOLACC = 8868;
literal SS$_NOFILACC = 8876;
literal SS$_INVEXHLIST = 8884;
literal SS$_NOACLSUPPORT = 8892;
literal SS$_INVSECLASS = 8900;
literal SS$_INCSHAMEM = 8908;
literal SS$_DEVNOTSHR = 8916;
literal SS$_RUCONFLICT = 8924;
literal SS$_DATALOST = 8932;
literal SS$_REMOTE_PROC = 8940;
literal SS$_CPUNOTACT = 8948;
literal SS$_SRVMMAT = 8956;
literal SS$_EXLICENSE = 8964;
literal SS$_INVLICENSE = 8972;
literal SS$_LICENSE_LEVEL = 8980;
literal SS$_INV_HW_ID = 8988;
literal SS$_BADCONTEXT = 8996;
literal SS$_TOOMUCHCTX = 9004;
literal SS$_VA_IN_USE = 9012;
literal SS$_NODELETE = 9020;
literal SS$_NOSUCHCPU = 9028;
literal SS$_IMGVEXC = 9036;
literal SS$_NOSAVPEXC = 9044;
literal SS$_NOSUCHTID = 9052;
literal SS$_NOSUCHRM = 9060;
literal SS$_NOCURTID = 9068;
literal SS$_WRONGSTATE = 9076;
literal SS$_VETO = 9084;
literal SS$_PWDSYNTAX = 9092;
literal SS$_PWDNOTDIF = 9100;
literal SS$_INVPWDLEN = 9108;
literal SS$_SYSVERDIF = 9116;
literal SS$_HWM_STALL = 9124;
literal SS$_NOSUSPEND = 9132;
literal SS$_NOSUCHPART = 9140;
literal SS$_RMALRDCL = 9148;
literal SS$_ALRCURTID = 9156;
literal SS$_INVLOG = 9164;
literal SS$_BADLOGVER = 9172;
literal SS$_OPINPROG = 9180;
literal SS$_WRONGACMODE = 9188;
literal SS$_SUBTRACED = 9196;
literal SS$_ARCHIVING = 9204;
literal SS$_ARCHIVED = 9212;
literal SS$_SITEPWDFAIL = 9220;
literal SS$_NOSUCHCPB = 9228;
literal SS$_CPUCAP = 9236;
literal SS$_LOADER = 9244;
literal SS$_HSTBUFACC = 9252;
literal SS$_INCONOLCK = 9260;
literal SS$_INVEVENT = 9268;
literal SS$_NOSUCHFAC = 9276;
literal SS$_NOCALLPRIV = 9284;
literal SS$_INSFLPGS = 9292;
literal SS$_INSFRPGS = 9300;
literal SS$_BADREASON = 9308;
literal SS$_NOSUCHBID = 9316;
literal SS$_NOTORIGIN = 9324;
literal SS$_NOLOG = 9332;
literal SS$_TPDISABLED = 9340;
literal SS$_BRANCHENDED = 9348;
literal SS$_BRANCHSTARTED = 9356;
literal SS$_NOSUCHREPORT = 9364;
literal SS$_BADTIME = 9372;
literal SS$_PARTJOINED = 9380;
literal SS$_NOPRESUME = 9388;
literal SS$_RECOVERCANCEL = 9396;
literal SS$_CURTIDCHANGE = 9404;
literal SS$_NOREADER = 9412;
literal SS$_NOWRITER = 9420;
literal SS$_DEVNOTWS = 9428;
literal SS$_NOCLASS = 9436;
literal SS$_CONTEXTSKEW = 9444;
literal SS$_BADFORGEDB = 9452;
literal SS$_NODOMAIN = 9460;
literal SS$_OVRMAXAUD = 9468;
literal SS$_BADCHAIN = 9476;
literal SS$_BADBUFLEN = 9484;
literal SS$_BADITMCOD = 9492;
literal SS$_BADBUFADR = 9500;
literal SS$_BADRETLEN = 9508;
literal SS$_SSINOTHELD = 9516;
literal SS$_SSAMISSING = 9524;
literal SS$_SSANOTAUTH = 9532;
literal SS$_BADOWNER = 9540;
literal SS$_NAMESERVCOMMERR = 9548;
literal SS$_IVNODNAM = 9556;
literal SS$_CONFIG_SYNTAX = 9564;
literal SS$_SHELVED = 9572;
literal SS$_DRVNOTVALID = 9580;
literal SS$_SLICING_DISABLED = 9588;
literal SS$_NOCALLTRANS = 9596;
literal SS$_TRANSCALLER = 9604;
literal SS$_ILLPRIPOL = 9612;
literal SS$_ILLPOLICY = 9620;
literal SS$_INSFRSPID = 9628;
literal SS$_INSFCREDITL = 9636;
literal SS$_INSFCREDITH = 9644;
literal SS$_INSFMAP = 9652;
literal SS$_SIG_INVARGTYPE = 9660;
literal SS$_SIG_INVFLTARG = 9668;
literal SS$_SIG_INVARGLIST = 9676;
literal SS$_SIG_INVFUNCTYPE = 9684;
literal SS$_SIG_ARGMISMATCH = 9692;
literal SS$_NOTRANQUIL = 9700;
literal SS$_NOCALLTRANS_SUP = 9708;
literal SS$_DEVLISTFULL = 9716;
literal SS$_INSFP1POOL = 9724;
literal SS$_SIGNAL64 = 9732;
literal SS$_ZEROALLOCLS = 9740;
literal SS$_QUEUE_FULL = 9748;
literal SS$_DEVICE_RESET = 9756;
literal SS$_ACA_ACTIVE = 9764;
literal SS$_BUS_PHASE_ERROR = 9772;
literal SS$_NOMULTITHREAD = 9780;
literal SS$_MTHREADACTIVE = 9788;
literal SS$_MAXKTHREADS = 9796;
literal SS$_NOSUCHTHREAD = 9804;
literal SS$_NOTHREADMAN = 9812;
literal SS$_NOSUCHUPCALL = 9820;
literal SS$_BADFANDLE = 9828;
literal SS$_FANDLEBUSY = 9836;
literal SS$_UNALIGNED = 9844;
literal SS$_BADIOSADR = 9852;
literal SS$_ILLBUFOBJ = 9860;
literal SS$_ILLMODIFIER = 9868;
literal SS$_NOCCBBUFFOBJ = 9876;
literal SS$_NORDACC = 9884;
literal SS$_NOWRTACC = 9892;
literal SS$_NOTNOCNVRT = 9900;
literal SS$_UNSUPVOLSET = 9908;
literal SS$_ARG_GTR_32_BITS = 9916;
literal SS$_NOT64DEVFUNC = 9924;
literal SS$_CHANVIO = 9932;
literal SS$_GBLSEC_MISMATCH = 9940;
literal SS$_ILLRELPAG = 9948;
literal SS$_IVACMODE = 9956;
literal SS$_IVREGFLG = 9964;
literal SS$_IVREGID = 9972;
literal SS$_IVREGPROT = 9980;
literal SS$_IVVAFLG = 9988;
literal SS$_LEN_NOTBLKMULT = 9996;
literal SS$_LEN_NOTPAGMULT = 10004;
literal SS$_NOT_PROCESS_VA = 10012;
literal SS$_OFF_NOTBLKALGN = 10020;
literal SS$_OFF_NOTPAGALGN = 10028;
literal SS$_OFFSET_TOO_BIG = 10036;
literal SS$_REGOWNVIO = 10044;
literal SS$_PROTVIO = 10052;
literal SS$_TOO_MANY_ARGS = 10060;
literal SS$_VA_NOTPAGALGN = 10068;
literal SS$_NOEXTAUTH = 10076;
literal SS$_AUTHFAIL = 10084;
literal SS$_INVUSER = 10092;
literal SS$_ERRMAPAUTH = 10100;
literal SS$_NORAD50 = 10108;
literal SS$_BADMEDIA = 10116;
literal SS$_UNRECOVRDER = 10124;
literal SS$_IVFORMAT = 10132;
literal SS$_IVUNITFLAG = 10140;
literal SS$_IVPARAM = 10148;
literal SS$_NOSUCHENTRY = 10156;
literal SS$_ALLOCFAILED = 10164;
literal SS$_SHMEM_INCON = 10172;
literal SS$_IVLOCKOP = 10180;
literal SS$_IVLOCKTBL = 10188;
literal SS$_LOCKINUSE = 10196;
literal SS$_LOCK_TIMEOUT = 10204;
literal SS$_BADLCKTBL = 10212;
literal SS$_NOBREAK = 10220;
literal SS$_IVPROTOCOL = 10228;
literal SS$_NOWAIT = 10236;             

literal SS$_PLHLDR = 1028;
literal SS$_ASTFLT = 1036;
literal SS$_BREAK = 1044;
literal SS$_CMODSUPR = 1052;
literal SS$_CMODUSER = 1060;
literal SS$_COMPAT = 1068;
literal SS$_OPCCUS = 1076;
literal SS$_OPCDEC = 1084;
literal SS$_PAGRDERR = 1092;
literal SS$_RADRMOD = 1100;
literal SS$_ROPRAND = 1108;
literal SS$_SSFAIL = 1116;
literal SS$_TBIT = 1124;
literal SS$_DEBUG = 1132;
literal SS$_ARTRES = 1140;
literal SS$_INTOVF = 1148;
literal SS$_INTDIV = 1156;
literal SS$_FLTOVF = 1164;
literal SS$_FLTDIV = 1172;
literal SS$_FLTUND = 1180;
literal SS$_DECOVF = 1188;
literal SS$_SUBRNG = 1196;
literal SS$_FLTOVF_F = 1204;
literal SS$_FLTDIV_F = 1212;
literal SS$_FLTUND_F = 1220;
literal SS$_INHCHMK = 1228;
literal SS$_INHCHME = 1236;
literal SS$_VECDIS = 1244;
literal SS$_VARITH = 1252;
literal SS$_ILLVECOP = 1260;
literal SS$_VECALIGN = 1268;
literal SS$_IMGDMP = 1276;
literal SS$_HPARITH = 1284;
literal SS$_ALIGN = 1292;
literal SS$_UNALIGN_SP_LOAD = 1300;
literal SS$_GENTRAP = 1308;
literal SS$_FLTINV = 1316;
literal SS$_FLTINE = 1324;
literal SS$_DECDIV = 1332;
literal SS$_DECINV = 1340;
literal SS$_ASSERTERR = 1348;
literal SS$_NULPTRERR = 1356;
literal SS$_STKOVF = 1364;
literal SS$_STRLENERR = 1372;
literal SS$_SUBSTRERR = 1380;
literal SS$_RANGEERR = 1388;
literal SS$_SUBRNG1 = 1396;
literal SS$_SUBRNG2 = 1404;
literal SS$_SUBRNG3 = 1412;
literal SS$_SUBRNG4 = 1420;
literal SS$_SUBRNG5 = 1428;
literal SS$_SUBRNG6 = 1436;
literal SS$_SUBRNG7 = 1444;
literal SS$_PAGRDERRXM = 1452;
literal SS$_ILLEGAL_SHADOW = 1460;
literal SS$_FLTINV_F = 1468;
literal SS$_FLTINE_F = 1476;
literal SS$_INTOVF_F = 1484;
literal SS$_NATFAULT = 1492;
literal SS$_FLTDENORMAL = 1500;
literal SS$_BREAK_APPL = 1508;
literal SS$_BREAK_ARCH = 1516;

literal SS$_BUFFEROVF = 1537;
literal SS$_CONTROLO = 1545;
literal SS$_CONTROLY = 1553;
literal SS$_CREATED = 1561;
literal SS$_MSGNOTFND = 1569;
literal SS$_NOTRAN = 1577;
literal SS$_SUPERSEDE = 1585;
literal SS$_WASECC = 1593;
literal SS$_DEVALRALLOC = 1601;
literal SS$_REMOTE = 1609;
literal SS$_CONTROLC = 1617;
literal SS$_NOTMODIFIED = 1625;
literal SS$_RDDELDATA = 1633;
literal SS$_OVRDSKQUOTA = 1641;
literal SS$_OBSOLETE_1 = 1649;
literal SS$_FILEPURGED = 1657;
literal SS$_NOTALLPRIV = 1665;
literal SS$_SYNCH = 1673;
literal SS$_CONCEALED = 1681;
literal SS$_INCOMPAT = 1689;
literal SS$_DBGOPCREQ = 1697;
literal SS$_ALRDYCLOSED = 1705;
literal SS$_LNMCREATED = 1713;
literal SS$_ACEIDMATCH = 1721;
literal SS$_DBGEVENT = 1729;
literal SS$_REMOVED = 1737;
literal SS$_QUEUED = 1745;
literal SS$_SUBDISABLED = 1753;
literal SS$_FORGET = 1761;
literal SS$_PREPARED = 1769;
literal SS$_NOMOREITEMS = 1777;
literal SS$_VOLATILE = 1785;
literal SS$_CLASSUPER = 1793;
literal SS$_CONTINUE_64 = 1801;
literal SS$_THREAD_UPCALL = 1809;
literal SS$_CREATED_SHPT = 1817;
literal SS$_PERSONADELPEND = 1825;
literal SS$_DEVAVAIL = 1833;
literal SS$_LONGGAP = 1841;
literal SS$_BROKEN = 1849;
literal SS$_QPOOL_DEL_INIT = 1857;

literal SS$_ACCONFLICT = 2048;
literal SS$_BADCHKSUM = 2056;
literal SS$_BADFILEHDR = 2064;
literal SS$_BADFILENAME = 2072;
literal SS$_BADFILEVER = 2080;
literal SS$_BADIRECTORY = 2088;
literal SS$_CANCEL = 2096;
literal SS$_DATAOVERUN = 2104;
literal SS$_DEVALLOC = 2112;
literal SS$_DEVASSIGN = 2120;
literal SS$_DEVICEFULL = 2128;
literal SS$_DEVNOTALLOC = 2136;
literal SS$_DIRFULL = 2144;
literal SS$_DUPFILENAME = 2152;
literal SS$_ENDOFFILE = 2160;
literal SS$_ENDOFTAPE = 2168;
literal SS$_TMACTIVE = 2176;
literal SS$_FCPREADERR = 2184;
literal SS$_FCPREWNDERR = 2192;
literal SS$_FCPSPACERR = 2200;
literal SS$_FCPWRITERR = 2208;
literal SS$_FILELOCKED = 2216;
literal SS$_FILENUMCHK = 2224;
literal SS$_FILESEQCHK = 2232;
literal SS$_FILESTRUCT = 2240;
literal SS$_HEADERFULL = 2248;
literal SS$_IDXFILEFULL = 2256;
literal SS$_MBFULL = 2264;
literal SS$_NOHOMEBLK = 2272;
literal SS$_NONEXPR = 2280;
literal SS$_NONLOCAL = 2288;
literal SS$_NOHANDLER = 2296;
literal SS$_NOSIGNAL = 2304;
literal SS$_NOSUCHDEV = 2312;
literal SS$_NOSUCHFILE = 2320;
literal SS$_RESIGNAL = 2328;
literal SS$_UNWIND = 2336;
literal SS$_UNWINDING = 2344;
literal SS$_NOMOREFILES = 2352;
literal SS$_BEGOFFILE = 2360;
literal SS$_BLOCKCNTERR = 2368;
literal SS$_MUSTCLOSEFL = 2376;
literal SS$_WAITUSRLBL = 2384;
literal SS$_ILLUSRLBLRD = 2392;
literal SS$_ILLUSRLBLWT = 2400;
literal SS$_ILLLBLAST = 2408;
literal SS$_ENDOFUSRLBL = 2416;
literal SS$_NOSUCHSEC = 2424;
literal SS$_CLIFRCEXT = 2432;
literal SS$_FCPREPSTN = 2440;
literal SS$_TOOMANYVER = 2448;
literal SS$_NOTVOLSET = 2456;
literal SS$_ENDOFVOLUME = 2464;
literal SS$_NOMOREPROC = 2472;
literal SS$_NODEVAVL = 2480;
literal SS$_NOTQUEUED = 2488;
literal SS$_DGQINCOMP = 2496;
literal SS$_DIRALLOC = 2504;
literal SS$_ACLEMPTY = 2512;
literal SS$_NOENTRY = 2520;
literal SS$_NOMOREACE = 2528;
literal SS$_RIGHTSFULL = 2536;
literal SS$_VALNOTVALID = 2544;
literal SS$_ACLFULL = 2552;
literal SS$_NOMORENODE = 2560;
literal SS$_NOMORELOCK = 2568;
literal SS$_BEGOFTAPE = 2576;
literal SS$_OBJLOCKHELD = 2584;
literal SS$_CPUSTARTIP = 2592;
literal SS$_ALLSTARTED = 2600;
literal SS$_ALRDYSTRT = 2608;
literal SS$_ALRDYSTPPD = 2616;
literal SS$_NSTPPD = 2624;
literal SS$_UNKRESULT = 2632;
literal SS$_ITEMNOTFOUND = 2640;
literal SS$_NOMOREDEV = 2648;
literal SS$_EFNOTSET = 2656;
literal SS$_PRIMNOSTP = 2664;
literal SS$_BOOTREJECT = 2672;
literal SS$_RMTPATH = 2680;
literal SS$_OBJECT_EXISTS = 2688;
literal SS$_NOSUCHOBJECT = 2696;
literal SS$_NOVOLDESC = 2704;
literal SS$_NOPTBLDIR = 2712;
literal SS$_DRVEXISTS = 2720;
literal SS$_DEVEXISTS = 2728;
literal SS$_GOTO_UNWIND = 2736;
literal SS$_EXIT_UNWIND = 2744;
literal SS$_SMALLHEADER = 2752;
literal SS$_FDT_COMPL = 2760;
literal SS$_TARGET_UNWIND = 2768;
literal SS$_TARGET_GOTO_UNWIND = 2776;
literal SS$_RESIGNAL_64 = 2784;
literal SS$_NOMOREREG = 2792;
literal SS$_PAGNOTINREG = 2800;
literal SS$_REGISFULL = 2808;
literal SS$_PAGTYPVIO = 2816;
literal SS$_NOSUCHPAG = 2824;
literal SS$_PAGNOTWRITE = 2832;
literal SS$_NOMORETHREAD = 2840;
literal SS$_NOTF11ODS5 = 2848;
literal SS$_NOCONVJNL = 2856;
literal SS$_MPDEVBUSY = 2864;
literal SS$_MPDEVUSERDISABLE = 2872;
literal SS$_NOCPUMATCH = 2880;
literal SS$_NOMORECLIENTS = 2888;
literal SS$_NOMOREDEVICES = 2896;
literal SS$_NOMOREFILTERS = 2904;
literal SS$_NOMOREPATHS = 2912;
literal SS$_NOMORESERVERS = 2920;
literal SS$_FISH = 2928;
literal SS$_FILENOTCACHED = 2936;       

literal SS$_EOTIN = 3075;
literal SS$_CHAINW = 3083;
literal SS$_NOTINSEC = 3091;
literal SS$_NONXPAG = 3099;
literal SS$_LOGNAME = 3107;
literal SS$_CPUSTARTD = 3115;
literal SS$_CPUSTOPPING = 3123;
literal SS$_NOTALLCANCELED = 3131;
literal SS$_NOTHINGDONE = 3139;
literal SS$_EVTNOTENAB = 3147;
literal SS$_NOPATHTBL = 3155;
literal SS$_RESELECTION = 3163;
literal SS$_EMULATED = 3171;
literal SS$_REMDONE = 3179;
literal SS$_REMINPROG = 3187;
literal SS$_DEVCON = 3195;
literal SS$_DEVNOTCON = 3203;
literal SS$_CPUSELECTED = 3211;
literal SS$_QPOOL_DEL_INPRG = 3219;
literal SS$_PRESTO = 3227;

literal SS$_LINEABRT = 3586;
literal SS$_DEADLOCK = 3594;
literal SS$_NOLOCKID = 3602;
literal SS$_EXDEPTH = 3610;
literal SS$_PARTMAPPED = 3618;
literal SS$_CANCELGRANT = 3626;
literal SS$_RETRY = 3634;
literal SS$_BADACL = 3642;
literal SS$_ACEEXISTS = 3650;
literal SS$_UNSUPPORTED = 3658;
literal SS$_NORIGHTSDB = 3666;
literal SS$_LOGSTALL = 3674;
literal SS$_LOGFULL = 3682;
literal SS$_PWDINDIC = 3690;
literal SS$_PWDINHIS = 3698;
literal SS$_PWDWEAK = 3706;
literal SS$_USEGENPWD = 3714;
literal SS$_INVBUSNAM = 3722;
literal SS$_INVCOMPTYPE = 3730;
literal SS$_INVCOMPID = 3738;
literal SS$_INVCOMPLIST = 3746;
literal SS$_NOCOMPLSTS = 3754;
literal SS$_INVSECDOMAIN = 3762;
literal SS$_BADCHECKSUM = 3770;
literal SS$_ARBTOOBIG = 3778;
literal SS$_ORBTOOBIG = 3786;
literal SS$_INVAJLNAM = 3794;
literal SS$_TOOMANYAJL = 3802;
literal SS$_RSDMINUSE = 3810;
literal SS$_RSDMNOTFOU = 3818;
literal SS$_INVUICGRP = 3826;
literal SS$_RSDM_ACTIVE = 3834;
literal SS$_OBJLOCKED = 3842;
literal SS$_NOTMPNAM = 3850;
literal SS$_INVCLSITM = 3858;
literal SS$_NOTSHRTBL = 3866;
literal SS$_MMATORB = 3874;
literal SS$_NOSUCHVOL = 3882;
literal SS$_OBJNOTLOCKED = 3890;
literal SS$_ILLRSDM = 3898;
literal SS$_NOCLASSSUPPORT = 3906;
literal SS$_INVSECOPER = 3914;
literal SS$_NODELJNLACT = 3922;
literal SS$_INVFILFOROP = 3930;
literal SS$_NOOBJSRV = 3938;
literal SS$_NOFILEACCESS = 3946;
literal SS$_BADFILESIZE = 3954;
literal SS$_NOTFULLYMAPPED = 3962;
literal SS$_BADWINCNT = 3970;
literal SS$_BADWINLBN = 3978;
literal SS$_BADWINRVN = 3986;
literal SS$_EXTRAWINDOW = 3994;
literal SS$_REVISED = 4002;
literal SS$_TIMENOTSET = 4010;
literal SS$_WAIT_CALLERS_MODE = 4018;
literal SS$_NOT_LOADED = 4026;
literal SS$_DRV_NOUNLOAD = 4034;
literal SS$_INVARG = 4042;
literal SS$_QIO_CROCK = 4050;
literal SS$_ALTER = 4058;
literal SS$_AFR_ENABLED = 4066;
literal SS$_AFR_NOT_ENABLED = 4074;
literal SS$_SHELFERROR = 4082;
literal SS$_PERSONANONGRATA = 4090;     

literal SS$_NOTASSUMING = 11266;
literal SS$_ALREADYASSUMING = 11274;
literal SS$_INUSE = 11282;
literal SS$_USERDISABLED = 11290;
literal SS$_NOCHJIB = 11298;
literal SS$_NOTSUPFS = 11306;
literal SS$_INSFTHREADS = 11314;
literal SS$_NOBUFOBJID = 11322;
literal SS$_NODELPERMANENT = 11330;
literal SS$_NOMEMRESID = 11338;
literal SS$_MRES_PFNSMALL = 11346;
literal SS$_MRES_INCON = 11354;
literal SS$_NORESERVEDMEM = 11362;
literal SS$_RESERVEDMEMUSED = 11370;
literal SS$_RES_MEM_INCON = 11378;
literal SS$_NOSHPTS = 11386;
literal SS$_FLUSHFAIL = 11394;
literal SS$_NOTINSTALLED = 11402;
literal SS$_POOLDEVEXISTS = 11410;
literal SS$_NOUNITS = 11418;
literal SS$_NOTAPOOL = 11426;
literal SS$_MISSINGUNITS = 11434;
literal SS$_DISKDEVEXISTS = 11442;
literal SS$_TOOMANYUNITS = 11450;
literal SS$_NOTINPOOL = 11458;
literal SS$_WRONGPOOL = 11466;
literal SS$_ALRBOUND = 11474;
literal SS$_NOTPOOLMOUNTED = 11482;
literal SS$_POOLINUSE = 11490;
literal SS$_DISKINUSE = 11498;
literal SS$_SDDISABLED = 11506;
literal SS$_UNITINPOOL = 11514;
literal SS$_FAMILYTOOBIG = 11522;
literal SS$_NODISKNAME = 11530;
literal SS$_DISKNAMEEXISTS = 11538;
literal SS$_INSUFFREESEGS = 11546;
literal SS$_NOTBOUND = 11554;
literal SS$_TOOMANYFRAGS = 11562;
literal SS$_TOOMANYFAMILIES = 11570;
literal SS$_DISKISBOUND = 11578;
literal SS$_SNAPINFAM = 11586;
literal SS$_CHKSNAPVER = 11594;
literal SS$_BADSNAPVER = 11602;
literal SS$_SD_RESERVED4 = 11610;
literal SS$_SD_RESERVED5 = 11618;
literal SS$_SECREFOVF = 11626;
literal SS$_DATAERR = 11634;
literal SS$_INVPFN = 11642;
literal SS$_INV_SHMEM = 11650;
literal SS$_INV_SHM_CPP = 11658;
literal SS$_INV_SHM_REG = 11666;
literal SS$_ONEMAPPER = 11674;
literal SS$_NOSUCHEXT = 11682;
literal SS$_CBKEXISTS = 11690;
literal SS$_NOSUCHCBK = 11698;
literal SS$_NOTAMEMBER = 11706;
literal SS$_GLXSPIUNAVAIL = 11714;
literal SS$_MPDEVILLCURPATH = 11722;
literal SS$_MPDEVINCOMPAT = 11730;
literal SS$_MPDEVNOT = 11738;
literal SS$_MPDEVNOTCONF = 11746;
literal SS$_PERSONARESERVED = 11754;
literal SS$_WRONGDRV = 11762;
literal SS$_BADRAD = 11770;
literal SS$_INVQSRFNC = 11778;
literal SS$_NOQIOSERVER = 11786;
literal SS$_INCLASS = 11794;
literal SS$_INVBOOTDEV = 11802;
literal SS$_CLIENT_UNAVAILABLE = 11810;
literal SS$_CONFIGFILE_ERROR = 11818;
literal SS$_INVDEVALLOC = 11826;
literal SS$_DEVICE_UNAVAILABLE = 11834;
literal SS$_INVDEVMOUNT = 11842;
literal SS$_LOGGING_DISABLED = 11850;
literal SS$_NOSUCHCLIENT = 11858;
literal SS$_NOSUCHDEVICE = 11866;
literal SS$_NOSUCHFILTER = 11874;
literal SS$_NOSUCHPATH = 11882;
literal SS$_NOSUCHSERVER = 11890;
literal SS$_RQSTIMOUT = 11898;
literal SS$_SERVER_UNAVAILABLE = 11906;
literal SS$_QSRVINTERR = 11914;
literal SS$_NOADD = 11922;
literal SS$_SYSTEMUIC = 11930;
literal SS$_NOSUCHQPOOLID = 11938;
literal SS$_PATHAMBIG = 11946;
literal SS$_INVMVIP = 11954;
literal SS$_NOPATHAVAIL = 11962;
literal SS$_NOENACURINV = 11970;
literal SS$_TRUSTCONF = 11978;          

literal SS$_NOPRIVSTRT = 10240;
literal SS$_NODETACH = 10284;
literal SS$_NOCMKRNL = 10244;
literal SS$_NOCMEXEC = 10252;
literal SS$_NOSYSNAM = 10260;
literal SS$_NOGRPNAM = 10268;
literal SS$_NOALLSPOOL = 10276;
literal SS$_NOIMPERSONATE = 10284;
literal SS$_NODIAGNOSE = 10292;
literal SS$_NOLOG_IO = 10300;
literal SS$_NOGROUP = 10308;
literal SS$_NOACNT = 10316;
literal SS$_NOPRMCEB = 10324;
literal SS$_NOPRMMBX = 10332;
literal SS$_NOPSWAPM = 10340;
literal SS$_NOALTPRI = 10348;
literal SS$_NOSETPRV = 10356;
literal SS$_NOTMPMBX = 10364;
literal SS$_NOWORLD = 10372;
literal SS$_NOMOUNT = 10380;
literal SS$_NOOPER = 10388;
literal SS$_NOEXQUOTA = 10396;
literal SS$_NONETMBX = 10404;
literal SS$_NOVOLPRO = 10412;
literal SS$_NOPHY_IO = 10420;
literal SS$_NOBUGCHK = 10428;
literal SS$_NOPRMGBL = 10436;
literal SS$_NOSYSGBL = 10444;
literal SS$_NOPFNMAP = 10452;
literal SS$_NOSHMEM = 10460;
literal SS$_NOSYSPRV = 10468;
literal SS$_NOBYPASS = 10476;
literal SS$_NOSYSLCK = 10484;
literal SS$_NOSHARE = 10492;
literal SS$_NOUPGRADE = 10500;
literal SS$_NODOWNGRADE = 10508;
literal SS$_NOGRPPRV = 10516;
literal SS$_NOREADALL = 10524;
literal SS$_NOIMPORT = 10532;
literal SS$_NOAUDIT = 10540;
literal SS$_NOSECURITY = 10548;
literal SS$_NOPRIVEND = 10751;

literal SS$_EXQUOTASTRT = 10752;
literal SS$_EXASTLM = 10756;
literal SS$_EXBIOLM = 10764;
literal SS$_EXBYTLM = 10772;
literal SS$_EXDIOLM = 10780;
literal SS$_EXFILLM = 10788;
literal SS$_EXPGFLQUOTA = 10796;
literal SS$_EXPRCLM = 10804;
literal SS$_EXTQELM = 10812;
literal SS$_EXENQLM = 10820;
literal SS$_EXBUFOBJLM = 11004;
literal SS$_EXQUOTAEND = 11007;

literal SS$_MMSFAILED = 11012;
literal SS$_QPOOL_DEL_BUSY = 11020;

literal SS$_TOOFEWDEV = 11032;
literal SS$_AVRWAIT = 11040;

literal SS$_NO_MMS = 11075;
literal SS$_MMSREADY = 11083;
literal SS$_MMSNOTREADY = 11091;
literal SS$_SKIP_CHECKS = 11099;
literal SS$_NO_NOTIFY = 11107;
literal SS$_SKIP_EXPIRATION = 11115;
literal SS$_NOTATBOT = 11123;
literal SS$_PREVDENS = 11131;

literal SS$_RDBERR = 11140;
literal SS$_MDMSERR = 11148;
literal SS$_IVMEDTYP = 11156;
literal SS$_IVDENS = 11164;
literal SS$_IVPOOL = 11172;
literal SS$_IVEXPDAT = 11180;
literal SS$_NOCONFMEDIA = 11188;
literal SS$_PTE_NOT_EMPTY = 11196;
literal SS$_CPUNOTAVAIL = 11204;
literal SS$_NOFASTPATH = 11212;
literal SS$_EXITFORCED = 11220;
literal SS$_FORCEX = 11228;

literal SS$_SYSAPMIN = 32256;
literal SS$_SYSAPMAX = 32767;

KEYWORDMACRO   	
	$START_OF_PAGE	(SOURCE_VA, DEST_VA, USER_MASK_ADDR)=

	%if	%NULL(user_mask_addr)
	%then
		BEGIN
		%if	VAXPAGE
		%then
			BEGIN
			%if	%NULL(dest_va)
			%then
					source_va = .source_va AND (NOT MMG$C_VAX_PAGE_SIZE-1);
			%else	
                                        dest_va = .source_va AND (NOT MMG$C_VAX_PAGE_SIZE-1);
			%fi	
			END
		%fi	
		%if	BIGPAGE
		%then
			BEGIN
			%if	%NULL(dest_va)
			%then
					source_va = .source_va AND (NOT .MMG$GL_BWP_MASK);
			%else	
					dest_va = .source_va AND (NOT .MMG$GL_BWP_MASK);
			%fi	
			END
		%fi	
		END
	%else	
		BEGIN
		%if	%NULL(dest_va)
		%then
					source_va = .source_va AND (NOT .user_mask_addr);
		%else	
					dest_va = .source_va AND (NOT .user_mask_addr);
		%fi	
		END
	%fi	
	%;
KEYWORDMACRO
	$NEXT_PAGE	(SOURCE_VA, DEST_VA, CLEARBWP=NO, USER_PAGESIZE_ADDR, USER_MASK_ADDR)=

	%IF	%NULL(user_pagesize_addr)
	%THEN
		BEGIN
		%IF	VAXPAGE
		%THEN
			BEGIN
			%IF	%NULL(dest_va)
			%THEN
				BEGIN
					source_va = .source_va + MMG$C_VAX_PAGE_SIZE;
				%IF	%IDENTICAL(CLEARBWP,YES)
				%THEN
					source_va = .source_va AND (NOT MMG$C_VAX_PAGE_SIZE-1);
				%FI	
				END
			%ELSE	
				BEGIN
					dest_va = .source_va + MMG$C_VAX_PAGE_SIZE;
				%IF	%IDENTICAL(CLEARBWP,YES)
				%THEN
					dest_va = .dest_va AND (NOT MMG$C_VAX_PAGE_SIZE-1);
				%FI	
				END
			%FI	
			END
		%FI	
		%IF	BIGPAGE
		%THEN
			BEGIN
			%IF	%NULL(dest_va)
			%THEN
				BEGIN
					source_va = .source_va + .MMG$GL_PAGE_SIZE;
				%IF	%IDENTICAL(CLEARBWP,YES)
				%THEN
					source_va = .source_va AND (NOT .MMG$GL_BWP_MASK);
				%FI	
				END
			%ELSE	
				BEGIN
					dest_va = .source_va + .MMG$GL_PAGE_SIZE;
				%IF	%IDENTICAL(CLEARBWP,YES)
				%THEN
					dest_va = .dest_va AND (NOT .MMG$GL_BWP_MASK);
				%FI	
				END
			%FI	
			END
		%FI	
		END
	%ELSE	
		BEGIN
		%IF	%NULL(dest_va)
		%THEN
			BEGIN
					source_va = .source_va + user_pagesize_addr;
			%IF	%IDENTICAL(CLEARBWP,YES)
			%THEN
				BEGIN
				%IF	%NULL(user_mask_addr)
				%THEN
					source_va = .source_va AND (NOT (.user_pagesize_addr - 1));
				%ELSE	
					source_va = .source_va AND (NOT .user_mask_addr);
				%FI	
				END
			%FI	
			END
		%ELSE	
			BEGIN
					dest_va = .source_va + .user_pagesize_addr;
			%IF	%IDENTICAL(CLEARBWP,YES)
			%THEN
				BEGIN
				%IF	%NULL(user_mask_addr)
				%THEN
					dest_va = .dest_va AND (NOT (.user_pagesize_addr - 1));
				%ELSE	
					dest_va = .dest_va AND (NOT .user_mask_addr);
				%FI	
				END
			%FI	
			END
		%FI	
		END
	%FI	
	%;
KEYWORDMACRO
	$PREVIOUS_PAGE	(SOURCE_VA, DEST_VA, CLEARBWP=NO, USER_PAGESIZE_ADDR, USER_MASK_ADDR)=

	%IF	%NULL(user_pagesize_addr)
	%THEN
		BEGIN
		%IF	VAXPAGE
		%THEN
			BEGIN
			%IF	%NULL(dest_va)
			%THEN
				BEGIN
					source_va = .source_va - MMG$C_VAX_PAGE_SIZE;
				%IF	%IDENTICAL(CLEARBWP,YES)
				%THEN
					source_va = .source_va AND (NOT MMG$C_VAX_PAGE_SIZE-1);
				%FI	
				END
			%ELSE	
				BEGIN
					dest_va = .source_va - MMG$C_VAX_PAGE_SIZE;
				%IF	%IDENTICAL(CLEARBWP,YES)
				%THEN
					dest_va = .dest_va AND (NOT MMG$C_VAX_PAGE_SIZE-1);
				%FI	
				END
			%FI	
			END
		%FI	
		%IF	BIGPAGE
		%THEN
			BEGIN
			%IF	%NULL(dest_va)
			%THEN
				BEGIN
					source_va = .source_va - .MMG$GL_PAGE_SIZE;
				%IF	%IDENTICAL(CLEARBWP,YES)
				%THEN
					source_va = .source_va AND (NOT .MMG$GL_BWP_MASK);
				%FI	
				END
			%ELSE	
				BEGIN
					dest_va = .source_va - .MMG$GL_PAGE_SIZE;
				%IF	%IDENTICAL(CLEARBWP,YES)
				%THEN
					dest_va = .dest_va AND (NOT .MMG$GL_BWP_MASK);
				%FI	
				END
			%FI	
			END
		%FI	
		END
	%ELSE	
		BEGIN
		%IF	%NULL(dest_va)
		%THEN
			BEGIN
					source_va = .source_va - user_pagesize_addr;
			%IF	%IDENTICAL(CLEARBWP,YES)
			%THEN
				BEGIN
				%IF	%NULL(user_mask_addr)
				%THEN
					source_va = .source_va AND (NOT (.user_pagesize_addr - 1));
				%ELSE	
					source_va = .source_va AND (NOT .user_mask_addr);
				%FI	
				END
			%FI	
			END
		%ELSE	
			BEGIN
					dest_va = .source_va - .user_pagesize_addr;
			%IF	%IDENTICAL(CLEARBWP,YES)
			%THEN
				BEGIN
				%IF	%NULL(user_mask_addr)
				%THEN
					dest_va = .dest_va AND (NOT (.user_pagesize_addr - 1));
				%ELSE	
					dest_va = .dest_va AND (NOT .user_mask_addr);
				%FI	
				END
			%FI	
			END
		%FI	
		END
	%FI	
	%;
KEYWORDMACRO
	$PAGES_TO_BYTES	(SOURCE_PAGCNT, DEST_BYTCNT, LEFTSHIFT)=

	%IF	%NULL(leftshift)
	%THEN
		%IF	VAXPAGE
		%THEN
			%IF	%NULL(dest_bytcnt)
			%THEN
					source_pagcnt = .source_pagcnt ^ VA$V_VPN;
			%ELSE
					dest_bytcnt = .source_pagcnt ^ VA$V_VPN;
			%FI
		%FI
		%IF	BIGPAGE
		%THEN
			%IF	%NULL(dest_bytcnt)
			%THEN
					source_pagcnt = .source_pagcnt ^ .MMG$GL_VPN_TO_VA;
			%ELSE
					dest_bytcnt = .source_pagcnt ^ .MMG$GL_VPN_TO_VA;
			%FI
		%FI
	%ELSE	
		%IF	%NULL(dest_bytcnt)
		%THEN
					source_pagcnt = .source_pagcnt ^ .leftshift;
		%ELSE
					dest_bytcnt = .source_pagcnt ^ .leftshift;
		%FI
	%FI	
	%;
KEYWORDMACRO
	$BYTES_TO_PAGES	(SOURCE_BYTCNT, DEST_PAGCNT, RIGHTSHIFT, ROUNDUP=YES)=

	%IF	%IDENTICAL(ROUNDUP,YES)
	%THEN
		BEGIN
		%IF	%NULL(rightshift)
		%THEN
			BEGIN
			%IF	VAXPAGE
			%THEN
				BEGIN
				%IF	%NULL(dest_pagcnt)
				%THEN
					source_bytcnt = (.source_bytcnt + MMG$C_VAX_PAGE_SIZE-1) ^ -VA$V_VPN;
				%ELSE    
					dest_pagcnt = (.source_bytcnt + MMG$C_VAX_PAGE_SIZE-1) ^ -VA$V_VPN;
				%FI   
				END
			%FI	
			%IF	BIGPAGE
			%THEN
				BEGIN
				%IF	%NULL(dest_pagcnt)
				%THEN
		    			source_bytcnt = (.source_bytcnt + .MMG$GL_BWP_MASK) ^ .MMG$GL_VA_TO_VPN;
				%ELSE    
					dest_pagcnt = (.source_bytcnt + .MMG$GL_BWP_MASK) ^ .MMG$GL_VA_TO_VPN;
				%FI   
				END
			%FI	
			END
		%ELSE	
		%ERROR('Inconsistent Macro invocation')
		%FI	
		END
	%ELSE    
		BEGIN
		%IF	%IDENTICAL(ROUNDUP,NO)
		%THEN
			BEGIN
			%IF	%NULL(rightshift)
			%THEN
				BEGIN
				%IF	VAXPAGE
				%THEN
					%IF	%NULL(dest_pagcnt)
					%THEN
		    			source_bytcnt = .source_bytcnt ^ -VA$V_VPN;
					%ELSE    
		    			dest_pagcnt = .source_bytcnt ^ -VA$V_VPN;
					%FI   
				%FI	
				%IF	%DECLARED(bigpage)
				%THEN
					%IF	%NULL(dest_pagcnt)
					%THEN
		    			source_bytcnt = .source_bytcnt ^ .MMG$GL_VA_TO_VPN;
					%ELSE    
		    			dest_pagcnt = .source_bytcnt ^ .MMG$GL_VA_TO_VPN;
					%FI   
				%FI	
				END
			%ELSE	
				%IF	%NULL(dest_pagcnt)
				%THEN
		    			source_bytcnt = .source_bytcnt ^ .rightshift;
				%ELSE	
		    			dest_pagcnt = .source_bytcnt ^ .rightshift;
				%FI	
			%FI	
			END
		%ELSE	
			BEGIN
			%IF	VAXPAGE
			%THEN
				%IF	%NULL(dest_pagcnt)
				%THEN
		    			source_bytcnt = (.source_bytcnt + .roundup) ^ -VA$V_VPN;
				%ELSE    
		    			dest_pagcnt = (.source_bytcnt + .roundup) ^ -VA$V_VPN;
				%FI	
			%FI   
			%IF	BIGPAGE
			%THEN
				%IF	%NULL(dest_pagcnt)
				%THEN
		    			source_bytcnt = (.source_bytcnt + .roundup) ^ .MMG$GL_VA_TO_VPN;
				%ELSE    
		    			dest_pagcnt = (.source_bytcnt + .roundup) ^ .MMG$GL_VA_TO_VPN;
				%FI   
			%FI   
			END
		%FI	
		END
	%FI	
	%;
KEYWORDMACRO
	$ROUND_RETADR	(RETADR, FULL_RANGE, USER_MASK_ADDR, DIRECTION=ASCENDING)=

	%IF	%IDENTICAL(DIRECTION,ASCENDING)
	%THEN
		%IF	%NULL(user_mask_addr)
		%THEN
			BEGIN
			%IF	VAXPAGE
			%THEN
				BEGIN
					full_range = .retadr AND (NOT MMG$C_VAX_PAGE_SIZE-1);
					full_range+4 = .(retadr+4) OR MMG$C_VAX_PAGE_SIZE-1;
				END
			%FI	
			%IF	BIGPAGE
			%THEN
				BEGIN
					full_range = .retadr AND (NOT .MMG$GL_BWP_MASK);
					full_range+4 = .(retadr+4) OR .MMG$GL_BWP_MASK;
				END
			%FI	
			END
		%ELSE	
			BEGIN
					full_range = .retadr AND (NOT .user_mask_addr);
					full_range+4 = .(retadr+4) OR .user_mask_addr;
			END
		%FI	
	%FI	
	%IF	%IDENTICAL(DIRECTION,DESCENDING)
	%THEN
		%IF	%NULL(user_mask_addr)
		%THEN
			BEGIN
			%IF	VAXPAGE
			%THEN
				BEGIN
					full_range+4 = .(retadr+4) AND (NOT MMG$C_VAX_PAGE_SIZE-1);
					full_range = .retadr OR MMG$C_VAX_PAGE_SIZE-1;
				END
			%FI	
			%IF	BIGPAGE
			%THEN
				BEGIN
					full_range+4 = .(retadr+4) AND (NOT .MMG$GL_BWP_MASK);
					full_range = .retadr OR .MMG$GL_BWP_MASK;
				END
			%FI	
			END
		%ELSE	
			BEGIN
					full_range+4 = .(retadr+4) AND (NOT .user_mask_addr);
					full_range = .retadr OR .user_mask_addr;
			END
		%FI	
	%FI	
	%IF	%IDENTICAL(DIRECTION,UNKNOWN)
	%THEN
		%IF	%NULL(user_mask_addr)
		%THEN
			BEGIN
			%IF	VAXPAGE
			%THEN
				BEGIN
					IF .(retadr+4) GTRA .retadr
					THEN
					BEGIN
					full_range = .retadr AND (NOT MMG$C_VAX_PAGE_SIZE-1);
					full_range+4 = .(retadr+4) OR MMG$C_VAX_PAGE_SIZE-1;
					END
					ELSE
					BEGIN
					full_range+4 = .(retadr+4) AND (NOT MMG$C_VAX_PAGE_SIZE-1);
					full_range = .retadr OR MMG$C_VAX_PAGE_SIZE-1;
					END
				END
			%FI	
			%IF	BIGPAGE
			%THEN
				BEGIN
					IF .(retadr+4) GTRA .retadr
					THEN
					BEGIN
					full_range = .retadr AND (NOT .MMG$GL_BWP_MASK);
					full_range+4 = .(retadr+4) OR .MMG$GL_BWP_MASK;
					END
					ELSE
					BEGIN
					full_range+4 = .(retadr+4) AND (NOT .MMG$GL_BWP_MASK);
					full_range = .retadr OR .MMG$GL_BWP_MASK;
					END
				END
			%FI	
			END
		%ELSE	
			BEGIN
					IF .(retadr+4) GTRA .retadr
					THEN
					BEGIN
					full_range = .retadr AND (NOT .user_mask_addr);
					full_range+4 = .(retadr+4) OR .user_mask_addr;
					END
					ELSE
					BEGIN
					full_range+4 = .(retadr+4) AND (NOT .user_mask_addr);
					full_range = .retadr OR .user_mask_addr;
					END
			END
		%FI	
	%FI	
	%;
KEYWORDMACRO
$IS_32BITS (ARG)=

BEGIN
	LOCAL	temp: SIGNED LONG;    
	
	temp = arg;
	
	(arg EQLU .temp) 
END%;
                                                       
KEYWORDMACRO   	
	$IS_P0_VA (VA)=

($IS_32BITS (arg=va) AND 
((va AND VA$M_P1) NEQ VA$M_P1) AND 
((va AND VA$M_SYSTEM) NEQ VA$M_SYSTEM))
%;
                                                       
KEYWORDMACRO   	
	$IS_P1_VA (VA)=

($IS_32BITS (arg=va) AND 
((va AND VA$M_P1) EQL VA$M_P1) AND 
((va AND VA$M_SYSTEM) NEQ VA$M_SYSTEM))
%;
                                                       
KEYWORDMACRO   	
	$IS_P2_VA (VA,PROCESS_LIMIT)=

(NOT $IS_32BITS (arg=va) AND 
%IF %NULL (process_limit) 
%THEN
(va LSSU .mmg$gq_process_space_limit))
%ELSE
(va LSSU process_limit))
%FI
%;
                                                       
KEYWORDMACRO   	
	$IS_PROCESS_VA (VA,PROCESS_LIMIT)=

%IF %NULL (process_limit) 
%THEN
(va LSSU .mmg$gq_process_space_limit)
%ELSE
(va LSSU process_limit)
%FI
%;
                                                       
KEYWORDMACRO   	
	$IS_S2_VA (VA,SYSTEM_BASE)=

(NOT $IS_32BITS (arg=va) AND 
%IF %NULL (system_base)
%THEN
(va GEQU .mmg$gq_system_virtual_base))
%ELSE
(va GEQU system_base))
%FI
%;
                                                       
KEYWORDMACRO   	
	$IS_S0S1_VA (VA)=

($IS_32BITS (arg=va) AND 
((va AND VA$M_SYSTEM) EQL VA$M_SYSTEM))
%;
                                                       
KEYWORDMACRO   	
	$IS_SYSTEM_VA (VA,SYSTEM_BASE)=

%IF %NULL (system_base)
%THEN
(va GEQU .mmg$gq_system_virtual_base)
%ELSE
(va GEQU system_base)
%FI
%;

MACRO
    DEFINE_MACRO(name, auxiliary, arguments, code) =
	MACRO
	    name =
		%QUOTE %IF NOT %DECLARED(%QUOTE %QUOTE %QUOTE %QUOTE auxiliary)
		%QUOTE %THEN
			BARRIER;
		    MACRO
			auxiliary arguments =
			    code
			    %QUOTE %QUOTE %QUOTE %;
		    BUILTIN
		        BARRIER
		%QUOTE %ELSE
		    auxiliary
		%QUOTE %FI %QUOTE % ;
	%;

MACRO
    CHECK_SYMBOL(mname, symbol) =
%QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %IF
%QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %DECLARED(
	%QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE
	%QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE
	%QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE
	%QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE symbol)
%QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %THEN
	%QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE
		%WARN( %QUOTE %STRING(
			'Symbol ',
			%QUOTE %QUOTE symbol,
			' conflicts with symbol used inside macro ',
			%QUOTE %QUOTE mname
		))
%QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %QUOTE %FI %;

MACRO
    DEFINE_ROUTINE(name, auxiliary) =
        MACRO
            name =
                %QUOTE %IF NOT %DECLARED(%QUOTE %QUOTE %QUOTE %QUOTE auxiliary)
                %QUOTE %THEN
                        BARRIER;
		    LITERAL
			%NAME('-SEEN-',%QUOTE %QUOTE %QUOTE %QUOTE name) = 1;
                    EXTERNAL ROUTINE
                        auxiliary : ADDRESSING_MODE(GENERAL);
                    BUILTIN
                        BARRIER
                %QUOTE %ELSE
                    auxiliary
                %QUOTE %FI %QUOTE % ;
        %;
DEFINE_ROUTINE(CALLG, BLI$CALLG)

MACRO
    DEFINE_BUILTIN (builtin_name) =
        %IF NOT %DECLARED (%NAME('-SEEN-', %QUOTE %QUOTE builtin_name))
        %THEN
            BUILTIN builtin_name;
        %FI
    %;

%IF 0 %THEN		
DEFINE_ROUTINE(PAL_MFPR_ASTEN, SYS$PAL_MFPR_ASTEN)
DEFINE_ROUTINE(PAL_MTPR_ASTEN, SYS$PAL_MTPR_ASTEN)
DEFINE_ROUTINE(PAL_MFPR_ASTSR, SYS$PAL_MFPR_ASTSR)
DEFINE_ROUTINE(PAL_MTPR_ASTSR, SYS$PAL_MTPR_ASTSR)
DEFINE_ROUTINE(PAL_MTPR_DATFX, SYS$PAL_MTPR_DATFX)
DEFINE_ROUTINE(PAL_MFPR_ESP, SYS$PAL_MFPR_ESP)
DEFINE_ROUTINE(PAL_MTPR_ESP, SYS$PAL_MTPR_ESP)
DEFINE_ROUTINE(PAL_MFPR_FEN, SYS$PAL_MFPR_FEN)
DEFINE_ROUTINE(PAL_MTPR_FEN, SYS$PAL_MTPR_FEN)
DEFINE_ROUTINE(PAL_MTPR_IPIR, SYS$PAL_MTPR_IPIR)
DEFINE_ROUTINE(PAL_MFPR_IPL, SYS$PAL_MFPR_IPL)
DEFINE_ROUTINE(PAL_MTPR_IPL, SYS$PAL_MTPR_IPL)
DEFINE_ROUTINE(PAL_MFPR_MCES, SYS$PAL_MFPR_MCES)
DEFINE_ROUTINE(PAL_MTPR_MCES, SYS$PAL_MTPR_MCES)
DEFINE_ROUTINE(PAL_MFPR_PRBR, SYS$PAL_MFPR_PRBR)
DEFINE_ROUTINE(PAL_MTPR_PRBR, SYS$PAL_MTPR_PRBR)
DEFINE_ROUTINE(PAL_MTPR_SIRR, SYS$PAL_MTPR_SIRR)
DEFINE_ROUTINE(PAL_MFPR_SISR, SYS$PAL_MFPR_SISR)
DEFINE_ROUTINE(PAL_MFPR_SSP, SYS$PAL_MFPR_SSP)
DEFINE_ROUTINE(PAL_MTPR_SSP, SYS$PAL_MTPR_SSP)
DEFINE_ROUTINE(PAL_MTPR_TBIA, SYS$PAL_MTPR_TBIA)
DEFINE_ROUTINE(PAL_MTPR_TBIAP, SYS$PAL_MTPR_TBIAP)
DEFINE_ROUTINE(PAL_MTPR_TBIS, SYS$PAL_MTPR_TBIS)
DEFINE_ROUTINE(PAL_MTPR_TBISD, SYS$PAL_MTPR_TBISD)
DEFINE_ROUTINE(PAL_MTPR_TBISI, SYS$PAL_MTPR_TBISI)
DEFINE_ROUTINE(PAL_MFPR_USP, SYS$PAL_MFPR_USP)
DEFINE_ROUTINE(PAL_MTPR_USP, SYS$PAL_MTPR_USP)
DEFINE_ROUTINE(PAL_MFPR_WHAMI, SYS$PAL_MFPR_WHAMI)
DEFINE_ROUTINE(PAL_IMB, SYS$PAL_IMB)
DEFINE_ROUTINE(PAL_PROBER, SYS$PAL_PROBER)
DEFINE_ROUTINE(PAL_PROBEW, SYS$PAL_PROBEW)
DEFINE_ROUTINE(PAL_RD_PS, SYS$PAL_RD_PS)
DEFINE_ROUTINE(PAL_SWASTEN, SYS$PAL_SWASTEN)
DEFINE_ROUTINE(PAL_WR_PS_SW, SYS$PAL_WR_PS_SW)
DEFINE_ROUTINE(PAL_READ_UNQ, SYS$PAL_READ_UNQ)
DEFINE_ROUTINE(PAL_WRITE_UNQ, SYS$PAL_WRITE_UNQ)
DEFINE_ROUTINE(PAL_HALT, SYS$PAL_HALT)
DEFINE_ROUTINE(PAL_CFLUSH, SYS$PAL_CFLUSH)
DEFINE_ROUTINE(PAL_LDQP, SYS$PAL_LDQP)
DEFINE_ROUTINE(PAL_STQP, SYS$PAL_STQP)
DEFINE_MACRO (PAL_RSCC, $PAL_RSCC, ,
		(BUILTIN GETREG;
		 GETREG (IA64_REG$_AR_ITC)
		)
	     )	
DEFINE_MACRO (PAL_BUGCHK, $PAL_BUGCHK, (BREAKCODE),
		(BUILTIN BREAK2;
		 BREAK2(BREAK$C_SYS_BUGCHECK,BREAKCODE)
		)
	     )
              
DEFINE_MACRO (PAL_GENTRAP, $PAL_GENTRAP, (BREAKCODE),
		(BUILTIN BREAK2;
		 BREAK2(BREAK$C_SYS_GENTRAP,BREAKCODE)
		)
	     )
              
DEFINE_MACRO (PAL_BPT, $PAL_BPT, ,
		(BUILTIN BREAK;		
		 BREAK (BREAK$C_DBG_PAL_BPT)
		)
	     )
DEFINE_MACRO (PAL_CHMU, $PAL_CHMU, ,
		(BUILTIN BREAK;		
		 BREAK (BREAK$C_SYS_CHMU)
		)
	     )
DEFINE_MACRO (PAL_CHMS, $PAL_CHMS, ,
		(BUILTIN BREAK;		
		 BREAK (BREAK$C_SYS_CHMS)
		)
	     )
%FI
%IF 0 %THEN

%FI
UNDECLARE
    %QUOTE CHECK_SYMBOL,
    %QUOTE DEFINE_MACRO,
    %QUOTE DEFINE_ROUTINE;

LITERAL
	CRF$K_TBLSIZE = 96,				
	CRF$K_FIELDSIZE = 12,				
	CRF$K_ASCIC = 0,				
	CRF$K_BIN_U32 = 1,				

	CRF$K_VALUES = 0,				
	CRF$K_VALS_REFS = 1,				
	CRF$K_DEFS_REFS = 2,				
	CRF$K_DELETE = 0,				
	CRF$K_SAVE = 1,					
	CRF$K_REF = 0,					
	CRF$K_DEF = 1;					

KEYWORDMACRO
	$CRFCTLTABLE(KEYTYPE=ASCIC,ERROR=0,OUTPUT=0,
			MEMEXP=50,
			KEY1TABLE=0, KEY2TABLE=0,
			VAL1TABLE=0, VAL2TABLE=0,
			REF1TABLE=0, REF2TABLE=0)=
		BLOCK[CRF$K_TBLSIZE,BYTE] ALIGN(0)	
			INITIAL(LONG(0),		
				LONG(0),		
				BYTE(%NAME('CRF$K_',KEYTYPE),
					0,0,0),		
				    LONG(0),		
				    LONG(0,0),		
				    LONG(MEMEXP*512),	
				    LONG(MEMEXP),	
				    LONG(0,0,0,0,0,0,0,0), 
				    ERROR,		
				    OUTPUT,		
				    KEY1TABLE,		
				    KEY2TABLE,		
				    VAL1TABLE,		
							
				    VAL2TABLE,		
							
				    REF1TABLE,		
							
				    REF2TABLE)%,	
							

	$CRFFIELD(BIT_MASK=0,FAO_STRING,SET_CLEAR=1,FIELD_WIDTH)=
	BLOCK[CRF$K_FIELDSIZE,BYTE]
		INITIAL(WORD(BIT_MASK OR %X'8000'),	
			BYTE(SET_CLEAR),		
			BYTE(FIELD_WIDTH),		
			LONG(%CHARCOUNT(FAO_STRING)),	
			LONG(UPLIT(FAO_STRING)))%,	

	$CRFFIELDEND = WORD INITIAL(0)%;

MACRO
	EO$END = BYTE(%X'00') %;

MACRO
	EO$END_FLOAT = BYTE(%X'01') %;

MACRO
	EO$CLEAR_SIGNIF = BYTE(%X'02') %;

MACRO
	EO$SET_SIGNIF = BYTE(%X'03') %;

MACRO
	EO$STORE_SIGN = BYTE(%X'04') %;

MACRO
	EO$LOAD_FILL(CH) = BYTE(%X'40',CH) %;

MACRO
	EO$LOAD_SIGN(CH) = BYTE(%X'41',CH) %;

MACRO
	EO$LOAD_PLUS(CH) = BYTE(%X'42',CH) %;

MACRO
	EO$LOAD_MINUS(CH) = BYTE(%X'43',CH) %;

MACRO
	EO$INSERT(CH) = BYTE(%X'44',CH) %;

MACRO
	EO$BLANK_ZERO(LEN) = 
	%IF (LEN) LEQ 0
	%THEN %WARN('EO$BLANK_ZERO - Length must be greater than zero')
	%FI 
	BYTE(%X'45', LEN) %;

MACRO
	EO$REPLACE_SIGN(LEN) = 
	%IF (LEN) LEQ 0
	%THEN %WARN('EO$REPLACE_SIGN - Length must be greater than zero')
	%FI
	BYTE(%X'46', LEN) %;

MACRO
	EO$ADJUST_INPUT(LEN) = 
	%IF (LEN) LEQ 0
	%THEN %WARN('EO$ADJUST_INPUT - Length must be greater than zero')
	%ELSE
		%IF (LEN) GTR 31
		%THEN %WARN('EO$ADJUST_INPUT - Length must be less than 32')
		%FI
	%FI 
	BYTE(%X'47', LEN) %;

MACRO
	EO$FILL(R) =
	%IF (R) LEQ 0
	%THEN %WARN('EO$FILL - Repeat must be greater than zero')
	%ELSE
		%IF (R) GTR 15
		%THEN %WARN('EO$FILL - Repeat must be less than 16')
		%FI
	%FI
	BYTE(%X'80' + R) %;

MACRO
	EO$MOVE(R) =
	%IF (R) LEQ 0
	%THEN %WARN('EO$MOVE - Repeat must be greater than zero')
	%ELSE 
		%IF (R) GTR 15
		%THEN %WARN('EO$MOVE - Repeat must be less than 16')
		%FI
	%FI
	BYTE(%X'90' + R) %;

MACRO
	EO$FLOAT(R) =
	%IF (R) LEQ 0
	%THEN %WARN('EO$FLOAT - Repeat must be greater than zero')
	%ELSE 
		%IF (R) GTR 15
		%THEN %WARN('EO$FLOAT - Repeat must be less than 16')
		%FI
	%FI
	BYTE(%X'A0' + R) %;

MACRO
	$RMS_OFFSET(NAME) = $RMS_OFFSET_1(%REMOVE(NAME)) %,
	$RMS_OFFSET_1 (X) = X %;

MACRO

	$RMS_BITS(A,B)[]=
	    %NAME(A,B)   $RMS_OR(%REMAINING)   $RMS_BITS(A,%REMAINING) %,
	$RMS_OR[]=
	    OR %,
	$RMS_BITFLD(ALLOC,PREFIX,VALUE)=
	    %IF %NULL(VALUE)
	    %THEN ALLOC(0)
	    %ELSE ALLOC($RMS_BITS(PREFIX,%REMOVE(VALUE)))
	    %FI %,

    $RMS_BITFLD_INI(BLK,NAME,PREFIX,VALUE)=
	%IF %NULL(VALUE) %THEN %EXITMACRO %FI
	BLOCK[BLK,%REMOVE(NAME);0,BYTE] =
	$RMS_BITS(PREFIX,%REMOVE(VALUE)) %,

	$RMS_CODFLD(ALLOC,PREFIX,VALUE)=
	    ALLOC(%NAME(PREFIX,%REMOVE(VALUE))) %,

	$RMS_CODFLD_INI(BLK,NAME,PREFIX,VALUE)=
	%IF %NULL(VALUE) %THEN %EXITMACRO %FI
	    BLOCK[BLK,%REMOVE(NAME);0,BYTE] =
		(%NAME(PREFIX,%REMOVE(VALUE))) %,

	$RMS_VALFLD(ALLOC,VALUE)=
	    ALLOC(VALUE) %,

	$RMS_VALFLD_INI(BLK,NAME,VALUE)=
	%IF %NULL(VALUE) %THEN %EXITMACRO %FI
	%IF %IDENTICAL(VALUE,0) %THEN %EXITMACRO %FI
	    BLOCK[BLK,%REMOVE(NAME);0,BYTE] = VALUE %,

	$RMS_8FLD(ALLOC,VAL0,VAL1,VAL2,VAL3,VAL4,VAL5,VAL6,VAL7)=
	ALLOC(
	    %IF %NULL(VAL0) %THEN (0) %ELSE (VAL0) %FI,
	    %IF %NULL(VAL1) %THEN (0) %ELSE (VAL1) %FI,
	    %IF %NULL(VAL2) %THEN (0) %ELSE (VAL2) %FI,
	    %IF %NULL(VAL3) %THEN (0) %ELSE (VAL3) %FI,
	    %IF %NULL(VAL4) %THEN (0) %ELSE (VAL4) %FI,
	    %IF %NULL(VAL5) %THEN (0) %ELSE (VAL5) %FI,
	    %IF %NULL(VAL6) %THEN (0) %ELSE (VAL6) %FI,
	    %IF %NULL(VAL7) %THEN (0) %ELSE (VAL7) %FI
	)%,

	$RMS_8FLD_INI(BLK,NAME) [VAL]=
	    %IF %COUNT GEQ 8
	    %THEN
		%ERROR('Excess POS or SIZ values.')
		%EXITMACRO
	    %FI
	    $RMS_VALFLD_INI(BLK, (%NAME(NAME,%COUNT)), VAL)  %,

	$RMS_VALPR2(RWEDCHAR)[]=
	    AND NOT
	    %IF       %IDENTICAL(RWEDCHAR,'R') %THEN XAB$M_NOREAD
	    %ELSE %IF %IDENTICAL(RWEDCHAR,'W') %THEN XAB$M_NOWRITE
	    %ELSE %IF %IDENTICAL(RWEDCHAR,'E') %THEN XAB$M_NOEXE
	    %ELSE %IF %IDENTICAL(RWEDCHAR,'D') %THEN XAB$M_NODEL
	    %ELSE 0 %ERROR('Illegal value "', RWEDCHAR, '" of parameter PRO')
	    %FI %FI %FI %FI
	    $RMS_VALPR2(%REMAINING) %,
	$RMS_VALPR1(RWEDGROUP)=
	    %B'1111'  $RMS_VALPR2(%EXPLODE(RWEDGROUP)) %,
	$RMS_VALPRO(SYSTEM,OWNER,GROUP,WORLD)=
	    %IF %LENGTH GTR 4
	    %THEN
		WORD(0)
		%ERROR('Illegal value of parameter PRO')
	    %ELSE
		WORD(
		($RMS_VALPR1(SYSTEM)) OR ($RMS_VALPR1(OWNER))^4 OR
		($RMS_VALPR1(GROUP))^8 OR ($RMS_VALPR1(WORLD))^12)
	    %FI %,

	$RMS_VALPRO_INI(BLK,SYSTEM,OWNER,GROUP,WORLD)=
	    %IF %LENGTH GTR 5 %THEN
		%ERROR('Illegal value of parameter PRO')
		%EXITMACRO %FI
	    %IF %LENGTH EQL 1 %THEN %EXITMACRO %FI
	    BLOCK[BLK,XAB$W_PRO;0,BYTE] =
		($RMS_VALPR1(SYSTEM) OR ($RMS_VALPR1(OWNER))^4 OR
		($RMS_VALPR1(GROUP))^8 OR ($RMS_VALPR1(WORLD))^12)
		%,

	$RMS_VALUIC(GROUP,MEMBER)=
	    %IF %LENGTH NEQ 2
	    %THEN
		REP 2 OF WORD(0)
		%ERROR('Illegal value of parameter UIC')
	    %ELSE
		WORD(MEMBER,GROUP)
	    %FI %,

	$RMS_VALUIC_INI(BLK,GROUP,MEMBER)=
	    %IF %LENGTH NEQ 3
	    %THEN %ERROR('Illegal value of parameter UIC')
		%EXITMACRO %FI
	    %IF %IDENTICAL(GROUP,0) AND %IDENTICAL(MEMBER,0)
	    %THEN %EXITMACRO %FI
	    BLOCK[BLK,XAB$L_UIC;0,BYTE]
		= ((MEMBER) OR (GROUP)^16) %,

	$RMS_VALRFI(FILENO,SEQNO,RVN)=
	    %IF %LENGTH NEQ 3
	    %THEN
		REP 3 OF WORD(0)
		%ERROR('Illegal value of parameter RFI')
	    %ELSE
		WORD(FILENO,SEQNO,RVN)
	    %FI %,

	$RMS_VALRFI_INI(BLK,FILENO,SEQNO,RVN)=
	    %IF %LENGTH NEQ 4
	     %THEN %ERROR('Illegal value of parameter RFI')
		%EXITMACRO %FI
	    %IF %IDENTICAL(FILENO,0) AND
		%IDENTICAL(SEQNO ,0) AND
		%IDENTICAL(RVN   ,0) %THEN %EXITMACRO %FI
	    BLOCK[BLK,XAB$W_RFI0;0,BYTE]= FILENO;
	    BLOCK[BLK,XAB$W_RFI2;0,BYTE]= SEQNO;
	    BLOCK[BLK,XAB$W_RFI4;0,BYTE]= RVN 
	%;

MACRO
	$FAB_DECL = 
	BLOCK[FAB$C_BLN,BYTE]	%;

KEYWORDMACRO
	$FAB(
		FAC=GET,	SHR,		FNA=0,		FNS=0,
		DNA=0,		DNS=0,		RTV=0,		ORG=SEQ,
		RAT,		FOP,		XAB=0,		MRS=0,
		JOURNAL,	MRN=0,		ALQ=0,		DEQ=0,
		BLS=0,		NAM=0,		RFM=VAR,	FSZ=0,
		FNM,		DNM,		BKS=0,		CTX=0,
		GBC=0,		LNM_MODE=0,	CHAN_MODE=0,	FILE_MODE=0,
		RU_FACILITY=0
		)=
	$FAB_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			FAB$C_BID),	
		$RMS_VALFLD(BYTE,			FAB$C_BLN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_BITFLD(LONG,	FAB$M_,		FOP),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			ALQ),		
		$RMS_VALFLD(WORD,			DEQ),		
		$RMS_BITFLD(BYTE,	FAB$M_,		FAC),		
		$RMS_BITFLD(BYTE,	FAB$M_,		SHR),		
		$RMS_VALFLD(LONG,			CTX),		
		$RMS_VALFLD(BYTE,			RTV),		
		$RMS_CODFLD(BYTE,	FAB$C_,		ORG),		
		$RMS_BITFLD(BYTE,	FAB$M_,		RAT),		
		$RMS_CODFLD(BYTE,	FAB$C_,		RFM),		
		$RMS_BITFLD(BYTE,	FAB$M_,		JOURNAL),	
		$RMS_VALFLD(BYTE,			RU_FACILITY),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			XAB),		
		$RMS_VALFLD(LONG,			NAM),		
%IF %NULL(FNM) %THEN
		$RMS_VALFLD(LONG,			FNA),		
%ELSE
		$RMS_VALFLD(LONG,		UPLIT BYTE(FNM)),	
%FI
%IF %NULL(DNM) %THEN
		$RMS_VALFLD(LONG,			DNA),		
%ELSE
		$RMS_VALFLD(LONG,		UPLIT BYTE(DNM)),	
%FI
%IF %NULL(FNM) %THEN
		$RMS_VALFLD(BYTE,			FNS),		
%ELSE
		$RMS_VALFLD(BYTE,		%CHARCOUNT(FNM)),	
%FI
%IF %NULL(DNM) %THEN
		$RMS_VALFLD(BYTE,			DNS),		
%ELSE
		$RMS_VALFLD(BYTE,		%CHARCOUNT(DNM)),	
%FI
		$RMS_VALFLD(WORD,			MRS),		
		$RMS_VALFLD(LONG,			MRN),		
		$RMS_VALFLD(WORD,			BLS),		
		$RMS_VALFLD(BYTE,			BKS),		
		$RMS_VALFLD(BYTE,			FSZ),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(WORD,			GBC),		
		BYTE(							
			  ( LNM_MODE  ^ $BITPOSITION(FAB$V_LNM_MODE) )
			+ ( CHAN_MODE ^ $BITPOSITION(FAB$V_CHAN_MODE) )
			+ ( FILE_MODE ^ $BITPOSITION(FAB$V_FILE_MODE) ) ),
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(LONG,			0)		
	) %;

KEYWORDMACRO
	$FAB_INIT(
		FAB,
		FAC=GET,	SHR,		FNA,		FNS,
		DNA,		DNS,		RTV,		ORG,
		RAT,		FOP,		XAB,		MRS,
		JOURNAL,	MRN,		ALQ,		DEQ,
		BLS,		NAM,		RFM=VAR,	FSZ,
		FNM,		DNM,		BKS,		CTX,
		GBC,		LNM_MODE,	CHAN_MODE,	FILE_MODE,
		RU_FACILITY
		)=
	( BIND $RMS_PTR = FAB;
	  CH$FILL(0,FAB$C_BLN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(FAB$B_BID),			FAB$C_BID);	
		$RMS_VALFLD_INI($RMS_PTR,(FAB$B_BLN),			FAB$C_BLN);	
		$RMS_BITFLD_INI($RMS_PTR,(FAB$L_FOP),	FAB$M_,		FOP);		

		$RMS_VALFLD_INI($RMS_PTR,(FAB$L_ALQ),			ALQ);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$W_DEQ),			DEQ);		
		$RMS_BITFLD_INI($RMS_PTR,(FAB$B_FAC),	FAB$M_,		FAC);		
		$RMS_BITFLD_INI($RMS_PTR,(FAB$B_SHR),	FAB$M_,		SHR);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$L_CTX),			CTX);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$B_RTV),			RTV);		
		$RMS_CODFLD_INI($RMS_PTR,(FAB$B_ORG),	FAB$C_,		ORG);		
		$RMS_BITFLD_INI($RMS_PTR,(FAB$B_RAT),	FAB$M_,		RAT);		
		$RMS_CODFLD_INI($RMS_PTR,(FAB$B_RFM),	FAB$C_,		RFM);		
		$RMS_BITFLD_INI($RMS_PTR,(FAB$B_JOURNAL), FAB$M_,	JOURNAL);	
		$RMS_VALFLD_INI($RMS_PTR,(FAB$B_RU_FACILITY),		RU_FACILITY);	
		$RMS_VALFLD_INI($RMS_PTR,(FAB$L_XAB),			XAB);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$L_NAM),			NAM);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$L_FNA),
			%IF %NULL(FNM) %THEN FNA %ELSE UPLIT BYTE(FNM) %FI);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$L_DNA),
			%IF %NULL(DNM) %THEN DNA %ELSE UPLIT BYTE(DNM) %FI);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$B_FNS),
			%IF %NULL(FNM) %THEN FNS %ELSE %CHARCOUNT(FNM) %FI);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$B_DNS),
			%IF %NULL(DNM) %THEN DNS %ELSE %CHARCOUNT(DNM) %FI);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$W_MRS),			MRS);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$L_MRN),			MRN);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$W_BLS),			BLS);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$B_BKS),			BKS);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$B_FSZ),			FSZ);		

		$RMS_VALFLD_INI($RMS_PTR,(FAB$W_GBC),			GBC);		
		$RMS_VALFLD_INI($RMS_PTR,(FAB$V_LNM_MODE),		LNM_MODE);	
		$RMS_VALFLD_INI($RMS_PTR,(FAB$V_CHAN_MODE),		CHAN_MODE);	
		$RMS_VALFLD_INI($RMS_PTR,(FAB$V_FILE_MODE),		FILE_MODE);	

	  0 ) %;

MACRO
	$NAM_DECL = BLOCK[NAM$C_BLN,BYTE] %;

KEYWORDMACRO
	$NAM(
		RSA=0,		RSS=0,		ESA=0,		ESS=0,
		RLF=0,		NOP)=
	$NAM_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			NAM$C_BID),	
		$RMS_VALFLD(BYTE,			NAM$C_BLN),	
		$RMS_VALFLD(BYTE,			RSS),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(LONG,			RSA),		
		$RMS_BITFLD(BYTE,	NAM$M_,		NOP),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			ESS),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(LONG,			ESA),		
		$RMS_VALFLD(LONG,			RLF),		
		REP 8 OF $RMS_VALFLD(WORD,		0),		
		REP 3 OF $RMS_VALFLD(WORD,		0),		
		REP 3 OF $RMS_VALFLD(WORD,		0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
                $RMS_VALFLD(BYTE,              	        0),             
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(WORD,		        0),	        
	        $RMS_VALFLD(WORD,		        0),		
		$RMS_VALFLD(LONG,			0)		
	) %;

KEYWORDMACRO
	$NAM_INIT( 
		NAM,
		RSA,		RSS,		ESA,		ESS,
		RLF,		NOP)=
	( BIND $RMS_PTR = NAM;
	  CH$FILL(0,NAM$C_BLN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(NAM$B_BID),			NAM$C_BID);	
		$RMS_VALFLD_INI($RMS_PTR,(NAM$B_BLN),			NAM$C_BLN);	
		$RMS_VALFLD_INI($RMS_PTR,(NAM$B_RSS),			RSS);		
		$RMS_VALFLD_INI($RMS_PTR,(NAM$L_RSA),			RSA);		
		$RMS_BITFLD_INI($RMS_PTR,(NAM$B_NOP),	NAM$M_,		NOP);		
		$RMS_VALFLD_INI($RMS_PTR,(NAM$B_ESS),			ESS);		
		$RMS_VALFLD_INI($RMS_PTR,(NAM$L_ESA),			ESA);		
		$RMS_VALFLD_INI($RMS_PTR,(NAM$L_RLF),			RLF);		

	   0 ) %;
MACRO
        $NAML_DECL = BLOCK[NAML$C_BLN,BYTE] %;
KEYWORDMACRO
        $NAML (RSA=0, RSS=0, ESA=0, ESS=0, RLF=0, NOP,
	       LONG_DNM, LONG_DEFNAME=0, LONG_DEFNAME_SIZE=0,
	       LONG_FNM, LONG_FILENAME=0, LONG_FILENAME_SIZE=0,
	       LONG_EXPAND=0, LONG_EXPAND_ALLOC=0, 
	       LONG_RESULT=0, LONG_RESULT_ALLOC=0, 
	       FILESYS_NAME=0, FILESYS_NAME_ALLOC=0,
               INPUT_FLAGS ) =
        $NAML_DECL INITIAL ($RMS_VALFLD(BYTE,                       NAML$C_BID),    
                	    $RMS_VALFLD(BYTE,                       NAML$C_BLN),    
                	    $RMS_VALFLD(BYTE,                       RSS),           
                	    $RMS_VALFLD(BYTE,                       0),             
                	    $RMS_VALFLD(LONG,                       RSA),           
                	    $RMS_BITFLD(BYTE,       NAML$M_,        NOP),      	    
                	    $RMS_VALFLD(BYTE,                       0),             
                	    $RMS_VALFLD(BYTE,                       ESS),           
                	    $RMS_VALFLD(BYTE,                       0),             
                	    $RMS_VALFLD(LONG,                       ESA),           
                	    $RMS_VALFLD(LONG,                       RLF),           
                	    REP 8 OF $RMS_VALFLD(WORD,              0),             
                	    REP 3 OF $RMS_VALFLD(WORD,              0),             
                	    REP 3 OF $RMS_VALFLD(WORD,              0),             
                	    $RMS_VALFLD(LONG,                       0),             
                	    $RMS_VALFLD(LONG,                       0),             
                	    $RMS_VALFLD(BYTE,                       0),             
                	    $RMS_VALFLD(BYTE,                       0),             
                	    $RMS_VALFLD(BYTE,                       0),             
                	    $RMS_VALFLD(BYTE,                       0),             
                	    $RMS_VALFLD(BYTE,                       0),             
                	    $RMS_VALFLD(BYTE,                       0),             
			    $RMS_VALFLD(BYTE,			    0),		    
                	    $RMS_VALFLD(BYTE,              	    0),             
                	    $RMS_VALFLD(LONG,                       0),             
                	    $RMS_VALFLD(LONG,                       0),             
                	    $RMS_VALFLD(LONG,                       0),             
                	    $RMS_VALFLD(LONG,                       0),             
                	    $RMS_VALFLD(LONG,                       0),             
                	    $RMS_VALFLD(LONG,                       0),             
			    $RMS_VALFLD(WORD,			    0),		    
			    $RMS_VALFLD(WORD,			    0),		    
                	    $RMS_VALFLD(LONG,              	    0),             
			   %IF %NULL(LONG_DNM) %THEN
                            $RMS_VALFLD(LONG,       LONG_DEFNAME_SIZE),    	    
			   %ELSE
                            $RMS_VALFLD(LONG,       %CHARCOUNT(LONG_DNM)), 	    
			   %FI
			   %IF %NULL(LONG_DNM) %THEN
                	    $RMS_VALFLD(LONG,       LONG_DEFNAME),         	    
			   %ELSE
                            $RMS_VALFLD(LONG,       UPLIT BYTE(LONG_DNM)), 	    
			   %FI
                           %IF %NULL(LONG_FNM) %THEN
                            $RMS_VALFLD(LONG,       LONG_FILENAME_SIZE),   	    
                           %ELSE
                            $RMS_VALFLD(LONG,       %CHARCOUNT(LONG_FNM)), 	    
			   %FI
			   %IF %NULL(LONG_FNM) %THEN
                	    $RMS_VALFLD(LONG,       LONG_FILENAME), 	   	    
			   %ELSE
                            $RMS_VALFLD(LONG,       UPLIT BYTE(LONG_FNM)), 	    
			   %FI
    			    $RMS_VALFLD(LONG,                       0),		    
    			    $RMS_VALFLD(LONG,                       0), 	    
    			    $RMS_VALFLD(LONG,                       0), 	    
    			    $RMS_VALFLD(LONG,			    0), 	    
    			    $RMS_VALFLD(LONG,                       0), 	    
    			    $RMS_VALFLD(LONG,                       0),    	    
    			    $RMS_VALFLD(LONG,                       0),		    
    			    $RMS_VALFLD(LONG,                       0),		    
    			    $RMS_VALFLD(LONG,                       0), 	    
    			    $RMS_VALFLD(LONG,                       0), 	    
    			    $RMS_VALFLD(LONG,			    0), 	    
    			    $RMS_VALFLD(LONG,			    0), 	    
    			    $RMS_VALFLD(LONG,                       0),		    
    			    $RMS_VALFLD(LONG,       LONG_EXPAND),   	    	    
    			    $RMS_VALFLD(LONG, 	    LONG_EXPAND_ALLOC), 	    
			    $RMS_VALFLD(LONG,			    0),		    
    			    $RMS_VALFLD(LONG,                       0),		    
    			    $RMS_VALFLD(LONG,	    LONG_RESULT),   		    
    			    $RMS_VALFLD(LONG,       LONG_RESULT_ALLOC), 	    
			    $RMS_VALFLD(LONG,	    		    0),		    
                            $RMS_VALFLD(LONG,                       0),    	    
                            $RMS_VALFLD(LONG,        FILESYS_NAME),    		    
                            $RMS_VALFLD(LONG,        FILESYS_NAME_ALLOC),    	    
    			    $RMS_VALFLD(LONG,	    		    0),		    
                	    $RMS_BITFLD(LONG,        NAML$M_,    INPUT_FLAGS),      
		            $RMS_VALFLD(LONG,	     		    0),		    
		            $RMS_VALFLD(LONG,	     		    0),		    
    			    $RMS_VALFLD(LONG,	    		    0),		    
    			    $RMS_VALFLD(LONG,	    		    0),		    
    			    $RMS_VALFLD(LONG,	    		    0),		    
    			    $RMS_VALFLD(LONG,	    		    0),		    
    			    $RMS_VALFLD(LONG,	    		    0),		    
    			    $RMS_VALFLD(LONG,	    		    0),		    
    			    $RMS_VALFLD(LONG,	    		    0)		    
        	         ) %;
KEYWORDMACRO
	$NAML_INIT (NAML, RSA, RSS, ESA, ESS, RLF, NOP, 
	            LONG_DNM, LONG_DEFNAME, LONG_DEFNAME_SIZE,
		    LONG_FNM, LONG_FILENAME, LONG_FILENAME_SIZE,
		    LONG_EXPAND, LONG_EXPAND_ALLOC, 
		    LONG_RESULT, LONG_RESULT_ALLOC,
	            FILESYS_NAME, FILESYS_NAME_ALLOC,
                    INPUT_FLAGS ) =
                   (BIND $RMS_PTR = NAML;
          	    CH$FILL(0,NAML$C_BLN,CH$PTR($RMS_PTR));
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$B_BID),                   NAML$C_BID);    
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$B_BLN),                   NAML$C_BLN);    
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$B_RSS),                   RSS);           
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_RSA),                   RSA);           
                    $RMS_BITFLD_INI($RMS_PTR,(NAML$B_NOP),      NAML$M_,     NOP);           
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$B_ESS),                   ESS);           
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_ESA),                   ESA);           
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_RLF),                   RLF);           
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_LONG_DEFNAME),
                        %IF %NULL(LONG_DNM) %THEN LONG_DEFNAME %ELSE UPLIT BYTE(LONG_DNM) %FI);       
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_LONG_DEFNAME_SIZE),
                        %IF %NULL(LONG_DNM) %THEN LONG_DEFNAME_SIZE %ELSE %CHARCOUNT(LONG_DNM) %FI);  
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_LONG_FILENAME),
                        %IF %NULL(LONG_FNM) %THEN LONG_FILENAME %ELSE UPLIT BYTE(LONG_FNM) %FI);      
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_LONG_FILENAME_SIZE),
                        %IF %NULL(LONG_FNM) %THEN LONG_FILENAME_SIZE %ELSE %CHARCOUNT(LONG_FNM) %FI); 
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_LONG_RESULT_ALLOC),     LONG_RESULT_ALLOC);      
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_LONG_RESULT),           LONG_RESULT);            
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_LONG_EXPAND_ALLOC),     LONG_EXPAND_ALLOC);      
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_LONG_EXPAND),           LONG_EXPAND);            
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_FILESYS_NAME),          FILESYS_NAME);           
                    $RMS_VALFLD_INI($RMS_PTR,(NAML$L_FILESYS_NAME_ALLOC),    FILESYS_NAME_ALLOC);     
                    $RMS_BITFLD_INI($RMS_PTR,(NAML$L_INPUT_FLAGS),  NAML$M_, INPUT_FLAGS);            
                    0 ) %;

MACRO
	$XABDAT_DECL = BLOCK[XAB$C_DATLEN,BYTE] %;

KEYWORDMACRO
	$XABDAT(
		NXT=0,	RVN=0,	EDT0=0,	EDT4=0)=
	$XABDAT_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_DAT),	
		$RMS_VALFLD(BYTE,			XAB$C_DATLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_VALFLD(WORD,			RVN),		
		$RMS_VALFLD(WORD,			0),		
		REP 2 OF $RMS_VALFLD(LONG,		0),		
		REP 2 OF $RMS_VALFLD(LONG,		0),		
		$RMS_VALFLD(LONG,			EDT0),		
		$RMS_VALFLD(LONG,			EDT4),		
		REP 2 OF $RMS_VALFLD(LONG,		0)		
	) %;

KEYWORDMACRO
	$XABDAT_INIT(
		XAB,
		NXT=0,	RVN=0,	EDT0=0,	EDT4=0)=
	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_DATLEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),			XAB$C_DAT);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),			XAB$C_DATLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),			NXT);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_RVN),			RVN);		

		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_EDT0),			EDT0);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_EDT4),			EDT4);		
	  0 ) %;

MACRO
	$XABRDT_DECL = BLOCK[XAB$C_RDTLEN,BYTE] %;

KEYWORDMACRO
	$XABRDT(
		NXT=0,	RVN=0 )=
	$XABRDT_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_RDT),	
		$RMS_VALFLD(BYTE,			XAB$C_RDTLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_VALFLD(WORD,			RVN),		
		$RMS_VALFLD(WORD,			0),		
		REP 2 OF $RMS_VALFLD(LONG,		0)		
	) %;

KEYWORDMACRO
	$XABRDT_INIT(
		XAB,
		NXT=0,	RVN=0 )=
	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_RDTLEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),			XAB$C_RDT);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),			XAB$C_RDTLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),			NXT);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_RVN),			RVN);		

	  0 ) %;

MACRO
	$XABPRO_DECL = BLOCK[XAB$C_PROLEN,BYTE] %;

KEYWORDMACRO
	$XABPRO(
		NXT=0,		UIC=<0,0>,	PRO,		MTACC=0,
		PROT_OPT,	PROT_MODE=0,	ACLBUF=0,	ACLSIZ=0,
		ACLCTX=0 )=
	$XABPRO_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_PRO),	
		$RMS_VALFLD(BYTE,			XAB$C_PROLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_VALPRO(%REMOVE(PRO)),				
		$RMS_VALFLD(BYTE,			MTACC),		
		$RMS_BITFLD(BYTE,	XAB$M_,		PROT_OPT),	
		$RMS_VALUIC(%REMOVE(UIC)),				
		$RMS_VALFLD(BYTE,			PROT_MODE),	
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			ACLBUF),	
		$RMS_VALFLD(WORD,			ACLSIZ),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			ACLCTX),	
		$RMS_VALFLD(LONG,			0)		
	) %;

KEYWORDMACRO
	$XABPRO_INIT(
		XAB,
		NXT=0,		UIC=<0,0>,	PRO,		MTACC=0,
		PROT_OPT,	PROT_MODE=0,	ACLBUF=0,	ACLSIZ=0,
		ACLCTX=0 )=
	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_PROLEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),			XAB$C_PRO);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),			XAB$C_PROLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),			NXT);		
		$RMS_VALPRO_INI($RMS_PTR,%REMOVE(PRO));					
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_MTACC),			MTACC);		
		$RMS_BITFLD_INI($RMS_PTR,(XAB$B_PROT_OPT),	XAB$M_,	PROT_OPT);	
		$RMS_VALUIC_INI($RMS_PTR,%REMOVE(UIC));					
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_PROT_MODE),		PROT_MODE);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_ACLBUF),		ACLBUF);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_ACLSIZ),		ACLSIZ);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_ACLLEN),		0);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_ACLCTX),		ACLCTX);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_ACLSTS),		0);		
	  0 ) %;

MACRO
	$XABALL_DECL = BLOCK[XAB$C_ALLLEN,BYTE] %;

KEYWORDMACRO
	$XABALL(
		NXT=0,		AID=0,		ALN=ANY,	ALQ=0,
		AOP,		BKZ=0,		DEQ=0,
		LOC=0,		RFI=<0,0,0>,	VOL=0)=
	$XABALL_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_ALL),	
		$RMS_VALFLD(BYTE,			XAB$C_ALLLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_BITFLD(BYTE,	XAB$M_,		AOP),		
		$RMS_CODFLD(BYTE,	XAB$C_,		ALN),		
		$RMS_VALFLD(WORD,			VOL),		
		$RMS_VALFLD(LONG,			LOC),		
		$RMS_VALFLD(LONG,			ALQ),		
		$RMS_VALFLD(WORD,			DEQ),		
		$RMS_VALFLD(BYTE,			BKZ),		
		$RMS_VALFLD(BYTE,			AID),		
		$RMS_VALRFI(%REMOVE(RFI)),				
		$RMS_VALFLD(WORD,			0)		
	) %;

KEYWORDMACRO
	$XABALL_INIT(
		XAB,
		NXT=0,		AID=0,		ALN,		ALQ=0,
		AOP,		BKZ=0,		DEQ=0,
		LOC=0,		RFI=<0,0,0>,	VOL=0)=
	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_ALLLEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),			XAB$C_ALL);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),			XAB$C_ALLLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),			NXT);		
		$RMS_BITFLD_INI($RMS_PTR,(XAB$B_AOP),	XAB$M_,		AOP);		
		$RMS_CODFLD_INI($RMS_PTR,(XAB$B_ALN),	XAB$C_,		ALN);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_VOL),			VOL);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_LOC),			LOC);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_ALQ),			ALQ);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_DEQ),			DEQ);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BKZ),			BKZ);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_AID),			AID);		
		$RMS_VALRFI_INI($RMS_PTR,%REMOVE(RFI));					
	  0 ) %;

MACRO
	$XABFHC_DECL = BLOCK[XAB$C_FHCLEN,BYTE] %;

KEYWORDMACRO
	$XABFHC(
		NXT=0)=
	$XABFHC_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_FHC),	
		$RMS_VALFLD(BYTE,			XAB$C_FHCLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		REP 9 OF $RMS_VALFLD(LONG,		0)		
	) %;

KEYWORDMACRO
	$XABFHC_INIT(
		XAB,
		NXT=0)=
	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_FHCLEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),			XAB$C_FHC);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),			XAB$C_FHCLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),			NXT);		
	  0 ) %;

MACRO
	$XABKEY_DECL = BLOCK[XAB$C_KEYLEN,BYTE] %;

KEYWORDMACRO
	$XABKEY(
		DAN=0,		DFL=0,		DTP=STG,	FLG,
		IAN=0,		IFL=0,		KNM=0,		LAN=0,
		NXT=0,		NUL=0,		POS,		POS0=0,
		POS1=0,		POS2=0,		POS3=0,		POS4=0,
		POS5=0,		POS6=0,		POS7=0,		KREF=0,
		SIZ,		SIZ0=0,		SIZ1=0,		SIZ2=0,
		SIZ3=0,		SIZ4=0,		SIZ5=0,		SIZ6=0,
		SIZ7=0,		PROLOG=0,	COLTBL=0,	COLSIZ=0,
		COLNAM=0)=
	$XABKEY_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_KEY),	
		$RMS_VALFLD(BYTE,			XAB$C_KEYLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_VALFLD(BYTE,			IAN),		
		$RMS_VALFLD(BYTE,			LAN),		
		$RMS_VALFLD(BYTE,			DAN),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_BITFLD(BYTE,	XAB$M_,		FLG),		
		$RMS_CODFLD(BYTE,	XAB$C_,		DTP),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			NUL),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			KREF),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(WORD,			IFL),		
		$RMS_VALFLD(WORD,			DFL),		
	%IF %NULL(POS)
	%THEN
		$RMS_VALFLD(WORD,			POS0),		
		$RMS_VALFLD(WORD,			POS1),		
		$RMS_VALFLD(WORD,			POS2),		
		$RMS_VALFLD(WORD,			POS3),		
		$RMS_VALFLD(WORD,			POS4),		
		$RMS_VALFLD(WORD,			POS5),		
		$RMS_VALFLD(WORD,			POS6),		
		$RMS_VALFLD(WORD,			POS7),		
	%ELSE
		$RMS_8FLD(WORD,			%REMOVE(POS)),		
	%FI
	%IF %NULL(SIZ)
	%THEN
		$RMS_VALFLD(BYTE,			SIZ0),		
		$RMS_VALFLD(BYTE,			SIZ1),		
		$RMS_VALFLD(BYTE,			SIZ2),		
		$RMS_VALFLD(BYTE,			SIZ3),		
		$RMS_VALFLD(BYTE,			SIZ4),		
		$RMS_VALFLD(BYTE,			SIZ5),		
		$RMS_VALFLD(BYTE,			SIZ6),		
		$RMS_VALFLD(BYTE,			SIZ7),		
	%ELSE
		$RMS_8FLD(BYTE,			%REMOVE(SIZ)),		
	%FI
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			KNM),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			PROLOG),	
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			COLTBL),	
		$RMS_VALFLD(LONG,			COLSIZ),	
		$RMS_VALFLD(LONG,			COLNAM)		
	) %;

KEYWORDMACRO
	$XABKEY_INIT(
		XAB,
		DAN=0,		DFL=0,		DTP=STG,	FLG,
		IAN=0,		IFL=0,		KNM=0,		LAN=0,
		NXT=0,		NUL=0,		POS,		POS0=0,
		POS1=0,		POS2=0,		POS3=0,		POS4=0,
		POS5=0,		POS6=0,		POS7=0,		KREF=0,
		SIZ,		SIZ0=0,		SIZ1=0,		SIZ2=0,
		SIZ3=0,		SIZ4=0,		SIZ5=0,		SIZ6=0,
		SIZ7=0,		PROLOG=0,	COLTBL=0,	COLSIZ=0,
		COLNAM=0	)=

	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_KEYLEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),			XAB$C_KEY);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),			XAB$C_KEYLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),			NXT);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_IAN),			IAN);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_LAN),			LAN);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_DAN),			DAN);		

		$RMS_BITFLD_INI($RMS_PTR,(XAB$B_FLG),	XAB$M_,		FLG);		
		$RMS_CODFLD_INI($RMS_PTR,(XAB$B_DTP),	XAB$C_,		DTP);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_NUL),			NUL);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_REF),			KREF);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_IFL),			IFL);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_DFL),			DFL);		
	%IF %NULL(POS)
	%THEN
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_POS0),			POS0);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_POS1),			POS1);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_POS2),			POS2);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_POS3),			POS3);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_POS4),			POS4);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_POS5),			POS5);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_POS6),			POS6);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_POS7),			POS7);		
	%ELSE
		$RMS_8FLD_INI($RMS_PTR, %STRING('XAB$W_POS'),	%REMOVE(POS));		
	%FI
	%IF %NULL(SIZ)
	%THEN
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_SIZ0),			SIZ0);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_SIZ1),			SIZ1);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_SIZ2),			SIZ2);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_SIZ3),			SIZ3);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_SIZ4),			SIZ4);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_SIZ5),			SIZ5);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_SIZ6),			SIZ6);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_SIZ7),			SIZ7);		
	%ELSE
		$RMS_8FLD_INI($RMS_PTR, %STRING('XAB$B_SIZ'),	%REMOVE(SIZ));		
	%FI
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_KNM),			KNM);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_PROLOG),		PROLOG);	

		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_COLTBL),		COLTBL);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_COLSIZ),		COLSIZ);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_COLNAM),		COLNAM);	

	0 ) %;

MACRO
	$XABSUM_DECL = BLOCK[XAB$C_SUMLEN,BYTE] %;

KEYWORDMACRO
	$XABSUM(
		NXT=0)=
	$XABSUM_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_SUM),	
		$RMS_VALFLD(BYTE,			XAB$K_SUMLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(WORD,			0)		
	) %;

KEYWORDMACRO
	$XABSUM_INIT(
		XAB,
		NXT=0)=
	(BIND $RMS_PTR = XAB;
	 CH$FILL(0, XAB$C_SUMLEN, CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),		XAB$C_SUM);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),		XAB$C_SUMLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),		NXT);		

	0 ) %;

MACRO
	$XABCXF_DECL = BLOCK[XAB$C_CXFLEN,BYTE] %;

KEYWORDMACRO
	$XABCXF(
		NXT=0)=
	$XABCXF_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_CXF),	
		$RMS_VALFLD(BYTE,			XAB$K_CXFLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0)		
	) %;

KEYWORDMACRO
	$XABCXF_INIT(
		XAB,
		NXT=0)=
	(BIND $RMS_PTR = XAB;
	 CH$FILL(0, XAB$C_CXFLEN, CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),		XAB$C_CXF);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),		XAB$C_CXFLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),		NXT);		

	0 ) %;

MACRO
	$XABCXR_DECL = BLOCK[XAB$C_CXRLEN,BYTE] %;

KEYWORDMACRO
	$XABCXR(
		NXT=0,CXRBUF=0,CXFBFZ=0)=
	$XABCXR_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_CXR),	
		$RMS_VALFLD(BYTE,			XAB$K_CXRLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(WORD,			CXRBFZ),	
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(BYTE,			0),		
		$RMS_VALFLD(LONG,			CXRBUF),	
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0)		
	) %;

KEYWORDMACRO
	$XABCXR_INIT(
		XAB,
		NXT=0,CXRBUF=0,CXRBFZ=0)=
	(BIND $RMS_PTR = XAB;
	 CH$FILL(0, XAB$C_CXRLEN, CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),		XAB$C_CXR);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),		XAB$C_CXRLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),		NXT);		

		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_CXRBFZ),	CXRBFZ);

		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_CXRBUF),	CXRBUF);

	0 ) %;

MACRO
	$XABJNL_DECL = BLOCK[XAB$C_JNLLEN,BYTE] %;

KEYWORDMACRO
	$XABJNL(
		XABJNL_TYPE=JNL_TYPE_NONE, JNL_FLAGS, JNL_FAB=0,
		VOLNAM_BUF=0, VOLNAM_SIZ=0, NXT= 0 ) =
	$XABJNL_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_JNL),	
		$RMS_VALFLD(BYTE,			XAB$C_JNLLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_CODFLD(BYTE,	XAB$C_,		XABJNL_TYPE),	
		$RMS_VALFLD(BYTE,			0),		
		$RMS_BITFLD(WORD,	XAB$M_,		JNL_FLAGS),	
		$RMS_VALFLD(LONG,			JNL_FAB),	
		$RMS_VALFLD(LONG,			VOLNAM_BUF),	
		$RMS_VALFLD(WORD,			VOLNAM_SIZ),	
		$RMS_VALFLD(WORD,			0),		
		REP 2 OF $RMS_VALFLD(LONG,		0),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0)		
	) %;

KEYWORDMACRO
	$XABJNL_INIT(
		XAB,
		XABJNL_TYPE=JNL_TYPE_NONE, JNL_FLAGS, JNL_FAB=0,
		VOLNAM_BUF=0, VOLNAM_SIZ=0, NXT= 0 ) =
	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_JNLLEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),		XAB$C_JNL);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),		XAB$C_JNLLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),		NXT);		
		$RMS_CODFLD_INI($RMS_PTR,(XAB$B_XABJNL_TYPE),
					XAB$C_,			XABJNL_TYPE);	
		$RMS_BITFLD_INI($RMS_PTR,(XAB$W_JNL_FLAGS),
					XAB$M_,			JNL_FLAGS);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_JNL_FAB),	JNL_FAB);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_VOLNAM_BUF),	VOLNAM_BUF);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_VOLNAM_SIZ),	VOLNAM_SIZ);	
	0 ) %;

MACRO
	$XABITM_DECL = BLOCK[XAB$C_ITMLEN,BYTE] %;

KEYWORDMACRO
	$XABITM(
		ITEMLIST = 0,
		MODE = SENSEMODE,
		NXT = 0 ) =
	$XABITM_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_ITM),	
		$RMS_VALFLD(BYTE,			XAB$C_ITMLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_VALFLD(LONG,			ITEMLIST),	
		$RMS_CODFLD(BYTE,	XAB$K_,		MODE)		
	) %;

KEYWORDMACRO
	$XABITM_INIT(
	    	XAB, NXT=0, ITEMLIST, MODE=SENSEMODE
		) =
	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_ITMLEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),			XAB$C_ITM);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),			XAB$C_ITMLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),			NXT);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_ITEMLIST),		ITEMLIST);	
		$RMS_CODFLD_INI($RMS_PTR,(XAB$B_MODE),	XAB$K_,		MODE);		
 	  0 ) %;

MACRO
	$XABRU_DECL = BLOCK[XAB$C_RULEN,BYTE] %;

KEYWORDMACRO
	$XABRU( RU_HANDLE=0, NXT=0 ) =
	$XABRU_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_RU),	
		$RMS_VALFLD(BYTE,			XAB$C_RULEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_BITFLD(WORD,			0),		
		$RMS_BITFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			RU_HANDLE)	
	) %;

KEYWORDMACRO
	$XABRU_INIT(
		XAB,
		RU_HANDLE=0, NXT=0 ) =
	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_RULEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),		XAB$C_RU);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),		XAB$C_RULEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),		NXT);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_RU_HANDLE),	RU_HANDLE);	
	0 ) %;

MACRO
	$XABTRM_DECL = BLOCK[XAB$C_TRMLEN,BYTE] %;

KEYWORDMACRO
	$XABTRM(
		NXT=0, ITMLST=0, ITMLST_LEN=0
		) =
	$XABTRM_DECL
	INITIAL(
		$RMS_VALFLD(BYTE,			XAB$C_TRM),	
		$RMS_VALFLD(BYTE,			XAB$C_TRMLEN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			NXT),		
		$RMS_VALFLD(LONG,			ITMLST),	
		$RMS_VALFLD(WORD,			ITMLST_LEN)	
	) %;

KEYWORDMACRO
	$XABTRM_INIT(
		XAB, NXT=0, ITMLST=0, ITMLST_LEN=0
		) =
	( BIND $RMS_PTR = XAB;
	  CH$FILL(0,XAB$C_TRMLEN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_COD),			XAB$C_TRM);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$B_BLN),			XAB$C_TRMLEN);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_NXT),			NXT);		
		$RMS_VALFLD_INI($RMS_PTR,(XAB$L_ITMLST),		ITMLST);	
		$RMS_VALFLD_INI($RMS_PTR,(XAB$W_ITMLST_LEN),		ITMLST_LEN);	
	  0 ) %;

MACRO
	$RAB_DECL =
		BLOCK[RAB$C_BLN,BYTE]  %,
	$RAB_DECL_ASYN =
		BLOCK[RAB$C_BLN,BYTE]  %;

KEYWORDMACRO
	$RAB(
		RAC=SEQ,	ROP,		UBF=0,		USZ=0,
		RBF=0,		RSZ=0,		BKT=0,		KBF=0,
		PBF=0,		KSZ=0,		PSZ=0,		RHB=0,
		FAB=0,		MBF=0,		MBC=0,		TMO=0,
		CTX=0,		KRF=0,		ASYN=NO,	XAB=0,
		ROP_2)=
	%IF %IDENTICAL(%STRING(ASYN),'YES')
	%THEN $RAB_DECL_ASYN
	%ELSE $RAB_DECL
	%FI
	INITIAL(
		$RMS_VALFLD(BYTE,			RAB$C_BID),	
		$RMS_VALFLD(BYTE,			RAB$C_BLN),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_BITFLD(LONG,	RAB$M_,		ROP),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		REP 3 OF $RMS_VALFLD(WORD,		0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			CTX),		
		$RMS_BITFLD(WORD,	RAB$M_,		ROP_2),		
		$RMS_CODFLD(BYTE,	RAB$C_,		RAC),		
		$RMS_VALFLD(BYTE,			TMO),		
		$RMS_VALFLD(WORD,			USZ),		
		$RMS_VALFLD(WORD,			RSZ),		
		$RMS_VALFLD(LONG,			UBF),		
		$RMS_VALFLD(LONG,			RBF),		
		$RMS_VALFLD(LONG,			RHB),		
		$RMS_VALFLD(LONG,			(KBF)+(PBF)),	
		$RMS_VALFLD(BYTE,			(KSZ)+(PSZ)),	
		$RMS_VALFLD(BYTE,			KRF),		
		$RMS_VALFLD(BYTE,			MBF),		
		$RMS_VALFLD(BYTE,			MBC),		
		$RMS_VALFLD(LONG,			BKT),		
		$RMS_VALFLD(LONG,			FAB),		
		$RMS_VALFLD(LONG,			XAB)		
	) %;

KEYWORDMACRO
	$RAB_INIT(
		RAB,
		RAC,		ROP,		UBF=0,		USZ=0,
		RBF=0,		RSZ=0,		BKT=0,		KBF=0,
		PBF=0,		KSZ=0,		PSZ=0,		RHB=0,
		FAB=0,		MBF=0,		MBC=0,		TMO=0,
		CTX=0,		KRF=0,		ASYN=NO,	XAB=0,
		ROP_2)=
	( BIND $RMS_PTR = RAB;
	  CH$FILL(0,RAB$C_BLN,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_BID),			RAB$C_BID);	
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_BLN),			RAB$C_BLN);	
		$RMS_BITFLD_INI($RMS_PTR,(RAB$L_ROP),	RAB$M_,		ROP);		

		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_CTX),			CTX);		
		$RMS_BITFLD_INI($RMS_PTR,(RAB$W_ROP_2),	RAB$M_,		ROP_2);		
		$RMS_CODFLD_INI($RMS_PTR,(RAB$B_RAC),	RAB$C_,		RAC);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_TMO),			TMO);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$W_USZ),			USZ);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$W_RSZ),			RSZ);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_UBF),			UBF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_RBF),			RBF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_RHB),			RHB);		
		%IF NOT %IDENTICAL(KBF,0)
		OR  NOT %IDENTICAL(PBF,0) %THEN
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_KBF),			(KBF)+(PBF));	
					%FI
		%IF NOT %IDENTICAL(KSZ,0)
		OR  NOT %IDENTICAL(PSZ,0) %THEN
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_KSZ),			(KSZ)+(PSZ));	
					%FI
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_KRF),			KRF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_MBF),			MBF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_MBC),			MBC);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_BKT),			BKT);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_FAB),			FAB);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_XAB),			XAB);		
	  0 ) %;
%IF %BLISS(BLISS64E) OR %BLISS(BLISS64I)
%THEN 

MACRO
	$RAB64_DECL =
		BLOCK[RAB$C_BLN64,BYTE]  %,
	$RAB64_DECL_ASYN =
		BLOCK[RAB$C_BLN64,BYTE]  %;

KEYWORDMACRO
	$RAB64(
		RAC=SEQ,	ROP, 		UBF=0,		USZ=0,
		RBF=0,		RSZ=0,		BKT=0,		KBF=0,
		PBF=0,		KSZ=0,		PSZ=0,		RHB=0,
		FAB=0,		MBF=0,		MBC=0,		TMO=0,
		CTX=0,		KRF=0,		ASYN=NO,	XAB=0,
		ROPEXT, ROP_2)=
	%IF %IDENTICAL(%STRING(ASYN),'YES')
	%THEN $RAB64_DECL_ASYN
	%ELSE $RAB64_DECL
	%FI
	INITIAL(
		$RMS_VALFLD(BYTE,			RAB$C_BID),	
		$RMS_VALFLD(BYTE,			RAB$C_BLN64),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_BITFLD(LONG,	RAB$M_,		ROP),		
		$RMS_VALFLD(LONG,			0),		
		$RMS_VALFLD(LONG,			0),		
		REP 3 OF $RMS_VALFLD(WORD,		0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			CTX),		
		$RMS_BITFLD(WORD,	RAB$M_,		ROP_2),		
		$RMS_CODFLD(BYTE,	RAB$C_,		RAC),		
		$RMS_VALFLD(BYTE,			TMO),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(LONG,			-1),		
		$RMS_VALFLD(LONG,			-1),		
		$RMS_VALFLD(LONG,			-1),		
	        %IF NOT %IDENTICAL(PBF,0) %THEN
		$RMS_VALFLD(LONG,			PBF),		
		$RMS_VALFLD(BYTE,			PSZ),		
	        %ELSE 
		$RMS_VALFLD(LONG,			-1),		
		$RMS_VALFLD(BYTE,			KSZ),		
	        %FI
		$RMS_VALFLD(BYTE,			KRF),		
		$RMS_VALFLD(BYTE,			MBF),		
		$RMS_VALFLD(BYTE,			MBC),		
		$RMS_VALFLD(LONG,			BKT),		
		$RMS_VALFLD(LONG,			FAB),		
		$RMS_VALFLD(LONG,			XAB),		
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(WORD,			1),		
		$RMS_VALFLD(QUAD,			UBF),		
		$RMS_VALFLD(QUAD,			USZ),		
		$RMS_VALFLD(QUAD,			RBF),		
		$RMS_VALFLD(QUAD,			RSZ),		
		$RMS_VALFLD(QUAD,			KBF),		
		$RMS_VALFLD(QUAD,			RHB),		
		$RMS_VALFLD(QUAD,			CTX),		
		$RMS_BITFLD(LONG,	RAB$M_,		ROPEXT),	
		$RMS_VALFLD(WORD,			0),		
		$RMS_VALFLD(WORD,			0)		
	) %;

KEYWORDMACRO
	$RAB64_INIT(
		RAB,
		RAC,		ROP,		UBF=0,		USZ=0,
		RBF=0,		RSZ=0,		BKT=0,		KBF=0,
		PBF=0,		KSZ=0,		PSZ=0,		RHB=0,
		FAB=0,		MBF=0,		MBC=0,		TMO=0,
		CTX=0,		KRF=0,		ASYN=NO,	XAB=0,
		ROPEXT, ROP_2)=
	( BIND $RMS_PTR = RAB;
	  CH$FILL(0,RAB$C_BLN64,CH$PTR($RMS_PTR));
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_BID),			RAB$C_BID);	
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_BLN),			RAB$C_BLN64);	
		$RMS_BITFLD_INI($RMS_PTR,(RAB$L_ROP),	RAB$M_,		ROP);		

		$RMS_BITFLD_INI($RMS_PTR,(RAB$W_ROP_2),	RAB$M_,		ROP_2);		
		$RMS_CODFLD_INI($RMS_PTR,(RAB$B_RAC),	RAB$C_,		RAC);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_TMO),			TMO);		

		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_UBF),			-1);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_RBF),			-1);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_RHB),			-1);		
	        %IF NOT %IDENTICAL(PBF,0) %THEN
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_PBF),			PBF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_PSZ),			PSZ);		
	        %ELSE 
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_KBF),			-1);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_KSZ),			KSZ);		
	        %FI
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_KRF),			KRF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_MBF),			MBF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$B_MBC),			MBC);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_BKT),			BKT);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_FAB),			FAB);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$L_XAB),			XAB);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$W_VERMAJOR),		1);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$PQ_UBF),			UBF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$Q_USZ),			USZ);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$PQ_RBF),			RBF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$Q_RSZ),			RSZ);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$PQ_KBF),			KBF);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$PQ_RHB),			RHB);		
		$RMS_VALFLD_INI($RMS_PTR,(RAB$Q_CTX),			CTX);		
		$RMS_BITFLD_INI($RMS_PTR,(RAB$L_ROPEXT), RAB$M_,	ROPEXT);	

	  0 ) %;
%FI

MACRO
	$RMS_INIT(XX) =
		BEGIN
		0
		END %,
	$RMS_INITIF(XX) =
		BEGIN
		0
		END %,
	$RMS_POOL(XX) =
		BEGIN
		0
		END %,
	$RMS_ORG(XX) =
		BEGIN
		0
		END %,

	$RMS_OKSTATUS(XX) =
		(.BLOCK[(XX),FAB$L_STS;0,BYTE] AND 1) %,
	$RMS_OK(VAL)=
		((VAL) AND 1) %,
	$RMS_SUC(VAL)=
		(EXTERNAL LITERAL RMS$_SUC;(VAL) EQL RMS$_SUC) %;

KEYWORDMACRO
	$RMS_CLOSE(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$CLOSE,FAB,ERR,SUC) %,
	$RMS_CONNECT(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$CONNECT,RAB,ERR,SUC) %,
	$RMS_CREATE(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$CREATE,FAB,ERR,SUC) %,
	$RMS_DELETE(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$DELETE,RAB,ERR,SUC) %,
	$RMS_DISCONNECT(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$DISCONNECT,RAB,ERR,SUC) %,
	$RMS_DISPLAY(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$DISPLAY,FAB,ERR,SUC) %,
	$RMS_ERASE(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$ERASE,FAB,ERR,SUC) %,
	$RMS_EXTEND(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$EXTEND,FAB,ERR,SUC) %,
	$RMS_FIND(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$FIND,RAB,ERR,SUC) %,
	$RMS_FLUSH(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$FLUSH,RAB,ERR,SUC) %,
	$RMS_FREE(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$FREE,RAB,ERR,SUC) %,
	$RMS_GET(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$GET,RAB,ERR,SUC) %,
	$RMS_MODIFY(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$MODIFY,FAB,ERR,SUC) %,
	$RMS_NXTVOL(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$NXTVOL,RAB,ERR,SUC) %,
	$RMS_OPEN(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$OPEN,FAB,ERR,SUC) %,
	$RMS_PUT(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$PUT,RAB,ERR,SUC) %,
	$RMS_PARSE(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$PARSE,FAB,ERR,SUC) %,
	$RMS_READ(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$READ,RAB,ERR,SUC) %,
	$RMS_RELEASE(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$RELEASE,RAB,ERR,SUC) %,
	$RMS_REWIND(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$REWIND,RAB,ERR,SUC) %,
	$RMS_SEARCH(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$SEARCH,FAB,ERR,SUC) %,
	$RMS_ENTER(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$ENTER,FAB,ERR,SUC) %,
	$RMS_REMOVE(FAB,ERR,SUC)=
	    $RMS_CALL(SYS$REMOVE,FAB,ERR,SUC) %,
	$RMS_RENAME(OLDFAB,ERR,SUC,NEWFAB)=
	    $RMS_CALL(SYS$RENAME,OLDFAB,ERR,SUC,NEWFAB) %,
	$RMS_SPACE(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$SPACE,RAB,ERR,SUC) %,
	$RMS_TRUNCATE(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$TRUNCATE,RAB,ERR,SUC) %,
	$RMS_UPDATE(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$UPDATE,RAB,ERR,SUC) %,
	$RMS_WAIT(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$WAIT,RAB,ERR,SUC) %,
	$RMS_WRITE(RAB,ERR,SUC)=
	    $RMS_CALL(SYS$WRITE,RAB,ERR,SUC) %;

MACRO
    $ITR_RMS_CALL[ARG] =
	%IF %NULL(ARG)
	%THEN
	    0
	%ELSE
	    ARG
	%FI %,
    $RMS_CALL(ROUT,BLK) =
	BEGIN
	EXTERNAL ROUTINE ROUT: BLISS ADDRESSING_MODE(GENERAL);
	ROUT(
	    %IF NOT %NULL( %REMAINING)
	    %THEN
		$ITR_RMS_CALL(BLK, %REMAINING)
	    %ELSE
		BLK
	    %FI
	    )
	END %;

MACRO
    $LIB_KEY_TABLE (FIRST) =
		
	VECTOR[2*%LENGTH+1] INITIAL(
	(2*%LENGTH)
	$LIB$KEY_INIT(FIRST,%REMAINING)
	) %,
    $LIB$KEY_INIT (ENTRY) [] =
		
	$LIB$KEY_ENTRY(%REMOVE(ENTRY))
	$LIB$KEY_INIT(%REMAINING) %,
    $LIB$KEY_ENTRY (KEYWORD) =
		
	,UPLIT(%ASCIC%STRING(KEYWORD)), %REMAINING %;

MACRO	$BYTEOFFSET (OFFSET, POSITION, WIDTH, SIGN) = OFFSET%;
MACRO	$BITPOSITION (OFFSET, POSITION, WIDTH, SIGN) = POSITION%;
MACRO	$FIELDWIDTH (OFFSET, POSITION, WIDTH, SIGN) = WIDTH%;
MACRO	$EXTENSION (OFFSET, POSITION, WIDTH, SIGN) = SIGN%;
MACRO	$FIELDMASK (OFFSET, POSITION, WIDTH, SIGN) =
	(1^(POSITION+WIDTH) - 1^POSITION)%;

MACRO
	$EQULST(P,G,I,S)[A]=
	    %NAME(P,GET1ST_ A) =
		%IF NUL2ND_ A
		%THEN (I) + %COUNT*(S)	
		%ELSE GET2ND_ A
		%FI %,
	GET1ST_(A,B)=
	     A %,
	GET2ND_(A,B)=
	     B %,	
	NUL2ND_(A,B)=
	     %NULL(B) %;

MACRO
	$DESCRIPTOR[]= 
		UPLIT LONG(%CHARCOUNT(%REMAINING),0,UPLIT BYTE(%REMAINING))%;

MACRO
    $SHR_MSGDEF( FACILITY_NAME, FACILITY_CODE, SCOPE) =
	%IF %IDENTICAL(%STRING(SCOPE),'GLOBAL')
	    %THEN GLOBAL LITERAL
	$SHR_MSGIDS( FACILITY_NAME, FACILITY_CODE, %REMAINING );
	    %ELSE LITERAL
	$SHR_MSGIDS( FACILITY_NAME, FACILITY_CODE, %REMAINING );
	%FI%,
    $SHR_MSGIDS( FACILITY_NAME, FACILITY_CODE) [ VALUE ] =
	$SHR_MSGCALC( FACILITY_NAME, FACILITY_CODE, %REMOVE(VALUE) ) %,
    $SHR_MSGCALC( FACILITY_NAME, FACILITY_CODE, MSG_ID, SEVERITY ) =
	%NAME(FACILITY_NAME,'$_',MSG_ID) = %NAME('SHR$_',MSG_ID) + FACILITY_CODE*65536 +
	    %IF %DECLARED(%NAME('STS$K_',SEVERITY))
		%THEN %NAME('STS$K_',SEVERITY)
		%ELSE SEVERITY %FI %;

%IF 0 %THEN
%IF NOT %BLISS(BLISS32V)
%THEN
MACRO
	$BBLOCK	= BLOCK_BYTE %;
%FI
%ELSE
STRUCTURE
        $BBLOCK [O, P, S, E; N] =
                [N]
                ($BBLOCK+O)<P,S,E>;
%FI

MACRO
	$init_dyndesc(d) =
	    begin
		bind _d = (d) : $bblock;
		_d[dsc$w_length] = 0;
		_d[dsc$b_class] = dsc$k_class_d;
		_d[dsc$b_dtype] = dsc$k_dtype_t;
		_d[dsc$a_pointer] = 0;
		end%;

MACRO
	$is_desc64(d) =
	    begin
		bind _d = (d) : REF $bblock;
		(._d[dsc64$l_mbmo] EQL -1) AND (._d[dsc64$w_mbo] EQL 1)
	    end%;

MACRO
    ITM$S_ITEM = 12 %,			
    ITM$W_BUFSIZ = 0,0,16,0 %,		
    ITM$W_ITMCOD = 2,0,16,0 %,		
    ITM$L_BUFADR = 4,0,32,1 %,		
    ITM$L_RETLEN = 8,0,32,1 %,		
    ITM$L_TERMINATOR = 0,0,32,0 %;	

STRUCTURE
	$ITMBLK [I, O, P, S, E; N, BS=ITM$S_ITEM, UNIT=1] =
		[N*BS*UNIT+4]
		($ITMBLK+(I*BS+O)*UNIT)<P,S,E>;

KEYWORDMACRO
    $ITMLST_DECL (ITEMS=1) = $ITMBLK [ITEMS] % ;

MACRO
    $ITMLST_INIT (ITMLST) [ITEM_VALUES] =
	%IF %COUNT EQL 0
	%THEN
	    $$ITM_INITIATE (ITMLST, NUMITM = %LENGTH - 1)
	%FI
	$$ITM_INIT (%REMOVE (ITEM_VALUES))
	%IF %COUNT EQL %LENGTH - 2
	%THEN
	    $$ITMBLKPTR [0, 0, 32, 0] = 0;
	    $$ITMBLKPTR = .$$ITMBLKPTR + 4
	    END
	%FI
    % ;

KEYWORDMACRO
	$$ITM_INITIATE (ITMLST, NUMITM) =
	    %IF %ALLOCATION (ITMLST) LSSU ((NUMITM) * ITM$S_ITEM + 4)
	    %THEN
		%ERRORMACRO ('initialization data exceeds allocation of ', ITMLST)
	    %FI
	    BEGIN
	    LOCAL $$ITMBLKPTR: REF $BBLOCK;
	    $$ITMBLKPTR = (ITMLST);
	% ;

KEYWORDMACRO
	$$ITM_INIT (
	    BUFSIZ=4,		
	    ITMCOD,		
	    BUFADR,		
	    RETLEN=0		
	) =
	%IF %NULL (ITMCOD) OR %NULL (BUFADR)
	%THEN
	    %ERRORMACRO ('ITMCOD and BUFADR must be specified')
	%FI
	$$ITMBLKPTR [ITM$W_BUFSIZ] = (BUFSIZ);
	$$ITMBLKPTR [ITM$W_ITMCOD] = (ITMCOD);
	$$ITMBLKPTR [ITM$L_BUFADR] = (BUFADR);
	$$ITMBLKPTR [ITM$L_RETLEN] = (RETLEN);
	$$ITMBLKPTR = .$$ITMBLKPTR + ITM$S_ITEM;
	% ;

MACRO
	$ITMLST_UPLIT [] =
	    UPLIT ( $$ITMLST_UPLIT_REPEAT (%REMAINING) , LONG (0)) % ;

MACRO	$$ITMLST_UPLIT_REPEAT [ITEM] =
		$$ITMLST_UPLIT_ITEM ( %REMOVE (ITEM) )	% ;

KEYWORDMACRO
	$$ITMLST_UPLIT_ITEM (
	    BUFSIZ=4,		
	    ITMCOD,		
	    BUFADR,		
	    RETLEN=0		
	) =
	%IF %NULL (ITMCOD) OR %NULL (BUFADR)
	%THEN
	    %ERRORMACRO ('ITMCOD and BUFADR must be specified')
	%FI
	    WORD (BUFSIZ, ITMCOD), LONG (BUFADR, RETLEN)
	% ;

KEYWORDMACRO $IS_ITMLST64 (Itmlst) =
  BEGIN
  MAP
    Itmlst : REF BLOCK [, BYTE];
  ((.Itmlst [Ilea_64$w_mbo] EQL 1) AND (.Itmlst [Ilea_64$l_mbmo] EQL -1))
  END%;

MACRO
    $ASSUME (V1, COND, V2) =
	%IF NOT (V1 COND V2)
	%THEN %ERROR ('$ASSUME relationship does not hold') %FI %;

